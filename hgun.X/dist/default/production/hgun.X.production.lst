

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 16 22:38:44 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    91                           	psect	text71,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    95                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    96  0000                     
    97                           ; Version 1.41
    98                           ; Generated 25/01/2017 GMT
    99                           ; 
   100                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F4520 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132 ;; Function _menu7_MsgHandlle is unused but had its address taken
   133  0000                     
   134                           	psect	idataCOMRAM
   135  004EBC                     __pidataCOMRAM:
   136                           	opt stack 0
   137                           
   138                           ;initializer for check_bat@bat_flip
   139  004EBC  01                 	db	1
   140                           
   141                           ;initializer for _ms
   142  004EBD  66                 	db	102
   143                           
   144                           	psect	idataBANK0
   145  004E9C                     __pidataBANK0:
   146                           	opt stack 0
   147                           
   148                           ;initializer for _dv
   149  004E9C  000A               	dw	10
   150                           
   151                           ;initializer for _cv
   152  004E9E  000A               	dw	10
   153                           
   154                           ;initializer for _needle_len
   155  004EA0  04                 	db	4
   156                           
   157                           ;initializer for _tflag
   158  004EA1  01                 	db	1
   159                           
   160                           ;initializer for _flag_tv
   161  004EA2  FF                 	db	255
   162                           
   163                           ;initializer for _flag_wake_up
   164  004EA3  01                 	db	1
   165                           
   166                           ;initializer for _flag_go_to_sleep
   167  004EA4  01                 	db	1
   168                           
   169                           ;initializer for _flag_mreset
   170  004EA5  01                 	db	1
   171                           
   172                           	psect	mediumconst
   173  007392                     __pmediumconst:
   174                           	opt stack 0
   175  007392  00                 	db	0
   176  007393                     _ptne_frame:
   177                           	opt stack 0
   178  007393  0F                 	db	15
   179  007394  10                 	db	16
   180  007395  20                 	db	32
   181  007396  20                 	db	32
   182  007397  20                 	db	32
   183  007398  20                 	db	32
   184  007399  20                 	db	32
   185  00739A  20                 	db	32
   186  00739B  20                 	db	32
   187  00739C  20                 	db	32
   188  00739D  20                 	db	32
   189  00739E  20                 	db	32
   190  00739F  20                 	db	32
   191  0073A0  20                 	db	32
   192  0073A1  20                 	db	32
   193  0073A2  20                 	db	32
   194  0073A3  20                 	db	32
   195  0073A4  20                 	db	32
   196  0073A5  20                 	db	32
   197  0073A6  20                 	db	32
   198  0073A7  20                 	db	32
   199  0073A8  20                 	db	32
   200  0073A9  20                 	db	32
   201  0073AA  20                 	db	32
   202  0073AB  20                 	db	32
   203  0073AC  20                 	db	32
   204  0073AD  20                 	db	32
   205  0073AE  20                 	db	32
   206  0073AF  20                 	db	32
   207  0073B0  20                 	db	32
   208  0073B1  20                 	db	32
   209  0073B2  20                 	db	32
   210  0073B3  20                 	db	32
   211  0073B4  20                 	db	32
   212  0073B5  20                 	db	32
   213  0073B6  20                 	db	32
   214  0073B7  20                 	db	32
   215  0073B8  20                 	db	32
   216  0073B9  20                 	db	32
   217  0073BA  20                 	db	32
   218  0073BB  20                 	db	32
   219  0073BC  20                 	db	32
   220  0073BD  2F                 	db	47
   221  0073BE  27                 	db	39
   222  0073BF  23                 	db	35
   223  0073C0  21                 	db	33
   224  0073C1  10                 	db	16
   225  0073C2  0F                 	db	15
   226  0073C3  FF                 	db	255
   227  0073C4  00                 	db	0
   228  0073C5  1F                 	db	31
   229  0073C6  08                 	db	8
   230  0073C7  04                 	db	4
   231  0073C8  08                 	db	8
   232  0073C9  1F                 	db	31
   233  0073CA  00                 	db	0
   234  0073CB  1F                 	db	31
   235  0073CC  08                 	db	8
   236  0073CD  04                 	db	4
   237  0073CE  08                 	db	8
   238  0073CF  1F                 	db	31
   239  0073D0  00                 	db	0
   240  0073D1  00                 	db	0
   241  0073D2  00                 	db	0
   242  0073D3  00                 	db	0
   243  0073D4  00                 	db	0
   244  0073D5  00                 	db	0
   245  0073D6  00                 	db	0
   246  0073D7  00                 	db	0
   247  0073D8  00                 	db	0
   248  0073D9  00                 	db	0
   249  0073DA  00                 	db	0
   250  0073DB  00                 	db	0
   251  0073DC  00                 	db	0
   252  0073DD  00                 	db	0
   253  0073DE  00                 	db	0
   254  0073DF  00                 	db	0
   255  0073E0  00                 	db	0
   256  0073E1  00                 	db	0
   257  0073E2  00                 	db	0
   258  0073E3  04                 	db	4
   259  0073E4  06                 	db	6
   260  0073E5  07                 	db	7
   261  0073E6  07                 	db	7
   262  0073E7  70                 	db	112
   263  0073E8  88                 	db	136
   264  0073E9  88                 	db	136
   265  0073EA  88                 	db	136
   266  0073EB  FF                 	db	255
   267  0073EC  00                 	db	0
   268  0073ED  00                 	db	0
   269  0073EE  00                 	db	0
   270  0073EF  00                 	db	0
   271  0073F0  00                 	db	0
   272  0073F1  00                 	db	0
   273  0073F2  FF                 	db	255
   274  0073F3  C0                 	db	192
   275  0073F4  20                 	db	32
   276  0073F5  10                 	db	16
   277  0073F6  10                 	db	16
   278  0073F7  10                 	db	16
   279  0073F8  10                 	db	16
   280  0073F9  10                 	db	16
   281  0073FA  10                 	db	16
   282  0073FB  10                 	db	16
   283  0073FC  10                 	db	16
   284  0073FD  10                 	db	16
   285  0073FE  10                 	db	16
   286  0073FF  10                 	db	16
   287  007400  10                 	db	16
   288  007401  10                 	db	16
   289  007402  10                 	db	16
   290  007403  10                 	db	16
   291  007404  10                 	db	16
   292  007405  10                 	db	16
   293  007406  10                 	db	16
   294  007407  10                 	db	16
   295  007408  10                 	db	16
   296  007409  10                 	db	16
   297  00740A  10                 	db	16
   298  00740B  10                 	db	16
   299  00740C  10                 	db	16
   300  00740D  10                 	db	16
   301  00740E  10                 	db	16
   302  00740F  10                 	db	16
   303  007410  10                 	db	16
   304  007411  10                 	db	16
   305  007412  10                 	db	16
   306  007413  10                 	db	16
   307  007414  10                 	db	16
   308  007415  10                 	db	16
   309  007416  90                 	db	144
   310  007417  10                 	db	16
   311  007418  10                 	db	16
   312  007419  10                 	db	16
   313  00741A  10                 	db	16
   314  00741B  D0                 	db	208
   315  00741C  10                 	db	16
   316  00741D  10                 	db	16
   317  00741E  10                 	db	16
   318  00741F  10                 	db	16
   319  007420  10                 	db	16
   320  007421  20                 	db	32
   321  007422  C0                 	db	192
   322  007423                     __end_of_ptne_frame:
   323                           	opt stack 0
   324  007423                     _ptnd_frame:
   325                           	opt stack 0
   326  007423  0F                 	db	15
   327  007424  10                 	db	16
   328  007425  20                 	db	32
   329  007426  20                 	db	32
   330  007427  20                 	db	32
   331  007428  20                 	db	32
   332  007429  20                 	db	32
   333  00742A  20                 	db	32
   334  00742B  20                 	db	32
   335  00742C  20                 	db	32
   336  00742D  20                 	db	32
   337  00742E  20                 	db	32
   338  00742F  20                 	db	32
   339  007430  20                 	db	32
   340  007431  20                 	db	32
   341  007432  20                 	db	32
   342  007433  20                 	db	32
   343  007434  20                 	db	32
   344  007435  20                 	db	32
   345  007436  20                 	db	32
   346  007437  20                 	db	32
   347  007438  20                 	db	32
   348  007439  20                 	db	32
   349  00743A  20                 	db	32
   350  00743B  20                 	db	32
   351  00743C  20                 	db	32
   352  00743D  20                 	db	32
   353  00743E  20                 	db	32
   354  00743F  20                 	db	32
   355  007440  20                 	db	32
   356  007441  20                 	db	32
   357  007442  20                 	db	32
   358  007443  20                 	db	32
   359  007444  20                 	db	32
   360  007445  20                 	db	32
   361  007446  20                 	db	32
   362  007447  20                 	db	32
   363  007448  20                 	db	32
   364  007449  20                 	db	32
   365  00744A  20                 	db	32
   366  00744B  21                 	db	33
   367  00744C  23                 	db	35
   368  00744D  2F                 	db	47
   369  00744E  27                 	db	39
   370  00744F  23                 	db	35
   371  007450  21                 	db	33
   372  007451  10                 	db	16
   373  007452  0F                 	db	15
   374  007453  FF                 	db	255
   375  007454  00                 	db	0
   376  007455  1F                 	db	31
   377  007456  08                 	db	8
   378  007457  04                 	db	4
   379  007458  08                 	db	8
   380  007459  1F                 	db	31
   381  00745A  00                 	db	0
   382  00745B  1F                 	db	31
   383  00745C  08                 	db	8
   384  00745D  04                 	db	4
   385  00745E  08                 	db	8
   386  00745F  1F                 	db	31
   387  007460  00                 	db	0
   388  007461  00                 	db	0
   389  007462  00                 	db	0
   390  007463  00                 	db	0
   391  007464  00                 	db	0
   392  007465  00                 	db	0
   393  007466  00                 	db	0
   394  007467  00                 	db	0
   395  007468  00                 	db	0
   396  007469  00                 	db	0
   397  00746A  00                 	db	0
   398  00746B  00                 	db	0
   399  00746C  00                 	db	0
   400  00746D  00                 	db	0
   401  00746E  00                 	db	0
   402  00746F  00                 	db	0
   403  007470  00                 	db	0
   404  007471  00                 	db	0
   405  007472  00                 	db	0
   406  007473  00                 	db	0
   407  007474  00                 	db	0
   408  007475  01                 	db	1
   409  007476  02                 	db	2
   410  007477  04                 	db	4
   411  007478  08                 	db	8
   412  007479  10                 	db	16
   413  00747A  E0                 	db	224
   414  00747B  E0                 	db	224
   415  00747C  E0                 	db	224
   416  00747D  C0                 	db	192
   417  00747E  80                 	db	128
   418  00747F  00                 	db	0
   419  007480  00                 	db	0
   420  007481  00                 	db	0
   421  007482  FF                 	db	255
   422  007483  C0                 	db	192
   423  007484  20                 	db	32
   424  007485  10                 	db	16
   425  007486  10                 	db	16
   426  007487  10                 	db	16
   427  007488  10                 	db	16
   428  007489  10                 	db	16
   429  00748A  10                 	db	16
   430  00748B  10                 	db	16
   431  00748C  10                 	db	16
   432  00748D  10                 	db	16
   433  00748E  10                 	db	16
   434  00748F  10                 	db	16
   435  007490  10                 	db	16
   436  007491  10                 	db	16
   437  007492  10                 	db	16
   438  007493  10                 	db	16
   439  007494  10                 	db	16
   440  007495  10                 	db	16
   441  007496  10                 	db	16
   442  007497  10                 	db	16
   443  007498  10                 	db	16
   444  007499  10                 	db	16
   445  00749A  10                 	db	16
   446  00749B  10                 	db	16
   447  00749C  10                 	db	16
   448  00749D  10                 	db	16
   449  00749E  10                 	db	16
   450  00749F  10                 	db	16
   451  0074A0  10                 	db	16
   452  0074A1  10                 	db	16
   453  0074A2  10                 	db	16
   454  0074A3  10                 	db	16
   455  0074A4  10                 	db	16
   456  0074A5  10                 	db	16
   457  0074A6  10                 	db	16
   458  0074A7  10                 	db	16
   459  0074A8  10                 	db	16
   460  0074A9  10                 	db	16
   461  0074AA  10                 	db	16
   462  0074AB  10                 	db	16
   463  0074AC  10                 	db	16
   464  0074AD  10                 	db	16
   465  0074AE  10                 	db	16
   466  0074AF  10                 	db	16
   467  0074B0  10                 	db	16
   468  0074B1  20                 	db	32
   469  0074B2  C0                 	db	192
   470  0074B3                     __end_of_ptnd_frame:
   471                           	opt stack 0
   472  0074B3                     _n_blank_m:
   473                           	opt stack 0
   474  0074B3  20                 	db	32
   475  0074B4  20                 	db	32
   476  0074B5  20                 	db	32
   477  0074B6  20                 	db	32
   478  0074B7  20                 	db	32
   479  0074B8  20                 	db	32
   480  0074B9  20                 	db	32
   481  0074BA  20                 	db	32
   482  0074BB  20                 	db	32
   483  0074BC  20                 	db	32
   484  0074BD  20                 	db	32
   485  0074BE  20                 	db	32
   486  0074BF  20                 	db	32
   487  0074C0  20                 	db	32
   488  0074C1  20                 	db	32
   489  0074C2  20                 	db	32
   490  0074C3  20                 	db	32
   491  0074C4  20                 	db	32
   492  0074C5  20                 	db	32
   493  0074C6  00                 	db	0
   494  0074C7  00                 	db	0
   495  0074C8  00                 	db	0
   496  0074C9  00                 	db	0
   497  0074CA  00                 	db	0
   498  0074CB  00                 	db	0
   499  0074CC  00                 	db	0
   500  0074CD  00                 	db	0
   501  0074CE  00                 	db	0
   502  0074CF  00                 	db	0
   503  0074D0  00                 	db	0
   504  0074D1  00                 	db	0
   505  0074D2  00                 	db	0
   506  0074D3  00                 	db	0
   507  0074D4  00                 	db	0
   508  0074D5  00                 	db	0
   509  0074D6  00                 	db	0
   510  0074D7  00                 	db	0
   511  0074D8  00                 	db	0
   512  0074D9  10                 	db	16
   513  0074DA  10                 	db	16
   514  0074DB  10                 	db	16
   515  0074DC  10                 	db	16
   516  0074DD  10                 	db	16
   517  0074DE  10                 	db	16
   518  0074DF  10                 	db	16
   519  0074E0  10                 	db	16
   520  0074E1  10                 	db	16
   521  0074E2  10                 	db	16
   522  0074E3  10                 	db	16
   523  0074E4  10                 	db	16
   524  0074E5  10                 	db	16
   525  0074E6  10                 	db	16
   526  0074E7  10                 	db	16
   527  0074E8  10                 	db	16
   528  0074E9  10                 	db	16
   529  0074EA  10                 	db	16
   530  0074EB  10                 	db	16
   531  0074EC                     __end_of_n_blank_m:
   532                           	opt stack 0
   533  0074EC                     _ptna_frame:
   534                           	opt stack 0
   535  0074EC  3F                 	db	63
   536  0074ED  40                 	db	64
   537  0074EE  80                 	db	128
   538  0074EF  80                 	db	128
   539  0074F0  80                 	db	128
   540  0074F1  80                 	db	128
   541  0074F2  80                 	db	128
   542  0074F3  80                 	db	128
   543  0074F4  80                 	db	128
   544  0074F5  80                 	db	128
   545  0074F6  80                 	db	128
   546  0074F7  80                 	db	128
   547  0074F8  80                 	db	128
   548  0074F9  80                 	db	128
   549  0074FA  80                 	db	128
   550  0074FB  80                 	db	128
   551  0074FC  80                 	db	128
   552  0074FD  80                 	db	128
   553  0074FE  80                 	db	128
   554  0074FF  80                 	db	128
   555  007500  80                 	db	128
   556  007501  80                 	db	128
   557  007502  80                 	db	128
   558  007503  80                 	db	128
   559  007504  80                 	db	128
   560  007505  40                 	db	64
   561  007506  3F                 	db	63
   562  007507  FC                 	db	252
   563  007508  02                 	db	2
   564  007509  01                 	db	1
   565  00750A  01                 	db	1
   566  00750B  01                 	db	1
   567  00750C  01                 	db	1
   568  00750D  01                 	db	1
   569  00750E  01                 	db	1
   570  00750F  01                 	db	1
   571  007510  01                 	db	1
   572  007511  01                 	db	1
   573  007512  01                 	db	1
   574  007513  01                 	db	1
   575  007514  01                 	db	1
   576  007515  01                 	db	1
   577  007516  01                 	db	1
   578  007517  01                 	db	1
   579  007518  01                 	db	1
   580  007519  01                 	db	1
   581  00751A  01                 	db	1
   582  00751B  01                 	db	1
   583  00751C  01                 	db	1
   584  00751D  01                 	db	1
   585  00751E  01                 	db	1
   586  00751F  01                 	db	1
   587  007520  02                 	db	2
   588  007521  FC                 	db	252
   589  007522                     __end_of_ptna_frame:
   590                           	opt stack 0
   591  007522                     _mem_m:
   592                           	opt stack 0
   593  007522  9F                 	db	159
   594  007523  9F                 	db	159
   595  007524  90                 	db	144
   596  007525  9F                 	db	159
   597  007526  9F                 	db	159
   598  007527  90                 	db	144
   599  007528  9F                 	db	159
   600  007529  9F                 	db	159
   601  00752A  80                 	db	128
   602  00752B  9D                 	db	157
   603  00752C  95                 	db	149
   604  00752D  95                 	db	149
   605  00752E  9F                 	db	159
   606  00752F  8E                 	db	142
   607  007530  80                 	db	128
   608  007531  BF                 	db	191
   609  007532  BF                 	db	191
   610  007533  90                 	db	144
   611  007534  88                 	db	136
   612  007535  90                 	db	144
   613  007536  BF                 	db	191
   614  007537  BF                 	db	191
   615  007538  80                 	db	128
   616  007539  01                 	db	1
   617  00753A  01                 	db	1
   618  00753B  01                 	db	1
   619  00753C  01                 	db	1
   620  00753D  01                 	db	1
   621  00753E  51                 	db	81
   622  00753F  7D                 	db	125
   623  007540  3D                 	db	61
   624  007541  01                 	db	1
   625  007542  51                 	db	81
   626  007543  7D                 	db	125
   627  007544  3D                 	db	61
   628  007545  01                 	db	1
   629  007546  39                 	db	57
   630  007547  7D                 	db	125
   631  007548  45                 	db	69
   632  007549  7D                 	db	125
   633  00754A  39                 	db	57
   634  00754B  01                 	db	1
   635  00754C  01                 	db	1
   636  00754D  01                 	db	1
   637  00754E  01                 	db	1
   638  00754F  01                 	db	1
   639  007550                     __end_of_mem_m:
   640                           	opt stack 0
   641  007550                     _drop_m:
   642                           	opt stack 0
   643  007550  80                 	db	128
   644  007551  80                 	db	128
   645  007552  80                 	db	128
   646  007553  80                 	db	128
   647  007554  80                 	db	128
   648  007555  80                 	db	128
   649  007556  80                 	db	128
   650  007557  81                 	db	129
   651  007558  83                 	db	131
   652  007559  86                 	db	134
   653  00755A  9D                 	db	157
   654  00755B  BD                 	db	189
   655  00755C  9D                 	db	157
   656  00755D  86                 	db	134
   657  00755E  83                 	db	131
   658  00755F  81                 	db	129
   659  007560  80                 	db	128
   660  007561  80                 	db	128
   661  007562  80                 	db	128
   662  007563  80                 	db	128
   663  007564  80                 	db	128
   664  007565  80                 	db	128
   665  007566  80                 	db	128
   666  007567  01                 	db	1
   667  007568  01                 	db	1
   668  007569  01                 	db	1
   669  00756A  01                 	db	1
   670  00756B  01                 	db	1
   671  00756C  01                 	db	1
   672  00756D  01                 	db	1
   673  00756E  F1                 	db	241
   674  00756F  F9                 	db	249
   675  007570  CD                 	db	205
   676  007571  B5                 	db	181
   677  007572  B5                 	db	181
   678  007573  B5                 	db	181
   679  007574  6D                 	db	109
   680  007575  F9                 	db	249
   681  007576  F1                 	db	241
   682  007577  01                 	db	1
   683  007578  01                 	db	1
   684  007579  01                 	db	1
   685  00757A  01                 	db	1
   686  00757B  01                 	db	1
   687  00757C  01                 	db	1
   688  00757D  01                 	db	1
   689  00757E                     __end_of_drop_m:
   690                           	opt stack 0
   691  00757E                     _drops_m:
   692                           	opt stack 0
   693  00757E  80                 	db	128
   694  00757F  83                 	db	131
   695  007580  8F                 	db	143
   696  007581  BF                 	db	191
   697  007582  8F                 	db	143
   698  007583  83                 	db	131
   699  007584  80                 	db	128
   700  007585  80                 	db	128
   701  007586  80                 	db	128
   702  007587  83                 	db	131
   703  007588  8F                 	db	143
   704  007589  BF                 	db	191
   705  00758A  8F                 	db	143
   706  00758B  83                 	db	131
   707  00758C  80                 	db	128
   708  00758D  80                 	db	128
   709  00758E  80                 	db	128
   710  00758F  83                 	db	131
   711  007590  8F                 	db	143
   712  007591  BF                 	db	191
   713  007592  8F                 	db	143
   714  007593  83                 	db	131
   715  007594  80                 	db	128
   716  007595  F1                 	db	241
   717  007596  F9                 	db	249
   718  007597  FD                 	db	253
   719  007598  FD                 	db	253
   720  007599  FD                 	db	253
   721  00759A  F9                 	db	249
   722  00759B  F1                 	db	241
   723  00759C  01                 	db	1
   724  00759D  F1                 	db	241
   725  00759E  F9                 	db	249
   726  00759F  FD                 	db	253
   727  0075A0  FD                 	db	253
   728  0075A1  FD                 	db	253
   729  0075A2  F9                 	db	249
   730  0075A3  F1                 	db	241
   731  0075A4  01                 	db	1
   732  0075A5  F1                 	db	241
   733  0075A6  F9                 	db	249
   734  0075A7  FD                 	db	253
   735  0075A8  FD                 	db	253
   736  0075A9  FD                 	db	253
   737  0075AA  F9                 	db	249
   738  0075AB  F1                 	db	241
   739  0075AC                     __end_of_drops_m:
   740                           	opt stack 0
   741  0075AC                     _c_m:
   742                           	opt stack 0
   743  0075AC  80                 	db	128
   744  0075AD  80                 	db	128
   745  0075AE  80                 	db	128
   746  0075AF  80                 	db	128
   747  0075B0  80                 	db	128
   748  0075B1  80                 	db	128
   749  0075B2  80                 	db	128
   750  0075B3  80                 	db	128
   751  0075B4  80                 	db	128
   752  0075B5  98                 	db	152
   753  0075B6  B8                 	db	184
   754  0075B7  B0                 	db	176
   755  0075B8  B0                 	db	176
   756  0075B9  B0                 	db	176
   757  0075BA  B8                 	db	184
   758  0075BB  9F                 	db	159
   759  0075BC  8F                 	db	143
   760  0075BD  80                 	db	128
   761  0075BE  80                 	db	128
   762  0075BF  80                 	db	128
   763  0075C0  80                 	db	128
   764  0075C1  80                 	db	128
   765  0075C2  80                 	db	128
   766  0075C3  01                 	db	1
   767  0075C4  01                 	db	1
   768  0075C5  01                 	db	1
   769  0075C6  01                 	db	1
   770  0075C7  01                 	db	1
   771  0075C8  01                 	db	1
   772  0075C9  01                 	db	1
   773  0075CA  01                 	db	1
   774  0075CB  01                 	db	1
   775  0075CC  19                 	db	25
   776  0075CD  1D                 	db	29
   777  0075CE  0D                 	db	13
   778  0075CF  0D                 	db	13
   779  0075D0  0D                 	db	13
   780  0075D1  1D                 	db	29
   781  0075D2  F9                 	db	249
   782  0075D3  F1                 	db	241
   783  0075D4  01                 	db	1
   784  0075D5  01                 	db	1
   785  0075D6  01                 	db	1
   786  0075D7  01                 	db	1
   787  0075D8  01                 	db	1
   788  0075D9  01                 	db	1
   789  0075DA                     __end_of_c_m:
   790                           	opt stack 0
   791  0075DA                     _blank_m:
   792                           	opt stack 0
   793  0075DA  80                 	db	128
   794  0075DB  80                 	db	128
   795  0075DC  80                 	db	128
   796  0075DD  80                 	db	128
   797  0075DE  80                 	db	128
   798  0075DF  80                 	db	128
   799  0075E0  80                 	db	128
   800  0075E1  80                 	db	128
   801  0075E2  80                 	db	128
   802  0075E3  80                 	db	128
   803  0075E4  80                 	db	128
   804  0075E5  80                 	db	128
   805  0075E6  80                 	db	128
   806  0075E7  80                 	db	128
   807  0075E8  80                 	db	128
   808  0075E9  80                 	db	128
   809  0075EA  80                 	db	128
   810  0075EB  80                 	db	128
   811  0075EC  80                 	db	128
   812  0075ED  80                 	db	128
   813  0075EE  80                 	db	128
   814  0075EF  80                 	db	128
   815  0075F0  80                 	db	128
   816  0075F1  01                 	db	1
   817  0075F2  01                 	db	1
   818  0075F3  01                 	db	1
   819  0075F4  01                 	db	1
   820  0075F5  01                 	db	1
   821  0075F6  01                 	db	1
   822  0075F7  01                 	db	1
   823  0075F8  01                 	db	1
   824  0075F9  01                 	db	1
   825  0075FA  01                 	db	1
   826  0075FB  01                 	db	1
   827  0075FC  01                 	db	1
   828  0075FD  01                 	db	1
   829  0075FE  01                 	db	1
   830  0075FF  01                 	db	1
   831  007600  01                 	db	1
   832  007601  01                 	db	1
   833  007602  01                 	db	1
   834  007603  01                 	db	1
   835  007604  01                 	db	1
   836  007605  01                 	db	1
   837  007606  01                 	db	1
   838  007607  01                 	db	1
   839  007608                     __end_of_blank_m:
   840                           	opt stack 0
   841  007608                     _tss:
   842                           	opt stack 0
   843  007608  0096               	dw	150
   844  00760A                     __end_of_tss:
   845                           	opt stack 0
   846  00760A                     _logo_eme:
   847                           	opt stack 0
   848  00760A  00                 	db	0
   849  00760B  00                 	db	0
   850  00760C  00                 	db	0
   851  00760D  00                 	db	0
   852  00760E  00                 	db	0
   853  00760F  00                 	db	0
   854  007610  00                 	db	0
   855  007611  00                 	db	0
   856  007612  00                 	db	0
   857  007613  00                 	db	0
   858  007614  00                 	db	0
   859  007615  00                 	db	0
   860  007616  00                 	db	0
   861  007617  00                 	db	0
   862  007618  00                 	db	0
   863  007619  00                 	db	0
   864  00761A  00                 	db	0
   865  00761B  00                 	db	0
   866  00761C  00                 	db	0
   867  00761D  00                 	db	0
   868  00761E  00                 	db	0
   869  00761F  00                 	db	0
   870  007620  00                 	db	0
   871  007621  00                 	db	0
   872  007622  00                 	db	0
   873  007623  00                 	db	0
   874  007624  00                 	db	0
   875  007625  00                 	db	0
   876  007626  00                 	db	0
   877  007627  00                 	db	0
   878  007628  00                 	db	0
   879  007629  00                 	db	0
   880  00762A  00                 	db	0
   881  00762B  00                 	db	0
   882  00762C  00                 	db	0
   883  00762D  00                 	db	0
   884  00762E  00                 	db	0
   885  00762F  00                 	db	0
   886  007630  00                 	db	0
   887  007631  00                 	db	0
   888  007632  00                 	db	0
   889  007633  00                 	db	0
   890  007634  00                 	db	0
   891  007635  00                 	db	0
   892  007636  00                 	db	0
   893  007637  00                 	db	0
   894  007638  00                 	db	0
   895  007639  00                 	db	0
   896  00763A  00                 	db	0
   897  00763B  00                 	db	0
   898  00763C  00                 	db	0
   899  00763D  00                 	db	0
   900  00763E  00                 	db	0
   901  00763F  00                 	db	0
   902  007640  00                 	db	0
   903  007641  00                 	db	0
   904  007642  00                 	db	0
   905  007643  00                 	db	0
   906  007644  00                 	db	0
   907  007645  00                 	db	0
   908  007646  00                 	db	0
   909  007647  00                 	db	0
   910  007648  00                 	db	0
   911  007649  00                 	db	0
   912  00764A  00                 	db	0
   913  00764B  00                 	db	0
   914  00764C  00                 	db	0
   915  00764D  00                 	db	0
   916  00764E  00                 	db	0
   917  00764F  00                 	db	0
   918  007650  00                 	db	0
   919  007651  00                 	db	0
   920  007652  00                 	db	0
   921  007653  00                 	db	0
   922  007654  00                 	db	0
   923  007655  00                 	db	0
   924  007656  00                 	db	0
   925  007657  00                 	db	0
   926  007658  00                 	db	0
   927  007659  00                 	db	0
   928  00765A  00                 	db	0
   929  00765B  00                 	db	0
   930  00765C  00                 	db	0
   931  00765D  00                 	db	0
   932  00765E  00                 	db	0
   933  00765F  00                 	db	0
   934  007660  00                 	db	0
   935  007661  00                 	db	0
   936  007662  00                 	db	0
   937  007663  00                 	db	0
   938  007664  00                 	db	0
   939  007665  00                 	db	0
   940  007666  00                 	db	0
   941  007667  00                 	db	0
   942  007668  00                 	db	0
   943  007669  00                 	db	0
   944  00766A  00                 	db	0
   945  00766B  00                 	db	0
   946  00766C  00                 	db	0
   947  00766D  00                 	db	0
   948  00766E  00                 	db	0
   949  00766F  00                 	db	0
   950  007670  00                 	db	0
   951  007671  00                 	db	0
   952  007672  80                 	db	128
   953  007673  C0                 	db	192
   954  007674  E0                 	db	224
   955  007675  F0                 	db	240
   956  007676  F0                 	db	240
   957  007677  F0                 	db	240
   958  007678  F0                 	db	240
   959  007679  F0                 	db	240
   960  00767A  F0                 	db	240
   961  00767B  F0                 	db	240
   962  00767C  F0                 	db	240
   963  00767D  F0                 	db	240
   964  00767E  F0                 	db	240
   965  00767F  F0                 	db	240
   966  007680  F0                 	db	240
   967  007681  F0                 	db	240
   968  007682  F0                 	db	240
   969  007683  F0                 	db	240
   970  007684  F0                 	db	240
   971  007685  FF                 	db	255
   972  007686  FF                 	db	255
   973  007687  FF                 	db	255
   974  007688  FF                 	db	255
   975  007689  00                 	db	0
   976  00768A  00                 	db	0
   977  00768B  00                 	db	0
   978  00768C  FF                 	db	255
   979  00768D  FF                 	db	255
   980  00768E  FF                 	db	255
   981  00768F  7F                 	db	127
   982  007690  3F                 	db	63
   983  007691  0F                 	db	15
   984  007692  07                 	db	7
   985  007693  01                 	db	1
   986  007694  00                 	db	0
   987  007695  00                 	db	0
   988  007696  00                 	db	0
   989  007697  00                 	db	0
   990  007698  00                 	db	0
   991  007699  00                 	db	0
   992  00769A  00                 	db	0
   993  00769B  00                 	db	0
   994  00769C  00                 	db	0
   995  00769D  00                 	db	0
   996  00769E  00                 	db	0
   997  00769F  00                 	db	0
   998  0076A0  00                 	db	0
   999  0076A1  00                 	db	0
  1000  0076A2  00                 	db	0
  1001  0076A3  00                 	db	0
  1002  0076A4  00                 	db	0
  1003  0076A5  00                 	db	0
  1004  0076A6  01                 	db	1
  1005  0076A7  07                 	db	7
  1006  0076A8  0F                 	db	15
  1007  0076A9  3F                 	db	63
  1008  0076AA  7F                 	db	127
  1009  0076AB  FF                 	db	255
  1010  0076AC  FF                 	db	255
  1011  0076AD  FF                 	db	255
  1012  0076AE  00                 	db	0
  1013  0076AF  00                 	db	0
  1014  0076B0  00                 	db	0
  1015  0076B1  80                 	db	128
  1016  0076B2  C0                 	db	192
  1017  0076B3  E0                 	db	224
  1018  0076B4  F0                 	db	240
  1019  0076B5  F0                 	db	240
  1020  0076B6  F0                 	db	240
  1021  0076B7  F0                 	db	240
  1022  0076B8  F0                 	db	240
  1023  0076B9  F0                 	db	240
  1024  0076BA  F0                 	db	240
  1025  0076BB  F0                 	db	240
  1026  0076BC  F0                 	db	240
  1027  0076BD  F0                 	db	240
  1028  0076BE  F0                 	db	240
  1029  0076BF  F0                 	db	240
  1030  0076C0  F0                 	db	240
  1031  0076C1  F0                 	db	240
  1032  0076C2  F0                 	db	240
  1033  0076C3  F0                 	db	240
  1034  0076C4  FF                 	db	255
  1035  0076C5  FF                 	db	255
  1036  0076C6  FF                 	db	255
  1037  0076C7  FF                 	db	255
  1038  0076C8  00                 	db	0
  1039  0076C9  00                 	db	0
  1040  0076CA  00                 	db	0
  1041  0076CB  00                 	db	0
  1042  0076CC  00                 	db	0
  1043  0076CD  00                 	db	0
  1044  0076CE  00                 	db	0
  1045  0076CF  00                 	db	0
  1046  0076D0  00                 	db	0
  1047  0076D1  00                 	db	0
  1048  0076D2  00                 	db	0
  1049  0076D3  00                 	db	0
  1050  0076D4  00                 	db	0
  1051  0076D5  00                 	db	0
  1052  0076D6  00                 	db	0
  1053  0076D7  00                 	db	0
  1054  0076D8  00                 	db	0
  1055  0076D9  00                 	db	0
  1056  0076DA  00                 	db	0
  1057  0076DB  00                 	db	0
  1058  0076DC  00                 	db	0
  1059  0076DD  00                 	db	0
  1060  0076DE  00                 	db	0
  1061  0076DF  00                 	db	0
  1062  0076E0  00                 	db	0
  1063  0076E1  00                 	db	0
  1064  0076E2  00                 	db	0
  1065  0076E3  00                 	db	0
  1066  0076E4  00                 	db	0
  1067  0076E5  00                 	db	0
  1068  0076E6  00                 	db	0
  1069  0076E7  FF                 	db	255
  1070  0076E8  FF                 	db	255
  1071  0076E9  FF                 	db	255
  1072  0076EA  FF                 	db	255
  1073  0076EB  00                 	db	0
  1074  0076EC  00                 	db	0
  1075  0076ED  00                 	db	0
  1076  0076EE  FF                 	db	255
  1077  0076EF  FF                 	db	255
  1078  0076F0  FF                 	db	255
  1079  0076F1  FF                 	db	255
  1080  0076F2  E0                 	db	224
  1081  0076F3  E0                 	db	224
  1082  0076F4  F0                 	db	240
  1083  0076F5  F8                 	db	248
  1084  0076F6  FC                 	db	252
  1085  0076F7  3E                 	db	62
  1086  0076F8  1F                 	db	31
  1087  0076F9  07                 	db	7
  1088  0076FA  03                 	db	3
  1089  0076FB  01                 	db	1
  1090  0076FC  00                 	db	0
  1091  0076FD  00                 	db	0
  1092  0076FE  00                 	db	0
  1093  0076FF  00                 	db	0
  1094  007700  00                 	db	0
  1095  007701  00                 	db	0
  1096  007702  01                 	db	1
  1097  007703  03                 	db	3
  1098  007704  07                 	db	7
  1099  007705  0F                 	db	15
  1100  007706  3E                 	db	62
  1101  007707  FC                 	db	252
  1102  007708  F8                 	db	248
  1103  007709  F0                 	db	240
  1104  00770A  E0                 	db	224
  1105  00770B  E0                 	db	224
  1106  00770C  FF                 	db	255
  1107  00770D  FF                 	db	255
  1108  00770E  FF                 	db	255
  1109  00770F  FF                 	db	255
  1110  007710  00                 	db	0
  1111  007711  00                 	db	0
  1112  007712  00                 	db	0
  1113  007713  00                 	db	0
  1114  007714  00                 	db	0
  1115  007715  00                 	db	0
  1116  007716  00                 	db	0
  1117  007717  00                 	db	0
  1118  007718  00                 	db	0
  1119  007719  00                 	db	0
  1120  00771A  00                 	db	0
  1121  00771B  00                 	db	0
  1122  00771C  00                 	db	0
  1123  00771D  00                 	db	0
  1124  00771E  00                 	db	0
  1125  00771F  00                 	db	0
  1126  007720  00                 	db	0
  1127  007721  00                 	db	0
  1128  007722  00                 	db	0
  1129  007723  00                 	db	0
  1130  007724  00                 	db	0
  1131  007725  00                 	db	0
  1132  007726  FF                 	db	255
  1133  007727  FF                 	db	255
  1134  007728  FF                 	db	255
  1135  007729  FF                 	db	255
  1136  00772A  00                 	db	0
  1137  00772B  00                 	db	0
  1138  00772C  00                 	db	0
  1139  00772D  00                 	db	0
  1140  00772E  00                 	db	0
  1141  00772F  00                 	db	0
  1142  007730  00                 	db	0
  1143  007731  00                 	db	0
  1144  007732  00                 	db	0
  1145  007733  00                 	db	0
  1146  007734  00                 	db	0
  1147  007735  00                 	db	0
  1148  007736  00                 	db	0
  1149  007737  00                 	db	0
  1150  007738  00                 	db	0
  1151  007739  00                 	db	0
  1152  00773A  00                 	db	0
  1153  00773B  00                 	db	0
  1154  00773C  00                 	db	0
  1155  00773D  00                 	db	0
  1156  00773E  00                 	db	0
  1157  00773F  0F                 	db	15
  1158  007740  0F                 	db	15
  1159  007741  0F                 	db	15
  1160  007742  0F                 	db	15
  1161  007743  0F                 	db	15
  1162  007744  0F                 	db	15
  1163  007745  0F                 	db	15
  1164  007746  0F                 	db	15
  1165  007747  0F                 	db	15
  1166  007748  0F                 	db	15
  1167  007749  FF                 	db	255
  1168  00774A  FF                 	db	255
  1169  00774B  FF                 	db	255
  1170  00774C  FF                 	db	255
  1171  00774D  00                 	db	0
  1172  00774E  00                 	db	0
  1173  00774F  00                 	db	0
  1174  007750  FF                 	db	255
  1175  007751  FF                 	db	255
  1176  007752  FF                 	db	255
  1177  007753  FF                 	db	255
  1178  007754  00                 	db	0
  1179  007755  00                 	db	0
  1180  007756  00                 	db	0
  1181  007757  00                 	db	0
  1182  007758  00                 	db	0
  1183  007759  00                 	db	0
  1184  00775A  00                 	db	0
  1185  00775B  C0                 	db	192
  1186  00775C  E0                 	db	224
  1187  00775D  F0                 	db	240
  1188  00775E  78                 	db	120
  1189  00775F  3C                 	db	60
  1190  007760  0E                 	db	14
  1191  007761  3E                 	db	62
  1192  007762  7C                 	db	124
  1193  007763  F8                 	db	248
  1194  007764  F0                 	db	240
  1195  007765  E0                 	db	224
  1196  007766  C0                 	db	192
  1197  007767  00                 	db	0
  1198  007768  00                 	db	0
  1199  007769  00                 	db	0
  1200  00776A  00                 	db	0
  1201  00776B  00                 	db	0
  1202  00776C  00                 	db	0
  1203  00776D  00                 	db	0
  1204  00776E  FF                 	db	255
  1205  00776F  FF                 	db	255
  1206  007770  FF                 	db	255
  1207  007771  FF                 	db	255
  1208  007772  00                 	db	0
  1209  007773  00                 	db	0
  1210  007774  00                 	db	0
  1211  007775  00                 	db	0
  1212  007776  00                 	db	0
  1213  007777  00                 	db	0
  1214  007778  00                 	db	0
  1215  007779  00                 	db	0
  1216  00777A  00                 	db	0
  1217  00777B  00                 	db	0
  1218  00777C  00                 	db	0
  1219  00777D  00                 	db	0
  1220  00777E  0F                 	db	15
  1221  00777F  0F                 	db	15
  1222  007780  0F                 	db	15
  1223  007781  0F                 	db	15
  1224  007782  0F                 	db	15
  1225  007783  0F                 	db	15
  1226  007784  0F                 	db	15
  1227  007785  0F                 	db	15
  1228  007786  0F                 	db	15
  1229  007787  0F                 	db	15
  1230  007788  FF                 	db	255
  1231  007789  FF                 	db	255
  1232  00778A  FF                 	db	255
  1233  00778B  FF                 	db	255
  1234  00778C  00                 	db	0
  1235  00778D  00                 	db	0
  1236  00778E  00                 	db	0
  1237  00778F  00                 	db	0
  1238  007790  00                 	db	0
  1239  007791  00                 	db	0
  1240  007792  00                 	db	0
  1241  007793  00                 	db	0
  1242  007794  00                 	db	0
  1243  007795  00                 	db	0
  1244  007796  00                 	db	0
  1245  007797  00                 	db	0
  1246  007798  00                 	db	0
  1247  007799  00                 	db	0
  1248  00779A  00                 	db	0
  1249  00779B  00                 	db	0
  1250  00779C  00                 	db	0
  1251  00779D  00                 	db	0
  1252  00779E  00                 	db	0
  1253  00779F  00                 	db	0
  1254  0077A0  00                 	db	0
  1255  0077A1  80                 	db	128
  1256  0077A2  80                 	db	128
  1257  0077A3  80                 	db	128
  1258  0077A4  80                 	db	128
  1259  0077A5  80                 	db	128
  1260  0077A6  80                 	db	128
  1261  0077A7  80                 	db	128
  1262  0077A8  80                 	db	128
  1263  0077A9  80                 	db	128
  1264  0077AA  80                 	db	128
  1265  0077AB  FF                 	db	255
  1266  0077AC  FF                 	db	255
  1267  0077AD  FF                 	db	255
  1268  0077AE  FF                 	db	255
  1269  0077AF  00                 	db	0
  1270  0077B0  00                 	db	0
  1271  0077B1  00                 	db	0
  1272  0077B2  FF                 	db	255
  1273  0077B3  FF                 	db	255
  1274  0077B4  FF                 	db	255
  1275  0077B5  FF                 	db	255
  1276  0077B6  00                 	db	0
  1277  0077B7  00                 	db	0
  1278  0077B8  00                 	db	0
  1279  0077B9  00                 	db	0
  1280  0077BA  00                 	db	0
  1281  0077BB  00                 	db	0
  1282  0077BC  00                 	db	0
  1283  0077BD  00                 	db	0
  1284  0077BE  00                 	db	0
  1285  0077BF  00                 	db	0
  1286  0077C0  00                 	db	0
  1287  0077C1  00                 	db	0
  1288  0077C2  00                 	db	0
  1289  0077C3  00                 	db	0
  1290  0077C4  00                 	db	0
  1291  0077C5  00                 	db	0
  1292  0077C6  00                 	db	0
  1293  0077C7  00                 	db	0
  1294  0077C8  00                 	db	0
  1295  0077C9  00                 	db	0
  1296  0077CA  00                 	db	0
  1297  0077CB  00                 	db	0
  1298  0077CC  00                 	db	0
  1299  0077CD  00                 	db	0
  1300  0077CE  00                 	db	0
  1301  0077CF  00                 	db	0
  1302  0077D0  FF                 	db	255
  1303  0077D1  FF                 	db	255
  1304  0077D2  FF                 	db	255
  1305  0077D3  FF                 	db	255
  1306  0077D4  00                 	db	0
  1307  0077D5  00                 	db	0
  1308  0077D6  00                 	db	0
  1309  0077D7  00                 	db	0
  1310  0077D8  00                 	db	0
  1311  0077D9  00                 	db	0
  1312  0077DA  00                 	db	0
  1313  0077DB  00                 	db	0
  1314  0077DC  00                 	db	0
  1315  0077DD  00                 	db	0
  1316  0077DE  00                 	db	0
  1317  0077DF  00                 	db	0
  1318  0077E0  00                 	db	0
  1319  0077E1  00                 	db	0
  1320  0077E2  00                 	db	0
  1321  0077E3  00                 	db	0
  1322  0077E4  00                 	db	0
  1323  0077E5  00                 	db	0
  1324  0077E6  00                 	db	0
  1325  0077E7  00                 	db	0
  1326  0077E8  00                 	db	0
  1327  0077E9  00                 	db	0
  1328  0077EA  FF                 	db	255
  1329  0077EB  FF                 	db	255
  1330  0077EC  FF                 	db	255
  1331  0077ED  FF                 	db	255
  1332  0077EE  00                 	db	0
  1333  0077EF  00                 	db	0
  1334  0077F0  00                 	db	0
  1335  0077F1  00                 	db	0
  1336  0077F2  00                 	db	0
  1337  0077F3  00                 	db	0
  1338  0077F4  00                 	db	0
  1339  0077F5  00                 	db	0
  1340  0077F6  00                 	db	0
  1341  0077F7  00                 	db	0
  1342  0077F8  00                 	db	0
  1343  0077F9  00                 	db	0
  1344  0077FA  00                 	db	0
  1345  0077FB  00                 	db	0
  1346  0077FC  00                 	db	0
  1347  0077FD  00                 	db	0
  1348  0077FE  00                 	db	0
  1349  0077FF  00                 	db	0
  1350  007800  00                 	db	0
  1351  007801  00                 	db	0
  1352  007802  00                 	db	0
  1353  007803  00                 	db	0
  1354  007804  00                 	db	0
  1355  007805  00                 	db	0
  1356  007806  00                 	db	0
  1357  007807  00                 	db	0
  1358  007808  00                 	db	0
  1359  007809  00                 	db	0
  1360  00780A  00                 	db	0
  1361  00780B  00                 	db	0
  1362  00780C  00                 	db	0
  1363  00780D  FF                 	db	255
  1364  00780E  FF                 	db	255
  1365  00780F  FF                 	db	255
  1366  007810  FF                 	db	255
  1367  007811  00                 	db	0
  1368  007812  00                 	db	0
  1369  007813  00                 	db	0
  1370  007814  FF                 	db	255
  1371  007815  FF                 	db	255
  1372  007816  FF                 	db	255
  1373  007817  FF                 	db	255
  1374  007818  00                 	db	0
  1375  007819  00                 	db	0
  1376  00781A  00                 	db	0
  1377  00781B  00                 	db	0
  1378  00781C  00                 	db	0
  1379  00781D  00                 	db	0
  1380  00781E  00                 	db	0
  1381  00781F  00                 	db	0
  1382  007820  00                 	db	0
  1383  007821  00                 	db	0
  1384  007822  00                 	db	0
  1385  007823  00                 	db	0
  1386  007824  00                 	db	0
  1387  007825  00                 	db	0
  1388  007826  00                 	db	0
  1389  007827  00                 	db	0
  1390  007828  00                 	db	0
  1391  007829  00                 	db	0
  1392  00782A  00                 	db	0
  1393  00782B  00                 	db	0
  1394  00782C  00                 	db	0
  1395  00782D  00                 	db	0
  1396  00782E  00                 	db	0
  1397  00782F  00                 	db	0
  1398  007830  00                 	db	0
  1399  007831  00                 	db	0
  1400  007832  FF                 	db	255
  1401  007833  FF                 	db	255
  1402  007834  FF                 	db	255
  1403  007835  FF                 	db	255
  1404  007836  00                 	db	0
  1405  007837  00                 	db	0
  1406  007838  00                 	db	0
  1407  007839  00                 	db	0
  1408  00783A  00                 	db	0
  1409  00783B  00                 	db	0
  1410  00783C  00                 	db	0
  1411  00783D  00                 	db	0
  1412  00783E  00                 	db	0
  1413  00783F  00                 	db	0
  1414  007840  00                 	db	0
  1415  007841  00                 	db	0
  1416  007842  00                 	db	0
  1417  007843  00                 	db	0
  1418  007844  00                 	db	0
  1419  007845  00                 	db	0
  1420  007846  00                 	db	0
  1421  007847  00                 	db	0
  1422  007848  00                 	db	0
  1423  007849  00                 	db	0
  1424  00784A  00                 	db	0
  1425  00784B  00                 	db	0
  1426  00784C  FF                 	db	255
  1427  00784D  FF                 	db	255
  1428  00784E  FF                 	db	255
  1429  00784F  FF                 	db	255
  1430  007850  00                 	db	0
  1431  007851  00                 	db	0
  1432  007852  00                 	db	0
  1433  007853  00                 	db	0
  1434  007854  00                 	db	0
  1435  007855  00                 	db	0
  1436  007856  00                 	db	0
  1437  007857  00                 	db	0
  1438  007858  00                 	db	0
  1439  007859  00                 	db	0
  1440  00785A  00                 	db	0
  1441  00785B  00                 	db	0
  1442  00785C  00                 	db	0
  1443  00785D  00                 	db	0
  1444  00785E  01                 	db	1
  1445  00785F  03                 	db	3
  1446  007860  07                 	db	7
  1447  007861  0F                 	db	15
  1448  007862  0F                 	db	15
  1449  007863  0F                 	db	15
  1450  007864  0F                 	db	15
  1451  007865  0F                 	db	15
  1452  007866  0F                 	db	15
  1453  007867  0F                 	db	15
  1454  007868  0F                 	db	15
  1455  007869  0F                 	db	15
  1456  00786A  0F                 	db	15
  1457  00786B  0F                 	db	15
  1458  00786C  0F                 	db	15
  1459  00786D  0F                 	db	15
  1460  00786E  0F                 	db	15
  1461  00786F  FF                 	db	255
  1462  007870  FF                 	db	255
  1463  007871  FF                 	db	255
  1464  007872  FF                 	db	255
  1465  007873  00                 	db	0
  1466  007874  00                 	db	0
  1467  007875  00                 	db	0
  1468  007876  FF                 	db	255
  1469  007877  FF                 	db	255
  1470  007878  FF                 	db	255
  1471  007879  FF                 	db	255
  1472  00787A  00                 	db	0
  1473  00787B  00                 	db	0
  1474  00787C  00                 	db	0
  1475  00787D  00                 	db	0
  1476  00787E  00                 	db	0
  1477  00787F  00                 	db	0
  1478  007880  00                 	db	0
  1479  007881  00                 	db	0
  1480  007882  00                 	db	0
  1481  007883  00                 	db	0
  1482  007884  00                 	db	0
  1483  007885  00                 	db	0
  1484  007886  00                 	db	0
  1485  007887  00                 	db	0
  1486  007888  00                 	db	0
  1487  007889  00                 	db	0
  1488  00788A  00                 	db	0
  1489  00788B  00                 	db	0
  1490  00788C  00                 	db	0
  1491  00788D  00                 	db	0
  1492  00788E  00                 	db	0
  1493  00788F  00                 	db	0
  1494  007890  00                 	db	0
  1495  007891  00                 	db	0
  1496  007892  00                 	db	0
  1497  007893  00                 	db	0
  1498  007894  FF                 	db	255
  1499  007895  FF                 	db	255
  1500  007896  FF                 	db	255
  1501  007897  FF                 	db	255
  1502  007898  00                 	db	0
  1503  007899  00                 	db	0
  1504  00789A  00                 	db	0
  1505  00789B  01                 	db	1
  1506  00789C  03                 	db	3
  1507  00789D  07                 	db	7
  1508  00789E  0F                 	db	15
  1509  00789F  0F                 	db	15
  1510  0078A0  0F                 	db	15
  1511  0078A1  0F                 	db	15
  1512  0078A2  0F                 	db	15
  1513  0078A3  0F                 	db	15
  1514  0078A4  0F                 	db	15
  1515  0078A5  0F                 	db	15
  1516  0078A6  0F                 	db	15
  1517  0078A7  0F                 	db	15
  1518  0078A8  0F                 	db	15
  1519  0078A9  0F                 	db	15
  1520  0078AA  0F                 	db	15
  1521  0078AB  0F                 	db	15
  1522  0078AC  0F                 	db	15
  1523  0078AD  0F                 	db	15
  1524  0078AE  FF                 	db	255
  1525  0078AF  FF                 	db	255
  1526  0078B0  FF                 	db	255
  1527  0078B1  FF                 	db	255
  1528  0078B2  00                 	db	0
  1529  0078B3  00                 	db	0
  1530  0078B4  00                 	db	0
  1531  0078B5  00                 	db	0
  1532  0078B6  00                 	db	0
  1533  0078B7  00                 	db	0
  1534  0078B8  00                 	db	0
  1535  0078B9  00                 	db	0
  1536  0078BA  00                 	db	0
  1537  0078BB  00                 	db	0
  1538  0078BC  00                 	db	0
  1539  0078BD  00                 	db	0
  1540  0078BE  00                 	db	0
  1541  0078BF  00                 	db	0
  1542  0078C0  00                 	db	0
  1543  0078C1  00                 	db	0
  1544  0078C2  00                 	db	0
  1545  0078C3  00                 	db	0
  1546  0078C4  00                 	db	0
  1547  0078C5  00                 	db	0
  1548  0078C6  00                 	db	0
  1549  0078C7  00                 	db	0
  1550  0078C8  00                 	db	0
  1551  0078C9  00                 	db	0
  1552  0078CA  00                 	db	0
  1553  0078CB  00                 	db	0
  1554  0078CC  00                 	db	0
  1555  0078CD  00                 	db	0
  1556  0078CE  00                 	db	0
  1557  0078CF  00                 	db	0
  1558  0078D0  00                 	db	0
  1559  0078D1  00                 	db	0
  1560  0078D2  00                 	db	0
  1561  0078D3  00                 	db	0
  1562  0078D4  00                 	db	0
  1563  0078D5  00                 	db	0
  1564  0078D6  00                 	db	0
  1565  0078D7  00                 	db	0
  1566  0078D8  00                 	db	0
  1567  0078D9  00                 	db	0
  1568  0078DA  00                 	db	0
  1569  0078DB  00                 	db	0
  1570  0078DC  00                 	db	0
  1571  0078DD  00                 	db	0
  1572  0078DE  00                 	db	0
  1573  0078DF  00                 	db	0
  1574  0078E0  00                 	db	0
  1575  0078E1  00                 	db	0
  1576  0078E2  00                 	db	0
  1577  0078E3  00                 	db	0
  1578  0078E4  00                 	db	0
  1579  0078E5  00                 	db	0
  1580  0078E6  00                 	db	0
  1581  0078E7  00                 	db	0
  1582  0078E8  00                 	db	0
  1583  0078E9  00                 	db	0
  1584  0078EA  00                 	db	0
  1585  0078EB  00                 	db	0
  1586  0078EC  00                 	db	0
  1587  0078ED  00                 	db	0
  1588  0078EE  00                 	db	0
  1589  0078EF  00                 	db	0
  1590  0078F0  00                 	db	0
  1591  0078F1  00                 	db	0
  1592  0078F2  00                 	db	0
  1593  0078F3  00                 	db	0
  1594  0078F4  00                 	db	0
  1595  0078F5  00                 	db	0
  1596  0078F6  00                 	db	0
  1597  0078F7  00                 	db	0
  1598  0078F8  00                 	db	0
  1599  0078F9  00                 	db	0
  1600  0078FA  00                 	db	0
  1601  0078FB  00                 	db	0
  1602  0078FC  00                 	db	0
  1603  0078FD  00                 	db	0
  1604  0078FE  00                 	db	0
  1605  0078FF  00                 	db	0
  1606  007900  00                 	db	0
  1607  007901  00                 	db	0
  1608  007902  00                 	db	0
  1609  007903  00                 	db	0
  1610  007904  00                 	db	0
  1611  007905  00                 	db	0
  1612  007906  00                 	db	0
  1613  007907  00                 	db	0
  1614  007908  00                 	db	0
  1615  007909  00                 	db	0
  1616  00790A  00                 	db	0
  1617  00790B  00                 	db	0
  1618  00790C  00                 	db	0
  1619  00790D  00                 	db	0
  1620  00790E  00                 	db	0
  1621  00790F  00                 	db	0
  1622  007910  00                 	db	0
  1623  007911  00                 	db	0
  1624  007912  00                 	db	0
  1625  007913  00                 	db	0
  1626  007914  00                 	db	0
  1627  007915  00                 	db	0
  1628  007916  00                 	db	0
  1629  007917  00                 	db	0
  1630  007918  00                 	db	0
  1631  007919  00                 	db	0
  1632  00791A                     __end_of_logo_eme:
  1633                           	opt stack 0
  1634  00791A                     _ptni_frame:
  1635                           	opt stack 0
  1636  00791A  0F                 	db	15
  1637  00791B  10                 	db	16
  1638  00791C  20                 	db	32
  1639  00791D  20                 	db	32
  1640  00791E  20                 	db	32
  1641  00791F  20                 	db	32
  1642  007920  20                 	db	32
  1643  007921  20                 	db	32
  1644  007922  20                 	db	32
  1645  007923  20                 	db	32
  1646  007924  20                 	db	32
  1647  007925  20                 	db	32
  1648  007926  20                 	db	32
  1649  007927  20                 	db	32
  1650  007928  20                 	db	32
  1651  007929  20                 	db	32
  1652  00792A  20                 	db	32
  1653  00792B  20                 	db	32
  1654  00792C  20                 	db	32
  1655  00792D  20                 	db	32
  1656  00792E  20                 	db	32
  1657  00792F  20                 	db	32
  1658  007930  20                 	db	32
  1659  007931  20                 	db	32
  1660  007932  20                 	db	32
  1661  007933  20                 	db	32
  1662  007934  20                 	db	32
  1663  007935  20                 	db	32
  1664  007936  20                 	db	32
  1665  007937  20                 	db	32
  1666  007938  20                 	db	32
  1667  007939  20                 	db	32
  1668  00793A  20                 	db	32
  1669  00793B  20                 	db	32
  1670  00793C  20                 	db	32
  1671  00793D  20                 	db	32
  1672  00793E  24                 	db	36
  1673  00793F  27                 	db	39
  1674  007940  24                 	db	36
  1675  007941  24                 	db	36
  1676  007942  24                 	db	36
  1677  007943  24                 	db	36
  1678  007944  24                 	db	36
  1679  007945  27                 	db	39
  1680  007946  24                 	db	36
  1681  007947  20                 	db	32
  1682  007948  10                 	db	16
  1683  007949  0F                 	db	15
  1684  00794A  FF                 	db	255
  1685  00794B  00                 	db	0
  1686  00794C  00                 	db	0
  1687  00794D  00                 	db	0
  1688  00794E  00                 	db	0
  1689  00794F  13                 	db	19
  1690  007950  24                 	db	36
  1691  007951  24                 	db	36
  1692  007952  24                 	db	36
  1693  007953  19                 	db	25
  1694  007954  00                 	db	0
  1695  007955  00                 	db	0
  1696  007956  00                 	db	0
  1697  007957  00                 	db	0
  1698  007958  00                 	db	0
  1699  007959  00                 	db	0
  1700  00795A  00                 	db	0
  1701  00795B  00                 	db	0
  1702  00795C  00                 	db	0
  1703  00795D  00                 	db	0
  1704  00795E  00                 	db	0
  1705  00795F  00                 	db	0
  1706  007960  00                 	db	0
  1707  007961  00                 	db	0
  1708  007962  00                 	db	0
  1709  007963  00                 	db	0
  1710  007964  00                 	db	0
  1711  007965  00                 	db	0
  1712  007966  00                 	db	0
  1713  007967  00                 	db	0
  1714  007968  00                 	db	0
  1715  007969  00                 	db	0
  1716  00796A  00                 	db	0
  1717  00796B  00                 	db	0
  1718  00796C  00                 	db	0
  1719  00796D  00                 	db	0
  1720  00796E  00                 	db	0
  1721  00796F  07                 	db	7
  1722  007970  8B                 	db	139
  1723  007971  D3                 	db	211
  1724  007972  E3                 	db	227
  1725  007973  D3                 	db	211
  1726  007974  8B                 	db	139
  1727  007975  07                 	db	7
  1728  007976  00                 	db	0
  1729  007977  00                 	db	0
  1730  007978  00                 	db	0
  1731  007979  FF                 	db	255
  1732  00797A  C0                 	db	192
  1733  00797B  20                 	db	32
  1734  00797C  10                 	db	16
  1735  00797D  10                 	db	16
  1736  00797E  10                 	db	16
  1737  00797F  10                 	db	16
  1738  007980  90                 	db	144
  1739  007981  90                 	db	144
  1740  007982  90                 	db	144
  1741  007983  10                 	db	16
  1742  007984  10                 	db	16
  1743  007985  10                 	db	16
  1744  007986  10                 	db	16
  1745  007987  10                 	db	16
  1746  007988  10                 	db	16
  1747  007989  10                 	db	16
  1748  00798A  10                 	db	16
  1749  00798B  10                 	db	16
  1750  00798C  10                 	db	16
  1751  00798D  10                 	db	16
  1752  00798E  10                 	db	16
  1753  00798F  10                 	db	16
  1754  007990  10                 	db	16
  1755  007991  10                 	db	16
  1756  007992  10                 	db	16
  1757  007993  10                 	db	16
  1758  007994  10                 	db	16
  1759  007995  10                 	db	16
  1760  007996  10                 	db	16
  1761  007997  10                 	db	16
  1762  007998  10                 	db	16
  1763  007999  10                 	db	16
  1764  00799A  10                 	db	16
  1765  00799B  10                 	db	16
  1766  00799C  10                 	db	16
  1767  00799D  10                 	db	16
  1768  00799E  90                 	db	144
  1769  00799F  90                 	db	144
  1770  0079A0  90                 	db	144
  1771  0079A1  90                 	db	144
  1772  0079A2  90                 	db	144
  1773  0079A3  90                 	db	144
  1774  0079A4  90                 	db	144
  1775  0079A5  90                 	db	144
  1776  0079A6  90                 	db	144
  1777  0079A7  10                 	db	16
  1778  0079A8  20                 	db	32
  1779  0079A9  C0                 	db	192
  1780  0079AA                     __end_of_ptni_frame:
  1781                           	opt stack 0
  1782  0079AA                     _ptnh_frame:
  1783                           	opt stack 0
  1784  0079AA  0F                 	db	15
  1785  0079AB  10                 	db	16
  1786  0079AC  20                 	db	32
  1787  0079AD  25                 	db	37
  1788  0079AE  25                 	db	37
  1789  0079AF  27                 	db	39
  1790  0079B0  20                 	db	32
  1791  0079B1  27                 	db	39
  1792  0079B2  25                 	db	37
  1793  0079B3  27                 	db	39
  1794  0079B4  20                 	db	32
  1795  0079B5  24                 	db	36
  1796  0079B6  24                 	db	36
  1797  0079B7  27                 	db	39
  1798  0079B8  20                 	db	32
  1799  0079B9  20                 	db	32
  1800  0079BA  20                 	db	32
  1801  0079BB  20                 	db	32
  1802  0079BC  20                 	db	32
  1803  0079BD  20                 	db	32
  1804  0079BE  20                 	db	32
  1805  0079BF  20                 	db	32
  1806  0079C0  20                 	db	32
  1807  0079C1  20                 	db	32
  1808  0079C2  20                 	db	32
  1809  0079C3  20                 	db	32
  1810  0079C4  20                 	db	32
  1811  0079C5  20                 	db	32
  1812  0079C6  20                 	db	32
  1813  0079C7  20                 	db	32
  1814  0079C8  20                 	db	32
  1815  0079C9  20                 	db	32
  1816  0079CA  20                 	db	32
  1817  0079CB  20                 	db	32
  1818  0079CC  20                 	db	32
  1819  0079CD  20                 	db	32
  1820  0079CE  20                 	db	32
  1821  0079CF  20                 	db	32
  1822  0079D0  20                 	db	32
  1823  0079D1  26                 	db	38
  1824  0079D2  26                 	db	38
  1825  0079D3  26                 	db	38
  1826  0079D4  26                 	db	38
  1827  0079D5  26                 	db	38
  1828  0079D6  27                 	db	39
  1829  0079D7  27                 	db	39
  1830  0079D8  10                 	db	16
  1831  0079D9  0F                 	db	15
  1832  0079DA  FF                 	db	255
  1833  0079DB  00                 	db	0
  1834  0079DC  10                 	db	16
  1835  0079DD  D1                 	db	209
  1836  0079DE  51                 	db	81
  1837  0079DF  51                 	db	81
  1838  0079E0  10                 	db	16
  1839  0079E1  15                 	db	21
  1840  0079E2  10                 	db	16
  1841  0079E3  D7                 	db	215
  1842  0079E4  12                 	db	18
  1843  0079E5  51                 	db	81
  1844  0079E6  52                 	db	82
  1845  0079E7  D7                 	db	215
  1846  0079E8  10                 	db	16
  1847  0079E9  00                 	db	0
  1848  0079EA  00                 	db	0
  1849  0079EB  00                 	db	0
  1850  0079EC  00                 	db	0
  1851  0079ED  00                 	db	0
  1852  0079EE  00                 	db	0
  1853  0079EF  00                 	db	0
  1854  0079F0  00                 	db	0
  1855  0079F1  00                 	db	0
  1856  0079F2  00                 	db	0
  1857  0079F3  00                 	db	0
  1858  0079F4  00                 	db	0
  1859  0079F5  00                 	db	0
  1860  0079F6  00                 	db	0
  1861  0079F7  00                 	db	0
  1862  0079F8  00                 	db	0
  1863  0079F9  00                 	db	0
  1864  0079FA  00                 	db	0
  1865  0079FB  00                 	db	0
  1866  0079FC  00                 	db	0
  1867  0079FD  00                 	db	0
  1868  0079FE  00                 	db	0
  1869  0079FF  00                 	db	0
  1870  007A00  00                 	db	0
  1871  007A01  00                 	db	0
  1872  007A02  60                 	db	96
  1873  007A03  60                 	db	96
  1874  007A04  60                 	db	96
  1875  007A05  60                 	db	96
  1876  007A06  FF                 	db	255
  1877  007A07  FF                 	db	255
  1878  007A08  00                 	db	0
  1879  007A09  FF                 	db	255
  1880  007A0A  C0                 	db	192
  1881  007A0B  20                 	db	32
  1882  007A0C  10                 	db	16
  1883  007A0D  D0                 	db	208
  1884  007A0E  10                 	db	16
  1885  007A0F  D0                 	db	208
  1886  007A10  10                 	db	16
  1887  007A11  D0                 	db	208
  1888  007A12  10                 	db	16
  1889  007A13  D0                 	db	208
  1890  007A14  10                 	db	16
  1891  007A15  10                 	db	16
  1892  007A16  10                 	db	16
  1893  007A17  D0                 	db	208
  1894  007A18  10                 	db	16
  1895  007A19  10                 	db	16
  1896  007A1A  10                 	db	16
  1897  007A1B  10                 	db	16
  1898  007A1C  10                 	db	16
  1899  007A1D  10                 	db	16
  1900  007A1E  10                 	db	16
  1901  007A1F  10                 	db	16
  1902  007A20  10                 	db	16
  1903  007A21  10                 	db	16
  1904  007A22  10                 	db	16
  1905  007A23  10                 	db	16
  1906  007A24  10                 	db	16
  1907  007A25  10                 	db	16
  1908  007A26  10                 	db	16
  1909  007A27  10                 	db	16
  1910  007A28  10                 	db	16
  1911  007A29  10                 	db	16
  1912  007A2A  10                 	db	16
  1913  007A2B  10                 	db	16
  1914  007A2C  10                 	db	16
  1915  007A2D  10                 	db	16
  1916  007A2E  10                 	db	16
  1917  007A2F  10                 	db	16
  1918  007A30  10                 	db	16
  1919  007A31  10                 	db	16
  1920  007A32  10                 	db	16
  1921  007A33  10                 	db	16
  1922  007A34  10                 	db	16
  1923  007A35  10                 	db	16
  1924  007A36  90                 	db	144
  1925  007A37  90                 	db	144
  1926  007A38  20                 	db	32
  1927  007A39  C0                 	db	192
  1928  007A3A                     __end_of_ptnh_frame:
  1929                           	opt stack 0
  1930  007A3A                     _ptng_frame:
  1931                           	opt stack 0
  1932  007A3A  0F                 	db	15
  1933  007A3B  10                 	db	16
  1934  007A3C  20                 	db	32
  1935  007A3D  20                 	db	32
  1936  007A3E  20                 	db	32
  1937  007A3F  2F                 	db	47
  1938  007A40  20                 	db	32
  1939  007A41  2F                 	db	47
  1940  007A42  24                 	db	36
  1941  007A43  22                 	db	34
  1942  007A44  24                 	db	36
  1943  007A45  2F                 	db	47
  1944  007A46  20                 	db	32
  1945  007A47  20                 	db	32
  1946  007A48  20                 	db	32
  1947  007A49  20                 	db	32
  1948  007A4A  20                 	db	32
  1949  007A4B  20                 	db	32
  1950  007A4C  20                 	db	32
  1951  007A4D  20                 	db	32
  1952  007A4E  20                 	db	32
  1953  007A4F  20                 	db	32
  1954  007A50  20                 	db	32
  1955  007A51  20                 	db	32
  1956  007A52  20                 	db	32
  1957  007A53  20                 	db	32
  1958  007A54  20                 	db	32
  1959  007A55  20                 	db	32
  1960  007A56  20                 	db	32
  1961  007A57  20                 	db	32
  1962  007A58  20                 	db	32
  1963  007A59  20                 	db	32
  1964  007A5A  20                 	db	32
  1965  007A5B  20                 	db	32
  1966  007A5C  20                 	db	32
  1967  007A5D  20                 	db	32
  1968  007A5E  20                 	db	32
  1969  007A5F  28                 	db	40
  1970  007A60  29                 	db	41
  1971  007A61  2F                 	db	47
  1972  007A62  2F                 	db	47
  1973  007A63  29                 	db	41
  1974  007A64  28                 	db	40
  1975  007A65  20                 	db	32
  1976  007A66  21                 	db	33
  1977  007A67  23                 	db	35
  1978  007A68  10                 	db	16
  1979  007A69  0F                 	db	15
  1980  007A6A  FF                 	db	255
  1981  007A6B  00                 	db	0
  1982  007A6C  23                 	db	35
  1983  007A6D  A2                 	db	162
  1984  007A6E  A3                 	db	163
  1985  007A6F  A0                 	db	160
  1986  007A70  2B                 	db	43
  1987  007A71  A0                 	db	160
  1988  007A72  2F                 	db	47
  1989  007A73  24                 	db	36
  1990  007A74  26                 	db	38
  1991  007A75  A4                 	db	164
  1992  007A76  2F                 	db	47
  1993  007A77  00                 	db	0
  1994  007A78  00                 	db	0
  1995  007A79  00                 	db	0
  1996  007A7A  00                 	db	0
  1997  007A7B  00                 	db	0
  1998  007A7C  00                 	db	0
  1999  007A7D  00                 	db	0
  2000  007A7E  00                 	db	0
  2001  007A7F  00                 	db	0
  2002  007A80  00                 	db	0
  2003  007A81  00                 	db	0
  2004  007A82  00                 	db	0
  2005  007A83  00                 	db	0
  2006  007A84  00                 	db	0
  2007  007A85  00                 	db	0
  2008  007A86  00                 	db	0
  2009  007A87  00                 	db	0
  2010  007A88  00                 	db	0
  2011  007A89  00                 	db	0
  2012  007A8A  00                 	db	0
  2013  007A8B  00                 	db	0
  2014  007A8C  7A                 	db	122
  2015  007A8D  F9                 	db	249
  2016  007A8E  C0                 	db	192
  2017  007A8F  C0                 	db	192
  2018  007A90  E0                 	db	224
  2019  007A91  F0                 	db	240
  2020  007A92  F0                 	db	240
  2021  007A93  E0                 	db	224
  2022  007A94  C0                 	db	192
  2023  007A95  C0                 	db	192
  2024  007A96  E0                 	db	224
  2025  007A97  F0                 	db	240
  2026  007A98  00                 	db	0
  2027  007A99  FF                 	db	255
  2028  007A9A  C0                 	db	192
  2029  007A9B  20                 	db	32
  2030  007A9C  90                 	db	144
  2031  007A9D  10                 	db	16
  2032  007A9E  90                 	db	144
  2033  007A9F  10                 	db	16
  2034  007AA0  90                 	db	144
  2035  007AA1  10                 	db	16
  2036  007AA2  90                 	db	144
  2037  007AA3  10                 	db	16
  2038  007AA4  10                 	db	16
  2039  007AA5  10                 	db	16
  2040  007AA6  90                 	db	144
  2041  007AA7  10                 	db	16
  2042  007AA8  10                 	db	16
  2043  007AA9  10                 	db	16
  2044  007AAA  10                 	db	16
  2045  007AAB  10                 	db	16
  2046  007AAC  10                 	db	16
  2047  007AAD  10                 	db	16
  2048  007AAE  10                 	db	16
  2049  007AAF  10                 	db	16
  2050  007AB0  10                 	db	16
  2051  007AB1  10                 	db	16
  2052  007AB2  10                 	db	16
  2053  007AB3  10                 	db	16
  2054  007AB4  10                 	db	16
  2055  007AB5  10                 	db	16
  2056  007AB6  10                 	db	16
  2057  007AB7  10                 	db	16
  2058  007AB8  10                 	db	16
  2059  007AB9  10                 	db	16
  2060  007ABA  10                 	db	16
  2061  007ABB  10                 	db	16
  2062  007ABC  90                 	db	144
  2063  007ABD  10                 	db	16
  2064  007ABE  10                 	db	16
  2065  007ABF  10                 	db	16
  2066  007AC0  10                 	db	16
  2067  007AC1  10                 	db	16
  2068  007AC2  10                 	db	16
  2069  007AC3  10                 	db	16
  2070  007AC4  10                 	db	16
  2071  007AC5  10                 	db	16
  2072  007AC6  10                 	db	16
  2073  007AC7  10                 	db	16
  2074  007AC8  20                 	db	32
  2075  007AC9  C0                 	db	192
  2076  007ACA                     __end_of_ptng_frame:
  2077                           	opt stack 0
  2078  007ACA                     _ptnf_frame:
  2079                           	opt stack 0
  2080  007ACA  0F                 	db	15
  2081  007ACB  10                 	db	16
  2082  007ACC  20                 	db	32
  2083  007ACD  20                 	db	32
  2084  007ACE  20                 	db	32
  2085  007ACF  20                 	db	32
  2086  007AD0  20                 	db	32
  2087  007AD1  20                 	db	32
  2088  007AD2  20                 	db	32
  2089  007AD3  20                 	db	32
  2090  007AD4  20                 	db	32
  2091  007AD5  20                 	db	32
  2092  007AD6  20                 	db	32
  2093  007AD7  20                 	db	32
  2094  007AD8  20                 	db	32
  2095  007AD9  20                 	db	32
  2096  007ADA  20                 	db	32
  2097  007ADB  20                 	db	32
  2098  007ADC  20                 	db	32
  2099  007ADD  20                 	db	32
  2100  007ADE  20                 	db	32
  2101  007ADF  20                 	db	32
  2102  007AE0  20                 	db	32
  2103  007AE1  20                 	db	32
  2104  007AE2  20                 	db	32
  2105  007AE3  20                 	db	32
  2106  007AE4  20                 	db	32
  2107  007AE5  20                 	db	32
  2108  007AE6  20                 	db	32
  2109  007AE7  20                 	db	32
  2110  007AE8  20                 	db	32
  2111  007AE9  20                 	db	32
  2112  007AEA  20                 	db	32
  2113  007AEB  20                 	db	32
  2114  007AEC  20                 	db	32
  2115  007AED  20                 	db	32
  2116  007AEE  20                 	db	32
  2117  007AEF  20                 	db	32
  2118  007AF0  20                 	db	32
  2119  007AF1  25                 	db	37
  2120  007AF2  22                 	db	34
  2121  007AF3  21                 	db	33
  2122  007AF4  2A                 	db	42
  2123  007AF5  24                 	db	36
  2124  007AF6  22                 	db	34
  2125  007AF7  20                 	db	32
  2126  007AF8  10                 	db	16
  2127  007AF9  0F                 	db	15
  2128  007AFA  FF                 	db	255
  2129  007AFB  00                 	db	0
  2130  007AFC  00                 	db	0
  2131  007AFD  00                 	db	0
  2132  007AFE  01                 	db	1
  2133  007AFF  01                 	db	1
  2134  007B00  1F                 	db	31
  2135  007B01  00                 	db	0
  2136  007B02  1F                 	db	31
  2137  007B03  08                 	db	8
  2138  007B04  04                 	db	4
  2139  007B05  08                 	db	8
  2140  007B06  1F                 	db	31
  2141  007B07  00                 	db	0
  2142  007B08  00                 	db	0
  2143  007B09  00                 	db	0
  2144  007B0A  00                 	db	0
  2145  007B0B  00                 	db	0
  2146  007B0C  00                 	db	0
  2147  007B0D  00                 	db	0
  2148  007B0E  00                 	db	0
  2149  007B0F  00                 	db	0
  2150  007B10  00                 	db	0
  2151  007B11  00                 	db	0
  2152  007B12  00                 	db	0
  2153  007B13  00                 	db	0
  2154  007B14  00                 	db	0
  2155  007B15  00                 	db	0
  2156  007B16  00                 	db	0
  2157  007B17  00                 	db	0
  2158  007B18  00                 	db	0
  2159  007B19  00                 	db	0
  2160  007B1A  00                 	db	0
  2161  007B1B  00                 	db	0
  2162  007B1C  02                 	db	2
  2163  007B1D  1C                 	db	28
  2164  007B1E  24                 	db	36
  2165  007B1F  44                 	db	68
  2166  007B20  88                 	db	136
  2167  007B21  10                 	db	16
  2168  007B22  20                 	db	32
  2169  007B23  40                 	db	64
  2170  007B24  80                 	db	128
  2171  007B25  40                 	db	64
  2172  007B26  00                 	db	0
  2173  007B27  00                 	db	0
  2174  007B28  00                 	db	0
  2175  007B29  FF                 	db	255
  2176  007B2A  C0                 	db	192
  2177  007B2B  20                 	db	32
  2178  007B2C  10                 	db	16
  2179  007B2D  10                 	db	16
  2180  007B2E  10                 	db	16
  2181  007B2F  10                 	db	16
  2182  007B30  10                 	db	16
  2183  007B31  10                 	db	16
  2184  007B32  10                 	db	16
  2185  007B33  10                 	db	16
  2186  007B34  10                 	db	16
  2187  007B35  10                 	db	16
  2188  007B36  10                 	db	16
  2189  007B37  10                 	db	16
  2190  007B38  10                 	db	16
  2191  007B39  10                 	db	16
  2192  007B3A  10                 	db	16
  2193  007B3B  10                 	db	16
  2194  007B3C  10                 	db	16
  2195  007B3D  10                 	db	16
  2196  007B3E  10                 	db	16
  2197  007B3F  10                 	db	16
  2198  007B40  10                 	db	16
  2199  007B41  10                 	db	16
  2200  007B42  10                 	db	16
  2201  007B43  10                 	db	16
  2202  007B44  10                 	db	16
  2203  007B45  10                 	db	16
  2204  007B46  10                 	db	16
  2205  007B47  10                 	db	16
  2206  007B48  10                 	db	16
  2207  007B49  10                 	db	16
  2208  007B4A  10                 	db	16
  2209  007B4B  10                 	db	16
  2210  007B4C  10                 	db	16
  2211  007B4D  10                 	db	16
  2212  007B4E  10                 	db	16
  2213  007B4F  10                 	db	16
  2214  007B50  10                 	db	16
  2215  007B51  10                 	db	16
  2216  007B52  10                 	db	16
  2217  007B53  10                 	db	16
  2218  007B54  10                 	db	16
  2219  007B55  10                 	db	16
  2220  007B56  10                 	db	16
  2221  007B57  10                 	db	16
  2222  007B58  20                 	db	32
  2223  007B59  C0                 	db	192
  2224  007B5A                     __end_of_ptnf_frame:
  2225                           	opt stack 0
  2226  007B5A                     _n_250_m:
  2227                           	opt stack 0
  2228  007B5A  23                 	db	35
  2229  007B5B  27                 	db	39
  2230  007B5C  26                 	db	38
  2231  007B5D  27                 	db	39
  2232  007B5E  23                 	db	35
  2233  007B5F  20                 	db	32
  2234  007B60  26                 	db	38
  2235  007B61  26                 	db	38
  2236  007B62  26                 	db	38
  2237  007B63  27                 	db	39
  2238  007B64  27                 	db	39
  2239  007B65  20                 	db	32
  2240  007B66  23                 	db	35
  2241  007B67  27                 	db	39
  2242  007B68  26                 	db	38
  2243  007B69  26                 	db	38
  2244  007B6A  27                 	db	39
  2245  007B6B  23                 	db	35
  2246  007B6C  20                 	db	32
  2247  007B6D  FE                 	db	254
  2248  007B6E  FF                 	db	255
  2249  007B6F  03                 	db	3
  2250  007B70  FF                 	db	255
  2251  007B71  FE                 	db	254
  2252  007B72  00                 	db	0
  2253  007B73  3E                 	db	62
  2254  007B74  7F                 	db	127
  2255  007B75  63                 	db	99
  2256  007B76  E3                 	db	227
  2257  007B77  C3                 	db	195
  2258  007B78  00                 	db	0
  2259  007B79  83                 	db	131
  2260  007B7A  C3                 	db	195
  2261  007B7B  63                 	db	99
  2262  007B7C  33                 	db	51
  2263  007B7D  1F                 	db	31
  2264  007B7E  0F                 	db	15
  2265  007B7F  00                 	db	0
  2266  007B80  10                 	db	16
  2267  007B81  10                 	db	16
  2268  007B82  10                 	db	16
  2269  007B83  10                 	db	16
  2270  007B84  10                 	db	16
  2271  007B85  10                 	db	16
  2272  007B86  10                 	db	16
  2273  007B87  10                 	db	16
  2274  007B88  10                 	db	16
  2275  007B89  10                 	db	16
  2276  007B8A  10                 	db	16
  2277  007B8B  10                 	db	16
  2278  007B8C  10                 	db	16
  2279  007B8D  10                 	db	16
  2280  007B8E  10                 	db	16
  2281  007B8F  10                 	db	16
  2282  007B90  10                 	db	16
  2283  007B91  10                 	db	16
  2284  007B92  10                 	db	16
  2285  007B93                     __end_of_n_250_m:
  2286                           	opt stack 0
  2287  007B93                     _n_300_m:
  2288                           	opt stack 0
  2289  007B93  23                 	db	35
  2290  007B94  27                 	db	39
  2291  007B95  26                 	db	38
  2292  007B96  27                 	db	39
  2293  007B97  23                 	db	35
  2294  007B98  20                 	db	32
  2295  007B99  23                 	db	35
  2296  007B9A  27                 	db	39
  2297  007B9B  26                 	db	38
  2298  007B9C  27                 	db	39
  2299  007B9D  23                 	db	35
  2300  007B9E  20                 	db	32
  2301  007B9F  23                 	db	35
  2302  007BA0  27                 	db	39
  2303  007BA1  26                 	db	38
  2304  007BA2  26                 	db	38
  2305  007BA3  27                 	db	39
  2306  007BA4  23                 	db	35
  2307  007BA5  20                 	db	32
  2308  007BA6  FE                 	db	254
  2309  007BA7  FF                 	db	255
  2310  007BA8  03                 	db	3
  2311  007BA9  FF                 	db	255
  2312  007BAA  FE                 	db	254
  2313  007BAB  00                 	db	0
  2314  007BAC  FE                 	db	254
  2315  007BAD  FF                 	db	255
  2316  007BAE  03                 	db	3
  2317  007BAF  FF                 	db	255
  2318  007BB0  FE                 	db	254
  2319  007BB1  00                 	db	0
  2320  007BB2  DE                 	db	222
  2321  007BB3  FF                 	db	255
  2322  007BB4  63                 	db	99
  2323  007BB5  63                 	db	99
  2324  007BB6  07                 	db	7
  2325  007BB7  06                 	db	6
  2326  007BB8  00                 	db	0
  2327  007BB9  10                 	db	16
  2328  007BBA  10                 	db	16
  2329  007BBB  10                 	db	16
  2330  007BBC  10                 	db	16
  2331  007BBD  10                 	db	16
  2332  007BBE  10                 	db	16
  2333  007BBF  10                 	db	16
  2334  007BC0  10                 	db	16
  2335  007BC1  10                 	db	16
  2336  007BC2  10                 	db	16
  2337  007BC3  10                 	db	16
  2338  007BC4  10                 	db	16
  2339  007BC5  10                 	db	16
  2340  007BC6  10                 	db	16
  2341  007BC7  10                 	db	16
  2342  007BC8  10                 	db	16
  2343  007BC9  10                 	db	16
  2344  007BCA  10                 	db	16
  2345  007BCB  10                 	db	16
  2346  007BCC                     __end_of_n_300_m:
  2347                           	opt stack 0
  2348  007BCC                     _n_150_m:
  2349                           	opt stack 0
  2350  007BCC  23                 	db	35
  2351  007BCD  27                 	db	39
  2352  007BCE  26                 	db	38
  2353  007BCF  27                 	db	39
  2354  007BD0  23                 	db	35
  2355  007BD1  20                 	db	32
  2356  007BD2  26                 	db	38
  2357  007BD3  26                 	db	38
  2358  007BD4  26                 	db	38
  2359  007BD5  27                 	db	39
  2360  007BD6  27                 	db	39
  2361  007BD7  20                 	db	32
  2362  007BD8  20                 	db	32
  2363  007BD9  27                 	db	39
  2364  007BDA  27                 	db	39
  2365  007BDB  23                 	db	35
  2366  007BDC  20                 	db	32
  2367  007BDD  20                 	db	32
  2368  007BDE  20                 	db	32
  2369  007BDF  FE                 	db	254
  2370  007BE0  FF                 	db	255
  2371  007BE1  03                 	db	3
  2372  007BE2  FF                 	db	255
  2373  007BE3  FE                 	db	254
  2374  007BE4  00                 	db	0
  2375  007BE5  3E                 	db	62
  2376  007BE6  7F                 	db	127
  2377  007BE7  63                 	db	99
  2378  007BE8  E3                 	db	227
  2379  007BE9  C3                 	db	195
  2380  007BEA  00                 	db	0
  2381  007BEB  03                 	db	3
  2382  007BEC  FF                 	db	255
  2383  007BED  FF                 	db	255
  2384  007BEE  03                 	db	3
  2385  007BEF  00                 	db	0
  2386  007BF0  00                 	db	0
  2387  007BF1  00                 	db	0
  2388  007BF2  10                 	db	16
  2389  007BF3  10                 	db	16
  2390  007BF4  10                 	db	16
  2391  007BF5  10                 	db	16
  2392  007BF6  10                 	db	16
  2393  007BF7  10                 	db	16
  2394  007BF8  10                 	db	16
  2395  007BF9  10                 	db	16
  2396  007BFA  10                 	db	16
  2397  007BFB  10                 	db	16
  2398  007BFC  10                 	db	16
  2399  007BFD  10                 	db	16
  2400  007BFE  10                 	db	16
  2401  007BFF  10                 	db	16
  2402  007C00  10                 	db	16
  2403  007C01  10                 	db	16
  2404  007C02  10                 	db	16
  2405  007C03  10                 	db	16
  2406  007C04  10                 	db	16
  2407  007C05                     __end_of_n_150_m:
  2408                           	opt stack 0
  2409  007C05                     _n_200_m:
  2410                           	opt stack 0
  2411  007C05  23                 	db	35
  2412  007C06  27                 	db	39
  2413  007C07  26                 	db	38
  2414  007C08  27                 	db	39
  2415  007C09  23                 	db	35
  2416  007C0A  20                 	db	32
  2417  007C0B  23                 	db	35
  2418  007C0C  27                 	db	39
  2419  007C0D  26                 	db	38
  2420  007C0E  27                 	db	39
  2421  007C0F  23                 	db	35
  2422  007C10  20                 	db	32
  2423  007C11  23                 	db	35
  2424  007C12  27                 	db	39
  2425  007C13  26                 	db	38
  2426  007C14  26                 	db	38
  2427  007C15  27                 	db	39
  2428  007C16  23                 	db	35
  2429  007C17  20                 	db	32
  2430  007C18  FE                 	db	254
  2431  007C19  FF                 	db	255
  2432  007C1A  03                 	db	3
  2433  007C1B  FF                 	db	255
  2434  007C1C  FE                 	db	254
  2435  007C1D  00                 	db	0
  2436  007C1E  FE                 	db	254
  2437  007C1F  FF                 	db	255
  2438  007C20  03                 	db	3
  2439  007C21  FF                 	db	255
  2440  007C22  FE                 	db	254
  2441  007C23  00                 	db	0
  2442  007C24  83                 	db	131
  2443  007C25  C3                 	db	195
  2444  007C26  63                 	db	99
  2445  007C27  33                 	db	51
  2446  007C28  1F                 	db	31
  2447  007C29  0F                 	db	15
  2448  007C2A  00                 	db	0
  2449  007C2B  10                 	db	16
  2450  007C2C  10                 	db	16
  2451  007C2D  10                 	db	16
  2452  007C2E  10                 	db	16
  2453  007C2F  10                 	db	16
  2454  007C30  10                 	db	16
  2455  007C31  10                 	db	16
  2456  007C32  10                 	db	16
  2457  007C33  10                 	db	16
  2458  007C34  10                 	db	16
  2459  007C35  10                 	db	16
  2460  007C36  10                 	db	16
  2461  007C37  10                 	db	16
  2462  007C38  10                 	db	16
  2463  007C39  10                 	db	16
  2464  007C3A  10                 	db	16
  2465  007C3B  10                 	db	16
  2466  007C3C  10                 	db	16
  2467  007C3D  10                 	db	16
  2468  007C3E                     __end_of_n_200_m:
  2469                           	opt stack 0
  2470  007C3E                     _n_100_m:
  2471                           	opt stack 0
  2472  007C3E  23                 	db	35
  2473  007C3F  27                 	db	39
  2474  007C40  26                 	db	38
  2475  007C41  27                 	db	39
  2476  007C42  23                 	db	35
  2477  007C43  20                 	db	32
  2478  007C44  23                 	db	35
  2479  007C45  27                 	db	39
  2480  007C46  26                 	db	38
  2481  007C47  27                 	db	39
  2482  007C48  23                 	db	35
  2483  007C49  20                 	db	32
  2484  007C4A  20                 	db	32
  2485  007C4B  27                 	db	39
  2486  007C4C  27                 	db	39
  2487  007C4D  23                 	db	35
  2488  007C4E  20                 	db	32
  2489  007C4F  20                 	db	32
  2490  007C50  20                 	db	32
  2491  007C51  FE                 	db	254
  2492  007C52  FF                 	db	255
  2493  007C53  03                 	db	3
  2494  007C54  FF                 	db	255
  2495  007C55  FE                 	db	254
  2496  007C56  00                 	db	0
  2497  007C57  FE                 	db	254
  2498  007C58  FF                 	db	255
  2499  007C59  03                 	db	3
  2500  007C5A  FF                 	db	255
  2501  007C5B  FE                 	db	254
  2502  007C5C  00                 	db	0
  2503  007C5D  03                 	db	3
  2504  007C5E  FF                 	db	255
  2505  007C5F  FF                 	db	255
  2506  007C60  03                 	db	3
  2507  007C61  00                 	db	0
  2508  007C62  00                 	db	0
  2509  007C63  00                 	db	0
  2510  007C64  10                 	db	16
  2511  007C65  10                 	db	16
  2512  007C66  10                 	db	16
  2513  007C67  10                 	db	16
  2514  007C68  10                 	db	16
  2515  007C69  10                 	db	16
  2516  007C6A  10                 	db	16
  2517  007C6B  10                 	db	16
  2518  007C6C  10                 	db	16
  2519  007C6D  10                 	db	16
  2520  007C6E  10                 	db	16
  2521  007C6F  10                 	db	16
  2522  007C70  10                 	db	16
  2523  007C71  10                 	db	16
  2524  007C72  10                 	db	16
  2525  007C73  10                 	db	16
  2526  007C74  10                 	db	16
  2527  007C75  10                 	db	16
  2528  007C76  10                 	db	16
  2529  007C77                     __end_of_n_100_m:
  2530                           	opt stack 0
  2531  007C77                     _n_13_m:
  2532                           	opt stack 0
  2533  007C77  20                 	db	32
  2534  007C78  20                 	db	32
  2535  007C79  20                 	db	32
  2536  007C7A  20                 	db	32
  2537  007C7B  20                 	db	32
  2538  007C7C  20                 	db	32
  2539  007C7D  23                 	db	35
  2540  007C7E  27                 	db	39
  2541  007C7F  26                 	db	38
  2542  007C80  26                 	db	38
  2543  007C81  27                 	db	39
  2544  007C82  23                 	db	35
  2545  007C83  20                 	db	32
  2546  007C84  20                 	db	32
  2547  007C85  20                 	db	32
  2548  007C86  27                 	db	39
  2549  007C87  27                 	db	39
  2550  007C88  23                 	db	35
  2551  007C89  20                 	db	32
  2552  007C8A  00                 	db	0
  2553  007C8B  00                 	db	0
  2554  007C8C  00                 	db	0
  2555  007C8D  00                 	db	0
  2556  007C8E  00                 	db	0
  2557  007C8F  00                 	db	0
  2558  007C90  DE                 	db	222
  2559  007C91  FF                 	db	255
  2560  007C92  63                 	db	99
  2561  007C93  63                 	db	99
  2562  007C94  07                 	db	7
  2563  007C95  06                 	db	6
  2564  007C96  00                 	db	0
  2565  007C97  00                 	db	0
  2566  007C98  03                 	db	3
  2567  007C99  FF                 	db	255
  2568  007C9A  FF                 	db	255
  2569  007C9B  03                 	db	3
  2570  007C9C  00                 	db	0
  2571  007C9D  10                 	db	16
  2572  007C9E  10                 	db	16
  2573  007C9F  10                 	db	16
  2574  007CA0  10                 	db	16
  2575  007CA1  10                 	db	16
  2576  007CA2  10                 	db	16
  2577  007CA3  10                 	db	16
  2578  007CA4  10                 	db	16
  2579  007CA5  10                 	db	16
  2580  007CA6  10                 	db	16
  2581  007CA7  10                 	db	16
  2582  007CA8  10                 	db	16
  2583  007CA9  10                 	db	16
  2584  007CAA  10                 	db	16
  2585  007CAB  10                 	db	16
  2586  007CAC  10                 	db	16
  2587  007CAD  10                 	db	16
  2588  007CAE  10                 	db	16
  2589  007CAF  10                 	db	16
  2590  007CB0                     __end_of_n_13_m:
  2591                           	opt stack 0
  2592  007CB0                     _n_10_m:
  2593                           	opt stack 0
  2594  007CB0  20                 	db	32
  2595  007CB1  20                 	db	32
  2596  007CB2  20                 	db	32
  2597  007CB3  20                 	db	32
  2598  007CB4  20                 	db	32
  2599  007CB5  20                 	db	32
  2600  007CB6  20                 	db	32
  2601  007CB7  23                 	db	35
  2602  007CB8  27                 	db	39
  2603  007CB9  26                 	db	38
  2604  007CBA  26                 	db	38
  2605  007CBB  27                 	db	39
  2606  007CBC  23                 	db	35
  2607  007CBD  20                 	db	32
  2608  007CBE  20                 	db	32
  2609  007CBF  27                 	db	39
  2610  007CC0  27                 	db	39
  2611  007CC1  23                 	db	35
  2612  007CC2  20                 	db	32
  2613  007CC3  00                 	db	0
  2614  007CC4  00                 	db	0
  2615  007CC5  00                 	db	0
  2616  007CC6  00                 	db	0
  2617  007CC7  00                 	db	0
  2618  007CC8  00                 	db	0
  2619  007CC9  00                 	db	0
  2620  007CCA  FE                 	db	254
  2621  007CCB  FF                 	db	255
  2622  007CCC  03                 	db	3
  2623  007CCD  03                 	db	3
  2624  007CCE  FF                 	db	255
  2625  007CCF  FE                 	db	254
  2626  007CD0  00                 	db	0
  2627  007CD1  03                 	db	3
  2628  007CD2  FF                 	db	255
  2629  007CD3  FF                 	db	255
  2630  007CD4  03                 	db	3
  2631  007CD5  00                 	db	0
  2632  007CD6  10                 	db	16
  2633  007CD7  10                 	db	16
  2634  007CD8  10                 	db	16
  2635  007CD9  10                 	db	16
  2636  007CDA  10                 	db	16
  2637  007CDB  10                 	db	16
  2638  007CDC  10                 	db	16
  2639  007CDD  10                 	db	16
  2640  007CDE  10                 	db	16
  2641  007CDF  10                 	db	16
  2642  007CE0  10                 	db	16
  2643  007CE1  10                 	db	16
  2644  007CE2  10                 	db	16
  2645  007CE3  10                 	db	16
  2646  007CE4  10                 	db	16
  2647  007CE5  10                 	db	16
  2648  007CE6  10                 	db	16
  2649  007CE7  10                 	db	16
  2650  007CE8  10                 	db	16
  2651  007CE9                     __end_of_n_10_m:
  2652                           	opt stack 0
  2653  007CE9                     _n_5_m:
  2654                           	opt stack 0
  2655  007CE9  20                 	db	32
  2656  007CEA  20                 	db	32
  2657  007CEB  20                 	db	32
  2658  007CEC  20                 	db	32
  2659  007CED  20                 	db	32
  2660  007CEE  20                 	db	32
  2661  007CEF  26                 	db	38
  2662  007CF0  26                 	db	38
  2663  007CF1  26                 	db	38
  2664  007CF2  26                 	db	38
  2665  007CF3  26                 	db	38
  2666  007CF4  27                 	db	39
  2667  007CF5  27                 	db	39
  2668  007CF6  20                 	db	32
  2669  007CF7  20                 	db	32
  2670  007CF8  20                 	db	32
  2671  007CF9  20                 	db	32
  2672  007CFA  20                 	db	32
  2673  007CFB  20                 	db	32
  2674  007CFC  00                 	db	0
  2675  007CFD  00                 	db	0
  2676  007CFE  00                 	db	0
  2677  007CFF  00                 	db	0
  2678  007D00  00                 	db	0
  2679  007D01  00                 	db	0
  2680  007D02  3E                 	db	62
  2681  007D03  7F                 	db	127
  2682  007D04  63                 	db	99
  2683  007D05  63                 	db	99
  2684  007D06  63                 	db	99
  2685  007D07  E3                 	db	227
  2686  007D08  E3                 	db	227
  2687  007D09  00                 	db	0
  2688  007D0A  00                 	db	0
  2689  007D0B  00                 	db	0
  2690  007D0C  00                 	db	0
  2691  007D0D  00                 	db	0
  2692  007D0E  00                 	db	0
  2693  007D0F  10                 	db	16
  2694  007D10  10                 	db	16
  2695  007D11  10                 	db	16
  2696  007D12  10                 	db	16
  2697  007D13  10                 	db	16
  2698  007D14  10                 	db	16
  2699  007D15  10                 	db	16
  2700  007D16  10                 	db	16
  2701  007D17  10                 	db	16
  2702  007D18  10                 	db	16
  2703  007D19  10                 	db	16
  2704  007D1A  10                 	db	16
  2705  007D1B  10                 	db	16
  2706  007D1C  10                 	db	16
  2707  007D1D  10                 	db	16
  2708  007D1E  10                 	db	16
  2709  007D1F  10                 	db	16
  2710  007D20  10                 	db	16
  2711  007D21  10                 	db	16
  2712  007D22                     __end_of_n_5_m:
  2713                           	opt stack 0
  2714  007D22                     _n_6_m:
  2715                           	opt stack 0
  2716  007D22  20                 	db	32
  2717  007D23  20                 	db	32
  2718  007D24  20                 	db	32
  2719  007D25  20                 	db	32
  2720  007D26  20                 	db	32
  2721  007D27  20                 	db	32
  2722  007D28  23                 	db	35
  2723  007D29  27                 	db	39
  2724  007D2A  26                 	db	38
  2725  007D2B  26                 	db	38
  2726  007D2C  26                 	db	38
  2727  007D2D  27                 	db	39
  2728  007D2E  23                 	db	35
  2729  007D2F  20                 	db	32
  2730  007D30  20                 	db	32
  2731  007D31  20                 	db	32
  2732  007D32  20                 	db	32
  2733  007D33  20                 	db	32
  2734  007D34  20                 	db	32
  2735  007D35  00                 	db	0
  2736  007D36  00                 	db	0
  2737  007D37  00                 	db	0
  2738  007D38  00                 	db	0
  2739  007D39  00                 	db	0
  2740  007D3A  00                 	db	0
  2741  007D3B  3E                 	db	62
  2742  007D3C  7F                 	db	127
  2743  007D3D  63                 	db	99
  2744  007D3E  63                 	db	99
  2745  007D3F  63                 	db	99
  2746  007D40  FF                 	db	255
  2747  007D41  FE                 	db	254
  2748  007D42  00                 	db	0
  2749  007D43  00                 	db	0
  2750  007D44  00                 	db	0
  2751  007D45  00                 	db	0
  2752  007D46  00                 	db	0
  2753  007D47  00                 	db	0
  2754  007D48  10                 	db	16
  2755  007D49  10                 	db	16
  2756  007D4A  10                 	db	16
  2757  007D4B  10                 	db	16
  2758  007D4C  10                 	db	16
  2759  007D4D  10                 	db	16
  2760  007D4E  10                 	db	16
  2761  007D4F  10                 	db	16
  2762  007D50  10                 	db	16
  2763  007D51  10                 	db	16
  2764  007D52  10                 	db	16
  2765  007D53  10                 	db	16
  2766  007D54  10                 	db	16
  2767  007D55  10                 	db	16
  2768  007D56  10                 	db	16
  2769  007D57  10                 	db	16
  2770  007D58  10                 	db	16
  2771  007D59  10                 	db	16
  2772  007D5A  10                 	db	16
  2773  007D5B                     __end_of_n_6_m:
  2774                           	opt stack 0
  2775  007D5B                     _n_4_m:
  2776                           	opt stack 0
  2777  007D5B  20                 	db	32
  2778  007D5C  20                 	db	32
  2779  007D5D  20                 	db	32
  2780  007D5E  20                 	db	32
  2781  007D5F  20                 	db	32
  2782  007D60  20                 	db	32
  2783  007D61  27                 	db	39
  2784  007D62  27                 	db	39
  2785  007D63  20                 	db	32
  2786  007D64  20                 	db	32
  2787  007D65  20                 	db	32
  2788  007D66  27                 	db	39
  2789  007D67  27                 	db	39
  2790  007D68  20                 	db	32
  2791  007D69  20                 	db	32
  2792  007D6A  20                 	db	32
  2793  007D6B  20                 	db	32
  2794  007D6C  20                 	db	32
  2795  007D6D  20                 	db	32
  2796  007D6E  00                 	db	0
  2797  007D6F  00                 	db	0
  2798  007D70  00                 	db	0
  2799  007D71  00                 	db	0
  2800  007D72  00                 	db	0
  2801  007D73  00                 	db	0
  2802  007D74  FF                 	db	255
  2803  007D75  FF                 	db	255
  2804  007D76  60                 	db	96
  2805  007D77  60                 	db	96
  2806  007D78  60                 	db	96
  2807  007D79  E0                 	db	224
  2808  007D7A  E0                 	db	224
  2809  007D7B  00                 	db	0
  2810  007D7C  00                 	db	0
  2811  007D7D  00                 	db	0
  2812  007D7E  00                 	db	0
  2813  007D7F  00                 	db	0
  2814  007D80  00                 	db	0
  2815  007D81  10                 	db	16
  2816  007D82  10                 	db	16
  2817  007D83  10                 	db	16
  2818  007D84  10                 	db	16
  2819  007D85  10                 	db	16
  2820  007D86  10                 	db	16
  2821  007D87  10                 	db	16
  2822  007D88  10                 	db	16
  2823  007D89  10                 	db	16
  2824  007D8A  10                 	db	16
  2825  007D8B  10                 	db	16
  2826  007D8C  10                 	db	16
  2827  007D8D  10                 	db	16
  2828  007D8E  10                 	db	16
  2829  007D8F  10                 	db	16
  2830  007D90  10                 	db	16
  2831  007D91  10                 	db	16
  2832  007D92  10                 	db	16
  2833  007D93  10                 	db	16
  2834  007D94                     __end_of_n_4_m:
  2835                           	opt stack 0
  2836  007D94                     _n_3_m:
  2837                           	opt stack 0
  2838  007D94  20                 	db	32
  2839  007D95  20                 	db	32
  2840  007D96  20                 	db	32
  2841  007D97  20                 	db	32
  2842  007D98  20                 	db	32
  2843  007D99  20                 	db	32
  2844  007D9A  20                 	db	32
  2845  007D9B  23                 	db	35
  2846  007D9C  27                 	db	39
  2847  007D9D  26                 	db	38
  2848  007D9E  26                 	db	38
  2849  007D9F  27                 	db	39
  2850  007DA0  23                 	db	35
  2851  007DA1  20                 	db	32
  2852  007DA2  20                 	db	32
  2853  007DA3  20                 	db	32
  2854  007DA4  20                 	db	32
  2855  007DA5  20                 	db	32
  2856  007DA6  20                 	db	32
  2857  007DA7  00                 	db	0
  2858  007DA8  00                 	db	0
  2859  007DA9  00                 	db	0
  2860  007DAA  00                 	db	0
  2861  007DAB  00                 	db	0
  2862  007DAC  00                 	db	0
  2863  007DAD  00                 	db	0
  2864  007DAE  DE                 	db	222
  2865  007DAF  FF                 	db	255
  2866  007DB0  63                 	db	99
  2867  007DB1  63                 	db	99
  2868  007DB2  07                 	db	7
  2869  007DB3  06                 	db	6
  2870  007DB4  00                 	db	0
  2871  007DB5  00                 	db	0
  2872  007DB6  00                 	db	0
  2873  007DB7  00                 	db	0
  2874  007DB8  00                 	db	0
  2875  007DB9  00                 	db	0
  2876  007DBA  10                 	db	16
  2877  007DBB  10                 	db	16
  2878  007DBC  10                 	db	16
  2879  007DBD  10                 	db	16
  2880  007DBE  10                 	db	16
  2881  007DBF  10                 	db	16
  2882  007DC0  10                 	db	16
  2883  007DC1  10                 	db	16
  2884  007DC2  10                 	db	16
  2885  007DC3  10                 	db	16
  2886  007DC4  10                 	db	16
  2887  007DC5  10                 	db	16
  2888  007DC6  10                 	db	16
  2889  007DC7  10                 	db	16
  2890  007DC8  10                 	db	16
  2891  007DC9  10                 	db	16
  2892  007DCA  10                 	db	16
  2893  007DCB  10                 	db	16
  2894  007DCC  10                 	db	16
  2895  007DCD                     __end_of_n_3_m:
  2896                           	opt stack 0
  2897  007DCD                     _n_2_m:
  2898                           	opt stack 0
  2899  007DCD  20                 	db	32
  2900  007DCE  20                 	db	32
  2901  007DCF  20                 	db	32
  2902  007DD0  20                 	db	32
  2903  007DD1  20                 	db	32
  2904  007DD2  20                 	db	32
  2905  007DD3  20                 	db	32
  2906  007DD4  23                 	db	35
  2907  007DD5  27                 	db	39
  2908  007DD6  26                 	db	38
  2909  007DD7  26                 	db	38
  2910  007DD8  27                 	db	39
  2911  007DD9  23                 	db	35
  2912  007DDA  20                 	db	32
  2913  007DDB  20                 	db	32
  2914  007DDC  20                 	db	32
  2915  007DDD  20                 	db	32
  2916  007DDE  20                 	db	32
  2917  007DDF  20                 	db	32
  2918  007DE0  00                 	db	0
  2919  007DE1  00                 	db	0
  2920  007DE2  00                 	db	0
  2921  007DE3  00                 	db	0
  2922  007DE4  00                 	db	0
  2923  007DE5  00                 	db	0
  2924  007DE6  00                 	db	0
  2925  007DE7  83                 	db	131
  2926  007DE8  C3                 	db	195
  2927  007DE9  63                 	db	99
  2928  007DEA  33                 	db	51
  2929  007DEB  1F                 	db	31
  2930  007DEC  0F                 	db	15
  2931  007DED  00                 	db	0
  2932  007DEE  00                 	db	0
  2933  007DEF  00                 	db	0
  2934  007DF0  00                 	db	0
  2935  007DF1  00                 	db	0
  2936  007DF2  00                 	db	0
  2937  007DF3  10                 	db	16
  2938  007DF4  10                 	db	16
  2939  007DF5  10                 	db	16
  2940  007DF6  10                 	db	16
  2941  007DF7  10                 	db	16
  2942  007DF8  10                 	db	16
  2943  007DF9  10                 	db	16
  2944  007DFA  10                 	db	16
  2945  007DFB  10                 	db	16
  2946  007DFC  10                 	db	16
  2947  007DFD  10                 	db	16
  2948  007DFE  10                 	db	16
  2949  007DFF  10                 	db	16
  2950  007E00  10                 	db	16
  2951  007E01  10                 	db	16
  2952  007E02  10                 	db	16
  2953  007E03  10                 	db	16
  2954  007E04  10                 	db	16
  2955  007E05  10                 	db	16
  2956  007E06                     __end_of_n_2_m:
  2957                           	opt stack 0
  2958  007E06                     _n_2P5_m:
  2959                           	opt stack 0
  2960  007E06  26                 	db	38
  2961  007E07  26                 	db	38
  2962  007E08  26                 	db	38
  2963  007E09  27                 	db	39
  2964  007E0A  27                 	db	39
  2965  007E0B  20                 	db	32
  2966  007E0C  20                 	db	32
  2967  007E0D  20                 	db	32
  2968  007E0E  20                 	db	32
  2969  007E0F  23                 	db	35
  2970  007E10  27                 	db	39
  2971  007E11  26                 	db	38
  2972  007E12  26                 	db	38
  2973  007E13  27                 	db	39
  2974  007E14  23                 	db	35
  2975  007E15  20                 	db	32
  2976  007E16  20                 	db	32
  2977  007E17  20                 	db	32
  2978  007E18  20                 	db	32
  2979  007E19  3E                 	db	62
  2980  007E1A  7F                 	db	127
  2981  007E1B  63                 	db	99
  2982  007E1C  E3                 	db	227
  2983  007E1D  C3                 	db	195
  2984  007E1E  00                 	db	0
  2985  007E1F  06                 	db	6
  2986  007E20  06                 	db	6
  2987  007E21  00                 	db	0
  2988  007E22  83                 	db	131
  2989  007E23  C3                 	db	195
  2990  007E24  63                 	db	99
  2991  007E25  33                 	db	51
  2992  007E26  1F                 	db	31
  2993  007E27  0F                 	db	15
  2994  007E28  00                 	db	0
  2995  007E29  00                 	db	0
  2996  007E2A  00                 	db	0
  2997  007E2B  00                 	db	0
  2998  007E2C  10                 	db	16
  2999  007E2D  10                 	db	16
  3000  007E2E  10                 	db	16
  3001  007E2F  10                 	db	16
  3002  007E30  10                 	db	16
  3003  007E31  10                 	db	16
  3004  007E32  10                 	db	16
  3005  007E33  10                 	db	16
  3006  007E34  10                 	db	16
  3007  007E35  10                 	db	16
  3008  007E36  10                 	db	16
  3009  007E37  10                 	db	16
  3010  007E38  10                 	db	16
  3011  007E39  10                 	db	16
  3012  007E3A  10                 	db	16
  3013  007E3B  10                 	db	16
  3014  007E3C  10                 	db	16
  3015  007E3D  10                 	db	16
  3016  007E3E  10                 	db	16
  3017  007E3F                     __end_of_n_2P5_m:
  3018                           	opt stack 0
  3019  007E3F                     _n_1P5_m:
  3020                           	opt stack 0
  3021  007E3F  26                 	db	38
  3022  007E40  26                 	db	38
  3023  007E41  26                 	db	38
  3024  007E42  27                 	db	39
  3025  007E43  27                 	db	39
  3026  007E44  20                 	db	32
  3027  007E45  20                 	db	32
  3028  007E46  20                 	db	32
  3029  007E47  20                 	db	32
  3030  007E48  20                 	db	32
  3031  007E49  27                 	db	39
  3032  007E4A  27                 	db	39
  3033  007E4B  23                 	db	35
  3034  007E4C  20                 	db	32
  3035  007E4D  20                 	db	32
  3036  007E4E  20                 	db	32
  3037  007E4F  20                 	db	32
  3038  007E50  20                 	db	32
  3039  007E51  20                 	db	32
  3040  007E52  3E                 	db	62
  3041  007E53  7F                 	db	127
  3042  007E54  63                 	db	99
  3043  007E55  E3                 	db	227
  3044  007E56  C3                 	db	195
  3045  007E57  00                 	db	0
  3046  007E58  06                 	db	6
  3047  007E59  06                 	db	6
  3048  007E5A  00                 	db	0
  3049  007E5B  03                 	db	3
  3050  007E5C  FF                 	db	255
  3051  007E5D  FF                 	db	255
  3052  007E5E  03                 	db	3
  3053  007E5F  00                 	db	0
  3054  007E60  00                 	db	0
  3055  007E61  00                 	db	0
  3056  007E62  00                 	db	0
  3057  007E63  00                 	db	0
  3058  007E64  00                 	db	0
  3059  007E65  10                 	db	16
  3060  007E66  10                 	db	16
  3061  007E67  10                 	db	16
  3062  007E68  10                 	db	16
  3063  007E69  10                 	db	16
  3064  007E6A  10                 	db	16
  3065  007E6B  10                 	db	16
  3066  007E6C  10                 	db	16
  3067  007E6D  10                 	db	16
  3068  007E6E  10                 	db	16
  3069  007E6F  10                 	db	16
  3070  007E70  10                 	db	16
  3071  007E71  10                 	db	16
  3072  007E72  10                 	db	16
  3073  007E73  10                 	db	16
  3074  007E74  10                 	db	16
  3075  007E75  10                 	db	16
  3076  007E76  10                 	db	16
  3077  007E77  10                 	db	16
  3078  007E78                     __end_of_n_1P5_m:
  3079                           	opt stack 0
  3080  007E78                     _n_1_m:
  3081                           	opt stack 0
  3082  007E78  20                 	db	32
  3083  007E79  20                 	db	32
  3084  007E7A  20                 	db	32
  3085  007E7B  20                 	db	32
  3086  007E7C  20                 	db	32
  3087  007E7D  20                 	db	32
  3088  007E7E  20                 	db	32
  3089  007E7F  20                 	db	32
  3090  007E80  27                 	db	39
  3091  007E81  27                 	db	39
  3092  007E82  23                 	db	35
  3093  007E83  20                 	db	32
  3094  007E84  20                 	db	32
  3095  007E85  20                 	db	32
  3096  007E86  20                 	db	32
  3097  007E87  20                 	db	32
  3098  007E88  20                 	db	32
  3099  007E89  20                 	db	32
  3100  007E8A  20                 	db	32
  3101  007E8B  00                 	db	0
  3102  007E8C  00                 	db	0
  3103  007E8D  00                 	db	0
  3104  007E8E  00                 	db	0
  3105  007E8F  00                 	db	0
  3106  007E90  00                 	db	0
  3107  007E91  00                 	db	0
  3108  007E92  03                 	db	3
  3109  007E93  FF                 	db	255
  3110  007E94  FF                 	db	255
  3111  007E95  03                 	db	3
  3112  007E96  00                 	db	0
  3113  007E97  00                 	db	0
  3114  007E98  00                 	db	0
  3115  007E99  00                 	db	0
  3116  007E9A  00                 	db	0
  3117  007E9B  00                 	db	0
  3118  007E9C  00                 	db	0
  3119  007E9D  00                 	db	0
  3120  007E9E  10                 	db	16
  3121  007E9F  10                 	db	16
  3122  007EA0  10                 	db	16
  3123  007EA1  10                 	db	16
  3124  007EA2  10                 	db	16
  3125  007EA3  10                 	db	16
  3126  007EA4  10                 	db	16
  3127  007EA5  10                 	db	16
  3128  007EA6  10                 	db	16
  3129  007EA7  10                 	db	16
  3130  007EA8  10                 	db	16
  3131  007EA9  10                 	db	16
  3132  007EAA  10                 	db	16
  3133  007EAB  10                 	db	16
  3134  007EAC  10                 	db	16
  3135  007EAD  10                 	db	16
  3136  007EAE  10                 	db	16
  3137  007EAF  10                 	db	16
  3138  007EB0  10                 	db	16
  3139  007EB1                     __end_of_n_1_m:
  3140                           	opt stack 0
  3141  007EB1                     _n_0_m:
  3142                           	opt stack 0
  3143  007EB1  20                 	db	32
  3144  007EB2  20                 	db	32
  3145  007EB3  20                 	db	32
  3146  007EB4  20                 	db	32
  3147  007EB5  20                 	db	32
  3148  007EB6  20                 	db	32
  3149  007EB7  23                 	db	35
  3150  007EB8  27                 	db	39
  3151  007EB9  26                 	db	38
  3152  007EBA  26                 	db	38
  3153  007EBB  26                 	db	38
  3154  007EBC  27                 	db	39
  3155  007EBD  23                 	db	35
  3156  007EBE  20                 	db	32
  3157  007EBF  20                 	db	32
  3158  007EC0  20                 	db	32
  3159  007EC1  20                 	db	32
  3160  007EC2  20                 	db	32
  3161  007EC3  20                 	db	32
  3162  007EC4  00                 	db	0
  3163  007EC5  00                 	db	0
  3164  007EC6  00                 	db	0
  3165  007EC7  00                 	db	0
  3166  007EC8  00                 	db	0
  3167  007EC9  00                 	db	0
  3168  007ECA  FE                 	db	254
  3169  007ECB  FF                 	db	255
  3170  007ECC  03                 	db	3
  3171  007ECD  03                 	db	3
  3172  007ECE  03                 	db	3
  3173  007ECF  FF                 	db	255
  3174  007ED0  FE                 	db	254
  3175  007ED1  00                 	db	0
  3176  007ED2  00                 	db	0
  3177  007ED3  00                 	db	0
  3178  007ED4  00                 	db	0
  3179  007ED5  00                 	db	0
  3180  007ED6  00                 	db	0
  3181  007ED7  10                 	db	16
  3182  007ED8  10                 	db	16
  3183  007ED9  10                 	db	16
  3184  007EDA  10                 	db	16
  3185  007EDB  10                 	db	16
  3186  007EDC  10                 	db	16
  3187  007EDD  10                 	db	16
  3188  007EDE  10                 	db	16
  3189  007EDF  10                 	db	16
  3190  007EE0  10                 	db	16
  3191  007EE1  10                 	db	16
  3192  007EE2  10                 	db	16
  3193  007EE3  10                 	db	16
  3194  007EE4  10                 	db	16
  3195  007EE5  10                 	db	16
  3196  007EE6  10                 	db	16
  3197  007EE7  10                 	db	16
  3198  007EE8  10                 	db	16
  3199  007EE9  10                 	db	16
  3200  007EEA                     __end_of_n_0_m:
  3201                           	opt stack 0
  3202  007EEA                     _bat100_m:
  3203                           	opt stack 0
  3204  007EEA  80                 	db	128
  3205  007EEB  80                 	db	128
  3206  007EEC  80                 	db	128
  3207  007EED  80                 	db	128
  3208  007EEE  80                 	db	128
  3209  007EEF  80                 	db	128
  3210  007EF0  80                 	db	128
  3211  007EF1  8F                 	db	143
  3212  007EF2  8F                 	db	143
  3213  007EF3  BF                 	db	191
  3214  007EF4  BF                 	db	191
  3215  007EF5  BF                 	db	191
  3216  007EF6  BF                 	db	191
  3217  007EF7  BF                 	db	191
  3218  007EF8  8F                 	db	143
  3219  007EF9  8F                 	db	143
  3220  007EFA  80                 	db	128
  3221  007EFB  80                 	db	128
  3222  007EFC  80                 	db	128
  3223  007EFD  80                 	db	128
  3224  007EFE  80                 	db	128
  3225  007EFF  80                 	db	128
  3226  007F00  80                 	db	128
  3227  007F01  01                 	db	1
  3228  007F02  01                 	db	1
  3229  007F03  01                 	db	1
  3230  007F04  01                 	db	1
  3231  007F05  01                 	db	1
  3232  007F06  01                 	db	1
  3233  007F07  01                 	db	1
  3234  007F08  FD                 	db	253
  3235  007F09  FD                 	db	253
  3236  007F0A  FD                 	db	253
  3237  007F0B  FD                 	db	253
  3238  007F0C  FD                 	db	253
  3239  007F0D  FD                 	db	253
  3240  007F0E  FD                 	db	253
  3241  007F0F  FD                 	db	253
  3242  007F10  FD                 	db	253
  3243  007F11  01                 	db	1
  3244  007F12  01                 	db	1
  3245  007F13  01                 	db	1
  3246  007F14  01                 	db	1
  3247  007F15  01                 	db	1
  3248  007F16  01                 	db	1
  3249  007F17  01                 	db	1
  3250  007F18                     __end_of_bat100_m:
  3251                           	opt stack 0
  3252  007F18                     _bat80_m:
  3253                           	opt stack 0
  3254  007F18  80                 	db	128
  3255  007F19  80                 	db	128
  3256  007F1A  80                 	db	128
  3257  007F1B  80                 	db	128
  3258  007F1C  80                 	db	128
  3259  007F1D  80                 	db	128
  3260  007F1E  80                 	db	128
  3261  007F1F  8F                 	db	143
  3262  007F20  8F                 	db	143
  3263  007F21  BF                 	db	191
  3264  007F22  A7                 	db	167
  3265  007F23  A7                 	db	167
  3266  007F24  A7                 	db	167
  3267  007F25  BF                 	db	191
  3268  007F26  8F                 	db	143
  3269  007F27  8F                 	db	143
  3270  007F28  80                 	db	128
  3271  007F29  80                 	db	128
  3272  007F2A  80                 	db	128
  3273  007F2B  80                 	db	128
  3274  007F2C  80                 	db	128
  3275  007F2D  80                 	db	128
  3276  007F2E  80                 	db	128
  3277  007F2F  01                 	db	1
  3278  007F30  01                 	db	1
  3279  007F31  01                 	db	1
  3280  007F32  01                 	db	1
  3281  007F33  01                 	db	1
  3282  007F34  01                 	db	1
  3283  007F35  01                 	db	1
  3284  007F36  FD                 	db	253
  3285  007F37  FD                 	db	253
  3286  007F38  FD                 	db	253
  3287  007F39  FD                 	db	253
  3288  007F3A  FD                 	db	253
  3289  007F3B  FD                 	db	253
  3290  007F3C  FD                 	db	253
  3291  007F3D  FD                 	db	253
  3292  007F3E  FD                 	db	253
  3293  007F3F  01                 	db	1
  3294  007F40  01                 	db	1
  3295  007F41  01                 	db	1
  3296  007F42  01                 	db	1
  3297  007F43  01                 	db	1
  3298  007F44  01                 	db	1
  3299  007F45  01                 	db	1
  3300  007F46                     __end_of_bat80_m:
  3301                           	opt stack 0
  3302  007F46                     _bat60_m:
  3303                           	opt stack 0
  3304  007F46  80                 	db	128
  3305  007F47  80                 	db	128
  3306  007F48  80                 	db	128
  3307  007F49  80                 	db	128
  3308  007F4A  80                 	db	128
  3309  007F4B  80                 	db	128
  3310  007F4C  80                 	db	128
  3311  007F4D  8F                 	db	143
  3312  007F4E  89                 	db	137
  3313  007F4F  B9                 	db	185
  3314  007F50  A1                 	db	161
  3315  007F51  A1                 	db	161
  3316  007F52  A1                 	db	161
  3317  007F53  B9                 	db	185
  3318  007F54  89                 	db	137
  3319  007F55  8F                 	db	143
  3320  007F56  80                 	db	128
  3321  007F57  80                 	db	128
  3322  007F58  80                 	db	128
  3323  007F59  80                 	db	128
  3324  007F5A  80                 	db	128
  3325  007F5B  80                 	db	128
  3326  007F5C  80                 	db	128
  3327  007F5D  01                 	db	1
  3328  007F5E  01                 	db	1
  3329  007F5F  01                 	db	1
  3330  007F60  01                 	db	1
  3331  007F61  01                 	db	1
  3332  007F62  01                 	db	1
  3333  007F63  01                 	db	1
  3334  007F64  FD                 	db	253
  3335  007F65  FD                 	db	253
  3336  007F66  FD                 	db	253
  3337  007F67  FD                 	db	253
  3338  007F68  FD                 	db	253
  3339  007F69  FD                 	db	253
  3340  007F6A  FD                 	db	253
  3341  007F6B  FD                 	db	253
  3342  007F6C  FD                 	db	253
  3343  007F6D  01                 	db	1
  3344  007F6E  01                 	db	1
  3345  007F6F  01                 	db	1
  3346  007F70  01                 	db	1
  3347  007F71  01                 	db	1
  3348  007F72  01                 	db	1
  3349  007F73  01                 	db	1
  3350  007F74                     __end_of_bat60_m:
  3351                           	opt stack 0
  3352  007F74                     _bat40_m:
  3353                           	opt stack 0
  3354  007F74  80                 	db	128
  3355  007F75  80                 	db	128
  3356  007F76  80                 	db	128
  3357  007F77  80                 	db	128
  3358  007F78  80                 	db	128
  3359  007F79  80                 	db	128
  3360  007F7A  80                 	db	128
  3361  007F7B  8F                 	db	143
  3362  007F7C  88                 	db	136
  3363  007F7D  B8                 	db	184
  3364  007F7E  A0                 	db	160
  3365  007F7F  A0                 	db	160
  3366  007F80  A0                 	db	160
  3367  007F81  B8                 	db	184
  3368  007F82  88                 	db	136
  3369  007F83  8F                 	db	143
  3370  007F84  80                 	db	128
  3371  007F85  80                 	db	128
  3372  007F86  80                 	db	128
  3373  007F87  80                 	db	128
  3374  007F88  80                 	db	128
  3375  007F89  80                 	db	128
  3376  007F8A  80                 	db	128
  3377  007F8B  01                 	db	1
  3378  007F8C  01                 	db	1
  3379  007F8D  01                 	db	1
  3380  007F8E  01                 	db	1
  3381  007F8F  01                 	db	1
  3382  007F90  01                 	db	1
  3383  007F91  01                 	db	1
  3384  007F92  FD                 	db	253
  3385  007F93  7D                 	db	125
  3386  007F94  7D                 	db	125
  3387  007F95  7D                 	db	125
  3388  007F96  7D                 	db	125
  3389  007F97  7D                 	db	125
  3390  007F98  7D                 	db	125
  3391  007F99  7D                 	db	125
  3392  007F9A  FD                 	db	253
  3393  007F9B  01                 	db	1
  3394  007F9C  01                 	db	1
  3395  007F9D  01                 	db	1
  3396  007F9E  01                 	db	1
  3397  007F9F  01                 	db	1
  3398  007FA0  01                 	db	1
  3399  007FA1  01                 	db	1
  3400  007FA2                     __end_of_bat40_m:
  3401                           	opt stack 0
  3402  007FA2                     _bat20_m:
  3403                           	opt stack 0
  3404  007FA2  80                 	db	128
  3405  007FA3  80                 	db	128
  3406  007FA4  80                 	db	128
  3407  007FA5  80                 	db	128
  3408  007FA6  80                 	db	128
  3409  007FA7  80                 	db	128
  3410  007FA8  80                 	db	128
  3411  007FA9  8F                 	db	143
  3412  007FAA  88                 	db	136
  3413  007FAB  B8                 	db	184
  3414  007FAC  A0                 	db	160
  3415  007FAD  A0                 	db	160
  3416  007FAE  A0                 	db	160
  3417  007FAF  B8                 	db	184
  3418  007FB0  88                 	db	136
  3419  007FB1  8F                 	db	143
  3420  007FB2  80                 	db	128
  3421  007FB3  80                 	db	128
  3422  007FB4  80                 	db	128
  3423  007FB5  80                 	db	128
  3424  007FB6  80                 	db	128
  3425  007FB7  80                 	db	128
  3426  007FB8  80                 	db	128
  3427  007FB9  01                 	db	1
  3428  007FBA  01                 	db	1
  3429  007FBB  01                 	db	1
  3430  007FBC  01                 	db	1
  3431  007FBD  01                 	db	1
  3432  007FBE  01                 	db	1
  3433  007FBF  01                 	db	1
  3434  007FC0  FD                 	db	253
  3435  007FC1  1D                 	db	29
  3436  007FC2  1D                 	db	29
  3437  007FC3  1D                 	db	29
  3438  007FC4  1D                 	db	29
  3439  007FC5  1D                 	db	29
  3440  007FC6  1D                 	db	29
  3441  007FC7  1D                 	db	29
  3442  007FC8  FD                 	db	253
  3443  007FC9  01                 	db	1
  3444  007FCA  01                 	db	1
  3445  007FCB  01                 	db	1
  3446  007FCC  01                 	db	1
  3447  007FCD  01                 	db	1
  3448  007FCE  01                 	db	1
  3449  007FCF  01                 	db	1
  3450  007FD0                     __end_of_bat20_m:
  3451                           	opt stack 0
  3452  007FD0                     _bat00_m:
  3453                           	opt stack 0
  3454  007FD0  80                 	db	128
  3455  007FD1  80                 	db	128
  3456  007FD2  80                 	db	128
  3457  007FD3  80                 	db	128
  3458  007FD4  80                 	db	128
  3459  007FD5  80                 	db	128
  3460  007FD6  80                 	db	128
  3461  007FD7  8F                 	db	143
  3462  007FD8  88                 	db	136
  3463  007FD9  B8                 	db	184
  3464  007FDA  A0                 	db	160
  3465  007FDB  A0                 	db	160
  3466  007FDC  A0                 	db	160
  3467  007FDD  B8                 	db	184
  3468  007FDE  88                 	db	136
  3469  007FDF  8F                 	db	143
  3470  007FE0  80                 	db	128
  3471  007FE1  80                 	db	128
  3472  007FE2  80                 	db	128
  3473  007FE3  80                 	db	128
  3474  007FE4  80                 	db	128
  3475  007FE5  80                 	db	128
  3476  007FE6  80                 	db	128
  3477  007FE7  01                 	db	1
  3478  007FE8  01                 	db	1
  3479  007FE9  01                 	db	1
  3480  007FEA  01                 	db	1
  3481  007FEB  01                 	db	1
  3482  007FEC  01                 	db	1
  3483  007FED  01                 	db	1
  3484  007FEE  FD                 	db	253
  3485  007FEF  05                 	db	5
  3486  007FF0  05                 	db	5
  3487  007FF1  05                 	db	5
  3488  007FF2  05                 	db	5
  3489  007FF3  05                 	db	5
  3490  007FF4  05                 	db	5
  3491  007FF5  05                 	db	5
  3492  007FF6  FD                 	db	253
  3493  007FF7  01                 	db	1
  3494  007FF8  01                 	db	1
  3495  007FF9  01                 	db	1
  3496  007FFA  01                 	db	1
  3497  007FFB  01                 	db	1
  3498  007FFC  01                 	db	1
  3499  007FFD  01                 	db	1
  3500  007FFE                     __end_of_bat00_m:
  3501                           	opt stack 0
  3502  0000                     _TMR0	set	4054
  3503  0000                     _TMR1	set	4046
  3504  0000                     _PORTCbits	set	3970
  3505  0000                     _ADRESL	set	4035
  3506  0000                     _ADRESH	set	4036
  3507  0000                     _ADCON0bits	set	4034
  3508  0000                     _ADCON2bits	set	4032
  3509  0000                     _PORTC	set	3970
  3510  0000                     _PORTAbits	set	3968
  3511  0000                     _T1CONbits	set	4045
  3512  0000                     _INTCON3bits	set	4080
  3513  0000                     _LATCbits	set	3979
  3514  0000                     _LATAbits	set	3977
  3515  0000                     _PORTBbits	set	3969
  3516  0000                     _T0CONbits	set	4053
  3517  0000                     _PORTDbits	set	3971
  3518  0000                     _INTCONbits	set	4082
  3519  0000                     _INTCON2bits	set	4081
  3520  0000                     _TRISAbits	set	3986
  3521  0000                     _TRISBbits	set	3987
  3522  0000                     _ADCON1	set	4033
  3523  0000                     _LATDbits	set	3980
  3524  0000                     _TRISDbits	set	3989
  3525  0000                     _LATEbits	set	3981
  3526  0000                     _TRISEbits	set	3990
  3527  0000                     _TXREG	set	4013
  3528  0000                     _PIR1bits	set	3998
  3529  0000                     _TXSTAbits	set	4012
  3530  0000                     _RCSTAbits	set	4011
  3531  0000                     _SPBRG	set	4015
  3532  0000                     _TRISCbits	set	3988
  3533  0000                     _GIE	set	32663
  3534  0000                     _T08BIT	set	32430
  3535  0000                     _T0PS0	set	32424
  3536  0000                     _T0PS1	set	32425
  3537  0000                     _T0PS2	set	32426
  3538  0000                     _PSA	set	32427
  3539  0000                     _T0CS	set	32429
  3540  0000                     _T0IF	set	32658
  3541  0000                     _T0IE	set	32661
  3542                           
  3543                           ; #config settings
  3544  007FFE  00                 	db	0	; dummy byte at the end
  3545  0000                     
  3546                           	psect	cinit
  3547  0044A6                     __pcinit:
  3548                           	opt stack 0
  3549  0044A6                     start_initialization:
  3550                           	opt stack 0
  3551  0044A6                     __initialization:
  3552                           	opt stack 0
  3553                           
  3554                           ; Initialize objects allocated to BANK0 (10 bytes)
  3555                           ; load TBLPTR registers with __pidataBANK0
  3556  0044A6  0E9C               	movlw	low __pidataBANK0
  3557  0044A8  6EF6               	movwf	tblptrl,c
  3558  0044AA  0E4E               	movlw	high __pidataBANK0
  3559  0044AC  6EF7               	movwf	tblptrh,c
  3560  0044AE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3561  0044B0  6EF8               	movwf	tblptru,c
  3562  0044B2  EE00  F0F3         	lfsr	0,__pdataBANK0
  3563  0044B6  EE10 F00A          	lfsr	1,10
  3564  0044BA                     copy_data0:
  3565  0044BA  0009               	tblrd		*+
  3566  0044BC  CFF5 FFEE          	movff	tablat,postinc0
  3567  0044C0  50E5               	movf	postdec1,w,c
  3568  0044C2  50E1               	movf	fsr1l,w,c
  3569  0044C4  E1FA               	bnz	copy_data0
  3570                           
  3571                           ; Initialize objects allocated to COMRAM (2 bytes)
  3572                           ; load TBLPTR registers with __pidataCOMRAM
  3573  0044C6  0EBC               	movlw	low __pidataCOMRAM
  3574  0044C8  6EF6               	movwf	tblptrl,c
  3575  0044CA  0E4E               	movlw	high __pidataCOMRAM
  3576  0044CC  6EF7               	movwf	tblptrh,c
  3577  0044CE  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3578  0044D0  6EF8               	movwf	tblptru,c
  3579  0044D2  0009               	tblrd		*+	;fetch initializer
  3580  0044D4  CFF5 F068          	movff	tablat,__pdataCOMRAM
  3581  0044D8  0009               	tblrd		*+	;fetch initializer
  3582  0044DA  CFF5 F069          	movff	tablat,__pdataCOMRAM+1
  3583                           
  3584                           ; Clear objects allocated to BANK3 (256 bytes)
  3585  0044DE  EE03  F000         	lfsr	0,__pbssBANK3
  3586  0044E2  EE11 F000          	lfsr	1,256
  3587  0044E6                     clear_0:
  3588  0044E6  6AEE               	clrf	postinc0,c
  3589  0044E8  50E5               	movf	postdec1,w,c
  3590  0044EA  50E1               	movf	fsr1l,w,c
  3591  0044EC  E1FC               	bnz	clear_0
  3592  0044EE  50E2               	movf	fsr1h,w,c
  3593  0044F0  E1FA               	bnz	clear_0
  3594                           
  3595                           ; Clear objects allocated to BANK2 (256 bytes)
  3596  0044F2  EE02  F000         	lfsr	0,__pbssBANK2
  3597  0044F6  EE11 F000          	lfsr	1,256
  3598  0044FA                     clear_1:
  3599  0044FA  6AEE               	clrf	postinc0,c
  3600  0044FC  50E5               	movf	postdec1,w,c
  3601  0044FE  50E1               	movf	fsr1l,w,c
  3602  004500  E1FC               	bnz	clear_1
  3603  004502  50E2               	movf	fsr1h,w,c
  3604  004504  E1FA               	bnz	clear_1
  3605                           
  3606                           ; Clear objects allocated to BANK1 (40 bytes)
  3607  004506  EE01  F000         	lfsr	0,__pbssBANK1
  3608  00450A  0E28               	movlw	40
  3609  00450C                     clear_2:
  3610  00450C  6AEE               	clrf	postinc0,c
  3611  00450E  06E8               	decf	wreg,f,c
  3612  004510  E1FD               	bnz	clear_2
  3613                           
  3614                           ; Clear objects allocated to BANK0 (115 bytes)
  3615  004512  EE00  F080         	lfsr	0,__pbssBANK0
  3616  004516  0E73               	movlw	115
  3617  004518                     clear_3:
  3618  004518  6AEE               	clrf	postinc0,c
  3619  00451A  06E8               	decf	wreg,f,c
  3620  00451C  E1FD               	bnz	clear_3
  3621                           
  3622                           ; Clear objects allocated to COMRAM (80 bytes)
  3623  00451E  EE00  F001         	lfsr	0,__pbssCOMRAM
  3624  004522  0E50               	movlw	80
  3625  004524                     clear_4:
  3626  004524  6AEE               	clrf	postinc0,c
  3627  004526  06E8               	decf	wreg,f,c
  3628  004528  E1FD               	bnz	clear_4
  3629  00452A                     end_of_initialization:
  3630                           	opt stack 0
  3631  00452A                     __end_of__initialization:
  3632                           	opt stack 0
  3633  00452A  906A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3634  00452C  926A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3635  00452E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3636  004530  6EF8               	movwf	tblptru,c
  3637  004532  0100               	movlb	0
  3638  004534  EFAE  F021         	goto	_main	;jump to C main() function
  3639                           tblptru	equ	0xFF8
  3640                           tblptrh	equ	0xFF7
  3641                           tblptrl	equ	0xFF6
  3642                           tablat	equ	0xFF5
  3643                           postinc0	equ	0xFEE
  3644                           wreg	equ	0xFE8
  3645                           postdec1	equ	0xFE5
  3646                           fsr1h	equ	0xFE2
  3647                           fsr1l	equ	0xFE1
  3648                           
  3649                           	psect	bssCOMRAM
  3650  000001                     __pbssCOMRAM:
  3651                           	opt stack 0
  3652  000001                     _menu:
  3653                           	opt stack 0
  3654  000001                     	ds	64
  3655  000041                     check_ui_status@cnt_ui_check:
  3656                           	opt stack 0
  3657  000041                     	ds	4
  3658  000045                     _ptnx_frame:
  3659                           	opt stack 0
  3660  000045                     	ds	2
  3661  000047                     _bat_vol:
  3662                           	opt stack 0
  3663  000047                     	ds	2
  3664  000049                     _bat_x_m:
  3665                           	opt stack 0
  3666  000049                     	ds	2
  3667  00004B                     _n_x_m:
  3668                           	opt stack 0
  3669  00004B                     	ds	2
  3670  00004D                     _work_mode:
  3671                           	opt stack 0
  3672  00004D                     	ds	1
  3673  00004E                     _flip:
  3674                           	opt stack 0
  3675  00004E                     	ds	1
  3676  00004F                     _focus:
  3677                           	opt stack 0
  3678  00004F                     	ds	1
  3679  000050                     _flag_blink:
  3680                           	opt stack 0
  3681  000050                     	ds	1
  3682                           tblptru	equ	0xFF8
  3683                           tblptrh	equ	0xFF7
  3684                           tblptrl	equ	0xFF6
  3685                           tablat	equ	0xFF5
  3686                           postinc0	equ	0xFEE
  3687                           wreg	equ	0xFE8
  3688                           postdec1	equ	0xFE5
  3689                           fsr1h	equ	0xFE2
  3690                           fsr1l	equ	0xFE1
  3691                           
  3692                           	psect	dataCOMRAM
  3693  000068                     __pdataCOMRAM:
  3694                           	opt stack 0
  3695  000068                     check_bat@bat_flip:
  3696                           	opt stack 0
  3697  000068                     	ds	1
  3698  000069                     _ms:
  3699                           	opt stack 0
  3700  000069                     	ds	1
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           postinc0	equ	0xFEE
  3706                           wreg	equ	0xFE8
  3707                           postdec1	equ	0xFE5
  3708                           fsr1h	equ	0xFE2
  3709                           fsr1l	equ	0xFE1
  3710                           
  3711                           	psect	bssBANK0
  3712  000080                     __pbssBANK0:
  3713                           	opt stack 0
  3714  000080                     _hg_op:
  3715                           	opt stack 0
  3716  000080                     	ds	57
  3717  0000B9                     _msleep:
  3718                           	opt stack 0
  3719  0000B9                     	ds	4
  3720  0000BD                     _cnt_mb:
  3721                           	opt stack 0
  3722  0000BD                     	ds	4
  3723  0000C1                     _cnt_ma:
  3724                           	opt stack 0
  3725  0000C1                     	ds	4
  3726  0000C5                     	ds	2
  3727  0000C7                     ISR@tcnt_bat:
  3728                           	opt stack 0
  3729  0000C7                     	ds	2
  3730  0000C9                     _mbcnt:
  3731                           	opt stack 0
  3732  0000C9                     	ds	2
  3733  0000CB                     _tvb:
  3734                           	opt stack 0
  3735  0000CB                     	ds	2
  3736  0000CD                     _tva:
  3737                           	opt stack 0
  3738  0000CD                     	ds	2
  3739  0000CF                     _xtt:
  3740                           	opt stack 0
  3741  0000CF                     	ds	2
  3742  0000D1                     _action_btn_cnt:
  3743                           	opt stack 0
  3744  0000D1                     	ds	2
  3745  0000D3                     _cntb_mb:
  3746                           	opt stack 0
  3747  0000D3                     	ds	2
  3748  0000D5                     _cnta_mb:
  3749                           	opt stack 0
  3750  0000D5                     	ds	2
  3751  0000D7                     _bv:
  3752                           	opt stack 0
  3753  0000D7                     	ds	2
  3754  0000D9                     _flag_test_mode_break:
  3755                           	opt stack 0
  3756  0000D9                     	ds	1
  3757  0000DA                     _work_mode_choice:
  3758                           	opt stack 0
  3759  0000DA                     	ds	1
  3760  0000DB                     	ds	1
  3761  0000DC                     ISR@tcnt:
  3762                           	opt stack 0
  3763  0000DC                     	ds	1
  3764  0000DD                     _ttte:
  3765                           	opt stack 0
  3766  0000DD                     	ds	1
  3767  0000DE                     _old_c:
  3768                           	opt stack 0
  3769  0000DE                     	ds	1
  3770  0000DF                     _tv_cnt:
  3771                           	opt stack 0
  3772  0000DF                     	ds	1
  3773  0000E0                     _flag:
  3774                           	opt stack 0
  3775  0000E0                     	ds	1
  3776  0000E1                     _page:
  3777                           	opt stack 0
  3778  0000E1                     	ds	1
  3779  0000E2                     _rcnt:
  3780                           	opt stack 0
  3781  0000E2                     	ds	1
  3782  0000E3                     _css:
  3783                           	opt stack 0
  3784  0000E3                     	ds	1
  3785  0000E4                     _ss:
  3786                           	opt stack 0
  3787  0000E4                     	ds	1
  3788  0000E5                     _flag_do_reset_in_drops_mode:
  3789                           	opt stack 0
  3790  0000E5                     	ds	1
  3791  0000E6                     _flag_action_button:
  3792                           	opt stack 0
  3793  0000E6                     	ds	1
  3794  0000E7                     _flag_action:
  3795                           	opt stack 0
  3796  0000E7                     	ds	1
  3797  0000E8                     _flag_push:
  3798                           	opt stack 0
  3799  0000E8                     	ds	1
  3800  0000E9                     _flag_inject_sb:
  3801                           	opt stack 0
  3802  0000E9                     	ds	1
  3803  0000EA                     _flag_inject_sa:
  3804                           	opt stack 0
  3805  0000EA                     	ds	1
  3806  0000EB                     _flag_inject:
  3807                           	opt stack 0
  3808  0000EB                     	ds	1
  3809  0000EC                     _flag_mreset_hit_lp:
  3810                           	opt stack 0
  3811  0000EC                     	ds	1
  3812  0000ED                     _cur_edge:
  3813                           	opt stack 0
  3814  0000ED                     	ds	1
  3815  0000EE                     _prev_edge:
  3816                           	opt stack 0
  3817  0000EE                     	ds	1
  3818  0000EF                     _flag_power_up:
  3819                           	opt stack 0
  3820  0000EF                     	ds	1
  3821  0000F0                     _prev_state_phb_ma:
  3822                           	opt stack 0
  3823  0000F0                     	ds	1
  3824  0000F1                     _cur_state_phb_ma:
  3825                           	opt stack 0
  3826  0000F1                     	ds	1
  3827  0000F2                     _test_mode:
  3828                           	opt stack 0
  3829  0000F2                     	ds	1
  3830                           tblptru	equ	0xFF8
  3831                           tblptrh	equ	0xFF7
  3832                           tblptrl	equ	0xFF6
  3833                           tablat	equ	0xFF5
  3834                           postinc0	equ	0xFEE
  3835                           wreg	equ	0xFE8
  3836                           postdec1	equ	0xFE5
  3837                           fsr1h	equ	0xFE2
  3838                           fsr1l	equ	0xFE1
  3839                           
  3840                           	psect	dataBANK0
  3841  0000F3                     __pdataBANK0:
  3842                           	opt stack 0
  3843  0000F3                     _dv:
  3844                           	opt stack 0
  3845  0000F3                     	ds	2
  3846  0000F5                     _cv:
  3847                           	opt stack 0
  3848  0000F5                     	ds	2
  3849  0000F7                     _needle_len:
  3850                           	opt stack 0
  3851  0000F7                     	ds	1
  3852  0000F8                     _tflag:
  3853                           	opt stack 0
  3854  0000F8                     	ds	1
  3855  0000F9                     _flag_tv:
  3856                           	opt stack 0
  3857  0000F9                     	ds	1
  3858  0000FA                     _flag_wake_up:
  3859                           	opt stack 0
  3860  0000FA                     	ds	1
  3861  0000FB                     _flag_go_to_sleep:
  3862                           	opt stack 0
  3863  0000FB                     	ds	1
  3864  0000FC                     _flag_mreset:
  3865                           	opt stack 0
  3866  0000FC                     	ds	1
  3867                           tblptru	equ	0xFF8
  3868                           tblptrh	equ	0xFF7
  3869                           tblptrl	equ	0xFF6
  3870                           tablat	equ	0xFF5
  3871                           postinc0	equ	0xFEE
  3872                           wreg	equ	0xFE8
  3873                           postdec1	equ	0xFE5
  3874                           fsr1h	equ	0xFE2
  3875                           fsr1l	equ	0xFE1
  3876                           
  3877                           	psect	bssBANK1
  3878  000100                     __pbssBANK1:
  3879                           	opt stack 0
  3880  000100                     _tv_s:
  3881                           	opt stack 0
  3882  000100                     	ds	20
  3883  000114                     	ds	4
  3884  000118                     	ds	4
  3885  00011C                     _tmcnt:
  3886                           	opt stack 0
  3887  00011C                     	ds	4
  3888  000120                     _cnt_mb_sb:
  3889                           	opt stack 0
  3890  000120                     	ds	4
  3891  000124                     _cnt_mb_sa:
  3892                           	opt stack 0
  3893  000124                     	ds	4
  3894                           tblptru	equ	0xFF8
  3895                           tblptrh	equ	0xFF7
  3896                           tblptrl	equ	0xFF6
  3897                           tablat	equ	0xFF5
  3898                           postinc0	equ	0xFEE
  3899                           wreg	equ	0xFE8
  3900                           postdec1	equ	0xFE5
  3901                           fsr1h	equ	0xFE2
  3902                           fsr1l	equ	0xFE1
  3903                           
  3904                           	psect	bssBANK2
  3905  000200                     __pbssBANK2:
  3906                           	opt stack 0
  3907  000200                     _write_buf:
  3908                           	opt stack 0
  3909  000200                     	ds	256
  3910                           tblptru	equ	0xFF8
  3911                           tblptrh	equ	0xFF7
  3912                           tblptrl	equ	0xFF6
  3913                           tablat	equ	0xFF5
  3914                           postinc0	equ	0xFEE
  3915                           wreg	equ	0xFE8
  3916                           postdec1	equ	0xFE5
  3917                           fsr1h	equ	0xFE2
  3918                           fsr1l	equ	0xFE1
  3919                           
  3920                           	psect	bssBANK3
  3921  000300                     __pbssBANK3:
  3922                           	opt stack 0
  3923  000300                     _read_buf:
  3924                           	opt stack 0
  3925  000300                     	ds	256
  3926                           tblptru	equ	0xFF8
  3927                           tblptrh	equ	0xFF7
  3928                           tblptrl	equ	0xFF6
  3929                           tablat	equ	0xFF5
  3930                           postinc0	equ	0xFEE
  3931                           wreg	equ	0xFE8
  3932                           postdec1	equ	0xFE5
  3933                           fsr1h	equ	0xFE2
  3934                           fsr1l	equ	0xFE1
  3935                           
  3936                           	psect	cstackBANK1
  3937  000128                     __pcstackBANK1:
  3938                           	opt stack 0
  3939  000128                     ??_get_AD_vaule:
  3940  000128                     ?___wmul:
  3941                           	opt stack 0
  3942  000128                     delay@i:
  3943                           	opt stack 0
  3944  000128                     ee_WriteBytes@_pWriteBuf:
  3945                           	opt stack 0
  3946  000128                     ___wmul@multiplier:
  3947                           	opt stack 0
  3948  000128                     delay_nms@n:
  3949                           	opt stack 0
  3950                           
  3951                           ; 4 bytes @ 0x0
  3952  000128                     	ds	2
  3953  00012A                     ee_WriteBytes@_usAddress:
  3954                           	opt stack 0
  3955  00012A                     delay@j:
  3956                           	opt stack 0
  3957  00012A                     ___wmul@multiplicand:
  3958                           	opt stack 0
  3959                           
  3960                           ; 2 bytes @ 0x2
  3961  00012A                     	ds	1
  3962  00012B                     get_AD_vaule@ts:
  3963                           	opt stack 0
  3964  00012B                     ee_WriteBytes@_usSize:
  3965                           	opt stack 0
  3966                           
  3967                           ; 2 bytes @ 0x3
  3968  00012B                     	ds	1
  3969  00012C                     ??_drops_routine:
  3970  00012C                     KEY_Scan@tm_cnt:
  3971                           	opt stack 0
  3972  00012C                     get_AD_vaule@rv:
  3973                           	opt stack 0
  3974  00012C                     delay_pwm@n:
  3975                           	opt stack 0
  3976                           
  3977                           ; 4 bytes @ 0x4
  3978  00012C                     	ds	1
  3979  00012D                     ee_WriteBytes@m:
  3980                           	opt stack 0
  3981                           
  3982                           ; 2 bytes @ 0x5
  3983  00012D                     	ds	1
  3984  00012E                     get_AD_vaule@hv:
  3985                           	opt stack 0
  3986  00012E                     drops_routine@cnt_push:
  3987                           	opt stack 0
  3988                           
  3989                           ; 2 bytes @ 0x6
  3990  00012E                     	ds	1
  3991  00012F                     get_AD_vaule@lv:
  3992                           	opt stack 0
  3993  00012F                     ee_WriteBytes@usAddr:
  3994                           	opt stack 0
  3995                           
  3996                           ; 1 bytes @ 0x7
  3997  00012F                     	ds	1
  3998  000130                     ??_test_routine:
  3999  000130                     setYX_LCD@py:
  4000                           	opt stack 0
  4001  000130                     c_routine@cnt_push:
  4002                           	opt stack 0
  4003                           
  4004                           ; 2 bytes @ 0x8
  4005  000130                     	ds	1
  4006  000131                     ??_display_logo:
  4007  000131                     display_n_blank@x:
  4008                           	opt stack 0
  4009  000131                     display_num@x:
  4010                           	opt stack 0
  4011  000131                     display_bat_blank@x:
  4012                           	opt stack 0
  4013  000131                     display_bat@x:
  4014                           	opt stack 0
  4015  000131                     display_mem@x:
  4016                           	opt stack 0
  4017  000131                     display_blank_mode_pa@x:
  4018                           	opt stack 0
  4019  000131                     display_cmode@x:
  4020                           	opt stack 0
  4021  000131                     display_drops@x:
  4022                           	opt stack 0
  4023  000131                     display_drop@x:
  4024                           	opt stack 0
  4025  000131                     display_frame_abc@x:
  4026                           	opt stack 0
  4027  000131                     display_frame_de@x:
  4028                           	opt stack 0
  4029  000131                     display_frame_fghi@x:
  4030                           	opt stack 0
  4031  000131                     clear_screen@col:
  4032                           	opt stack 0
  4033                           
  4034                           ; 1 bytes @ 0x9
  4035  000131                     	ds	1
  4036  000132                     display_n_blank@mode:
  4037                           	opt stack 0
  4038  000132                     display_num@mode:
  4039                           	opt stack 0
  4040  000132                     display_bat_blank@mode:
  4041                           	opt stack 0
  4042  000132                     display_bat@mode:
  4043                           	opt stack 0
  4044  000132                     display_mem@mode:
  4045                           	opt stack 0
  4046  000132                     display_blank_mode_pa@mode:
  4047                           	opt stack 0
  4048  000132                     display_cmode@mode:
  4049                           	opt stack 0
  4050  000132                     display_drops@mode:
  4051                           	opt stack 0
  4052  000132                     display_drop@mode:
  4053                           	opt stack 0
  4054  000132                     display_frame_abc@mode:
  4055                           	opt stack 0
  4056  000132                     display_frame_de@mode:
  4057                           	opt stack 0
  4058  000132                     display_frame_fghi@mode:
  4059                           	opt stack 0
  4060  000132                     clear_screen@page:
  4061                           	opt stack 0
  4062  000132                     test_routine@cnt_push:
  4063                           	opt stack 0
  4064                           
  4065                           ; 2 bytes @ 0xA
  4066  000132                     	ds	1
  4067  000133                     ??_display_bat:
  4068  000133                     ??_display_bat_blank:
  4069  000133                     ??_display_num:
  4070  000133                     ??_display_frame_fghi:
  4071  000133                     display_n_blank@y:
  4072                           	opt stack 0
  4073  000133                     display_mem@tori:
  4074                           	opt stack 0
  4075  000133                     display_blank_mode_pa@tori:
  4076                           	opt stack 0
  4077  000133                     display_cmode@tori:
  4078                           	opt stack 0
  4079  000133                     display_drops@tori:
  4080                           	opt stack 0
  4081  000133                     display_drop@tori:
  4082                           	opt stack 0
  4083  000133                     display_frame_abc@tori:
  4084                           	opt stack 0
  4085  000133                     display_frame_de@tori:
  4086                           	opt stack 0
  4087  000133                     display_logo@col:
  4088                           	opt stack 0
  4089                           
  4090                           ; 1 bytes @ 0xB
  4091  000133                     	ds	1
  4092  000134                     display_n_blank@tori:
  4093                           	opt stack 0
  4094  000134                     display_mem@temp:
  4095                           	opt stack 0
  4096  000134                     display_blank_mode_pa@temp:
  4097                           	opt stack 0
  4098  000134                     display_cmode@temp:
  4099                           	opt stack 0
  4100  000134                     display_drops@temp:
  4101                           	opt stack 0
  4102  000134                     display_drop@temp:
  4103                           	opt stack 0
  4104  000134                     display_frame_abc@temp:
  4105                           	opt stack 0
  4106  000134                     display_frame_de@y:
  4107                           	opt stack 0
  4108  000134                     display_logo@page:
  4109                           	opt stack 0
  4110                           
  4111                           ; 1 bytes @ 0xC
  4112  000134                     	ds	1
  4113  000135                     display_n_blank@temp:
  4114                           	opt stack 0
  4115  000135                     display_num@tori:
  4116                           	opt stack 0
  4117  000135                     display_bat_blank@tori:
  4118                           	opt stack 0
  4119  000135                     display_bat@tori:
  4120                           	opt stack 0
  4121  000135                     display_frame_de@temp:
  4122                           	opt stack 0
  4123  000135                     display_frame_fghi@tori:
  4124                           	opt stack 0
  4125                           
  4126                           ; 1 bytes @ 0xD
  4127  000135                     	ds	1
  4128  000136                     display_num@y:
  4129                           	opt stack 0
  4130  000136                     display_bat_blank@temp:
  4131                           	opt stack 0
  4132  000136                     display_bat@temp:
  4133                           	opt stack 0
  4134  000136                     display_frame_fghi@y:
  4135                           	opt stack 0
  4136                           
  4137                           ; 1 bytes @ 0xE
  4138  000136                     	ds	1
  4139  000137                     display_num@temp:
  4140                           	opt stack 0
  4141  000137                     display_frame_fghi@temp:
  4142                           	opt stack 0
  4143                           
  4144                           ; 1 bytes @ 0xF
  4145  000137                     	ds	1
  4146  000138                     initial_ui_setting@i:
  4147                           	opt stack 0
  4148  000138                     menu0_MsgHandlle@key:
  4149                           	opt stack 0
  4150  000138                     menu3_MsgHandlle@key:
  4151                           	opt stack 0
  4152  000138                     menu4_MsgHandlle@key:
  4153                           	opt stack 0
  4154  000138                     menu5_MsgHandlle@key:
  4155                           	opt stack 0
  4156  000138                     menu6_MsgHandlle@key:
  4157                           	opt stack 0
  4158                           
  4159                           ; 1 bytes @ 0x10
  4160  000138                     	ds	1
  4161  000139                     HG_interface@kv:
  4162                           	opt stack 0
  4163  000139                     enter_sleep@temp:
  4164                           	opt stack 0
  4165                           
  4166                           ; 1 bytes @ 0x11
  4167  000139                     	ds	1
  4168                           tblptru	equ	0xFF8
  4169                           tblptrh	equ	0xFF7
  4170                           tblptrl	equ	0xFF6
  4171                           tablat	equ	0xFF5
  4172                           postinc0	equ	0xFEE
  4173                           wreg	equ	0xFE8
  4174                           postdec1	equ	0xFE5
  4175                           fsr1h	equ	0xFE2
  4176                           fsr1l	equ	0xFE1
  4177                           
  4178                           	psect	cstackBANK0
  4179  0000FD                     __pcstackBANK0:
  4180                           	opt stack 0
  4181  0000FD                     ?_get_AD_vaule:
  4182                           	opt stack 0
  4183  0000FD                     i2c_SendByte@_ucByte:
  4184                           	opt stack 0
  4185  0000FD                     i2c_WaitAck@re:
  4186                           	opt stack 0
  4187  0000FD                     menu1_MsgHandlle@key:
  4188                           	opt stack 0
  4189  0000FD                     menu2_MsgHandlle@key:
  4190                           	opt stack 0
  4191  0000FD                     delay_nms@i:
  4192                           	opt stack 0
  4193  0000FD                     delay@x:
  4194                           	opt stack 0
  4195  0000FD                     delaynus@n:
  4196                           	opt stack 0
  4197  0000FD                     ___wmul@product:
  4198                           	opt stack 0
  4199                           
  4200                           ; 2 bytes @ 0x0
  4201  0000FD                     	ds	1
  4202  0000FE                     i2c_SendByte@i:
  4203                           	opt stack 0
  4204  0000FE                     update_focus@key:
  4205                           	opt stack 0
  4206                           
  4207                           ; 1 bytes @ 0x1
  4208  0000FE                     	ds	1
  4209  0000FF                     setYX_LCD@px:
  4210                           	opt stack 0
  4211  0000FF                     update_focus@i:
  4212                           	opt stack 0
  4213                           
  4214                           ; 1 bytes @ 0x2
  4215  0000FF                     	ds	1
  4216  000100                     tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           postinc0	equ	0xFEE
  4221                           wreg	equ	0xFE8
  4222                           postdec1	equ	0xFE5
  4223                           fsr1h	equ	0xFE2
  4224                           fsr1l	equ	0xFE1
  4225                           
  4226                           ; 1 bytes @ 0x3
  4227                           
  4228                           	psect	cstackCOMRAM
  4229  000051                     __pcstackCOMRAM:
  4230                           	opt stack 0
  4231  000051                     ?_get_SenseA_AD_vaule:
  4232                           	opt stack 0
  4233  000051                     
  4234                           ; 1 bytes @ 0x0
  4235  000051                     	ds	2
  4236  000053                     ??_get_SenseA_AD_vaule:
  4237                           
  4238                           ; 1 bytes @ 0x2
  4239  000053                     	ds	3
  4240  000056                     get_SenseA_AD_vaule@rv:
  4241                           	opt stack 0
  4242                           
  4243                           ; 2 bytes @ 0x5
  4244  000056                     	ds	2
  4245  000058                     get_SenseA_AD_vaule@hv:
  4246                           	opt stack 0
  4247                           
  4248                           ; 1 bytes @ 0x7
  4249  000058                     	ds	1
  4250  000059                     get_SenseA_AD_vaule@lv:
  4251                           	opt stack 0
  4252                           
  4253                           ; 1 bytes @ 0x8
  4254  000059                     	ds	1
  4255  00005A                     ??_ISR:
  4256                           
  4257                           ; 1 bytes @ 0x9
  4258  00005A                     	ds	14
  4259                           tblptru	equ	0xFF8
  4260                           tblptrh	equ	0xFF7
  4261                           tblptrl	equ	0xFF6
  4262                           tablat	equ	0xFF5
  4263                           postinc0	equ	0xFEE
  4264                           wreg	equ	0xFE8
  4265                           postdec1	equ	0xFE5
  4266                           fsr1h	equ	0xFE2
  4267                           fsr1l	equ	0xFE1
  4268                           
  4269 ;;
  4270 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4271 ;;
  4272 ;; *************** function _main *****************
  4273 ;; Defined at:
  4274 ;;		line 91 in file "../Main.c"
  4275 ;; Parameters:    Size  Location     Type
  4276 ;;		None
  4277 ;; Auto vars:     Size  Location     Type
  4278 ;;		None
  4279 ;; Return value:  Size  Location     Type
  4280 ;;                  1    wreg      void 
  4281 ;; Registers used:
  4282 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4283 ;; Tracked objects:
  4284 ;;		On entry : 0/0
  4285 ;;		On exit  : 0/0
  4286 ;;		Unchanged: 0/0
  4287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4288 ;;      Params:         0       0       0       0       0       0       0
  4289 ;;      Locals:         0       0       0       0       0       0       0
  4290 ;;      Temps:          0       0       0       0       0       0       0
  4291 ;;      Totals:         0       0       0       0       0       0       0
  4292 ;;Total ram usage:        0 bytes
  4293 ;; Hardware stack levels required when called:   10
  4294 ;; This function calls:
  4295 ;;		_HG_device_init
  4296 ;;		_HG_interface
  4297 ;;		_c_routine
  4298 ;;		_check_acting
  4299 ;;		_check_bat
  4300 ;;		_check_device_idle
  4301 ;;		_check_shut_device
  4302 ;;		_check_ui_blink
  4303 ;;		_check_ui_status
  4304 ;;		_drops_routine
  4305 ;;		_enter_sleep
  4306 ;;		_hg_reset
  4307 ;;		_initial_para_setting
  4308 ;;		_test_routine
  4309 ;; This function is called by:
  4310 ;;		Startup code after reset
  4311 ;; This function uses a non-reentrant model
  4312 ;;
  4313                           
  4314                           	psect	text0
  4315  00435C                     __ptext0:
  4316                           	opt stack 0
  4317  00435C                     _main:
  4318                           	opt stack 21
  4319                           
  4320                           ;Main.c: 93: cur_state_phb_ma=0;
  4321                           
  4322                           ;incstack = 0
  4323  00435C  0E00               	movlw	0
  4324  00435E  0100               	movlb	0	; () banked
  4325  004360  6FF1               	movwf	_cur_state_phb_ma& (0+255),b
  4326                           
  4327                           ;Main.c: 94: prev_state_phb_ma=0;
  4328  004362  0E00               	movlw	0
  4329  004364  0100               	movlb	0	; () banked
  4330  004366  6FF0               	movwf	_prev_state_phb_ma& (0+255),b
  4331                           
  4332                           ;Main.c: 95: cnt_ma = 0;
  4333  004368  0E00               	movlw	0
  4334  00436A  0100               	movlb	0	; () banked
  4335  00436C  6FC1               	movwf	_cnt_ma& (0+255),b
  4336  00436E  0E00               	movlw	0
  4337  004370  6FC2               	movwf	(_cnt_ma+1)& (0+255),b
  4338  004372  0E00               	movlw	0
  4339  004374  6FC3               	movwf	(_cnt_ma+2)& (0+255),b
  4340  004376  0E00               	movlw	0
  4341  004378  6FC4               	movwf	(_cnt_ma+3)& (0+255),b
  4342                           
  4343                           ;Main.c: 96: cnt_mb = 0;
  4344  00437A  0E00               	movlw	0
  4345  00437C  0100               	movlb	0	; () banked
  4346  00437E  6FBD               	movwf	_cnt_mb& (0+255),b
  4347  004380  0E00               	movlw	0
  4348  004382  6FBE               	movwf	(_cnt_mb+1)& (0+255),b
  4349  004384  0E00               	movlw	0
  4350  004386  6FBF               	movwf	(_cnt_mb+2)& (0+255),b
  4351  004388  0E00               	movlw	0
  4352  00438A  6FC0               	movwf	(_cnt_mb+3)& (0+255),b
  4353                           
  4354                           ; BSR set to: 0
  4355                           ;Main.c: 97: HG_device_init();
  4356  00438C  ECAF  F026         	call	_HG_device_init	;wreg free
  4357                           
  4358                           ;Main.c: 117: initial_para_setting();
  4359  004390  ECE0  F024         	call	_initial_para_setting	;wreg free
  4360  004394                     l15139:
  4361                           
  4362                           ;Main.c: 125: {
  4363                           ;Main.c: 126: enter_sleep();
  4364  004394  EC08  F022         	call	_enter_sleep	;wreg free
  4365                           
  4366                           ;Main.c: 128: if(hg_op.need_reset)
  4367  004398  0100               	movlb	0	; () banked
  4368  00439A  5185               	movf	(_hg_op+5)& (0+255),w,b
  4369  00439C  B4D8               	btfsc	status,2,c
  4370  00439E  D003               	goto	l15145
  4371                           
  4372                           ; BSR set to: 0
  4373                           ;Main.c: 129: {
  4374                           ;Main.c: 131: hg_reset();
  4375  0043A0  EC6A  F019         	call	_hg_reset	;wreg free
  4376                           
  4377                           ;Main.c: 132: }
  4378  0043A4  D7F7               	goto	l15139
  4379  0043A6                     l15145:
  4380                           
  4381                           ;Main.c: 133: else
  4382                           ;Main.c: 134: {
  4383                           ;Main.c: 135: if(hg_op.working_mode == 0x01)
  4384  0043A6  0100               	movlb	0	; () banked
  4385  0043A8  0580               	decf	_hg_op& (0+255),w,b
  4386  0043AA  A4D8               	btfss	status,2,c
  4387  0043AC  D003               	goto	l15149
  4388                           
  4389                           ; BSR set to: 0
  4390                           ;Main.c: 136: {
  4391                           ;Main.c: 138: drops_routine();
  4392  0043AE  ECCD  F008         	call	_drops_routine	;wreg free
  4393                           
  4394                           ;Main.c: 139: }
  4395  0043B2  D027               	goto	l15175
  4396  0043B4                     l15149:
  4397                           
  4398                           ;Main.c: 142: else if(hg_op.working_mode == 0x00)
  4399  0043B4  0100               	movlb	0	; () banked
  4400  0043B6  5180               	movf	_hg_op& (0+255),w,b
  4401  0043B8  A4D8               	btfss	status,2,c
  4402  0043BA  D003               	goto	l15153
  4403                           
  4404                           ; BSR set to: 0
  4405                           ;Main.c: 143: {
  4406                           ;Main.c: 144: c_routine();
  4407  0043BC  EC72  F017         	call	_c_routine	;wreg free
  4408                           
  4409                           ;Main.c: 145: }
  4410  0043C0  D020               	goto	l15175
  4411  0043C2                     l15153:
  4412                           
  4413                           ;Main.c: 146: else if(hg_op.working_mode == 0x02)
  4414  0043C2  0E02               	movlw	2
  4415  0043C4  0100               	movlb	0	; () banked
  4416  0043C6  1980               	xorwf	_hg_op& (0+255),w,b
  4417  0043C8  B4D8               	btfsc	status,2,c
  4418  0043CA  D01B               	goto	l15175
  4419                           
  4420                           ; BSR set to: 0
  4421                           ;Main.c: 150: else if(hg_op.working_mode == 0x04)
  4422                           
  4423                           ; BSR set to: 0
  4424                           
  4425                           ; BSR set to: 0
  4426                           ;Main.c: 147: {
  4427                           ;Main.c: 149: }
  4428  0043CC  0E04               	movlw	4
  4429  0043CE  0100               	movlb	0	; () banked
  4430  0043D0  1980               	xorwf	_hg_op& (0+255),w,b
  4431  0043D2  A4D8               	btfss	status,2,c
  4432  0043D4  D003               	goto	l15161
  4433                           
  4434                           ; BSR set to: 0
  4435                           ;Main.c: 151: {
  4436                           ;Main.c: 152: test_routine();
  4437  0043D6  ECF9  F011         	call	_test_routine	;wreg free
  4438                           
  4439                           ;Main.c: 153: }
  4440  0043DA  D013               	goto	l15175
  4441  0043DC                     l15161:
  4442                           
  4443                           ;Main.c: 154: else if(hg_op.working_mode == 0x03)
  4444  0043DC  0E03               	movlw	3
  4445  0043DE  0100               	movlb	0	; () banked
  4446  0043E0  1980               	xorwf	_hg_op& (0+255),w,b
  4447  0043E2  A4D8               	btfss	status,2,c
  4448  0043E4  D00E               	goto	l15175
  4449                           
  4450                           ; BSR set to: 0
  4451                           ;Main.c: 155: {
  4452                           ;Main.c: 156: if(T0IE == 0 || T0CONbits.TMR0ON == 0)
  4453  0043E6  BAF2               	btfsc	intcon,5,c	;volatile
  4454                           
  4455                           ; BSR set to: 0
  4456  0043E8  AED5               	btfss	4053,7,c	;volatile
  4457  0043EA  D001               	goto	l182
  4458  0043EC  D002               	goto	l15167
  4459  0043EE                     l182:
  4460                           
  4461                           ; BSR set to: 0
  4462  0043EE  8AF2               	bsf	intcon,5,c	;volatile
  4463  0043F0  8ED5               	bsf	4053,7,c	;volatile
  4464  0043F2                     l15167:
  4465                           
  4466                           ; BSR set to: 0
  4467                           ;Main.c: 159: }
  4468                           ;Main.c: 161: HG_interface();
  4469  0043F2  EC86  F024         	call	_HG_interface	;wreg free
  4470                           
  4471                           ;Main.c: 162: check_bat();
  4472  0043F6  EC1D  F026         	call	_check_bat	;wreg free
  4473                           
  4474                           ;Main.c: 163: check_ui_status();
  4475  0043FA  ECB2  F00D         	call	_check_ui_status	;wreg free
  4476                           
  4477                           ;Main.c: 164: check_shut_device();
  4478  0043FE  ECB1  F023         	call	_check_shut_device	;wreg free
  4479  004402                     l15175:
  4480                           
  4481                           ;Main.c: 170: }
  4482                           ;Main.c: 175: check_acting();
  4483  004402  EC2B  F023         	call	_check_acting	;wreg free
  4484                           
  4485                           ;Main.c: 180: check_ui_blink();
  4486  004406  EC2B  F027         	call	_check_ui_blink	;wreg free
  4487                           
  4488                           ;Main.c: 184: check_device_idle();
  4489  00440A  ECEC  F023         	call	_check_device_idle	;wreg free
  4490  00440E  D7C2               	goto	l15139
  4491  004410                     __end_of_main:
  4492                           	opt stack 0
  4493                           tblptru	equ	0xFF8
  4494                           tblptrh	equ	0xFF7
  4495                           tblptrl	equ	0xFF6
  4496                           tablat	equ	0xFF5
  4497                           intcon	equ	0xFF2
  4498                           postinc0	equ	0xFEE
  4499                           wreg	equ	0xFE8
  4500                           postdec1	equ	0xFE5
  4501                           fsr1h	equ	0xFE2
  4502                           fsr1l	equ	0xFE1
  4503                           status	equ	0xFD8
  4504                           
  4505 ;; *************** function _test_routine *****************
  4506 ;; Defined at:
  4507 ;;		line 687 in file "../MotorDrive.c"
  4508 ;; Parameters:    Size  Location     Type
  4509 ;;		None
  4510 ;; Auto vars:     Size  Location     Type
  4511 ;;  cnt_push        2   10[BANK1 ] unsigned int 
  4512 ;; Return value:  Size  Location     Type
  4513 ;;                  1    wreg      void 
  4514 ;; Registers used:
  4515 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4516 ;; Tracked objects:
  4517 ;;		On entry : 0/0
  4518 ;;		On exit  : 0/0
  4519 ;;		Unchanged: 0/0
  4520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4521 ;;      Params:         0       0       0       0       0       0       0
  4522 ;;      Locals:         0       0       2       0       0       0       0
  4523 ;;      Temps:          0       0       2       0       0       0       0
  4524 ;;      Totals:         0       0       4       0       0       0       0
  4525 ;;Total ram usage:        4 bytes
  4526 ;; Hardware stack levels used:    1
  4527 ;; Hardware stack levels required when called:    3
  4528 ;; This function calls:
  4529 ;;		___wmul
  4530 ;;		_delay_pwm
  4531 ;; This function is called by:
  4532 ;;		_main
  4533 ;; This function uses a non-reentrant model
  4534 ;;
  4535                           
  4536                           	psect	text1
  4537  0023F2                     __ptext1:
  4538                           	opt stack 0
  4539  0023F2                     _test_routine:
  4540                           	opt stack 27
  4541                           
  4542                           ;MotorDrive.c: 689: uint16_t cnt_push =0;
  4543                           
  4544                           ;incstack = 0
  4545  0023F2  0E00               	movlw	0
  4546  0023F4  0101               	movlb	1	; () banked
  4547  0023F6  6F33               	movwf	(test_routine@cnt_push+1)& (0+255),b
  4548  0023F8  0E00               	movlw	0
  4549  0023FA  6F32               	movwf	test_routine@cnt_push& (0+255),b
  4550                           
  4551                           ;MotorDrive.c: 707: else
  4552                           ;MotorDrive.c: 708: {
  4553                           ;MotorDrive.c: 709: if(hg_op.drops_sa == 1)
  4554                           
  4555                           ; BSR set to: 0
  4556                           
  4557                           ;MotorDrive.c: 706: }
  4558                           
  4559                           ; BSR set to: 0
  4560                           ;MotorDrive.c: 705: hg_op.need_reset =1;
  4561                           
  4562                           ; BSR set to: 0
  4563                           ;MotorDrive.c: 704: hg_op.working_mode = 0x03;
  4564                           
  4565                           ;MotorDrive.c: 703: hg_op.acting_flag =0;
  4566                           
  4567                           ;MotorDrive.c: 699: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4568                           
  4569                           ; BSR set to: 1
  4570                           ;MotorDrive.c: 698: delay_pwm(300 * 30);
  4571                           
  4572                           ; BSR set to: 1
  4573                           
  4574                           ; BSR set to: 1
  4575                           
  4576                           ; BSR set to: 1
  4577                           ;MotorDrive.c: 696: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  4578                           
  4579                           ; BSR set to: 1
  4580                           
  4581                           ;MotorDrive.c: 693: {
  4582                           ;MotorDrive.c: 694: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4583                           
  4584                           ;MotorDrive.c: 692: if(0)
  4585  0023FC  0100               	movlb	0	; () banked
  4586  0023FE  059F               	decf	(_hg_op+31)& (0+255),w,b
  4587  002400  A4D8               	btfss	status,2,c
  4588  002402  D04D               	goto	l14811
  4589                           
  4590                           ; BSR set to: 0
  4591                           ;MotorDrive.c: 710: {
  4592                           ;MotorDrive.c: 711: hg_op.cnt_posa =0;
  4593  002404  0E00               	movlw	0
  4594  002406  0100               	movlb	0	; () banked
  4595  002408  6FA6               	movwf	(_hg_op+38)& (0+255),b
  4596  00240A  0E00               	movlw	0
  4597  00240C  6FA5               	movwf	(_hg_op+37)& (0+255),b
  4598                           
  4599                           ; BSR set to: 0
  4600                           ;MotorDrive.c: 713: if( hg_op.needle_len == 13)
  4601  00240E  0E0D               	movlw	13
  4602  002410  0100               	movlb	0	; () banked
  4603  002412  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  4604  002414  A4D8               	btfss	status,2,c
  4605  002416  D00B               	goto	l533
  4606                           
  4607                           ; BSR set to: 0
  4608                           ;MotorDrive.c: 714: {
  4609                           ;MotorDrive.c: 716: LATDbits.LD2 =1;
  4610  002418  848C               	bsf	3980,2,c	;volatile
  4611                           
  4612                           ;MotorDrive.c: 717: LATDbits.LD4 =1;
  4613  00241A  888C               	bsf	3980,4,c	;volatile
  4614  00241C                     l14795:
  4615                           
  4616                           ; BSR set to: 0
  4617  00241C  0100               	movlb	0	; () banked
  4618  00241E  51A6               	movf	(_hg_op+38)& (0+255),w,b
  4619  002420  E11B               	bnz	l547
  4620  002422  0EBB               	movlw	187
  4621  002424  0100               	movlb	0	; () banked
  4622  002426  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  4623  002428  B0D8               	btfsc	status,0,c
  4624  00242A  D016               	goto	l547
  4625  00242C  D7F7               	goto	l14795
  4626  00242E                     l533:
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;MotorDrive.c: 721: else
  4630                           ;MotorDrive.c: 722: {
  4631                           ;MotorDrive.c: 723: LATDbits.LD2 =1;
  4632  00242E  848C               	bsf	3980,2,c	;volatile
  4633                           
  4634                           ;MotorDrive.c: 724: LATDbits.LD4 =1;
  4635  002430  888C               	bsf	3980,4,c	;volatile
  4636                           
  4637                           ;MotorDrive.c: 728: while(hg_op.cnt_posa < 20)
  4638  002432  D00A               	goto	l14801
  4639  002434                     l540:
  4640  002434  A481               	btfss	3969,2,c	;volatile
  4641  002436  D7FE               	goto	l540
  4642                           
  4643                           ;MotorDrive.c: 736: hg_op.cnt_posa ++;
  4644  002438  0100               	movlb	0	; () banked
  4645  00243A  4BA5               	infsnz	(_hg_op+37)& (0+255),f,b
  4646  00243C  2BA6               	incf	(_hg_op+38)& (0+255),f,b
  4647  00243E                     l543:
  4648  00243E  B481               	btfsc	3969,2,c	;volatile
  4649  002440  D7FE               	goto	l543
  4650                           
  4651                           ;MotorDrive.c: 738: hg_op.cnt_posa ++;
  4652  002442  0100               	movlb	0	; () banked
  4653  002444  4BA5               	infsnz	(_hg_op+37)& (0+255),f,b
  4654  002446  2BA6               	incf	(_hg_op+38)& (0+255),f,b
  4655  002448                     l14801:
  4656                           
  4657                           ; BSR set to: 0
  4658  002448  0100               	movlb	0	; () banked
  4659  00244A  51A6               	movf	(_hg_op+38)& (0+255),w,b
  4660  00244C  E105               	bnz	l547
  4661  00244E  0E14               	movlw	20
  4662  002450  0100               	movlb	0	; () banked
  4663  002452  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  4664  002454  A0D8               	btfss	status,0,c
  4665  002456  D7EE               	goto	l540
  4666  002458                     l547:
  4667                           
  4668                           ; BSR set to: 0
  4669  002458  888C               	bsf	3980,4,c	;volatile
  4670  00245A  948C               	bcf	3980,2,c	;volatile
  4671  00245C  968C               	bcf	3980,3,c	;volatile
  4672                           
  4673                           ; BSR set to: 0
  4674                           ;MotorDrive.c: 745: delay_pwm(hg_op.work_freq * 300);
  4675                           
  4676                           ; BSR set to: 0
  4677  00245E  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
  4678  002462  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
  4679  002466  0E01               	movlw	1
  4680  002468  0101               	movlb	1	; () banked
  4681  00246A  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4682  00246C  0E2C               	movlw	44
  4683  00246E  6F2A               	movwf	___wmul@multiplicand& (0+255),b
  4684  002470  EC63  F026         	call	___wmul	;wreg free
  4685  002474  0101               	movlb	1	; () banked
  4686  002476  C128  F12C         	movff	?___wmul,delay_pwm@n
  4687  00247A  0101               	movlb	1	; () banked
  4688  00247C  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
  4689  002480  0101               	movlb	1	; () banked
  4690  002482  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
  4691  002484  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
  4692  002486  EC7E  F026         	call	_delay_pwm	;wreg free
  4693                           
  4694                           ;MotorDrive.c: 747: hg_op.drops_sa = 0;
  4695  00248A  0E00               	movlw	0
  4696  00248C  0100               	movlb	0	; () banked
  4697  00248E  6F9F               	movwf	(_hg_op+31)& (0+255),b
  4698                           
  4699                           ; BSR set to: 0
  4700                           ;MotorDrive.c: 748: hg_op.drops_sb = 0;
  4701  002490  0E00               	movlw	0
  4702  002492  0100               	movlb	0	; () banked
  4703  002494  6FA0               	movwf	(_hg_op+32)& (0+255),b
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;MotorDrive.c: 749: hg_op.drops_push = 1;
  4707  002496  0E01               	movlw	1
  4708  002498  0100               	movlb	0	; () banked
  4709  00249A  6FA1               	movwf	(_hg_op+33)& (0+255),b
  4710                           
  4711                           ;MotorDrive.c: 750: }
  4712  00249C  0012               	return	
  4713  00249E                     l14811:
  4714                           
  4715                           ; BSR set to: 0
  4716                           ;MotorDrive.c: 751: else if(hg_op.drops_push == 1)
  4717  00249E  0100               	movlb	0	; () banked
  4718  0024A0  05A1               	decf	(_hg_op+33)& (0+255),w,b
  4719  0024A2  A4D8               	btfss	status,2,c
  4720  0024A4  D045               	goto	l14835
  4721                           
  4722                           ; BSR set to: 0
  4723                           ;MotorDrive.c: 752: {
  4724                           ;MotorDrive.c: 757: cnt_push =0;
  4725  0024A6  0E00               	movlw	0
  4726  0024A8  0101               	movlb	1	; () banked
  4727  0024AA  6F33               	movwf	(test_routine@cnt_push+1)& (0+255),b
  4728  0024AC  0E00               	movlw	0
  4729  0024AE  6F32               	movwf	test_routine@cnt_push& (0+255),b
  4730                           
  4731                           ; BSR set to: 1
  4732                           
  4733                           ; BSR set to: 1
  4734                           
  4735                           ;MotorDrive.c: 759: do{LATDbits.LD0 =1;LATDbits.LD1 =0; LATCbits.LC2 =1; }while(0);
  4736  0024B0  808C               	bsf	3980,0,c	;volatile
  4737                           
  4738                           ; BSR set to: 1
  4739  0024B2  928C               	bcf	3980,1,c	;volatile
  4740                           
  4741                           ; BSR set to: 1
  4742  0024B4  848B               	bsf	3979,2,c	;volatile
  4743                           
  4744                           ; BSR set to: 1
  4745                           ;MotorDrive.c: 762: while(cnt_push < hg_op.push_len)
  4746  0024B6  D00A               	goto	l14825
  4747  0024B8                     l555:
  4748  0024B8  A880               	btfss	3968,4,c	;volatile
  4749  0024BA  D7FE               	goto	l555
  4750                           
  4751                           ;MotorDrive.c: 765: cnt_push ++;
  4752  0024BC  0101               	movlb	1	; () banked
  4753  0024BE  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  4754  0024C0  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  4755  0024C2                     l558:
  4756  0024C2  B880               	btfsc	3968,4,c	;volatile
  4757  0024C4  D7FE               	goto	l558
  4758                           
  4759                           ;MotorDrive.c: 767: cnt_push ++;
  4760  0024C6  0101               	movlb	1	; () banked
  4761  0024C8  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  4762  0024CA  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  4763  0024CC                     l14825:
  4764                           
  4765                           ; BSR set to: 1
  4766  0024CC  0100               	movlb	0	; () banked
  4767  0024CE  519D               	movf	(_hg_op+29)& (0+255),w,b
  4768  0024D0  0101               	movlb	1	; () banked
  4769  0024D2  6F30               	movwf	??_test_routine& (0+255),b
  4770  0024D4  6B31               	clrf	(??_test_routine+1)& (0+255),b
  4771  0024D6  0101               	movlb	1	; () banked
  4772  0024D8  5130               	movf	??_test_routine& (0+255),w,b
  4773  0024DA  0101               	movlb	1	; () banked
  4774  0024DC  5D32               	subwf	test_routine@cnt_push& (0+255),w,b
  4775  0024DE  0101               	movlb	1	; () banked
  4776  0024E0  5131               	movf	(??_test_routine+1)& (0+255),w,b
  4777  0024E2  0101               	movlb	1	; () banked
  4778  0024E4  5933               	subwfb	(test_routine@cnt_push+1)& (0+255),w,b
  4779  0024E6  A0D8               	btfss	status,0,c
  4780  0024E8  D7E7               	goto	l555
  4781                           
  4782                           ; BSR set to: 1
  4783                           
  4784                           ; BSR set to: 1
  4785                           ;MotorDrive.c: 769: }
  4786                           ;MotorDrive.c: 772: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4787  0024EA  848B               	bsf	3979,2,c	;volatile
  4788  0024EC  908C               	bcf	3980,0,c	;volatile
  4789  0024EE  928C               	bcf	3980,1,c	;volatile
  4790                           
  4791                           ; BSR set to: 1
  4792                           ;MotorDrive.c: 777: delay_pwm(hg_op.work_freq * 300);
  4793                           
  4794                           ; BSR set to: 1
  4795  0024F0  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
  4796  0024F4  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
  4797  0024F8  0E01               	movlw	1
  4798  0024FA  0101               	movlb	1	; () banked
  4799  0024FC  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4800  0024FE  0E2C               	movlw	44
  4801  002500  6F2A               	movwf	___wmul@multiplicand& (0+255),b
  4802  002502  EC63  F026         	call	___wmul	;wreg free
  4803  002506  0101               	movlb	1	; () banked
  4804  002508  C128  F12C         	movff	?___wmul,delay_pwm@n
  4805  00250C  0101               	movlb	1	; () banked
  4806  00250E  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
  4807  002512  0101               	movlb	1	; () banked
  4808  002514  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
  4809  002516  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
  4810  002518  EC7E  F026         	call	_delay_pwm	;wreg free
  4811                           
  4812                           ;MotorDrive.c: 778: hg_op.drops_sa = 0;
  4813  00251C  0E00               	movlw	0
  4814  00251E  0100               	movlb	0	; () banked
  4815  002520  6F9F               	movwf	(_hg_op+31)& (0+255),b
  4816                           
  4817                           ; BSR set to: 0
  4818                           ;MotorDrive.c: 779: hg_op.drops_push = 0;
  4819  002522  0E00               	movlw	0
  4820  002524  0100               	movlb	0	; () banked
  4821  002526  6FA1               	movwf	(_hg_op+33)& (0+255),b
  4822                           
  4823                           ; BSR set to: 0
  4824                           ;MotorDrive.c: 780: hg_op.drops_sb = 1;
  4825  002528  0E01               	movlw	1
  4826  00252A  0100               	movlb	0	; () banked
  4827  00252C  6FA0               	movwf	(_hg_op+32)& (0+255),b
  4828                           
  4829                           ;MotorDrive.c: 783: }
  4830  00252E  0012               	return	
  4831  002530                     l14835:
  4832                           
  4833                           ; BSR set to: 0
  4834                           ;MotorDrive.c: 784: else if(hg_op.drops_sb == 1)
  4835  002530  0100               	movlb	0	; () banked
  4836  002532  05A0               	decf	(_hg_op+32)& (0+255),w,b
  4837  002534  A4D8               	btfss	status,2,c
  4838  002536  0012               	return	
  4839                           
  4840                           ; BSR set to: 0
  4841                           ;MotorDrive.c: 785: {
  4842                           ;MotorDrive.c: 786: hg_op.cnt_posb =0;
  4843  002538  0E00               	movlw	0
  4844  00253A  0100               	movlb	0	; () banked
  4845  00253C  6FA8               	movwf	(_hg_op+40)& (0+255),b
  4846  00253E  0E00               	movlw	0
  4847  002540  6FA7               	movwf	(_hg_op+39)& (0+255),b
  4848                           
  4849                           ; BSR set to: 0
  4850                           ;MotorDrive.c: 788: if(hg_op.needle_len == 13)
  4851  002542  0E0D               	movlw	13
  4852  002544  0100               	movlb	0	; () banked
  4853  002546  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  4854  002548  A4D8               	btfss	status,2,c
  4855  00254A  D005               	goto	l566
  4856                           
  4857                           ; BSR set to: 0
  4858                           ;MotorDrive.c: 789: {
  4859                           ;MotorDrive.c: 790: LATDbits.LD3 =1;
  4860  00254C  868C               	bsf	3980,3,c	;volatile
  4861                           
  4862                           ;MotorDrive.c: 791: LATDbits.LD4 =1;
  4863  00254E  888C               	bsf	3980,4,c	;volatile
  4864  002550                     l567:
  4865  002550  A081               	btfss	3969,0,c	;volatile
  4866  002552  D016               	goto	l580
  4867  002554  D7FD               	goto	l567
  4868  002556                     l566:
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;MotorDrive.c: 794: else
  4872                           ;MotorDrive.c: 795: {
  4873                           ;MotorDrive.c: 796: LATDbits.LD3 =1;
  4874  002556  868C               	bsf	3980,3,c	;volatile
  4875                           
  4876                           ;MotorDrive.c: 797: LATDbits.LD4 =1;
  4877  002558  888C               	bsf	3980,4,c	;volatile
  4878                           
  4879                           ;MotorDrive.c: 802: while(hg_op.cnt_posb < 20)
  4880  00255A  D00A               	goto	l14847
  4881  00255C                     l573:
  4882  00255C  A481               	btfss	3969,2,c	;volatile
  4883  00255E  D7FE               	goto	l573
  4884                           
  4885                           ;MotorDrive.c: 811: hg_op.cnt_posb ++;
  4886  002560  0100               	movlb	0	; () banked
  4887  002562  4BA7               	infsnz	(_hg_op+39)& (0+255),f,b
  4888  002564  2BA8               	incf	(_hg_op+40)& (0+255),f,b
  4889  002566                     l576:
  4890  002566  B481               	btfsc	3969,2,c	;volatile
  4891  002568  D7FE               	goto	l576
  4892                           
  4893                           ;MotorDrive.c: 813: hg_op.cnt_posb ++;
  4894  00256A  0100               	movlb	0	; () banked
  4895  00256C  4BA7               	infsnz	(_hg_op+39)& (0+255),f,b
  4896  00256E  2BA8               	incf	(_hg_op+40)& (0+255),f,b
  4897  002570                     l14847:
  4898                           
  4899                           ; BSR set to: 0
  4900  002570  0100               	movlb	0	; () banked
  4901  002572  51A8               	movf	(_hg_op+40)& (0+255),w,b
  4902  002574  E105               	bnz	l580
  4903  002576  0E14               	movlw	20
  4904  002578  0100               	movlb	0	; () banked
  4905  00257A  5DA7               	subwf	(_hg_op+39)& (0+255),w,b
  4906  00257C  A0D8               	btfss	status,0,c
  4907  00257E  D7EE               	goto	l573
  4908  002580                     l580:
  4909  002580  888C               	bsf	3980,4,c	;volatile
  4910  002582  948C               	bcf	3980,2,c	;volatile
  4911  002584  968C               	bcf	3980,3,c	;volatile
  4912                           
  4913                           ;MotorDrive.c: 826: delay_pwm(hg_op.work_freq * 300);
  4914  002586  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
  4915  00258A  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
  4916  00258E  0E01               	movlw	1
  4917  002590  0101               	movlb	1	; () banked
  4918  002592  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4919  002594  0E2C               	movlw	44
  4920  002596  6F2A               	movwf	___wmul@multiplicand& (0+255),b
  4921  002598  EC63  F026         	call	___wmul	;wreg free
  4922  00259C  0101               	movlb	1	; () banked
  4923  00259E  C128  F12C         	movff	?___wmul,delay_pwm@n
  4924  0025A2  0101               	movlb	1	; () banked
  4925  0025A4  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
  4926  0025A8  0101               	movlb	1	; () banked
  4927  0025AA  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
  4928  0025AC  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
  4929  0025AE  EC7E  F026         	call	_delay_pwm	;wreg free
  4930                           
  4931                           ;MotorDrive.c: 830: if(action_btn_cnt%2 == 0)
  4932  0025B2  0100               	movlb	0	; () banked
  4933  0025B4  B1D1               	btfsc	_action_btn_cnt& (0+255),0,b
  4934  0025B6  D038               	goto	l14867
  4935                           
  4936                           ; BSR set to: 0
  4937                           
  4938                           ;MotorDrive.c: 831: {
  4939                           ;MotorDrive.c: 832: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4940  0025B8  888C               	bsf	3980,4,c	;volatile
  4941  0025BA  948C               	bcf	3980,2,c	;volatile
  4942  0025BC  968C               	bcf	3980,3,c	;volatile
  4943                           
  4944                           ; BSR set to: 0
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;MotorDrive.c: 833: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4948  0025BE  848B               	bsf	3979,2,c	;volatile
  4949  0025C0  908C               	bcf	3980,0,c	;volatile
  4950  0025C2  928C               	bcf	3980,1,c	;volatile
  4951                           
  4952                           ; BSR set to: 0
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;MotorDrive.c: 835: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  4956  0025C4  908C               	bcf	3980,0,c	;volatile
  4957  0025C6  828C               	bsf	3980,1,c	;volatile
  4958  0025C8  848B               	bsf	3979,2,c	;volatile
  4959                           
  4960                           ; BSR set to: 0
  4961                           ;MotorDrive.c: 838: while(cnt_push < 14)
  4962  0025CA  D00A               	goto	l14857
  4963  0025CC                     l591:
  4964  0025CC  A880               	btfss	3968,4,c	;volatile
  4965  0025CE  D7FE               	goto	l591
  4966                           
  4967                           ;MotorDrive.c: 841: cnt_push ++;
  4968  0025D0  0101               	movlb	1	; () banked
  4969  0025D2  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  4970  0025D4  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  4971  0025D6                     l594:
  4972  0025D6  B880               	btfsc	3968,4,c	;volatile
  4973  0025D8  D7FE               	goto	l594
  4974                           
  4975                           ;MotorDrive.c: 843: cnt_push ++;
  4976  0025DA  0101               	movlb	1	; () banked
  4977  0025DC  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  4978  0025DE  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  4979  0025E0                     l14857:
  4980  0025E0  0101               	movlb	1	; () banked
  4981  0025E2  5133               	movf	(test_routine@cnt_push+1)& (0+255),w,b
  4982  0025E4  E105               	bnz	l598
  4983  0025E6  0E0E               	movlw	14
  4984  0025E8  0101               	movlb	1	; () banked
  4985  0025EA  5D32               	subwf	test_routine@cnt_push& (0+255),w,b
  4986  0025EC  A0D8               	btfss	status,0,c
  4987  0025EE  D7EE               	goto	l591
  4988  0025F0                     l598:
  4989                           
  4990                           ; BSR set to: 1
  4991  0025F0  848B               	bsf	3979,2,c	;volatile
  4992  0025F2  908C               	bcf	3980,0,c	;volatile
  4993  0025F4  928C               	bcf	3980,1,c	;volatile
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;MotorDrive.c: 849: hg_op.drops_sa = 0;
  4997                           
  4998                           ; BSR set to: 1
  4999  0025F6  0E00               	movlw	0
  5000  0025F8  0100               	movlb	0	; () banked
  5001  0025FA  6F9F               	movwf	(_hg_op+31)& (0+255),b
  5002                           
  5003                           ;MotorDrive.c: 850: hg_op.drops_sb = 0;
  5004  0025FC  0E00               	movlw	0
  5005  0025FE  0100               	movlb	0	; () banked
  5006  002600  6FA0               	movwf	(_hg_op+32)& (0+255),b
  5007                           
  5008                           ;MotorDrive.c: 851: hg_op.drops_push = 0;
  5009  002602  0E00               	movlw	0
  5010  002604  0100               	movlb	0	; () banked
  5011  002606  6FA1               	movwf	(_hg_op+33)& (0+255),b
  5012                           
  5013                           ;MotorDrive.c: 854: hg_op.acting_flag =0;
  5014  002608  0E00               	movlw	0
  5015  00260A  0100               	movlb	0	; () banked
  5016  00260C  6F9E               	movwf	(_hg_op+30)& (0+255),b
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;MotorDrive.c: 857: if(hg_op.needle_len == 13)
  5020  00260E  0E0D               	movlw	13
  5021  002610  0100               	movlb	0	; () banked
  5022  002612  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5023  002614  A4D8               	btfss	status,2,c
  5024  002616  D004               	goto	l14865
  5025                           
  5026                           ; BSR set to: 0
  5027                           ;MotorDrive.c: 858: {
  5028                           ;MotorDrive.c: 859: hg_op.need_reset =0;
  5029  002618  0E00               	movlw	0
  5030  00261A  0100               	movlb	0	; () banked
  5031  00261C  6F85               	movwf	(_hg_op+5)& (0+255),b
  5032                           
  5033                           ;MotorDrive.c: 860: }
  5034  00261E  0012               	return	
  5035  002620                     l14865:
  5036                           
  5037                           ; BSR set to: 0
  5038                           ;MotorDrive.c: 861: else
  5039                           ;MotorDrive.c: 862: {
  5040                           ;MotorDrive.c: 863: hg_op.need_reset =1;
  5041  002620  0E01               	movlw	1
  5042  002622  0100               	movlb	0	; () banked
  5043  002624  6F85               	movwf	(_hg_op+5)& (0+255),b
  5044                           
  5045                           ; BSR set to: 0
  5046                           ;MotorDrive.c: 864: }
  5047                           ;MotorDrive.c: 866: }
  5048  002626  0012               	return	
  5049  002628                     l14867:
  5050                           
  5051                           ; BSR set to: 0
  5052                           ;MotorDrive.c: 868: else
  5053                           ;MotorDrive.c: 869: {
  5054                           ;MotorDrive.c: 870: hg_op.drops_sb = 0;
  5055  002628  0E00               	movlw	0
  5056  00262A  0100               	movlb	0	; () banked
  5057  00262C  6FA0               	movwf	(_hg_op+32)& (0+255),b
  5058                           
  5059                           ;MotorDrive.c: 871: hg_op.drops_push =0;
  5060  00262E  0E00               	movlw	0
  5061  002630  0100               	movlb	0	; () banked
  5062  002632  6FA1               	movwf	(_hg_op+33)& (0+255),b
  5063                           
  5064                           ;MotorDrive.c: 872: hg_op.drops_sa = 1;
  5065  002634  0E01               	movlw	1
  5066  002636  0100               	movlb	0	; () banked
  5067  002638  6F9F               	movwf	(_hg_op+31)& (0+255),b
  5068                           
  5069                           ; BSR set to: 0
  5070                           
  5071                           ; BSR set to: 0
  5072                           
  5073                           ; BSR set to: 0
  5074                           
  5075                           ; BSR set to: 0
  5076  00263A  0012               	return	
  5077  00263C                     __end_of_test_routine:
  5078                           	opt stack 0
  5079                           tblptru	equ	0xFF8
  5080                           tblptrh	equ	0xFF7
  5081                           tblptrl	equ	0xFF6
  5082                           tablat	equ	0xFF5
  5083                           intcon	equ	0xFF2
  5084                           postinc0	equ	0xFEE
  5085                           wreg	equ	0xFE8
  5086                           postdec1	equ	0xFE5
  5087                           fsr1h	equ	0xFE2
  5088                           fsr1l	equ	0xFE1
  5089                           status	equ	0xFD8
  5090                           
  5091 ;; *************** function _initial_para_setting *****************
  5092 ;; Defined at:
  5093 ;;		line 1633 in file "../gui.c"
  5094 ;; Parameters:    Size  Location     Type
  5095 ;;		None
  5096 ;; Auto vars:     Size  Location     Type
  5097 ;;		None
  5098 ;; Return value:  Size  Location     Type
  5099 ;;                  1    wreg      void 
  5100 ;; Registers used:
  5101 ;;		wreg, status,2
  5102 ;; Tracked objects:
  5103 ;;		On entry : 0/0
  5104 ;;		On exit  : 0/0
  5105 ;;		Unchanged: 0/0
  5106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5107 ;;      Params:         0       0       0       0       0       0       0
  5108 ;;      Locals:         0       0       0       0       0       0       0
  5109 ;;      Temps:          0       0       0       0       0       0       0
  5110 ;;      Totals:         0       0       0       0       0       0       0
  5111 ;;Total ram usage:        0 bytes
  5112 ;; Hardware stack levels used:    1
  5113 ;; Hardware stack levels required when called:    2
  5114 ;; This function calls:
  5115 ;;		Nothing
  5116 ;; This function is called by:
  5117 ;;		_main
  5118 ;; This function uses a non-reentrant model
  5119 ;;
  5120                           
  5121                           	psect	text2
  5122  0049C0                     __ptext2:
  5123                           	opt stack 0
  5124  0049C0                     _initial_para_setting:
  5125                           	opt stack 28
  5126                           
  5127                           ;gui.c: 1637: hg_op.need_reset =0;
  5128                           
  5129                           ; BSR set to: 0
  5130                           ;incstack = 0
  5131  0049C0  0E00               	movlw	0
  5132  0049C2  0100               	movlb	0	; () banked
  5133  0049C4  6F85               	movwf	(_hg_op+5)& (0+255),b
  5134                           
  5135                           ;gui.c: 1639: hg_op.cur_working_mode = 0x00;
  5136  0049C6  0E00               	movlw	0
  5137  0049C8  0100               	movlb	0	; () banked
  5138  0049CA  6F81               	movwf	(_hg_op+1)& (0+255),b
  5139                           
  5140                           ;gui.c: 1640: hg_op.cnt_target_posrst = (789);
  5141  0049CC  0E03               	movlw	3
  5142  0049CE  0100               	movlb	0	; () banked
  5143  0049D0  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5144  0049D2  0E15               	movlw	21
  5145  0049D4  6FB7               	movwf	(_hg_op+55)& (0+255),b
  5146                           
  5147                           ;gui.c: 1641: hg_op.needle_len = 4;
  5148  0049D6  0E04               	movlw	4
  5149  0049D8  0100               	movlb	0	; () banked
  5150  0049DA  6F97               	movwf	(_hg_op+23)& (0+255),b
  5151                           
  5152                           ;gui.c: 1642: hg_op.status_powerup = 0x00;
  5153  0049DC  0E00               	movlw	0
  5154  0049DE  0100               	movlb	0	; () banked
  5155  0049E0  6F83               	movwf	(_hg_op+3)& (0+255),b
  5156                           
  5157                           ;gui.c: 1643: hg_op.working_mode = 0x03;
  5158  0049E2  0E03               	movlw	3
  5159  0049E4  0100               	movlb	0	; () banked
  5160  0049E6  6F80               	movwf	_hg_op& (0+255),b
  5161                           
  5162                           ;gui.c: 1645: hg_op.status_hit_lp = 0;
  5163  0049E8  0E00               	movlw	0
  5164  0049EA  0100               	movlb	0	; () banked
  5165  0049EC  6F86               	movwf	(_hg_op+6)& (0+255),b
  5166                           
  5167                           ;gui.c: 1647: hg_op.cnt_pos_1mm =0;
  5168  0049EE  0E00               	movlw	0
  5169  0049F0  0100               	movlb	0	; () banked
  5170  0049F2  6FAA               	movwf	(_hg_op+42)& (0+255),b
  5171  0049F4  0E00               	movlw	0
  5172  0049F6  6FA9               	movwf	(_hg_op+41)& (0+255),b
  5173                           
  5174                           ;gui.c: 1648: hg_op.cnt_pos_nmm = 0;
  5175  0049F8  0E00               	movlw	0
  5176  0049FA  0100               	movlb	0	; () banked
  5177  0049FC  6FAE               	movwf	(_hg_op+46)& (0+255),b
  5178  0049FE  0E00               	movlw	0
  5179  004A00  6FAD               	movwf	(_hg_op+45)& (0+255),b
  5180                           
  5181                           ;gui.c: 1649: hg_op.cnt_pos_nmm_target = (236);
  5182  004A02  0E00               	movlw	0
  5183  004A04  0100               	movlb	0	; () banked
  5184  004A06  6FB4               	movwf	(_hg_op+52)& (0+255),b
  5185  004A08  0EEC               	movlw	236
  5186  004A0A  6FB3               	movwf	(_hg_op+51)& (0+255),b
  5187                           
  5188                           ;gui.c: 1650: hg_op.inject_len = 1;
  5189  004A0C  0E00               	movlw	0
  5190  004A0E  0100               	movlb	0	; () banked
  5191  004A10  6F99               	movwf	(_hg_op+25)& (0+255),b
  5192  004A12  0E01               	movlw	1
  5193  004A14  6F98               	movwf	(_hg_op+24)& (0+255),b
  5194                           
  5195                           ; BSR set to: 0
  5196  004A16  0012               	return		;funcret
  5197  004A18                     __end_of_initial_para_setting:
  5198                           	opt stack 0
  5199                           tblptru	equ	0xFF8
  5200                           tblptrh	equ	0xFF7
  5201                           tblptrl	equ	0xFF6
  5202                           tablat	equ	0xFF5
  5203                           intcon	equ	0xFF2
  5204                           postinc0	equ	0xFEE
  5205                           wreg	equ	0xFE8
  5206                           postdec1	equ	0xFE5
  5207                           fsr1h	equ	0xFE2
  5208                           fsr1l	equ	0xFE1
  5209                           status	equ	0xFD8
  5210                           
  5211 ;; *************** function _hg_reset *****************
  5212 ;; Defined at:
  5213 ;;		line 158 in file "../MotorDrive.c"
  5214 ;; Parameters:    Size  Location     Type
  5215 ;;		None
  5216 ;; Auto vars:     Size  Location     Type
  5217 ;;		None
  5218 ;; Return value:  Size  Location     Type
  5219 ;;                  1    wreg      void 
  5220 ;; Registers used:
  5221 ;;		wreg, status,2, status,0, cstack
  5222 ;; Tracked objects:
  5223 ;;		On entry : 0/0
  5224 ;;		On exit  : 0/0
  5225 ;;		Unchanged: 0/0
  5226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5227 ;;      Params:         0       0       0       0       0       0       0
  5228 ;;      Locals:         0       0       0       0       0       0       0
  5229 ;;      Temps:          0       0       0       0       0       0       0
  5230 ;;      Totals:         0       0       0       0       0       0       0
  5231 ;;Total ram usage:        0 bytes
  5232 ;; Hardware stack levels used:    1
  5233 ;; Hardware stack levels required when called:    3
  5234 ;; This function calls:
  5235 ;;		_delaynus
  5236 ;; This function is called by:
  5237 ;;		_main
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text3
  5242  0032D4                     __ptext3:
  5243                           	opt stack 0
  5244  0032D4                     _hg_reset:
  5245                           	opt stack 27
  5246                           
  5247                           ;MotorDrive.c: 161: if(PORTBbits.RB0 == 0 || hg_op.needle_len == 13)
  5248                           
  5249                           ; BSR set to: 0
  5250                           ;incstack = 0
  5251  0032D4  A081               	btfss	3969,0,c	;volatile
  5252  0032D6  D005               	goto	l14427
  5253  0032D8  0E0D               	movlw	13
  5254  0032DA  0100               	movlb	0	; () banked
  5255  0032DC  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5256  0032DE  A4D8               	btfss	status,2,c
  5257  0032E0  D05A               	goto	l14447
  5258  0032E2                     l14427:
  5259                           
  5260                           ;MotorDrive.c: 164: {
  5261                           ;MotorDrive.c: 165: hg_op.posrst = 0;
  5262  0032E2  0E00               	movlw	0
  5263  0032E4  0100               	movlb	0	; () banked
  5264  0032E6  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5265                           
  5266                           ;MotorDrive.c: 166: hg_op.cnt_posrst =0;
  5267  0032E8  0E00               	movlw	0
  5268  0032EA  0100               	movlb	0	; () banked
  5269  0032EC  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5270  0032EE  0E00               	movlw	0
  5271  0032F0  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5272                           
  5273                           ;MotorDrive.c: 167: hg_op.cnt_target_posrst = 600;
  5274  0032F2  0E02               	movlw	2
  5275  0032F4  0100               	movlb	0	; () banked
  5276  0032F6  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5277  0032F8  0E58               	movlw	88
  5278  0032FA  6FB7               	movwf	(_hg_op+55)& (0+255),b
  5279                           
  5280                           ;MotorDrive.c: 168: hg_op.in_reset = 1;
  5281  0032FC  0E01               	movlw	1
  5282  0032FE  0100               	movlb	0	; () banked
  5283  003300  6F90               	movwf	(_hg_op+16)& (0+255),b
  5284                           
  5285                           ; BSR set to: 0
  5286                           
  5287                           ; BSR set to: 0
  5288                           
  5289                           ;MotorDrive.c: 171: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  5290  003302  848C               	bsf	3980,2,c	;volatile
  5291                           
  5292                           ; BSR set to: 0
  5293  003304  968C               	bcf	3980,3,c	;volatile
  5294                           
  5295                           ; BSR set to: 0
  5296  003306  888C               	bsf	3980,4,c	;volatile
  5297                           
  5298                           ; BSR set to: 0
  5299                           ;MotorDrive.c: 172: while(hg_op.cnt_posrst < 200)
  5300  003308  D02C               	goto	l14439
  5301  00330A                     l298:
  5302                           
  5303                           ; BSR set to: 0
  5304                           ;MotorDrive.c: 173: {
  5305                           ;MotorDrive.c: 174: LATDbits.LD2 =1;
  5306  00330A  848C               	bsf	3980,2,c	;volatile
  5307                           
  5308                           ; BSR set to: 0
  5309                           ;MotorDrive.c: 175: delaynus(10); delaynus(10); delaynus(10); delaynus(10); delaynus(10)
      +                          ;
  5310  00330C  0E00               	movlw	0
  5311  00330E  0100               	movlb	0	; () banked
  5312  003310  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5313  003312  0E0A               	movlw	10
  5314  003314  6FFD               	movwf	delaynus@n& (0+255),b
  5315  003316  ECEB  F026         	call	_delaynus	;wreg free
  5316  00331A  0E00               	movlw	0
  5317  00331C  0100               	movlb	0	; () banked
  5318  00331E  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5319  003320  0E0A               	movlw	10
  5320  003322  6FFD               	movwf	delaynus@n& (0+255),b
  5321  003324  ECEB  F026         	call	_delaynus	;wreg free
  5322  003328  0E00               	movlw	0
  5323  00332A  0100               	movlb	0	; () banked
  5324  00332C  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5325  00332E  0E0A               	movlw	10
  5326  003330  6FFD               	movwf	delaynus@n& (0+255),b
  5327  003332  ECEB  F026         	call	_delaynus	;wreg free
  5328  003336  0E00               	movlw	0
  5329  003338  0100               	movlb	0	; () banked
  5330  00333A  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5331  00333C  0E0A               	movlw	10
  5332  00333E  6FFD               	movwf	delaynus@n& (0+255),b
  5333  003340  ECEB  F026         	call	_delaynus	;wreg free
  5334  003344  0E00               	movlw	0
  5335  003346  0100               	movlb	0	; () banked
  5336  003348  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5337  00334A  0E0A               	movlw	10
  5338  00334C  6FFD               	movwf	delaynus@n& (0+255),b
  5339  00334E  ECEB  F026         	call	_delaynus	;wreg free
  5340                           
  5341                           ;MotorDrive.c: 176: LATDbits.LD2 =0;
  5342  003352  948C               	bcf	3980,2,c	;volatile
  5343                           
  5344                           ;MotorDrive.c: 177: delaynus(10);
  5345  003354  0E00               	movlw	0
  5346  003356  0100               	movlb	0	; () banked
  5347  003358  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5348  00335A  0E0A               	movlw	10
  5349  00335C  6FFD               	movwf	delaynus@n& (0+255),b
  5350  00335E  ECEB  F026         	call	_delaynus	;wreg free
  5351  003362                     l14439:
  5352  003362  0100               	movlb	0	; () banked
  5353  003364  51B6               	movf	(_hg_op+54)& (0+255),w,b
  5354  003366  E105               	bnz	l300
  5355  003368  0EC8               	movlw	200
  5356  00336A  0100               	movlb	0	; () banked
  5357  00336C  5DB5               	subwf	(_hg_op+53)& (0+255),w,b
  5358  00336E  A0D8               	btfss	status,0,c
  5359  003370  D7CC               	goto	l298
  5360  003372                     l300:
  5361                           
  5362                           ; BSR set to: 0
  5363  003372  888C               	bsf	3980,4,c	;volatile
  5364  003374  948C               	bcf	3980,2,c	;volatile
  5365  003376  968C               	bcf	3980,3,c	;volatile
  5366                           
  5367                           ; BSR set to: 0
  5368                           ;MotorDrive.c: 182: delaynus(50 * 1000);
  5369                           
  5370                           ; BSR set to: 0
  5371  003378  0EC3               	movlw	195
  5372  00337A  0100               	movlb	0	; () banked
  5373  00337C  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5374  00337E  0E50               	movlw	80
  5375  003380  6FFD               	movwf	delaynus@n& (0+255),b
  5376  003382  ECEB  F026         	call	_delaynus	;wreg free
  5377                           
  5378                           ;MotorDrive.c: 183: hg_op.posrst = 0;
  5379  003386  0E00               	movlw	0
  5380  003388  0100               	movlb	0	; () banked
  5381  00338A  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5382                           
  5383                           ; BSR set to: 0
  5384                           ;MotorDrive.c: 184: hg_op.cnt_posrst =0;
  5385  00338C  0E00               	movlw	0
  5386  00338E  0100               	movlb	0	; () banked
  5387  003390  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5388  003392  0E00               	movlw	0
  5389  003394  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5390  003396                     l14447:
  5391                           
  5392                           ; BSR set to: 0
  5393                           ;MotorDrive.c: 191: }
  5394                           ;MotorDrive.c: 193: if(hg_op.needle_len == 4)
  5395  003396  0E04               	movlw	4
  5396  003398  0100               	movlb	0	; () banked
  5397  00339A  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5398  00339C  A4D8               	btfss	status,2,c
  5399  00339E  D005               	goto	l14451
  5400                           
  5401                           ; BSR set to: 0
  5402                           ;MotorDrive.c: 194: {
  5403                           ;MotorDrive.c: 195: hg_op.cnt_target_posrst = (789);
  5404  0033A0  0E03               	movlw	3
  5405  0033A2  0100               	movlb	0	; () banked
  5406  0033A4  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5407  0033A6  0E15               	movlw	21
  5408  0033A8  D013               	goto	L2
  5409  0033AA                     l14451:
  5410                           
  5411                           ; BSR set to: 0
  5412                           ;MotorDrive.c: 197: else if(hg_op.needle_len == 6)
  5413  0033AA  0E06               	movlw	6
  5414  0033AC  0100               	movlb	0	; () banked
  5415  0033AE  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5416  0033B0  A4D8               	btfss	status,2,c
  5417  0033B2  D005               	goto	l14455
  5418                           
  5419                           ; BSR set to: 0
  5420                           ;MotorDrive.c: 198: {
  5421                           ;MotorDrive.c: 199: hg_op.cnt_target_posrst = (614 );
  5422  0033B4  0E02               	movlw	2
  5423  0033B6  0100               	movlb	0	; () banked
  5424  0033B8  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5425  0033BA  0E66               	movlw	102
  5426  0033BC  D009               	goto	L2
  5427  0033BE                     l14455:
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;MotorDrive.c: 201: else if(hg_op.needle_len == 13)
  5431  0033BE  0E0D               	movlw	13
  5432  0033C0  0100               	movlb	0	; () banked
  5433  0033C2  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5434  0033C4  A4D8               	btfss	status,2,c
  5435  0033C6  D005               	goto	l303
  5436                           
  5437                           ; BSR set to: 0
  5438                           ;MotorDrive.c: 202: {
  5439                           ;MotorDrive.c: 203: hg_op.cnt_target_posrst = (1);
  5440  0033C8  0E00               	movlw	0
  5441  0033CA  0100               	movlb	0	; () banked
  5442  0033CC  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5443  0033CE  0E01               	movlw	1
  5444  0033D0                     L2:
  5445  0033D0  6FB7               	movwf	(_hg_op+55)& (0+255),b
  5446  0033D2                     l303:
  5447                           
  5448                           ; BSR set to: 0
  5449                           ;MotorDrive.c: 204: }
  5450                           ;MotorDrive.c: 209: hg_op.status_hit_lp = 0;
  5451  0033D2  0E00               	movlw	0
  5452  0033D4  0100               	movlb	0	; () banked
  5453  0033D6  6F86               	movwf	(_hg_op+6)& (0+255),b
  5454                           
  5455                           ; BSR set to: 0
  5456                           ;MotorDrive.c: 210: LATDbits.LD4 =1;LATDbits.LD2 =0;
  5457  0033D8  888C               	bsf	3980,4,c	;volatile
  5458                           
  5459                           ; BSR set to: 0
  5460  0033DA  948C               	bcf	3980,2,c	;volatile
  5461                           
  5462                           ;MotorDrive.c: 211: while(hg_op.status_hit_lp == 0)
  5463  0033DC  D010               	goto	l14467
  5464  0033DE                     l308:
  5465                           
  5466                           ; BSR set to: 0
  5467                           ;MotorDrive.c: 212: {
  5468                           ;MotorDrive.c: 213: LATDbits.LD3 =1;
  5469  0033DE  868C               	bsf	3980,3,c	;volatile
  5470                           
  5471                           ; BSR set to: 0
  5472                           ;MotorDrive.c: 214: delaynus(540*2);
  5473  0033E0  0E04               	movlw	4
  5474  0033E2  0100               	movlb	0	; () banked
  5475  0033E4  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5476  0033E6  0E38               	movlw	56
  5477  0033E8  6FFD               	movwf	delaynus@n& (0+255),b
  5478  0033EA  ECEB  F026         	call	_delaynus	;wreg free
  5479                           
  5480                           ;MotorDrive.c: 215: LATDbits.LD3 =0;
  5481  0033EE  968C               	bcf	3980,3,c	;volatile
  5482                           
  5483                           ;MotorDrive.c: 216: delaynus(460*2);
  5484  0033F0  0E03               	movlw	3
  5485  0033F2  0100               	movlb	0	; () banked
  5486  0033F4  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5487  0033F6  0E98               	movlw	152
  5488  0033F8  6FFD               	movwf	delaynus@n& (0+255),b
  5489  0033FA  ECEB  F026         	call	_delaynus	;wreg free
  5490  0033FE                     l14467:
  5491  0033FE  0100               	movlb	0	; () banked
  5492  003400  5186               	movf	(_hg_op+6)& (0+255),w,b
  5493  003402  B4D8               	btfsc	status,2,c
  5494  003404  D7EC               	goto	l308
  5495                           
  5496                           ; BSR set to: 0
  5497                           
  5498                           ; BSR set to: 0
  5499                           
  5500                           ;MotorDrive.c: 218: }
  5501                           ;MotorDrive.c: 220: do{do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);del
      +                          aynus(15*1000);do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);}while(0);
  5502                           
  5503                           ; BSR set to: 0
  5504  003406  848C               	bsf	3980,2,c	;volatile
  5505  003408  968C               	bcf	3980,3,c	;volatile
  5506  00340A  888C               	bsf	3980,4,c	;volatile
  5507                           
  5508                           ; BSR set to: 0
  5509                           
  5510                           ; BSR set to: 0
  5511  00340C  0E3A               	movlw	58
  5512  00340E  0100               	movlb	0	; () banked
  5513  003410  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5514  003412  0E98               	movlw	152
  5515  003414  6FFD               	movwf	delaynus@n& (0+255),b
  5516  003416  ECEB  F026         	call	_delaynus	;wreg free
  5517  00341A  888C               	bsf	3980,4,c	;volatile
  5518  00341C  948C               	bcf	3980,2,c	;volatile
  5519  00341E  968C               	bcf	3980,3,c	;volatile
  5520                           
  5521                           ;MotorDrive.c: 222: if(hg_op.needle_len == 13)
  5522  003420  0E0D               	movlw	13
  5523  003422  0100               	movlb	0	; () banked
  5524  003424  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5525  003426  A4D8               	btfss	status,2,c
  5526  003428  D004               	goto	l316
  5527                           
  5528                           ; BSR set to: 0
  5529                           ;MotorDrive.c: 223: {
  5530                           ;MotorDrive.c: 224: hg_op.need_reset =0;
  5531  00342A  0E00               	movlw	0
  5532  00342C  0100               	movlb	0	; () banked
  5533  00342E  6F85               	movwf	(_hg_op+5)& (0+255),b
  5534                           
  5535                           ;MotorDrive.c: 225: }
  5536  003430  0012               	return	
  5537  003432                     l316:
  5538                           
  5539                           ; BSR set to: 0
  5540                           ;MotorDrive.c: 226: else
  5541                           ;MotorDrive.c: 227: {
  5542                           ;MotorDrive.c: 228: LATDbits.LD4 =1;LATDbits.LD3 =0;
  5543  003432  888C               	bsf	3980,4,c	;volatile
  5544  003434  968C               	bcf	3980,3,c	;volatile
  5545                           
  5546                           ; BSR set to: 0
  5547                           ;MotorDrive.c: 229: hg_op.posrst = 0;
  5548  003436  0E00               	movlw	0
  5549  003438  0100               	movlb	0	; () banked
  5550  00343A  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5551                           
  5552                           ;MotorDrive.c: 230: hg_op.cnt_posrst =0;
  5553  00343C  0E00               	movlw	0
  5554  00343E  0100               	movlb	0	; () banked
  5555  003440  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5556  003442  0E00               	movlw	0
  5557  003444  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5558                           
  5559                           ;MotorDrive.c: 231: hg_op.in_reset = 1;
  5560  003446  0E01               	movlw	1
  5561  003448  0100               	movlb	0	; () banked
  5562  00344A  6F90               	movwf	(_hg_op+16)& (0+255),b
  5563                           
  5564                           ;MotorDrive.c: 232: while(hg_op.cnt_posrst < hg_op.cnt_target_posrst)
  5565  00344C  D010               	goto	l14487
  5566  00344E                     l319:
  5567                           
  5568                           ; BSR set to: 0
  5569                           ;MotorDrive.c: 233: {
  5570                           ;MotorDrive.c: 234: LATDbits.LD2 =1;
  5571  00344E  848C               	bsf	3980,2,c	;volatile
  5572                           
  5573                           ; BSR set to: 0
  5574                           ;MotorDrive.c: 235: delaynus(300*2);
  5575  003450  0E02               	movlw	2
  5576  003452  0100               	movlb	0	; () banked
  5577  003454  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5578  003456  0E58               	movlw	88
  5579  003458  6FFD               	movwf	delaynus@n& (0+255),b
  5580  00345A  ECEB  F026         	call	_delaynus	;wreg free
  5581                           
  5582                           ;MotorDrive.c: 237: LATDbits.LD2 =0;
  5583  00345E  948C               	bcf	3980,2,c	;volatile
  5584                           
  5585                           ;MotorDrive.c: 238: delaynus(700*2);
  5586  003460  0E05               	movlw	5
  5587  003462  0100               	movlb	0	; () banked
  5588  003464  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5589  003466  0E78               	movlw	120
  5590  003468  6FFD               	movwf	delaynus@n& (0+255),b
  5591  00346A  ECEB  F026         	call	_delaynus	;wreg free
  5592  00346E                     l14487:
  5593  00346E  0100               	movlb	0	; () banked
  5594  003470  51B7               	movf	(_hg_op+55)& (0+255),w,b
  5595  003472  0100               	movlb	0	; () banked
  5596  003474  5DB5               	subwf	(_hg_op+53)& (0+255),w,b
  5597  003476  0100               	movlb	0	; () banked
  5598  003478  51B8               	movf	(_hg_op+56)& (0+255),w,b
  5599  00347A  0100               	movlb	0	; () banked
  5600  00347C  59B6               	subwfb	(_hg_op+54)& (0+255),w,b
  5601  00347E  A0D8               	btfss	status,0,c
  5602  003480  D7E6               	goto	l319
  5603                           
  5604                           ; BSR set to: 0
  5605                           
  5606                           ; BSR set to: 0
  5607                           
  5608                           ;MotorDrive.c: 240: }
  5609                           ;MotorDrive.c: 244: do{do{LATDbits.LD2 =0;LATDbits.LD3 =1; LATDbits.LD4 =1;}while(0);del
      +                          aynus(15*1000);do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);}while(0);
  5610                           
  5611                           ; BSR set to: 0
  5612  003482  948C               	bcf	3980,2,c	;volatile
  5613  003484  868C               	bsf	3980,3,c	;volatile
  5614  003486  888C               	bsf	3980,4,c	;volatile
  5615                           
  5616                           ; BSR set to: 0
  5617                           
  5618                           ; BSR set to: 0
  5619  003488  0E3A               	movlw	58
  5620  00348A  0100               	movlb	0	; () banked
  5621  00348C  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5622  00348E  0E98               	movlw	152
  5623  003490  6FFD               	movwf	delaynus@n& (0+255),b
  5624  003492  ECEB  F026         	call	_delaynus	;wreg free
  5625  003496  888C               	bsf	3980,4,c	;volatile
  5626  003498  948C               	bcf	3980,2,c	;volatile
  5627  00349A  968C               	bcf	3980,3,c	;volatile
  5628                           
  5629                           ;MotorDrive.c: 252: hg_op.need_reset =0;
  5630  00349C  0E00               	movlw	0
  5631  00349E  0100               	movlb	0	; () banked
  5632  0034A0  6F85               	movwf	(_hg_op+5)& (0+255),b
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;MotorDrive.c: 253: hg_op.in_reset = 0;
  5636  0034A2  0E00               	movlw	0
  5637  0034A4  0100               	movlb	0	; () banked
  5638  0034A6  6F90               	movwf	(_hg_op+16)& (0+255),b
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;MotorDrive.c: 254: hg_op.status_hit_lp =0;
  5642  0034A8  0E00               	movlw	0
  5643  0034AA  0100               	movlb	0	; () banked
  5644  0034AC  6F86               	movwf	(_hg_op+6)& (0+255),b
  5645                           
  5646                           ; BSR set to: 0
  5647                           ;MotorDrive.c: 255: hg_op.cnt_posrst =0;
  5648  0034AE  0E00               	movlw	0
  5649  0034B0  0100               	movlb	0	; () banked
  5650  0034B2  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5651  0034B4  0E00               	movlw	0
  5652  0034B6  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5653                           
  5654                           ; BSR set to: 0
  5655                           ;MotorDrive.c: 256: hg_op.posrst =0;
  5656  0034B8  0E00               	movlw	0
  5657  0034BA  0100               	movlb	0	; () banked
  5658  0034BC  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5659                           
  5660                           ; BSR set to: 0
  5661                           
  5662                           ; BSR set to: 0
  5663                           
  5664                           ;MotorDrive.c: 260: do{T0IE=1;T0CONbits.TMR0ON =1;}while(0);
  5665  0034BE  8AF2               	bsf	intcon,5,c	;volatile
  5666                           
  5667                           ; BSR set to: 0
  5668  0034C0  8ED5               	bsf	4053,7,c	;volatile
  5669                           
  5670                           ; BSR set to: 0
  5671  0034C2  0012               	return	
  5672  0034C4                     __end_of_hg_reset:
  5673                           	opt stack 0
  5674                           tblptru	equ	0xFF8
  5675                           tblptrh	equ	0xFF7
  5676                           tblptrl	equ	0xFF6
  5677                           tablat	equ	0xFF5
  5678                           intcon	equ	0xFF2
  5679                           postinc0	equ	0xFEE
  5680                           wreg	equ	0xFE8
  5681                           postdec1	equ	0xFE5
  5682                           fsr1h	equ	0xFE2
  5683                           fsr1l	equ	0xFE1
  5684                           status	equ	0xFD8
  5685                           
  5686 ;; *************** function _enter_sleep *****************
  5687 ;; Defined at:
  5688 ;;		line 1548 in file "../gui.c"
  5689 ;; Parameters:    Size  Location     Type
  5690 ;;		None
  5691 ;; Auto vars:     Size  Location     Type
  5692 ;;  temp            1   17[BANK1 ] unsigned char 
  5693 ;; Return value:  Size  Location     Type
  5694 ;;                  1    wreg      void 
  5695 ;; Registers used:
  5696 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5697 ;; Tracked objects:
  5698 ;;		On entry : 0/0
  5699 ;;		On exit  : 0/0
  5700 ;;		Unchanged: 0/0
  5701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5702 ;;      Params:         0       0       0       0       0       0       0
  5703 ;;      Locals:         0       0       1       0       0       0       0
  5704 ;;      Temps:          0       0       0       0       0       0       0
  5705 ;;      Totals:         0       0       1       0       0       0       0
  5706 ;;Total ram usage:        1 bytes
  5707 ;; Hardware stack levels used:    1
  5708 ;; Hardware stack levels required when called:    9
  5709 ;; This function calls:
  5710 ;;		_check_wake_button
  5711 ;;		_delaynus
  5712 ;; This function is called by:
  5713 ;;		_main
  5714 ;; This function uses a non-reentrant model
  5715 ;;
  5716                           
  5717                           	psect	text4
  5718  004410                     __ptext4:
  5719                           	opt stack 0
  5720  004410                     _enter_sleep:
  5721                           	opt stack 21
  5722                           
  5723                           ;gui.c: 1550: uint8_t temp=0;
  5724                           
  5725                           ; BSR set to: 0
  5726                           ;incstack = 0
  5727  004410  0E00               	movlw	0
  5728  004412  0101               	movlb	1	; () banked
  5729  004414  6F39               	movwf	enter_sleep@temp& (0+255),b
  5730                           
  5731                           ;gui.c: 1555: if( hg_op.status_powerup == 0x00)
  5732  004416  0100               	movlb	0	; () banked
  5733  004418  5183               	movf	(_hg_op+3)& (0+255),w,b
  5734  00441A  A4D8               	btfss	status,2,c
  5735  00441C  0012               	return	
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;gui.c: 1557: {
  5739                           ;gui.c: 1559: if(hg_op.needle_len == 13)
  5740  00441E  0E0D               	movlw	13
  5741  004420  0100               	movlb	0	; () banked
  5742  004422  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5743  004424  A4D8               	btfss	status,2,c
  5744  004426  D01D               	goto	l14389
  5745                           
  5746                           ; BSR set to: 0
  5747                           
  5748                           ;gui.c: 1560: {
  5749                           ;gui.c: 1561: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  5750  004428  848C               	bsf	3980,2,c	;volatile
  5751  00442A  968C               	bcf	3980,3,c	;volatile
  5752  00442C  888C               	bsf	3980,4,c	;volatile
  5753                           
  5754                           ; BSR set to: 0
  5755                           ;gui.c: 1563: temp =0;
  5756                           
  5757                           ; BSR set to: 0
  5758  00442E  0E00               	movlw	0
  5759  004430  0101               	movlb	1	; () banked
  5760  004432  6F39               	movwf	enter_sleep@temp& (0+255),b
  5761                           
  5762                           ;gui.c: 1565: while(temp < 200)
  5763  004434  D008               	goto	l14385
  5764  004436                     l1880:
  5765  004436  A481               	btfss	3969,2,c	;volatile
  5766  004438  D7FE               	goto	l1880
  5767                           
  5768                           ;gui.c: 1569: temp ++;
  5769  00443A  0101               	movlb	1	; () banked
  5770  00443C  2B39               	incf	enter_sleep@temp& (0+255),f,b
  5771  00443E                     l1883:
  5772  00443E  B481               	btfsc	3969,2,c	;volatile
  5773  004440  D7FE               	goto	l1883
  5774                           
  5775                           ;gui.c: 1572: temp ++;
  5776  004442  0101               	movlb	1	; () banked
  5777  004444  2B39               	incf	enter_sleep@temp& (0+255),f,b
  5778  004446                     l14385:
  5779                           
  5780                           ; BSR set to: 1
  5781  004446  0EC7               	movlw	199
  5782  004448  0101               	movlb	1	; () banked
  5783  00444A  6539               	cpfsgt	enter_sleep@temp& (0+255),b
  5784  00444C  D7F4               	goto	l1880
  5785                           
  5786                           ; BSR set to: 1
  5787                           
  5788                           ; BSR set to: 1
  5789                           ;gui.c: 1574: }
  5790                           ;gui.c: 1575: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  5791  00444E  888C               	bsf	3980,4,c	;volatile
  5792  004450  948C               	bcf	3980,2,c	;volatile
  5793  004452  968C               	bcf	3980,3,c	;volatile
  5794                           
  5795                           ; BSR set to: 1
  5796                           ;gui.c: 1576: delaynus(50*1000);
  5797                           
  5798                           ; BSR set to: 1
  5799  004454  0EC3               	movlw	195
  5800  004456  0100               	movlb	0	; () banked
  5801  004458  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5802  00445A  0E50               	movlw	80
  5803  00445C  6FFD               	movwf	delaynus@n& (0+255),b
  5804  00445E  ECEB  F026         	call	_delaynus	;wreg free
  5805  004462                     l14389:
  5806  004462  848B               	bsf	3979,2,c	;volatile
  5807  004464  908C               	bcf	3980,0,c	;volatile
  5808  004466  928C               	bcf	3980,1,c	;volatile
  5809                           
  5810                           ;gui.c: 1583: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  5811  004468  888C               	bsf	3980,4,c	;volatile
  5812  00446A  948C               	bcf	3980,2,c	;volatile
  5813  00446C  968C               	bcf	3980,3,c	;volatile
  5814                           
  5815                           ;gui.c: 1585: LATCbits.LC2 =0;
  5816  00446E  948B               	bcf	3979,2,c	;volatile
  5817                           
  5818                           ;gui.c: 1586: LATDbits.LD4 =0;
  5819  004470  988C               	bcf	3980,4,c	;volatile
  5820                           
  5821                           ;gui.c: 1590: hg_op.needle_len = 4;
  5822  004472  0E04               	movlw	4
  5823  004474  0100               	movlb	0	; () banked
  5824  004476  6F97               	movwf	(_hg_op+23)& (0+255),b
  5825                           
  5826                           ; BSR set to: 0
  5827                           
  5828                           ; BSR set to: 0
  5829                           
  5830                           ;gui.c: 1595: do{ INTCON3bits.INT2E = 0;INTCON3bits.INT2IF =0;}while(0);
  5831  004478  98F0               	bcf	intcon3,4,c	;volatile
  5832                           
  5833                           ; BSR set to: 0
  5834  00447A  92F0               	bcf	intcon3,1,c	;volatile
  5835                           
  5836                           ; BSR set to: 0
  5837                           ;gui.c: 1596: __nop();__nop();__nop();__nop();
  5838                           
  5839                           ; BSR set to: 0
  5840  00447C  F000               	nop	
  5841  00447E  F000               	nop	
  5842  004480  F000               	nop	
  5843  004482  F000               	nop	
  5844                           
  5845                           ;gui.c: 1600: while(hg_op.status_powerup == 0x00)
  5846  004484  D00B               	goto	l14421
  5847  004486                     l1896:
  5848                           
  5849                           ; BSR set to: 0
  5850                           ;gui.c: 1601: {
  5851                           ;gui.c: 1602: __nop();__nop();__nop();__nop();
  5852  004486  F000               	nop	
  5853  004488  F000               	nop	
  5854  00448A  F000               	nop	
  5855  00448C  F000               	nop	
  5856  00448E  0003               	sleep		;# 
  5857                           
  5858                           ;gui.c: 1604: __nop();__nop();__nop();__nop();
  5859  004490  F000               	nop	
  5860  004492  F000               	nop	
  5861  004494  F000               	nop	
  5862  004496  F000               	nop	
  5863                           
  5864                           ;gui.c: 1607: check_wake_button();
  5865  004498  EC50  F021         	call	_check_wake_button	;wreg free
  5866  00449C                     l14421:
  5867  00449C  0100               	movlb	0	; () banked
  5868  00449E  5183               	movf	(_hg_op+3)& (0+255),w,b
  5869  0044A0  A4D8               	btfss	status,2,c
  5870  0044A2  0012               	return	
  5871  0044A4  D7F0               	goto	l1896
  5872  0044A6                     __end_of_enter_sleep:
  5873                           	opt stack 0
  5874                           tblptru	equ	0xFF8
  5875                           tblptrh	equ	0xFF7
  5876                           tblptrl	equ	0xFF6
  5877                           tablat	equ	0xFF5
  5878                           intcon	equ	0xFF2
  5879                           intcon3	equ	0xFF0
  5880                           postinc0	equ	0xFEE
  5881                           wreg	equ	0xFE8
  5882                           postdec1	equ	0xFE5
  5883                           fsr1h	equ	0xFE2
  5884                           fsr1l	equ	0xFE1
  5885                           status	equ	0xFD8
  5886                           
  5887 ;; *************** function _check_wake_button *****************
  5888 ;; Defined at:
  5889 ;;		line 1963 in file "../gui.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;		None
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;		None
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  1    wreg      void 
  5896 ;; Registers used:
  5897 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5903 ;;      Params:         0       0       0       0       0       0       0
  5904 ;;      Locals:         0       0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0
  5906 ;;      Totals:         0       0       0       0       0       0       0
  5907 ;;Total ram usage:        0 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    8
  5910 ;; This function calls:
  5911 ;;		_LCD_On
  5912 ;;		_buzz
  5913 ;;		_config_LCD
  5914 ;;		_delay_nms
  5915 ;;		_initial_ui_setting
  5916 ;; This function is called by:
  5917 ;;		_enter_sleep
  5918 ;; This function uses a non-reentrant model
  5919 ;;
  5920                           
  5921                           	psect	text5
  5922  0042A0                     __ptext5:
  5923                           	opt stack 0
  5924  0042A0                     _check_wake_button:
  5925                           	opt stack 21
  5926                           
  5927                           ;gui.c: 1965: if(hg_op.flag_wake_device == 1)
  5928                           
  5929                           ; BSR set to: 0
  5930                           ;incstack = 0
  5931  0042A0  0100               	movlb	0	; () banked
  5932  0042A2  0591               	decf	(_hg_op+17)& (0+255),w,b
  5933  0042A4  A4D8               	btfss	status,2,c
  5934  0042A6  0012               	return	
  5935                           
  5936                           ; BSR set to: 0
  5937                           ;gui.c: 1966: {
  5938                           ;gui.c: 1969: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
  5939  0042A8  A881               	btfss	3969,4,c	;volatile
  5940                           
  5941                           ; BSR set to: 0
  5942  0042AA  AC83               	btfss	3971,6,c	;volatile
  5943  0042AC  D053               	goto	l14185
  5944                           
  5945                           ; BSR set to: 0
  5946  0042AE  BE83               	btfsc	3971,7,c	;volatile
  5947                           
  5948                           ; BSR set to: 0
  5949  0042B0  A681               	btfss	3969,3,c	;volatile
  5950  0042B2  D050               	goto	l14185
  5951                           
  5952                           ; BSR set to: 0
  5953                           ;gui.c: 1970: {
  5954                           ;gui.c: 1971: delay_nms(4);
  5955  0042B4  0E04               	movlw	4
  5956  0042B6  0101               	movlb	1	; () banked
  5957  0042B8  6F28               	movwf	delay_nms@n& (0+255),b
  5958  0042BA  0E00               	movlw	0
  5959  0042BC  6F29               	movwf	(delay_nms@n+1)& (0+255),b
  5960  0042BE  0E00               	movlw	0
  5961  0042C0  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
  5962  0042C2  0E00               	movlw	0
  5963  0042C4  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
  5964  0042C6  EC5E  F025         	call	_delay_nms	;wreg free
  5965                           
  5966                           ;gui.c: 1972: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
  5967  0042CA  A881               	btfss	3969,4,c	;volatile
  5968  0042CC  AC83               	btfss	3971,6,c	;volatile
  5969  0042CE  D042               	goto	l14185
  5970  0042D0  BE83               	btfsc	3971,7,c	;volatile
  5971  0042D2  A681               	btfss	3969,3,c	;volatile
  5972  0042D4  D03F               	goto	l14185
  5973                           
  5974                           ;gui.c: 1973: {
  5975                           ;gui.c: 1974: buzz();
  5976  0042D6  EC09  F027         	call	_buzz	;wreg free
  5977                           
  5978                           ;gui.c: 1975: test_mode =0;
  5979  0042DA  0E00               	movlw	0
  5980  0042DC  0100               	movlb	0	; () banked
  5981  0042DE  6FF2               	movwf	_test_mode& (0+255),b
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;gui.c: 1977: if(hg_op.status_powerup == 0x00)
  5985  0042E0  0100               	movlb	0	; () banked
  5986  0042E2  5183               	movf	(_hg_op+3)& (0+255),w,b
  5987  0042E4  A4D8               	btfss	status,2,c
  5988  0042E6  D036               	goto	l14185
  5989                           
  5990                           ; BSR set to: 0
  5991                           ;gui.c: 1978: {
  5992                           ;gui.c: 1979: hg_op.status_powerup = 0x01;
  5993  0042E8  0E01               	movlw	1
  5994  0042EA  0100               	movlb	0	; () banked
  5995  0042EC  6F83               	movwf	(_hg_op+3)& (0+255),b
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;gui.c: 1980: LCD_On();
  5999  0042EE  EC58  F027         	call	_LCD_On	;wreg free
  6000                           
  6001                           ;gui.c: 1981: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  6002  0042F2  848B               	bsf	3979,2,c	;volatile
  6003  0042F4  908C               	bcf	3980,0,c	;volatile
  6004  0042F6  928C               	bcf	3980,1,c	;volatile
  6005                           
  6006                           ;gui.c: 1982: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  6007  0042F8  888C               	bsf	3980,4,c	;volatile
  6008  0042FA  948C               	bcf	3980,2,c	;volatile
  6009  0042FC  968C               	bcf	3980,3,c	;volatile
  6010                           
  6011                           ;gui.c: 1983: LATCbits.LC2 =1;
  6012  0042FE  848B               	bsf	3979,2,c	;volatile
  6013                           
  6014                           ;gui.c: 1984: LATDbits.LD4 =1;
  6015  004300  888C               	bsf	3980,4,c	;volatile
  6016                           
  6017                           ;gui.c: 1986: hg_op.status_hit_lp = 0;
  6018  004302  0E00               	movlw	0
  6019  004304  0100               	movlb	0	; () banked
  6020  004306  6F86               	movwf	(_hg_op+6)& (0+255),b
  6021                           
  6022                           ; BSR set to: 0
  6023                           ;gui.c: 1987: hg_op.need_reset =1;
  6024  004308  0E01               	movlw	1
  6025  00430A  0100               	movlb	0	; () banked
  6026  00430C  6F85               	movwf	(_hg_op+5)& (0+255),b
  6027                           
  6028                           ; BSR set to: 0
  6029                           ;gui.c: 1988: hg_op.in_reset =0;
  6030  00430E  0E00               	movlw	0
  6031  004310  0100               	movlb	0	; () banked
  6032  004312  6F90               	movwf	(_hg_op+16)& (0+255),b
  6033                           
  6034                           ; BSR set to: 0
  6035                           ;gui.c: 1989: hg_op.needle_len = 4;
  6036  004314  0E04               	movlw	4
  6037  004316  0100               	movlb	0	; () banked
  6038  004318  6F97               	movwf	(_hg_op+23)& (0+255),b
  6039                           
  6040                           ; BSR set to: 0
  6041                           ;gui.c: 1990: hg_op.inject_len = 1;
  6042  00431A  0E00               	movlw	0
  6043  00431C  0100               	movlb	0	; () banked
  6044  00431E  6F99               	movwf	(_hg_op+25)& (0+255),b
  6045  004320  0E01               	movlw	1
  6046  004322  6F98               	movwf	(_hg_op+24)& (0+255),b
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;gui.c: 1992: menu[0].parameter = 0;
  6050  004324  0E00               	movlw	0
  6051  004326  6E06               	movwf	_menu+5,c
  6052                           
  6053                           ; BSR set to: 0
  6054                           ;gui.c: 1993: menu[1].parameter = 0;
  6055  004328  0E00               	movlw	0
  6056  00432A  6E0E               	movwf	_menu+13,c
  6057                           
  6058                           ; BSR set to: 0
  6059                           ;gui.c: 1994: menu[2].parameter = 0;
  6060  00432C  0E00               	movlw	0
  6061  00432E  6E16               	movwf	_menu+21,c
  6062                           
  6063                           ; BSR set to: 0
  6064                           ;gui.c: 1995: menu[3].parameter = 0;
  6065  004330  0E00               	movlw	0
  6066  004332  6E1E               	movwf	_menu+29,c
  6067                           
  6068                           ; BSR set to: 0
  6069                           ;gui.c: 1996: menu[4].parameter = 0;
  6070  004334  0E00               	movlw	0
  6071  004336  6E26               	movwf	_menu+37,c
  6072                           
  6073                           ; BSR set to: 0
  6074                           ;gui.c: 1997: menu[5].parameter = 0;
  6075  004338  0E00               	movlw	0
  6076  00433A  6E2E               	movwf	_menu+45,c
  6077                           
  6078                           ; BSR set to: 0
  6079                           ;gui.c: 1998: menu[6].parameter = 0;
  6080  00433C  0E00               	movlw	0
  6081  00433E  6E36               	movwf	_menu+53,c
  6082                           
  6083                           ; BSR set to: 0
  6084                           ;gui.c: 1999: focus =0;
  6085  004340  0E00               	movlw	0
  6086  004342  6E4F               	movwf	_focus,c
  6087                           
  6088                           ; BSR set to: 0
  6089                           ;gui.c: 2000: work_mode = 0x00;
  6090  004344  0E00               	movlw	0
  6091  004346  6E4D               	movwf	_work_mode,c
  6092                           
  6093                           ; BSR set to: 0
  6094                           ;gui.c: 2005: config_LCD();
  6095  004348  EC67  F020         	call	_config_LCD	;wreg free
  6096                           
  6097                           ;gui.c: 2006: initial_ui_setting();
  6098  00434C  EC48  F01B         	call	_initial_ui_setting	;wreg free
  6099                           
  6100                           ;gui.c: 2007: do{ INTCON3bits.INT2E = 1;INTCON3bits.INT2IF =0;}while(0);
  6101  004350  88F0               	bsf	intcon3,4,c	;volatile
  6102  004352  92F0               	bcf	intcon3,1,c	;volatile
  6103  004354                     l14185:
  6104                           
  6105                           ;gui.c: 2009: }
  6106                           ;gui.c: 2040: }
  6107                           ;gui.c: 2042: }
  6108                           ;gui.c: 2045: hg_op.flag_wake_device = 0;
  6109  004354  0E00               	movlw	0
  6110  004356  0100               	movlb	0	; () banked
  6111  004358  6F91               	movwf	(_hg_op+17)& (0+255),b
  6112  00435A  0012               	return	
  6113  00435C                     __end_of_check_wake_button:
  6114                           	opt stack 0
  6115                           tblptru	equ	0xFF8
  6116                           tblptrh	equ	0xFF7
  6117                           tblptrl	equ	0xFF6
  6118                           tablat	equ	0xFF5
  6119                           intcon	equ	0xFF2
  6120                           intcon3	equ	0xFF0
  6121                           postinc0	equ	0xFEE
  6122                           wreg	equ	0xFE8
  6123                           postdec1	equ	0xFE5
  6124                           fsr1h	equ	0xFE2
  6125                           fsr1l	equ	0xFE1
  6126                           status	equ	0xFD8
  6127                           
  6128 ;; *************** function _initial_ui_setting *****************
  6129 ;; Defined at:
  6130 ;;		line 3194 in file "../Oled.c"
  6131 ;; Parameters:    Size  Location     Type
  6132 ;;		None
  6133 ;; Auto vars:     Size  Location     Type
  6134 ;;  i               1   16[BANK1 ] unsigned char 
  6135 ;; Return value:  Size  Location     Type
  6136 ;;                  1    wreg      void 
  6137 ;; Registers used:
  6138 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6139 ;; Tracked objects:
  6140 ;;		On entry : 0/0
  6141 ;;		On exit  : 0/0
  6142 ;;		Unchanged: 0/0
  6143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6144 ;;      Params:         0       0       0       0       0       0       0
  6145 ;;      Locals:         0       0       1       0       0       0       0
  6146 ;;      Temps:          0       0       0       0       0       0       0
  6147 ;;      Totals:         0       0       1       0       0       0       0
  6148 ;;Total ram usage:        1 bytes
  6149 ;; Hardware stack levels used:    1
  6150 ;; Hardware stack levels required when called:    7
  6151 ;; This function calls:
  6152 ;;		_clear_screen
  6153 ;;		_delaynus
  6154 ;;		_display_bat
  6155 ;;		_display_cmode
  6156 ;;		_display_frame_abc
  6157 ;;		_display_frame_de
  6158 ;;		_display_frame_fghi
  6159 ;;		_display_logo
  6160 ;;		_display_mem
  6161 ;;		_display_num
  6162 ;; This function is called by:
  6163 ;;		_check_wake_button
  6164 ;; This function uses a non-reentrant model
  6165 ;;
  6166                           
  6167                           	psect	text6
  6168  003690                     __ptext6:
  6169                           	opt stack 0
  6170  003690                     _initial_ui_setting:
  6171                           	opt stack 21
  6172                           
  6173                           ;Oled.c: 3197: uint8_t i;
  6174                           ;Oled.c: 3199: clear_screen();
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;incstack = 0
  6178  003690  EC27  F024         	call	_clear_screen	;wreg free
  6179                           
  6180                           ;Oled.c: 3202: display_logo();
  6181  003694  ECE5  F022         	call	_display_logo	;wreg free
  6182                           
  6183                           ;Oled.c: 3204: for(i=0;i<50;i++)
  6184  003698  0E00               	movlw	0
  6185  00369A  0101               	movlb	1	; () banked
  6186  00369C  6F38               	movwf	initial_ui_setting@i& (0+255),b
  6187  00369E                     l12871:
  6188                           
  6189                           ; BSR set to: 1
  6190  00369E  0E31               	movlw	49
  6191  0036A0  0101               	movlb	1	; () banked
  6192  0036A2  6538               	cpfsgt	initial_ui_setting@i& (0+255),b
  6193  0036A4  D001               	goto	l12875
  6194  0036A6  D00A               	goto	l12881
  6195  0036A8                     l12875:
  6196                           
  6197                           ; BSR set to: 1
  6198                           ;Oled.c: 3205: {
  6199                           ;Oled.c: 3206: delaynus(50 * 1000);
  6200  0036A8  0EC3               	movlw	195
  6201  0036AA  0100               	movlb	0	; () banked
  6202  0036AC  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  6203  0036AE  0E50               	movlw	80
  6204  0036B0  6FFD               	movwf	delaynus@n& (0+255),b
  6205  0036B2  ECEB  F026         	call	_delaynus	;wreg free
  6206  0036B6  0101               	movlb	1	; () banked
  6207  0036B8  2B38               	incf	initial_ui_setting@i& (0+255),f,b
  6208  0036BA  D7F1               	goto	l12871
  6209  0036BC                     l12881:
  6210                           
  6211                           ; BSR set to: 1
  6212                           ;Oled.c: 3208: }
  6213                           ;Oled.c: 3209: clear_screen();
  6214  0036BC  EC27  F024         	call	_clear_screen	;wreg free
  6215                           
  6216                           ;Oled.c: 3232: display_frame_abc(1,71, 0);
  6217  0036C0  0E47               	movlw	71
  6218  0036C2  0101               	movlb	1	; () banked
  6219  0036C4  6F31               	movwf	display_frame_abc@x& (0+255),b
  6220  0036C6  0E00               	movlw	0
  6221  0036C8  0101               	movlb	1	; () banked
  6222  0036CA  6F32               	movwf	display_frame_abc@mode& (0+255),b
  6223  0036CC  0E01               	movlw	1
  6224  0036CE  EC68  F016         	call	_display_frame_abc
  6225                           
  6226                           ;Oled.c: 3233: display_cmode(1,(71 + 2),0);
  6227  0036D2  0E49               	movlw	73
  6228  0036D4  0101               	movlb	1	; () banked
  6229  0036D6  6F31               	movwf	display_cmode@x& (0+255),b
  6230  0036D8  0E00               	movlw	0
  6231  0036DA  0101               	movlb	1	; () banked
  6232  0036DC  6F32               	movwf	display_cmode@mode& (0+255),b
  6233  0036DE  0E01               	movlw	1
  6234  0036E0  EC20  F01F         	call	_display_cmode
  6235                           
  6236                           ;Oled.c: 3234: menu[0].mode = 0;
  6237  0036E4  0E00               	movlw	0
  6238  0036E6  6E02               	movwf	_menu+1,c
  6239                           
  6240                           ;Oled.c: 3236: menu[0].value = 0x00;
  6241  0036E8  0E00               	movlw	0
  6242  0036EA  6E05               	movwf	_menu+4,c
  6243                           
  6244                           ;Oled.c: 3240: display_frame_abc(1,35, 0);
  6245  0036EC  0E23               	movlw	35
  6246  0036EE  0101               	movlb	1	; () banked
  6247  0036F0  6F31               	movwf	display_frame_abc@x& (0+255),b
  6248  0036F2  0E00               	movlw	0
  6249  0036F4  0101               	movlb	1	; () banked
  6250  0036F6  6F32               	movwf	display_frame_abc@mode& (0+255),b
  6251  0036F8  0E01               	movlw	1
  6252  0036FA  EC68  F016         	call	_display_frame_abc
  6253                           
  6254                           ;Oled.c: 3241: display_mem(1,(35 + 2),0);
  6255  0036FE  0E25               	movlw	37
  6256  003700  0101               	movlb	1	; () banked
  6257  003702  6F31               	movwf	display_mem@x& (0+255),b
  6258  003704  0E00               	movlw	0
  6259  003706  0101               	movlb	1	; () banked
  6260  003708  6F32               	movwf	display_mem@mode& (0+255),b
  6261  00370A  0E01               	movlw	1
  6262  00370C  EC20  F01C         	call	_display_mem
  6263                           
  6264                           ;Oled.c: 3242: menu[1].mode = 0;
  6265  003710  0E00               	movlw	0
  6266  003712  6E0A               	movwf	_menu+9,c
  6267                           
  6268                           ;Oled.c: 3243: menu[1].value = 0x58;
  6269  003714  0E58               	movlw	88
  6270  003716  6E0D               	movwf	_menu+12,c
  6271                           
  6272                           ;Oled.c: 3247: display_frame_abc(1,0, 0);
  6273  003718  0E00               	movlw	0
  6274  00371A  0101               	movlb	1	; () banked
  6275  00371C  6F31               	movwf	display_frame_abc@x& (0+255),b
  6276  00371E  0E00               	movlw	0
  6277  003720  0101               	movlb	1	; () banked
  6278  003722  6F32               	movwf	display_frame_abc@mode& (0+255),b
  6279  003724  0E01               	movlw	1
  6280  003726  EC68  F016         	call	_display_frame_abc
  6281                           
  6282                           ;Oled.c: 3248: display_bat(1,(0 + 2),0);
  6283  00372A  0E02               	movlw	2
  6284  00372C  0101               	movlb	1	; () banked
  6285  00372E  6F31               	movwf	display_bat@x& (0+255),b
  6286  003730  0E00               	movlw	0
  6287  003732  0101               	movlb	1	; () banked
  6288  003734  6F32               	movwf	display_bat@mode& (0+255),b
  6289  003736  0E01               	movlw	1
  6290  003738  ECBD  F010         	call	_display_bat
  6291                           
  6292                           ;Oled.c: 3249: menu[2].mode = 0;
  6293  00373C  0E00               	movlw	0
  6294  00373E  6E12               	movwf	_menu+17,c
  6295                           
  6296                           ;Oled.c: 3250: menu[2].value = 0x59;
  6297  003740  0E59               	movlw	89
  6298  003742  6E15               	movwf	_menu+20,c
  6299                           
  6300                           ;Oled.c: 3255: display_frame_de(1,49, 0);
  6301  003744  0E31               	movlw	49
  6302  003746  0101               	movlb	1	; () banked
  6303  003748  6F31               	movwf	display_frame_de@x& (0+255),b
  6304  00374A  0E00               	movlw	0
  6305  00374C  0101               	movlb	1	; () banked
  6306  00374E  6F32               	movwf	display_frame_de@mode& (0+255),b
  6307  003750  0E01               	movlw	1
  6308  003752  EC09  F000         	call	_display_frame_de
  6309                           
  6310                           ;Oled.c: 3256: display_num(0,(49 + 14), 4);
  6311  003756  0E3F               	movlw	63
  6312  003758  0101               	movlb	1	; () banked
  6313  00375A  6F31               	movwf	display_num@x& (0+255),b
  6314  00375C  0E04               	movlw	4
  6315  00375E  0101               	movlb	1	; () banked
  6316  003760  6F32               	movwf	display_num@mode& (0+255),b
  6317  003762  0E00               	movlw	0
  6318  003764  ECF0  F006         	call	_display_num
  6319                           
  6320                           ;Oled.c: 3257: menu[3].mode = 0;
  6321  003768  0E00               	movlw	0
  6322  00376A  6E1A               	movwf	_menu+25,c
  6323                           
  6324                           ;Oled.c: 3258: menu[3].value = 4;
  6325  00376C  0E04               	movlw	4
  6326  00376E  6E1D               	movwf	_menu+28,c
  6327                           
  6328                           ;Oled.c: 3260: display_frame_de(2,0, 0);
  6329  003770  0E00               	movlw	0
  6330  003772  0101               	movlb	1	; () banked
  6331  003774  6F31               	movwf	display_frame_de@x& (0+255),b
  6332  003776  0E00               	movlw	0
  6333  003778  0101               	movlb	1	; () banked
  6334  00377A  6F32               	movwf	display_frame_de@mode& (0+255),b
  6335  00377C  0E02               	movlw	2
  6336  00377E  EC09  F000         	call	_display_frame_de
  6337                           
  6338                           ;Oled.c: 3261: display_num(0,(0 + 14), 1);
  6339  003782  0E0E               	movlw	14
  6340  003784  0101               	movlb	1	; () banked
  6341  003786  6F31               	movwf	display_num@x& (0+255),b
  6342  003788  0E01               	movlw	1
  6343  00378A  0101               	movlb	1	; () banked
  6344  00378C  6F32               	movwf	display_num@mode& (0+255),b
  6345  00378E  0E00               	movlw	0
  6346  003790  ECF0  F006         	call	_display_num
  6347                           
  6348                           ;Oled.c: 3262: menu[4].mode = 0;
  6349  003794  0E00               	movlw	0
  6350  003796  6E22               	movwf	_menu+33,c
  6351                           
  6352                           ;Oled.c: 3263: menu[4].value = 1;
  6353  003798  0E01               	movlw	1
  6354  00379A  6E25               	movwf	_menu+36,c
  6355                           
  6356                           ;Oled.c: 3267: display_frame_fghi(1,49, 0);
  6357  00379C  0E31               	movlw	49
  6358  00379E  0101               	movlb	1	; () banked
  6359  0037A0  6F31               	movwf	display_frame_fghi@x& (0+255),b
  6360  0037A2  0E00               	movlw	0
  6361  0037A4  0101               	movlb	1	; () banked
  6362  0037A6  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  6363  0037A8  0E01               	movlw	1
  6364  0037AA  EC7C  F00A         	call	_display_frame_fghi
  6365                           
  6366                           ;Oled.c: 3269: display_num(3,(49 + 14), 1);
  6367  0037AE  0E3F               	movlw	63
  6368  0037B0  0101               	movlb	1	; () banked
  6369  0037B2  6F31               	movwf	display_num@x& (0+255),b
  6370  0037B4  0E01               	movlw	1
  6371  0037B6  0101               	movlb	1	; () banked
  6372  0037B8  6F32               	movwf	display_num@mode& (0+255),b
  6373  0037BA  0E03               	movlw	3
  6374  0037BC  ECF0  F006         	call	_display_num
  6375                           
  6376                           ;Oled.c: 3270: menu[5].mode = 0;
  6377  0037C0  0E00               	movlw	0
  6378  0037C2  6E2A               	movwf	_menu+41,c
  6379                           
  6380                           ;Oled.c: 3271: menu[5].value = 1;
  6381  0037C4  0E01               	movlw	1
  6382  0037C6  6E2D               	movwf	_menu+44,c
  6383                           
  6384                           ;Oled.c: 3275: display_frame_fghi(2,0, 0);
  6385  0037C8  0E00               	movlw	0
  6386  0037CA  0101               	movlb	1	; () banked
  6387  0037CC  6F31               	movwf	display_frame_fghi@x& (0+255),b
  6388  0037CE  0E00               	movlw	0
  6389  0037D0  0101               	movlb	1	; () banked
  6390  0037D2  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  6391  0037D4  0E02               	movlw	2
  6392  0037D6  EC7C  F00A         	call	_display_frame_fghi
  6393                           
  6394                           ;Oled.c: 3276: display_num(3,(0 + 14), 3);
  6395  0037DA  0E0E               	movlw	14
  6396  0037DC  0101               	movlb	1	; () banked
  6397  0037DE  6F31               	movwf	display_num@x& (0+255),b
  6398  0037E0  0E03               	movlw	3
  6399  0037E2  0101               	movlb	1	; () banked
  6400  0037E4  6F32               	movwf	display_num@mode& (0+255),b
  6401  0037E6  0E03               	movlw	3
  6402  0037E8  ECF0  F006         	call	_display_num
  6403                           
  6404                           ;Oled.c: 3277: menu[6].mode = 0;
  6405  0037EC  0E00               	movlw	0
  6406  0037EE  6E32               	movwf	_menu+49,c
  6407                           
  6408                           ;Oled.c: 3278: menu[6].value = 3;
  6409  0037F0  0E03               	movlw	3
  6410  0037F2  6E35               	movwf	_menu+52,c
  6411                           
  6412                           ;Oled.c: 3284: hg_op.cur_working_mode = 0x00;
  6413  0037F4  0E00               	movlw	0
  6414  0037F6  0100               	movlb	0	; () banked
  6415  0037F8  6F81               	movwf	(_hg_op+1)& (0+255),b
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;Oled.c: 3287: hg_op.cnt_target_posrst = (789);
  6419  0037FA  0E03               	movlw	3
  6420  0037FC  0100               	movlb	0	; () banked
  6421  0037FE  6FB8               	movwf	(_hg_op+56)& (0+255),b
  6422  003800  0E15               	movlw	21
  6423  003802  6FB7               	movwf	(_hg_op+55)& (0+255),b
  6424                           
  6425                           ; BSR set to: 0
  6426                           ;Oled.c: 3288: hg_op.needle_len = 4;
  6427  003804  0E04               	movlw	4
  6428  003806  0100               	movlb	0	; () banked
  6429  003808  6F97               	movwf	(_hg_op+23)& (0+255),b
  6430                           
  6431                           ; BSR set to: 0
  6432                           ;Oled.c: 3290: hg_op.inject_len = 1;
  6433  00380A  0E00               	movlw	0
  6434  00380C  0100               	movlb	0	; () banked
  6435  00380E  6F99               	movwf	(_hg_op+25)& (0+255),b
  6436  003810  0E01               	movlw	1
  6437  003812  6F98               	movwf	(_hg_op+24)& (0+255),b
  6438                           
  6439                           ; BSR set to: 0
  6440                           ;Oled.c: 3292: hg_op.tube_cap = 0;
  6441  003814  0E00               	movlw	0
  6442  003816  0100               	movlb	0	; () banked
  6443  003818  6F9A               	movwf	(_hg_op+26)& (0+255),b
  6444                           
  6445                           ; BSR set to: 0
  6446                           ;Oled.c: 3293: hg_op.work_freq = (2*1000);
  6447  00381A  0E07               	movlw	7
  6448  00381C  0100               	movlb	0	; () banked
  6449  00381E  6F9C               	movwf	(_hg_op+28)& (0+255),b
  6450  003820  0ED0               	movlw	208
  6451  003822  6F9B               	movwf	(_hg_op+27)& (0+255),b
  6452                           
  6453                           ; BSR set to: 0
  6454                           ;Oled.c: 3295: hg_op.push_len = (112);
  6455  003824  0E70               	movlw	112
  6456  003826  0100               	movlb	0	; () banked
  6457  003828  6F9D               	movwf	(_hg_op+29)& (0+255),b
  6458                           
  6459                           ; BSR set to: 0
  6460                           ;Oled.c: 3298: hg_op.cnt_pos_nmm = 0;
  6461  00382A  0E00               	movlw	0
  6462  00382C  0100               	movlb	0	; () banked
  6463  00382E  6FAE               	movwf	(_hg_op+46)& (0+255),b
  6464  003830  0E00               	movlw	0
  6465  003832  6FAD               	movwf	(_hg_op+45)& (0+255),b
  6466                           
  6467                           ; BSR set to: 0
  6468                           ;Oled.c: 3299: hg_op.cnt_pos_nmm_target = (236);
  6469  003834  0E00               	movlw	0
  6470  003836  0100               	movlb	0	; () banked
  6471  003838  6FB4               	movwf	(_hg_op+52)& (0+255),b
  6472  00383A  0EEC               	movlw	236
  6473  00383C  6FB3               	movwf	(_hg_op+51)& (0+255),b
  6474                           
  6475                           ; BSR set to: 0
  6476  00383E  0012               	return		;funcret
  6477  003840                     __end_of_initial_ui_setting:
  6478                           	opt stack 0
  6479                           tblptru	equ	0xFF8
  6480                           tblptrh	equ	0xFF7
  6481                           tblptrl	equ	0xFF6
  6482                           tablat	equ	0xFF5
  6483                           intcon	equ	0xFF2
  6484                           intcon3	equ	0xFF0
  6485                           postinc0	equ	0xFEE
  6486                           wreg	equ	0xFE8
  6487                           postdec1	equ	0xFE5
  6488                           fsr1h	equ	0xFE2
  6489                           fsr1l	equ	0xFE1
  6490                           status	equ	0xFD8
  6491                           
  6492 ;; *************** function _display_mem *****************
  6493 ;; Defined at:
  6494 ;;		line 1874 in file "../Oled.c"
  6495 ;; Parameters:    Size  Location     Type
  6496 ;;  y               1    wreg     unsigned char 
  6497 ;;  x               1    9[BANK1 ] unsigned char 
  6498 ;;  mode            1   10[BANK1 ] unsigned char 
  6499 ;; Auto vars:     Size  Location     Type
  6500 ;;  y               1    0[COMRAM] unsigned char 
  6501 ;;  temp            1   12[BANK1 ] unsigned char 
  6502 ;;  tori            1   11[BANK1 ] unsigned char 
  6503 ;; Return value:  Size  Location     Type
  6504 ;;                  1    wreg      void 
  6505 ;; Registers used:
  6506 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6507 ;; Tracked objects:
  6508 ;;		On entry : 0/0
  6509 ;;		On exit  : 0/0
  6510 ;;		Unchanged: 0/0
  6511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6512 ;;      Params:         0       0       2       0       0       0       0
  6513 ;;      Locals:         0       0       2       0       0       0       0
  6514 ;;      Temps:          0       0       0       0       0       0       0
  6515 ;;      Totals:         0       0       4       0       0       0       0
  6516 ;;Total ram usage:        4 bytes
  6517 ;; Hardware stack levels used:    1
  6518 ;; Hardware stack levels required when called:    6
  6519 ;; This function calls:
  6520 ;;		_ee_WriteBytes
  6521 ;;		_setYX_LCD
  6522 ;; This function is called by:
  6523 ;;		_initial_ui_setting
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text7
  6528  003840                     __ptext7:
  6529                           	opt stack 0
  6530  003840                     _display_mem:
  6531                           	opt stack 21
  6532                           
  6533                           ;Oled.c: 1877: uint8_t temp =0;
  6534                           
  6535                           ; BSR set to: 0
  6536                           ;incstack = 0
  6537  003840  0E00               	movlw	0
  6538  003842  0101               	movlb	1	; () banked
  6539  003844  6F34               	movwf	display_mem@temp& (0+255),b
  6540                           
  6541                           ;Oled.c: 1878: uint8_t tori =0;
  6542  003846  0E00               	movlw	0
  6543  003848  0101               	movlb	1	; () banked
  6544  00384A  6F33               	movwf	display_mem@tori& (0+255),b
  6545                           
  6546                           ;Oled.c: 1879: switch(mode)
  6547  00384C  D0B0               	goto	l11675
  6548  00384E                     l11601:
  6549                           
  6550                           ; BSR set to: 1
  6551                           ;Oled.c: 1885: setYX_LCD(0,x);
  6552  00384E  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6553  003852  0E00               	movlw	0
  6554  003854  ECB3  F024         	call	_setYX_LCD
  6555                           
  6556                           ;Oled.c: 1886: for(ms=0;ms<23;ms++)
  6557  003858  0E00               	movlw	0
  6558  00385A  6E69               	movwf	_ms,c
  6559  00385C                     l11605:
  6560  00385C  0E16               	movlw	22
  6561  00385E  6469               	cpfsgt	_ms,c
  6562  003860  D001               	goto	l11609
  6563  003862  D01D               	goto	l11617
  6564  003864                     l11609:
  6565                           
  6566                           ;Oled.c: 1887: {
  6567                           ;Oled.c: 1889: temp =mem_m[0][ms];
  6568  003864  5069               	movf	_ms,w,c
  6569  003866  0D01               	mullw	1
  6570  003868  0E22               	movlw	low _mem_m
  6571  00386A  24F3               	addwf	prodl,w,c
  6572  00386C  6EF6               	movwf	tblptrl,c
  6573  00386E  0E75               	movlw	high _mem_m
  6574  003870  20F4               	addwfc	prodh,w,c
  6575  003872  6EF7               	movwf	tblptrh,c
  6576  003874                     	if	0	;There are less than 3 active tblptr bytes
  6577  003874                     	endif
  6578  003874  0008               	tblrd		*
  6579  003876  CFF5 F134          	movff	tablat,display_mem@temp
  6580                           
  6581                           ;Oled.c: 1891: ee_WriteBytes(&temp, 0x40, 1);
  6582  00387A  0E34               	movlw	low display_mem@temp
  6583  00387C  0101               	movlb	1	; () banked
  6584  00387E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6585  003880  0E01               	movlw	high display_mem@temp
  6586  003882  0101               	movlb	1	; () banked
  6587  003884  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6588  003886  0E40               	movlw	64
  6589  003888  0101               	movlb	1	; () banked
  6590  00388A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6591  00388C  0E00               	movlw	0
  6592  00388E  0101               	movlb	1	; () banked
  6593  003890  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6594  003892  0E01               	movlw	1
  6595  003894  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6596  003896  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  6597  00389A  2A69               	incf	_ms,f,c
  6598  00389C  D7DF               	goto	l11605
  6599  00389E                     l11617:
  6600                           
  6601                           ;Oled.c: 1892: }
  6602                           ;Oled.c: 1895: setYX_LCD(1,x);
  6603  00389E  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6604  0038A2  0E01               	movlw	1
  6605  0038A4  ECB3  F024         	call	_setYX_LCD
  6606                           
  6607                           ;Oled.c: 1896: for(ms=0;ms<23;ms++)
  6608  0038A8  0E00               	movlw	0
  6609  0038AA  6E69               	movwf	_ms,c
  6610  0038AC                     l11621:
  6611  0038AC  0E16               	movlw	22
  6612  0038AE  6469               	cpfsgt	_ms,c
  6613  0038B0  D001               	goto	l11625
  6614  0038B2  0012               	return	
  6615  0038B4                     l11625:
  6616                           
  6617                           ;Oled.c: 1897: {
  6618                           ;Oled.c: 1898: temp = mem_m[1][ms];
  6619  0038B4  5069               	movf	_ms,w,c
  6620  0038B6  0D01               	mullw	1
  6621  0038B8  0E17               	movlw	23
  6622  0038BA  26F3               	addwf	prodl,f,c
  6623  0038BC  0E00               	movlw	0
  6624  0038BE  22F4               	addwfc	prodh,f,c
  6625  0038C0  0E22               	movlw	low _mem_m
  6626  0038C2  24F3               	addwf	prodl,w,c
  6627  0038C4  6EF6               	movwf	tblptrl,c
  6628  0038C6  0E75               	movlw	high _mem_m
  6629  0038C8  20F4               	addwfc	prodh,w,c
  6630  0038CA  6EF7               	movwf	tblptrh,c
  6631  0038CC                     	if	0	;There are less than 3 active tblptr bytes
  6632  0038CC                     	endif
  6633  0038CC  0008               	tblrd		*
  6634  0038CE  CFF5 F134          	movff	tablat,display_mem@temp
  6635                           
  6636                           ;Oled.c: 1900: ee_WriteBytes(&temp, 0x40, 1);
  6637  0038D2  0E34               	movlw	low display_mem@temp
  6638  0038D4  0101               	movlb	1	; () banked
  6639  0038D6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6640  0038D8  0E01               	movlw	high display_mem@temp
  6641  0038DA  0101               	movlb	1	; () banked
  6642  0038DC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6643  0038DE  0E40               	movlw	64
  6644  0038E0  0101               	movlb	1	; () banked
  6645  0038E2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6646  0038E4  0E00               	movlw	0
  6647  0038E6  0101               	movlb	1	; () banked
  6648  0038E8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6649  0038EA  0E01               	movlw	1
  6650  0038EC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6651  0038EE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  6652  0038F2  2A69               	incf	_ms,f,c
  6653  0038F4  D7DB               	goto	l11621
  6654  0038F6                     l11633:
  6655                           
  6656                           ;Oled.c: 1909: setYX_LCD(0,x);
  6657  0038F6  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6658  0038FA  0E00               	movlw	0
  6659  0038FC  ECB3  F024         	call	_setYX_LCD
  6660                           
  6661                           ;Oled.c: 1910: for(ms=0;ms<23;ms++)
  6662  003900  0E00               	movlw	0
  6663  003902  6E69               	movwf	_ms,c
  6664  003904                     l11637:
  6665  003904  0E16               	movlw	22
  6666  003906  6469               	cpfsgt	_ms,c
  6667  003908  D001               	goto	l11641
  6668  00390A  D021               	goto	l11653
  6669  00390C                     l11641:
  6670                           
  6671                           ;Oled.c: 1911: {
  6672                           ;Oled.c: 1913: temp = mem_m[0][ms];
  6673  00390C  5069               	movf	_ms,w,c
  6674  00390E  0D01               	mullw	1
  6675  003910  0E22               	movlw	low _mem_m
  6676  003912  24F3               	addwf	prodl,w,c
  6677  003914  6EF6               	movwf	tblptrl,c
  6678  003916  0E75               	movlw	high _mem_m
  6679  003918  20F4               	addwfc	prodh,w,c
  6680  00391A  6EF7               	movwf	tblptrh,c
  6681  00391C                     	if	0	;There are less than 3 active tblptr bytes
  6682  00391C                     	endif
  6683  00391C  0008               	tblrd		*
  6684  00391E  CFF5 F134          	movff	tablat,display_mem@temp
  6685                           
  6686                           ;Oled.c: 1914: tori = temp;
  6687  003922  C134  F133         	movff	display_mem@temp,display_mem@tori
  6688                           
  6689                           ;Oled.c: 1916: temp = ~temp;
  6690  003926  0101               	movlb	1	; () banked
  6691  003928  1F34               	comf	display_mem@temp& (0+255),f,b
  6692                           
  6693                           ; BSR set to: 1
  6694                           ;Oled.c: 1919: ee_WriteBytes(&temp, 0x40, 1);
  6695  00392A  0E34               	movlw	low display_mem@temp
  6696  00392C  0101               	movlb	1	; () banked
  6697  00392E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6698  003930  0E01               	movlw	high display_mem@temp
  6699  003932  0101               	movlb	1	; () banked
  6700  003934  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6701  003936  0E40               	movlw	64
  6702  003938  0101               	movlb	1	; () banked
  6703  00393A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6704  00393C  0E00               	movlw	0
  6705  00393E  0101               	movlb	1	; () banked
  6706  003940  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6707  003942  0E01               	movlw	1
  6708  003944  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6709  003946  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  6710  00394A  2A69               	incf	_ms,f,c
  6711  00394C  D7DB               	goto	l11637
  6712  00394E                     l11653:
  6713                           
  6714                           ;Oled.c: 1920: }
  6715                           ;Oled.c: 1923: setYX_LCD(1,x);
  6716  00394E  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6717  003952  0E01               	movlw	1
  6718  003954  ECB3  F024         	call	_setYX_LCD
  6719                           
  6720                           ;Oled.c: 1924: for(ms=0;ms<23;ms++)
  6721  003958  0E00               	movlw	0
  6722  00395A  6E69               	movwf	_ms,c
  6723  00395C                     l11657:
  6724  00395C  0E16               	movlw	22
  6725  00395E  6469               	cpfsgt	_ms,c
  6726  003960  D001               	goto	l11661
  6727  003962  0012               	return	
  6728  003964                     l11661:
  6729                           
  6730                           ;Oled.c: 1925: {
  6731                           ;Oled.c: 1926: temp = mem_m[1][ms];
  6732  003964  5069               	movf	_ms,w,c
  6733  003966  0D01               	mullw	1
  6734  003968  0E17               	movlw	23
  6735  00396A  26F3               	addwf	prodl,f,c
  6736  00396C  0E00               	movlw	0
  6737  00396E  22F4               	addwfc	prodh,f,c
  6738  003970  0E22               	movlw	low _mem_m
  6739  003972  24F3               	addwf	prodl,w,c
  6740  003974  6EF6               	movwf	tblptrl,c
  6741  003976  0E75               	movlw	high _mem_m
  6742  003978  20F4               	addwfc	prodh,w,c
  6743  00397A  6EF7               	movwf	tblptrh,c
  6744  00397C                     	if	0	;There are less than 3 active tblptr bytes
  6745  00397C                     	endif
  6746  00397C  0008               	tblrd		*
  6747  00397E  CFF5 F134          	movff	tablat,display_mem@temp
  6748                           
  6749                           ;Oled.c: 1927: tori =temp;
  6750  003982  C134  F133         	movff	display_mem@temp,display_mem@tori
  6751                           
  6752                           ;Oled.c: 1929: temp = ~temp;
  6753  003986  0101               	movlb	1	; () banked
  6754  003988  1F34               	comf	display_mem@temp& (0+255),f,b
  6755                           
  6756                           ; BSR set to: 1
  6757                           ;Oled.c: 1932: ee_WriteBytes(&temp, 0x40, 1);
  6758  00398A  0E34               	movlw	low display_mem@temp
  6759  00398C  0101               	movlb	1	; () banked
  6760  00398E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6761  003990  0E01               	movlw	high display_mem@temp
  6762  003992  0101               	movlb	1	; () banked
  6763  003994  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6764  003996  0E40               	movlw	64
  6765  003998  0101               	movlb	1	; () banked
  6766  00399A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6767  00399C  0E00               	movlw	0
  6768  00399E  0101               	movlb	1	; () banked
  6769  0039A0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6770  0039A2  0E01               	movlw	1
  6771  0039A4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6772  0039A6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  6773  0039AA  2A69               	incf	_ms,f,c
  6774  0039AC  D7D7               	goto	l11657
  6775  0039AE                     l11675:
  6776  0039AE  0101               	movlb	1	; () banked
  6777  0039B0  5132               	movf	display_mem@mode& (0+255),w,b
  6778                           
  6779                           ; Switch size 1, requested type "space"
  6780                           ; Number of cases is 2, Range of values is 0 to 128
  6781                           ; switch strategies available:
  6782                           ; Name         Instructions Cycles
  6783                           ; simple_byte            7     4 (average)
  6784                           ;	Chosen strategy is simple_byte
  6785  0039B2  0A00               	xorlw	0	; case 0
  6786  0039B4  B4D8               	btfsc	status,2,c
  6787  0039B6  D74B               	goto	l11601
  6788  0039B8  0A80               	xorlw	128	; case 128
  6789  0039BA  A4D8               	btfss	status,2,c
  6790  0039BC  0012               	return	
  6791  0039BE  D79B               	goto	l11633
  6792  0039C0                     __end_of_display_mem:
  6793                           	opt stack 0
  6794                           tblptru	equ	0xFF8
  6795                           tblptrh	equ	0xFF7
  6796                           tblptrl	equ	0xFF6
  6797                           tablat	equ	0xFF5
  6798                           prodh	equ	0xFF4
  6799                           prodl	equ	0xFF3
  6800                           intcon	equ	0xFF2
  6801                           intcon3	equ	0xFF0
  6802                           postinc0	equ	0xFEE
  6803                           wreg	equ	0xFE8
  6804                           postdec1	equ	0xFE5
  6805                           fsr1h	equ	0xFE2
  6806                           fsr1l	equ	0xFE1
  6807                           status	equ	0xFD8
  6808                           
  6809 ;; *************** function _display_logo *****************
  6810 ;; Defined at:
  6811 ;;		line 3152 in file "../Oled.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;		None
  6814 ;; Auto vars:     Size  Location     Type
  6815 ;;  page            1   12[BANK1 ] unsigned char 
  6816 ;;  col             1   11[BANK1 ] unsigned char 
  6817 ;; Return value:  Size  Location     Type
  6818 ;;                  1    wreg      void 
  6819 ;; Registers used:
  6820 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6821 ;; Tracked objects:
  6822 ;;		On entry : 0/0
  6823 ;;		On exit  : 0/0
  6824 ;;		Unchanged: 0/0
  6825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6826 ;;      Params:         0       0       0       0       0       0       0
  6827 ;;      Locals:         0       0       2       0       0       0       0
  6828 ;;      Temps:          0       0       2       0       0       0       0
  6829 ;;      Totals:         0       0       4       0       0       0       0
  6830 ;;Total ram usage:        4 bytes
  6831 ;; Hardware stack levels used:    1
  6832 ;; Hardware stack levels required when called:    6
  6833 ;; This function calls:
  6834 ;;		_ee_WriteBytes
  6835 ;;		_setYX_LCD
  6836 ;; This function is called by:
  6837 ;;		_initial_ui_setting
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           	psect	text8
  6842  0045CA                     __ptext8:
  6843                           	opt stack 0
  6844  0045CA                     _display_logo:
  6845                           	opt stack 21
  6846                           
  6847                           ;Oled.c: 3154: uint8_t page,col;
  6848                           ;Oled.c: 3155: for(page=0;page<9;page++)
  6849                           
  6850                           ;incstack = 0
  6851  0045CA  0E00               	movlw	0
  6852  0045CC  0101               	movlb	1	; () banked
  6853  0045CE  6F34               	movwf	display_logo@page& (0+255),b
  6854  0045D0                     l12319:
  6855                           
  6856                           ; BSR set to: 1
  6857  0045D0  0E08               	movlw	8
  6858  0045D2  0101               	movlb	1	; () banked
  6859  0045D4  6534               	cpfsgt	display_logo@page& (0+255),b
  6860  0045D6  D001               	goto	l12323
  6861  0045D8  0012               	return	
  6862  0045DA                     l12323:
  6863                           
  6864                           ; BSR set to: 1
  6865                           ;Oled.c: 3156: {
  6866                           ;Oled.c: 3157: setYX_LCD(page,0);
  6867  0045DA  0E00               	movlw	0
  6868  0045DC  0100               	movlb	0	; () banked
  6869  0045DE  6FFF               	movwf	setYX_LCD@px& (0+255),b
  6870  0045E0  0101               	movlb	1	; () banked
  6871  0045E2  5134               	movf	display_logo@page& (0+255),w,b
  6872  0045E4  ECB3  F024         	call	_setYX_LCD
  6873                           
  6874                           ;Oled.c: 3158: write_buf[0] =0x00;
  6875  0045E8  0E00               	movlw	0
  6876  0045EA  0102               	movlb	2	; () banked
  6877  0045EC  6F00               	movwf	_write_buf& (0+255),b
  6878                           
  6879                           ; BSR set to: 2
  6880                           ;Oled.c: 3160: for(col=0;col<99;col++)
  6881  0045EE  0E00               	movlw	0
  6882  0045F0  0101               	movlb	1	; () banked
  6883  0045F2  6F33               	movwf	display_logo@col& (0+255),b
  6884  0045F4                     l12329:
  6885                           
  6886                           ; BSR set to: 1
  6887  0045F4  0E62               	movlw	98
  6888  0045F6  0101               	movlb	1	; () banked
  6889  0045F8  6533               	cpfsgt	display_logo@col& (0+255),b
  6890  0045FA  D001               	goto	l12333
  6891  0045FC  D029               	goto	l12339
  6892  0045FE                     l12333:
  6893                           
  6894                           ; BSR set to: 1
  6895                           ;Oled.c: 3161: {
  6896                           ;Oled.c: 3162: ee_WriteBytes( &(logo_eme[page][col]), 0x40, 1);
  6897  0045FE  0101               	movlb	1	; () banked
  6898  004600  5134               	movf	display_logo@page& (0+255),w,b
  6899  004602  0D62               	mullw	98
  6900  004604  0E0A               	movlw	low _logo_eme
  6901  004606  0101               	movlb	1	; () banked
  6902  004608  6F31               	movwf	??_display_logo& (0+255),b
  6903  00460A  0E76               	movlw	high _logo_eme
  6904  00460C  0101               	movlb	1	; () banked
  6905  00460E  6F32               	movwf	(??_display_logo+1)& (0+255),b
  6906  004610  50F3               	movf	prodl,w,c
  6907  004612  0101               	movlb	1	; () banked
  6908  004614  2731               	addwf	??_display_logo& (0+255),f,b
  6909  004616  50F4               	movf	prodh,w,c
  6910  004618  0101               	movlb	1	; () banked
  6911  00461A  2332               	addwfc	(??_display_logo+1)& (0+255),f,b
  6912  00461C  0101               	movlb	1	; () banked
  6913  00461E  5133               	movf	display_logo@col& (0+255),w,b
  6914  004620  0D01               	mullw	1
  6915  004622  50F3               	movf	prodl,w,c
  6916  004624  0101               	movlb	1	; () banked
  6917  004626  2531               	addwf	??_display_logo& (0+255),w,b
  6918  004628  0101               	movlb	1	; () banked
  6919  00462A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6920  00462C  50F4               	movf	prodh,w,c
  6921  00462E  0101               	movlb	1	; () banked
  6922  004630  2132               	addwfc	(??_display_logo+1)& (0+255),w,b
  6923  004632  0101               	movlb	1	; () banked
  6924  004634  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6925  004636  0E40               	movlw	64
  6926  004638  0101               	movlb	1	; () banked
  6927  00463A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6928  00463C  0E00               	movlw	0
  6929  00463E  0101               	movlb	1	; () banked
  6930  004640  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6931  004642  0E01               	movlw	1
  6932  004644  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6933  004646  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  6934  00464A  0101               	movlb	1	; () banked
  6935  00464C  2B33               	incf	display_logo@col& (0+255),f,b
  6936  00464E  D7D2               	goto	l12329
  6937  004650                     l12339:
  6938                           
  6939                           ; BSR set to: 1
  6940  004650  0101               	movlb	1	; () banked
  6941  004652  2B34               	incf	display_logo@page& (0+255),f,b
  6942  004654  D7BD               	goto	l12319
  6943  004656                     __end_of_display_logo:
  6944                           	opt stack 0
  6945                           tblptru	equ	0xFF8
  6946                           tblptrh	equ	0xFF7
  6947                           tblptrl	equ	0xFF6
  6948                           tablat	equ	0xFF5
  6949                           prodh	equ	0xFF4
  6950                           prodl	equ	0xFF3
  6951                           intcon	equ	0xFF2
  6952                           intcon3	equ	0xFF0
  6953                           postinc0	equ	0xFEE
  6954                           wreg	equ	0xFE8
  6955                           postdec1	equ	0xFE5
  6956                           fsr1h	equ	0xFE2
  6957                           fsr1l	equ	0xFE1
  6958                           status	equ	0xFD8
  6959                           
  6960 ;; *************** function _clear_screen *****************
  6961 ;; Defined at:
  6962 ;;		line 3174 in file "../Oled.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;		None
  6965 ;; Auto vars:     Size  Location     Type
  6966 ;;  page            1   10[BANK1 ] unsigned char 
  6967 ;;  col             1    9[BANK1 ] unsigned char 
  6968 ;; Return value:  Size  Location     Type
  6969 ;;                  1    wreg      unsigned char 
  6970 ;; Registers used:
  6971 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6972 ;; Tracked objects:
  6973 ;;		On entry : 0/0
  6974 ;;		On exit  : 0/0
  6975 ;;		Unchanged: 0/0
  6976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6977 ;;      Params:         0       0       0       0       0       0       0
  6978 ;;      Locals:         0       0       2       0       0       0       0
  6979 ;;      Temps:          0       0       0       0       0       0       0
  6980 ;;      Totals:         0       0       2       0       0       0       0
  6981 ;;Total ram usage:        2 bytes
  6982 ;; Hardware stack levels used:    1
  6983 ;; Hardware stack levels required when called:    6
  6984 ;; This function calls:
  6985 ;;		_ee_WriteBytes
  6986 ;;		_setYX_LCD
  6987 ;; This function is called by:
  6988 ;;		_initial_ui_setting
  6989 ;; This function uses a non-reentrant model
  6990 ;;
  6991                           
  6992                           	psect	text9
  6993  00484E                     __ptext9:
  6994                           	opt stack 0
  6995  00484E                     _clear_screen:
  6996                           	opt stack 21
  6997                           
  6998                           ;Oled.c: 3178: uint8_t page,col;
  6999                           ;Oled.c: 3179: for(page=0;page<9;page++)
  7000                           
  7001                           ; BSR set to: 1
  7002                           ;incstack = 0
  7003  00484E  0E00               	movlw	0
  7004  004850  0101               	movlb	1	; () banked
  7005  004852  6F32               	movwf	clear_screen@page& (0+255),b
  7006  004854                     l12345:
  7007                           
  7008                           ; BSR set to: 1
  7009  004854  0E08               	movlw	8
  7010  004856  0101               	movlb	1	; () banked
  7011  004858  6532               	cpfsgt	clear_screen@page& (0+255),b
  7012  00485A  D001               	goto	l12349
  7013  00485C  0012               	return	
  7014  00485E                     l12349:
  7015                           
  7016                           ; BSR set to: 1
  7017                           ;Oled.c: 3180: {
  7018                           ;Oled.c: 3181: setYX_LCD(page,0);
  7019  00485E  0E00               	movlw	0
  7020  004860  0100               	movlb	0	; () banked
  7021  004862  6FFF               	movwf	setYX_LCD@px& (0+255),b
  7022  004864  0101               	movlb	1	; () banked
  7023  004866  5132               	movf	clear_screen@page& (0+255),w,b
  7024  004868  ECB3  F024         	call	_setYX_LCD
  7025                           
  7026                           ;Oled.c: 3182: write_buf[0] =0x00;
  7027  00486C  0E00               	movlw	0
  7028  00486E  0102               	movlb	2	; () banked
  7029  004870  6F00               	movwf	_write_buf& (0+255),b
  7030                           
  7031                           ; BSR set to: 2
  7032                           ;Oled.c: 3183: for(col=0;col<99;col++)
  7033  004872  0E00               	movlw	0
  7034  004874  0101               	movlb	1	; () banked
  7035  004876  6F31               	movwf	clear_screen@col& (0+255),b
  7036  004878                     l12355:
  7037                           
  7038                           ; BSR set to: 1
  7039  004878  0E62               	movlw	98
  7040  00487A  0101               	movlb	1	; () banked
  7041  00487C  6531               	cpfsgt	clear_screen@col& (0+255),b
  7042  00487E  D001               	goto	l12359
  7043  004880  D013               	goto	l12365
  7044  004882                     l12359:
  7045                           
  7046                           ; BSR set to: 1
  7047                           ;Oled.c: 3184: {
  7048                           ;Oled.c: 3185: ee_WriteBytes(write_buf, 0x40, 1);
  7049  004882  0E00               	movlw	low _write_buf
  7050  004884  0101               	movlb	1	; () banked
  7051  004886  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7052  004888  0E02               	movlw	high _write_buf
  7053  00488A  0101               	movlb	1	; () banked
  7054  00488C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7055  00488E  0E40               	movlw	64
  7056  004890  0101               	movlb	1	; () banked
  7057  004892  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7058  004894  0E00               	movlw	0
  7059  004896  0101               	movlb	1	; () banked
  7060  004898  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7061  00489A  0E01               	movlw	1
  7062  00489C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7063  00489E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7064  0048A2  0101               	movlb	1	; () banked
  7065  0048A4  2B31               	incf	clear_screen@col& (0+255),f,b
  7066  0048A6  D7E8               	goto	l12355
  7067  0048A8                     l12365:
  7068                           
  7069                           ; BSR set to: 1
  7070  0048A8  0101               	movlb	1	; () banked
  7071  0048AA  2B32               	incf	clear_screen@page& (0+255),f,b
  7072  0048AC  D7D3               	goto	l12345
  7073  0048AE                     __end_of_clear_screen:
  7074                           	opt stack 0
  7075                           tblptru	equ	0xFF8
  7076                           tblptrh	equ	0xFF7
  7077                           tblptrl	equ	0xFF6
  7078                           tablat	equ	0xFF5
  7079                           prodh	equ	0xFF4
  7080                           prodl	equ	0xFF3
  7081                           intcon	equ	0xFF2
  7082                           intcon3	equ	0xFF0
  7083                           postinc0	equ	0xFEE
  7084                           wreg	equ	0xFE8
  7085                           postdec1	equ	0xFE5
  7086                           fsr1h	equ	0xFE2
  7087                           fsr1l	equ	0xFE1
  7088                           status	equ	0xFD8
  7089                           
  7090 ;; *************** function _config_LCD *****************
  7091 ;; Defined at:
  7092 ;;		line 3305 in file "../Oled.c"
  7093 ;; Parameters:    Size  Location     Type
  7094 ;;		None
  7095 ;; Auto vars:     Size  Location     Type
  7096 ;;		None
  7097 ;; Return value:  Size  Location     Type
  7098 ;;                  1    wreg      void 
  7099 ;; Registers used:
  7100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7101 ;; Tracked objects:
  7102 ;;		On entry : 0/0
  7103 ;;		On exit  : 0/0
  7104 ;;		Unchanged: 0/0
  7105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7106 ;;      Params:         0       0       0       0       0       0       0
  7107 ;;      Locals:         0       0       0       0       0       0       0
  7108 ;;      Temps:          0       0       0       0       0       0       0
  7109 ;;      Totals:         0       0       0       0       0       0       0
  7110 ;;Total ram usage:        0 bytes
  7111 ;; Hardware stack levels used:    1
  7112 ;; Hardware stack levels required when called:    5
  7113 ;; This function calls:
  7114 ;;		_ee_WriteBytes
  7115 ;; This function is called by:
  7116 ;;		_check_wake_button
  7117 ;; This function uses a non-reentrant model
  7118 ;;
  7119                           
  7120                           	psect	text10
  7121  0040CE                     __ptext10:
  7122                           	opt stack 0
  7123  0040CE                     _config_LCD:
  7124                           	opt stack 23
  7125                           
  7126                           ;Oled.c: 3308: write_buf[0]=0x21;
  7127                           
  7128                           ; BSR set to: 1
  7129                           ;incstack = 0
  7130  0040CE  0E21               	movlw	33
  7131  0040D0  0102               	movlb	2	; () banked
  7132  0040D2  6F00               	movwf	_write_buf& (0+255),b
  7133                           
  7134                           ; BSR set to: 2
  7135                           ;Oled.c: 3310: ee_WriteBytes(write_buf, 0x00, 1);
  7136  0040D4  0E00               	movlw	low _write_buf
  7137  0040D6  0101               	movlb	1	; () banked
  7138  0040D8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7139  0040DA  0E02               	movlw	high _write_buf
  7140  0040DC  0101               	movlb	1	; () banked
  7141  0040DE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7142  0040E0  0E00               	movlw	0
  7143  0040E2  0101               	movlb	1	; () banked
  7144  0040E4  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7145  0040E6  0E00               	movlw	0
  7146  0040E8  0101               	movlb	1	; () banked
  7147  0040EA  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7148  0040EC  0E01               	movlw	1
  7149  0040EE  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7150  0040F0  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7151                           
  7152                           ;Oled.c: 3313: write_buf[0]=0x15;
  7153  0040F4  0E15               	movlw	21
  7154  0040F6  0102               	movlb	2	; () banked
  7155  0040F8  6F00               	movwf	_write_buf& (0+255),b
  7156                           
  7157                           ;Oled.c: 3314: ee_WriteBytes(write_buf, 0x00, 1);
  7158  0040FA  0E00               	movlw	low _write_buf
  7159  0040FC  0101               	movlb	1	; () banked
  7160  0040FE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7161  004100  0E02               	movlw	high _write_buf
  7162  004102  0101               	movlb	1	; () banked
  7163  004104  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7164  004106  0E00               	movlw	0
  7165  004108  0101               	movlb	1	; () banked
  7166  00410A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7167  00410C  0E00               	movlw	0
  7168  00410E  0101               	movlb	1	; () banked
  7169  004110  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7170  004112  0E01               	movlw	1
  7171  004114  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7172  004116  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7173                           
  7174                           ;Oled.c: 3316: write_buf[0]=0x08;
  7175  00411A  0E08               	movlw	8
  7176  00411C  0102               	movlb	2	; () banked
  7177  00411E  6F00               	movwf	_write_buf& (0+255),b
  7178                           
  7179                           ; BSR set to: 2
  7180                           ;Oled.c: 3317: ee_WriteBytes(write_buf, 0x00, 1);
  7181  004120  0E00               	movlw	low _write_buf
  7182  004122  0101               	movlb	1	; () banked
  7183  004124  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7184  004126  0E02               	movlw	high _write_buf
  7185  004128  0101               	movlb	1	; () banked
  7186  00412A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7187  00412C  0E00               	movlw	0
  7188  00412E  0101               	movlb	1	; () banked
  7189  004130  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7190  004132  0E00               	movlw	0
  7191  004134  0101               	movlb	1	; () banked
  7192  004136  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7193  004138  0E01               	movlw	1
  7194  00413A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7195  00413C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7196                           
  7197                           ;Oled.c: 3319: write_buf[0]=0x9f;
  7198  004140  0E9F               	movlw	159
  7199  004142  0102               	movlb	2	; () banked
  7200  004144  6F00               	movwf	_write_buf& (0+255),b
  7201                           
  7202                           ; BSR set to: 2
  7203                           ;Oled.c: 3320: ee_WriteBytes(write_buf, 0x00, 1);
  7204  004146  0E00               	movlw	low _write_buf
  7205  004148  0101               	movlb	1	; () banked
  7206  00414A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7207  00414C  0E02               	movlw	high _write_buf
  7208  00414E  0101               	movlb	1	; () banked
  7209  004150  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7210  004152  0E00               	movlw	0
  7211  004154  0101               	movlb	1	; () banked
  7212  004156  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7213  004158  0E00               	movlw	0
  7214  00415A  0101               	movlb	1	; () banked
  7215  00415C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7216  00415E  0E01               	movlw	1
  7217  004160  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7218  004162  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7219                           
  7220                           ;Oled.c: 3322: write_buf[0]=0x20;
  7221  004166  0E20               	movlw	32
  7222  004168  0102               	movlb	2	; () banked
  7223  00416A  6F00               	movwf	_write_buf& (0+255),b
  7224                           
  7225                           ;Oled.c: 3323: ee_WriteBytes(write_buf, 0x00, 1);
  7226  00416C  0E00               	movlw	low _write_buf
  7227  00416E  0101               	movlb	1	; () banked
  7228  004170  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7229  004172  0E02               	movlw	high _write_buf
  7230  004174  0101               	movlb	1	; () banked
  7231  004176  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7232  004178  0E00               	movlw	0
  7233  00417A  0101               	movlb	1	; () banked
  7234  00417C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7235  00417E  0E00               	movlw	0
  7236  004180  0101               	movlb	1	; () banked
  7237  004182  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7238  004184  0E01               	movlw	1
  7239  004186  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7240  004188  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7241                           
  7242                           ;Oled.c: 3325: write_buf[0]=0x05;
  7243  00418C  0E05               	movlw	5
  7244  00418E  0102               	movlb	2	; () banked
  7245  004190  6F00               	movwf	_write_buf& (0+255),b
  7246                           
  7247                           ; BSR set to: 2
  7248                           ;Oled.c: 3326: ee_WriteBytes(write_buf, 0x00, 1);
  7249  004192  0E00               	movlw	low _write_buf
  7250  004194  0101               	movlb	1	; () banked
  7251  004196  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7252  004198  0E02               	movlw	high _write_buf
  7253  00419A  0101               	movlb	1	; () banked
  7254  00419C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7255  00419E  0E00               	movlw	0
  7256  0041A0  0101               	movlb	1	; () banked
  7257  0041A2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7258  0041A4  0E00               	movlw	0
  7259  0041A6  0101               	movlb	1	; () banked
  7260  0041A8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7261  0041AA  0E01               	movlw	1
  7262  0041AC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7263  0041AE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7264                           
  7265                           ;Oled.c: 3328: write_buf[0]=0x0c;
  7266  0041B2  0E0C               	movlw	12
  7267  0041B4  0102               	movlb	2	; () banked
  7268  0041B6  6F00               	movwf	_write_buf& (0+255),b
  7269                           
  7270                           ; BSR set to: 2
  7271                           ;Oled.c: 3331: ee_WriteBytes(write_buf, 0x00, 1);
  7272  0041B8  0E00               	movlw	low _write_buf
  7273  0041BA  0101               	movlb	1	; () banked
  7274  0041BC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7275  0041BE  0E02               	movlw	high _write_buf
  7276  0041C0  0101               	movlb	1	; () banked
  7277  0041C2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7278  0041C4  0E00               	movlw	0
  7279  0041C6  0101               	movlb	1	; () banked
  7280  0041C8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7281  0041CA  0E00               	movlw	0
  7282  0041CC  0101               	movlb	1	; () banked
  7283  0041CE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7284  0041D0  0E01               	movlw	1
  7285  0041D2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7286  0041D4  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  7287  0041D8  0012               	return		;funcret
  7288  0041DA                     __end_of_config_LCD:
  7289                           	opt stack 0
  7290                           tblptru	equ	0xFF8
  7291                           tblptrh	equ	0xFF7
  7292                           tblptrl	equ	0xFF6
  7293                           tablat	equ	0xFF5
  7294                           prodh	equ	0xFF4
  7295                           prodl	equ	0xFF3
  7296                           intcon	equ	0xFF2
  7297                           intcon3	equ	0xFF0
  7298                           postinc0	equ	0xFEE
  7299                           wreg	equ	0xFE8
  7300                           postdec1	equ	0xFE5
  7301                           fsr1h	equ	0xFE2
  7302                           fsr1l	equ	0xFE1
  7303                           status	equ	0xFD8
  7304                           
  7305 ;; *************** function _LCD_On *****************
  7306 ;; Defined at:
  7307 ;;		line 573 in file "../Oled.c"
  7308 ;; Parameters:    Size  Location     Type
  7309 ;;		None
  7310 ;; Auto vars:     Size  Location     Type
  7311 ;;		None
  7312 ;; Return value:  Size  Location     Type
  7313 ;;                  1    wreg      void 
  7314 ;; Registers used:
  7315 ;;		None
  7316 ;; Tracked objects:
  7317 ;;		On entry : 0/0
  7318 ;;		On exit  : 0/0
  7319 ;;		Unchanged: 0/0
  7320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7321 ;;      Params:         0       0       0       0       0       0       0
  7322 ;;      Locals:         0       0       0       0       0       0       0
  7323 ;;      Temps:          0       0       0       0       0       0       0
  7324 ;;      Totals:         0       0       0       0       0       0       0
  7325 ;;Total ram usage:        0 bytes
  7326 ;; Hardware stack levels used:    1
  7327 ;; Hardware stack levels required when called:    2
  7328 ;; This function calls:
  7329 ;;		Nothing
  7330 ;; This function is called by:
  7331 ;;		_check_wake_button
  7332 ;; This function uses a non-reentrant model
  7333 ;;
  7334                           
  7335                           	psect	text11
  7336  004EB0                     __ptext11:
  7337                           	opt stack 0
  7338  004EB0                     _LCD_On:
  7339                           	opt stack 26
  7340                           
  7341                           ;Oled.c: 577: LATEbits.LE0 =1;
  7342                           
  7343                           ;incstack = 0
  7344  004EB0  808D               	bsf	3981,0,c	;volatile
  7345  004EB2  0012               	return		;funcret
  7346  004EB4                     __end_of_LCD_On:
  7347                           	opt stack 0
  7348                           tblptru	equ	0xFF8
  7349                           tblptrh	equ	0xFF7
  7350                           tblptrl	equ	0xFF6
  7351                           tablat	equ	0xFF5
  7352                           prodh	equ	0xFF4
  7353                           prodl	equ	0xFF3
  7354                           intcon	equ	0xFF2
  7355                           intcon3	equ	0xFF0
  7356                           postinc0	equ	0xFEE
  7357                           wreg	equ	0xFE8
  7358                           postdec1	equ	0xFE5
  7359                           fsr1h	equ	0xFE2
  7360                           fsr1l	equ	0xFE1
  7361                           status	equ	0xFD8
  7362                           
  7363 ;; *************** function _drops_routine *****************
  7364 ;; Defined at:
  7365 ;;		line 266 in file "../MotorDrive.c"
  7366 ;; Parameters:    Size  Location     Type
  7367 ;;		None
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  cnt_push        2    6[BANK1 ] unsigned int 
  7370 ;; Return value:  Size  Location     Type
  7371 ;;                  1    wreg      void 
  7372 ;; Registers used:
  7373 ;;		wreg, status,2, status,0, cstack
  7374 ;; Tracked objects:
  7375 ;;		On entry : 0/0
  7376 ;;		On exit  : 0/0
  7377 ;;		Unchanged: 0/0
  7378 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7379 ;;      Params:         0       0       0       0       0       0       0
  7380 ;;      Locals:         0       0       2       0       0       0       0
  7381 ;;      Temps:          0       0       2       0       0       0       0
  7382 ;;      Totals:         0       0       4       0       0       0       0
  7383 ;;Total ram usage:        4 bytes
  7384 ;; Hardware stack levels used:    1
  7385 ;; Hardware stack levels required when called:    4
  7386 ;; This function calls:
  7387 ;;		_buzz
  7388 ;;		_delaynus
  7389 ;; This function is called by:
  7390 ;;		_main
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           	psect	text12
  7395  00119A                     __ptext12:
  7396                           	opt stack 0
  7397  00119A                     _drops_routine:
  7398                           	opt stack 26
  7399                           
  7400                           ;MotorDrive.c: 268: uint16_t cnt_push =0;
  7401                           
  7402                           ;incstack = 0
  7403  00119A  0E00               	movlw	0
  7404  00119C  0101               	movlb	1	; () banked
  7405  00119E  6F2F               	movwf	(drops_routine@cnt_push+1)& (0+255),b
  7406  0011A0  0E00               	movlw	0
  7407  0011A2  6F2E               	movwf	drops_routine@cnt_push& (0+255),b
  7408                           
  7409                           ;MotorDrive.c: 281: else
  7410                           ;MotorDrive.c: 282: {
  7411                           ;MotorDrive.c: 283: if(hg_op.drops_sa == 1)
  7412                           
  7413                           ; BSR set to: 0
  7414                           
  7415                           ;MotorDrive.c: 280: }
  7416                           
  7417                           ;MotorDrive.c: 279: hg_op.need_reset =1;
  7418                           
  7419                           ;MotorDrive.c: 278: hg_op.working_mode = 0x03;
  7420                           
  7421                           ; BSR set to: 1
  7422                           ;MotorDrive.c: 277: hg_op.acting_flag =0;
  7423                           
  7424                           ; BSR set to: 1
  7425                           
  7426                           ; BSR set to: 1
  7427                           
  7428                           ; BSR set to: 1
  7429                           ;MotorDrive.c: 276: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  7430                           
  7431                           ; BSR set to: 1
  7432                           
  7433                           ; BSR set to: 1
  7434                           ;MotorDrive.c: 274: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  7435                           
  7436                           ; BSR set to: 1
  7437                           
  7438                           ;MotorDrive.c: 272: {
  7439                           ;MotorDrive.c: 273: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  7440                           
  7441                           ;MotorDrive.c: 271: if(0)
  7442  0011A4  0100               	movlb	0	; () banked
  7443  0011A6  059F               	decf	(_hg_op+31)& (0+255),w,b
  7444  0011A8  A4D8               	btfss	status,2,c
  7445  0011AA  D0A2               	goto	l14585
  7446                           
  7447                           ; BSR set to: 0
  7448                           ;MotorDrive.c: 284: {
  7449                           ;MotorDrive.c: 287: if( hg_op.needle_len == 13)
  7450  0011AC  0E0D               	movlw	13
  7451  0011AE  0100               	movlb	0	; () banked
  7452  0011B0  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  7453  0011B2  A4D8               	btfss	status,2,c
  7454  0011B4  D043               	goto	l363
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;MotorDrive.c: 288: {
  7458                           ;MotorDrive.c: 289: hg_op.cnt_posa =0;
  7459  0011B6  0E00               	movlw	0
  7460  0011B8  0100               	movlb	0	; () banked
  7461  0011BA  6FA6               	movwf	(_hg_op+38)& (0+255),b
  7462  0011BC  0E00               	movlw	0
  7463  0011BE  6FA5               	movwf	(_hg_op+37)& (0+255),b
  7464                           
  7465                           ; BSR set to: 0
  7466                           
  7467                           ; BSR set to: 0
  7468                           
  7469                           ;MotorDrive.c: 290: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  7470  0011C0  848C               	bsf	3980,2,c	;volatile
  7471                           
  7472                           ; BSR set to: 0
  7473  0011C2  968C               	bcf	3980,3,c	;volatile
  7474                           
  7475                           ; BSR set to: 0
  7476  0011C4  888C               	bsf	3980,4,c	;volatile
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;MotorDrive.c: 293: if(hg_op.inject_len == 1)
  7480                           
  7481                           ; BSR set to: 0
  7482  0011C6  0100               	movlb	0	; () banked
  7483  0011C8  0598               	decf	(_hg_op+24)& (0+255),w,b
  7484  0011CA  0100               	movlb	0	; () banked
  7485  0011CC  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7486  0011CE  A4D8               	btfss	status,2,c
  7487  0011D0  D009               	goto	l14533
  7488  0011D2                     l14531:
  7489                           
  7490                           ; BSR set to: 0
  7491  0011D2  0100               	movlb	0	; () banked
  7492  0011D4  51A6               	movf	(_hg_op+38)& (0+255),w,b
  7493  0011D6  E124               	bnz	l358
  7494  0011D8  0EEC               	movlw	236
  7495  0011DA  0100               	movlb	0	; () banked
  7496  0011DC  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  7497  0011DE  B0D8               	btfsc	status,0,c
  7498  0011E0  D01F               	goto	l358
  7499  0011E2  D7F7               	goto	l14531
  7500  0011E4                     l14533:
  7501                           
  7502                           ; BSR set to: 0
  7503                           ;MotorDrive.c: 297: else if(hg_op.inject_len == 2)
  7504  0011E4  0E02               	movlw	2
  7505  0011E6  0100               	movlb	0	; () banked
  7506  0011E8  1998               	xorwf	(_hg_op+24)& (0+255),w,b
  7507  0011EA  0100               	movlb	0	; () banked
  7508  0011EC  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7509  0011EE  A4D8               	btfss	status,2,c
  7510  0011F0  D009               	goto	l14539
  7511  0011F2                     l14537:
  7512                           
  7513                           ; BSR set to: 0
  7514  0011F2  0E45               	movlw	69
  7515  0011F4  0100               	movlb	0	; () banked
  7516  0011F6  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  7517  0011F8  0E01               	movlw	1
  7518  0011FA  0100               	movlb	0	; () banked
  7519  0011FC  59A6               	subwfb	(_hg_op+38)& (0+255),w,b
  7520  0011FE  B0D8               	btfsc	status,0,c
  7521  001200  D00F               	goto	l358
  7522  001202  D7F7               	goto	l14537
  7523  001204                     l14539:
  7524                           
  7525                           ; BSR set to: 0
  7526                           ;MotorDrive.c: 301: else if(hg_op.inject_len == 0)
  7527  001204  0100               	movlb	0	; () banked
  7528  001206  5198               	movf	(_hg_op+24)& (0+255),w,b
  7529  001208  0100               	movlb	0	; () banked
  7530  00120A  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7531  00120C  A4D8               	btfss	status,2,c
  7532  00120E  D008               	goto	l358
  7533  001210                     l14543:
  7534                           
  7535                           ; BSR set to: 0
  7536  001210  0100               	movlb	0	; () banked
  7537  001212  51A6               	movf	(_hg_op+38)& (0+255),w,b
  7538  001214  E105               	bnz	l358
  7539  001216  0E94               	movlw	148
  7540  001218  0100               	movlb	0	; () banked
  7541  00121A  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  7542  00121C  A0D8               	btfss	status,0,c
  7543  00121E  D7F8               	goto	l14543
  7544  001220                     l358:
  7545                           
  7546                           ; BSR set to: 0
  7547  001220  948C               	bcf	3980,2,c	;volatile
  7548  001222  868C               	bsf	3980,3,c	;volatile
  7549  001224  888C               	bsf	3980,4,c	;volatile
  7550                           
  7551                           ; BSR set to: 0
  7552                           ;MotorDrive.c: 306: delaynus(15 * 1000);
  7553                           
  7554                           ; BSR set to: 0
  7555  001226  0E3A               	movlw	58
  7556  001228  0100               	movlb	0	; () banked
  7557  00122A  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7558  00122C  0E98               	movlw	152
  7559  00122E  6FFD               	movwf	delaynus@n& (0+255),b
  7560  001230  ECEB  F026         	call	_delaynus	;wreg free
  7561                           
  7562                           ;MotorDrive.c: 307: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  7563  001234  888C               	bsf	3980,4,c	;volatile
  7564  001236  948C               	bcf	3980,2,c	;volatile
  7565  001238  968C               	bcf	3980,3,c	;volatile
  7566                           
  7567                           ;MotorDrive.c: 311: }
  7568  00123A  D050               	goto	l14579
  7569  00123C                     l363:
  7570  00123C  888C               	bsf	3980,4,c	;volatile
  7571  00123E  948C               	bcf	3980,2,c	;volatile
  7572  001240  968C               	bcf	3980,3,c	;volatile
  7573                           
  7574                           ;MotorDrive.c: 315: LATDbits.LD4 =1;LATDbits.LD3 =0;LATDbits.LD2 =1;
  7575  001242  888C               	bsf	3980,4,c	;volatile
  7576  001244  968C               	bcf	3980,3,c	;volatile
  7577  001246  848C               	bsf	3980,2,c	;volatile
  7578                           
  7579                           ;MotorDrive.c: 325: if(hg_op.inject_len == 1)
  7580  001248  0100               	movlb	0	; () banked
  7581  00124A  0598               	decf	(_hg_op+24)& (0+255),w,b
  7582  00124C  0100               	movlb	0	; () banked
  7583  00124E  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7584  001250  A4D8               	btfss	status,2,c
  7585  001252  D00C               	goto	l14559
  7586  001254                     l14557:
  7587                           
  7588                           ; BSR set to: 0
  7589  001254  0100               	movlb	0	; () banked
  7590  001256  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  7591  001258  D7FD               	goto	l14557
  7592  00125A  0100               	movlb	0	; () banked
  7593  00125C  51AE               	movf	(_hg_op+46)& (0+255),w,b
  7594  00125E  E12A               	bnz	l380
  7595  001260  0EEC               	movlw	236
  7596  001262  0100               	movlb	0	; () banked
  7597  001264  5DAD               	subwf	(_hg_op+45)& (0+255),w,b
  7598  001266  B0D8               	btfsc	status,0,c
  7599  001268  D025               	goto	l380
  7600  00126A  D7F4               	goto	l14557
  7601  00126C                     l14559:
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;MotorDrive.c: 330: else if(hg_op.inject_len == 2)
  7605  00126C  0E02               	movlw	2
  7606  00126E  0100               	movlb	0	; () banked
  7607  001270  1998               	xorwf	(_hg_op+24)& (0+255),w,b
  7608  001272  0100               	movlb	0	; () banked
  7609  001274  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7610  001276  A4D8               	btfss	status,2,c
  7611  001278  D00C               	goto	l14565
  7612  00127A                     l14563:
  7613                           
  7614                           ; BSR set to: 0
  7615  00127A  0100               	movlb	0	; () banked
  7616  00127C  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  7617  00127E  D7FD               	goto	l14563
  7618  001280  0E45               	movlw	69
  7619  001282  0100               	movlb	0	; () banked
  7620  001284  5DAD               	subwf	(_hg_op+45)& (0+255),w,b
  7621  001286  0E01               	movlw	1
  7622  001288  0100               	movlb	0	; () banked
  7623  00128A  59AE               	subwfb	(_hg_op+46)& (0+255),w,b
  7624  00128C  B0D8               	btfsc	status,0,c
  7625  00128E  D012               	goto	l380
  7626  001290  D7F4               	goto	l14563
  7627  001292                     l14565:
  7628                           
  7629                           ; BSR set to: 0
  7630                           ;MotorDrive.c: 334: else if(hg_op.inject_len == 0)
  7631  001292  0100               	movlb	0	; () banked
  7632  001294  5198               	movf	(_hg_op+24)& (0+255),w,b
  7633  001296  0100               	movlb	0	; () banked
  7634  001298  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7635  00129A  A4D8               	btfss	status,2,c
  7636  00129C  D00B               	goto	l380
  7637  00129E                     l14569:
  7638                           
  7639                           ; BSR set to: 0
  7640  00129E  0100               	movlb	0	; () banked
  7641  0012A0  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  7642  0012A2  D7FD               	goto	l14569
  7643  0012A4  0100               	movlb	0	; () banked
  7644  0012A6  51AE               	movf	(_hg_op+46)& (0+255),w,b
  7645  0012A8  E105               	bnz	l380
  7646  0012AA  0E94               	movlw	148
  7647  0012AC  0100               	movlb	0	; () banked
  7648  0012AE  5DAD               	subwf	(_hg_op+45)& (0+255),w,b
  7649  0012B0  A0D8               	btfss	status,0,c
  7650  0012B2  D7F5               	goto	l14569
  7651  0012B4                     l380:
  7652                           
  7653                           ; BSR set to: 0
  7654  0012B4  948C               	bcf	3980,2,c	;volatile
  7655  0012B6  868C               	bsf	3980,3,c	;volatile
  7656  0012B8  888C               	bsf	3980,4,c	;volatile
  7657                           
  7658                           ; BSR set to: 0
  7659                           
  7660                           ; BSR set to: 0
  7661  0012BA  0E3A               	movlw	58
  7662  0012BC  0100               	movlb	0	; () banked
  7663  0012BE  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7664  0012C0  0E98               	movlw	152
  7665  0012C2  6FFD               	movwf	delaynus@n& (0+255),b
  7666  0012C4  ECEB  F026         	call	_delaynus	;wreg free
  7667  0012C8  888C               	bsf	3980,4,c	;volatile
  7668  0012CA  948C               	bcf	3980,2,c	;volatile
  7669  0012CC  968C               	bcf	3980,3,c	;volatile
  7670                           
  7671                           ;MotorDrive.c: 350: delaynus(30 *1000);
  7672  0012CE  0E75               	movlw	117
  7673  0012D0  0100               	movlb	0	; () banked
  7674  0012D2  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7675  0012D4  0E30               	movlw	48
  7676  0012D6  6FFD               	movwf	delaynus@n& (0+255),b
  7677  0012D8  ECEB  F026         	call	_delaynus	;wreg free
  7678  0012DC                     l14579:
  7679                           
  7680                           ;MotorDrive.c: 353: }
  7681                           ;MotorDrive.c: 355: hg_op.drops_sa = 0;
  7682  0012DC  0E00               	movlw	0
  7683  0012DE  0100               	movlb	0	; () banked
  7684  0012E0  6F9F               	movwf	(_hg_op+31)& (0+255),b
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;MotorDrive.c: 356: hg_op.drops_sb = 0;
  7688  0012E2  0E00               	movlw	0
  7689  0012E4  0100               	movlb	0	; () banked
  7690  0012E6  6FA0               	movwf	(_hg_op+32)& (0+255),b
  7691                           
  7692                           ; BSR set to: 0
  7693                           ;MotorDrive.c: 357: hg_op.drops_push = 1;
  7694  0012E8  0E01               	movlw	1
  7695  0012EA  0100               	movlb	0	; () banked
  7696  0012EC  6FA1               	movwf	(_hg_op+33)& (0+255),b
  7697                           
  7698                           ;MotorDrive.c: 361: }
  7699  0012EE  0012               	return	
  7700  0012F0                     l14585:
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;MotorDrive.c: 362: else if(hg_op.drops_push == 1)
  7704  0012F0  0100               	movlb	0	; () banked
  7705  0012F2  05A1               	decf	(_hg_op+33)& (0+255),w,b
  7706  0012F4  A4D8               	btfss	status,2,c
  7707  0012F6  D07E               	goto	l14621
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;MotorDrive.c: 363: {
  7711                           ;MotorDrive.c: 366: hg_op.cnt_push =0;
  7712  0012F8  0E00               	movlw	0
  7713  0012FA  0100               	movlb	0	; () banked
  7714  0012FC  6F8B               	movwf	(_hg_op+11)& (0+255),b
  7715  0012FE  0E00               	movlw	0
  7716  001300  6F8A               	movwf	(_hg_op+10)& (0+255),b
  7717                           
  7718                           ; BSR set to: 0
  7719                           
  7720                           ; BSR set to: 0
  7721                           
  7722                           ;MotorDrive.c: 370: do{T0IE=1;T0CONbits.TMR0ON =1;}while(0);
  7723  001302  8AF2               	bsf	intcon,5,c	;volatile
  7724                           
  7725                           ; BSR set to: 0
  7726  001304  8ED5               	bsf	4053,7,c	;volatile
  7727                           
  7728                           ; BSR set to: 0
  7729                           
  7730                           ; BSR set to: 0
  7731                           
  7732                           ;MotorDrive.c: 371: do{LATDbits.LD0 =1;LATDbits.LD1 =0; LATCbits.LC2 =1; }while(0);
  7733                           
  7734                           ; BSR set to: 0
  7735  001306  808C               	bsf	3980,0,c	;volatile
  7736                           
  7737                           ; BSR set to: 0
  7738  001308  928C               	bcf	3980,1,c	;volatile
  7739                           
  7740                           ; BSR set to: 0
  7741  00130A  848B               	bsf	3979,2,c	;volatile
  7742                           
  7743                           ; BSR set to: 0
  7744                           ;MotorDrive.c: 373: while(hg_op.cnt_push < hg_op.push_len)
  7745  00130C  D00E               	goto	l14607
  7746  00130E                     l393:
  7747  00130E  A880               	btfss	3968,4,c	;volatile
  7748  001310  D7FE               	goto	l393
  7749                           
  7750                           ;MotorDrive.c: 376: hg_op.cnt_push ++;
  7751  001312  0100               	movlb	0	; () banked
  7752  001314  4B8A               	infsnz	(_hg_op+10)& (0+255),f,b
  7753  001316  2B8B               	incf	(_hg_op+11)& (0+255),f,b
  7754  001318                     l396:
  7755  001318  B880               	btfsc	3968,4,c	;volatile
  7756  00131A  D7FE               	goto	l396
  7757                           
  7758                           ;MotorDrive.c: 378: hg_op.cnt_push ++;
  7759  00131C  0100               	movlb	0	; () banked
  7760  00131E  4B8A               	infsnz	(_hg_op+10)& (0+255),f,b
  7761  001320  2B8B               	incf	(_hg_op+11)& (0+255),f,b
  7762                           
  7763                           ; BSR set to: 0
  7764                           ;MotorDrive.c: 380: if(hg_op.flag_warning_ma == 1)
  7765  001322  0100               	movlb	0	; () banked
  7766  001324  058E               	decf	(_hg_op+14)& (0+255),w,b
  7767  001326  B4D8               	btfsc	status,2,c
  7768  001328  D00F               	goto	l401
  7769  00132A                     l14607:
  7770                           
  7771                           ; BSR set to: 0
  7772  00132A  0100               	movlb	0	; () banked
  7773  00132C  519D               	movf	(_hg_op+29)& (0+255),w,b
  7774  00132E  0101               	movlb	1	; () banked
  7775  001330  6F2C               	movwf	??_drops_routine& (0+255),b
  7776  001332  6B2D               	clrf	(??_drops_routine+1)& (0+255),b
  7777  001334  0101               	movlb	1	; () banked
  7778  001336  512C               	movf	??_drops_routine& (0+255),w,b
  7779  001338  0100               	movlb	0	; () banked
  7780  00133A  5D8A               	subwf	(_hg_op+10)& (0+255),w,b
  7781  00133C  0101               	movlb	1	; () banked
  7782  00133E  512D               	movf	(??_drops_routine+1)& (0+255),w,b
  7783  001340  0100               	movlb	0	; () banked
  7784  001342  598B               	subwfb	(_hg_op+11)& (0+255),w,b
  7785  001344  A0D8               	btfss	status,0,c
  7786  001346  D7E3               	goto	l393
  7787  001348                     l401:
  7788                           
  7789                           ; BSR set to: 0
  7790  001348  848B               	bsf	3979,2,c	;volatile
  7791  00134A  908C               	bcf	3980,0,c	;volatile
  7792  00134C  928C               	bcf	3980,1,c	;volatile
  7793                           
  7794                           ; BSR set to: 0
  7795                           
  7796                           ; BSR set to: 0
  7797                           ;MotorDrive.c: 386: do{T0IE=0;T0IF = 0;T0CONbits.TMR0ON =0;}while(0);
  7798  00134E  9AF2               	bcf	intcon,5,c	;volatile
  7799  001350  94F2               	bcf	intcon,2,c	;volatile
  7800  001352  9ED5               	bcf	4053,7,c	;volatile
  7801                           
  7802                           ; BSR set to: 0
  7803                           ;MotorDrive.c: 387: if(hg_op.flag_warning_ma == 1)
  7804                           
  7805                           ; BSR set to: 0
  7806  001354  0100               	movlb	0	; () banked
  7807  001356  058E               	decf	(_hg_op+14)& (0+255),w,b
  7808  001358  A4D8               	btfss	status,2,c
  7809  00135A  D042               	goto	l14619
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;MotorDrive.c: 388: {
  7813                           ;MotorDrive.c: 390: hg_op.drops_sa = 0;
  7814  00135C  0E00               	movlw	0
  7815  00135E  0100               	movlb	0	; () banked
  7816  001360  6F9F               	movwf	(_hg_op+31)& (0+255),b
  7817                           
  7818                           ;MotorDrive.c: 391: hg_op.drops_push = 0;
  7819  001362  0E00               	movlw	0
  7820  001364  0100               	movlb	0	; () banked
  7821  001366  6FA1               	movwf	(_hg_op+33)& (0+255),b
  7822                           
  7823                           ;MotorDrive.c: 392: hg_op.drops_sb = 0;
  7824  001368  0E00               	movlw	0
  7825  00136A  0100               	movlb	0	; () banked
  7826  00136C  6FA0               	movwf	(_hg_op+32)& (0+255),b
  7827                           
  7828                           ;MotorDrive.c: 395: while(PORTBbits.RB5 == 0)
  7829  00136E  D02C               	goto	l14615
  7830  001370                     l14613:
  7831                           
  7832                           ;MotorDrive.c: 396: {
  7833                           ;MotorDrive.c: 397: buzz();
  7834  001370  EC09  F027         	call	_buzz	;wreg free
  7835                           
  7836                           ;MotorDrive.c: 398: delaynus(50*1000);delaynus(50*1000);
  7837  001374  0EC3               	movlw	195
  7838  001376  0100               	movlb	0	; () banked
  7839  001378  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7840  00137A  0E50               	movlw	80
  7841  00137C  6FFD               	movwf	delaynus@n& (0+255),b
  7842  00137E  ECEB  F026         	call	_delaynus	;wreg free
  7843  001382  0EC3               	movlw	195
  7844  001384  0100               	movlb	0	; () banked
  7845  001386  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7846  001388  0E50               	movlw	80
  7847  00138A  6FFD               	movwf	delaynus@n& (0+255),b
  7848  00138C  ECEB  F026         	call	_delaynus	;wreg free
  7849                           
  7850                           ;MotorDrive.c: 399: delaynus(50*1000);delaynus(50*1000);
  7851  001390  0EC3               	movlw	195
  7852  001392  0100               	movlb	0	; () banked
  7853  001394  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7854  001396  0E50               	movlw	80
  7855  001398  6FFD               	movwf	delaynus@n& (0+255),b
  7856  00139A  ECEB  F026         	call	_delaynus	;wreg free
  7857  00139E  0EC3               	movlw	195
  7858  0013A0  0100               	movlb	0	; () banked
  7859  0013A2  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7860  0013A4  0E50               	movlw	80
  7861  0013A6  6FFD               	movwf	delaynus@n& (0+255),b
  7862  0013A8  ECEB  F026         	call	_delaynus	;wreg free
  7863                           
  7864                           ;MotorDrive.c: 400: delaynus(50*1000);delaynus(50*1000);
  7865  0013AC  0EC3               	movlw	195
  7866  0013AE  0100               	movlb	0	; () banked
  7867  0013B0  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7868  0013B2  0E50               	movlw	80
  7869  0013B4  6FFD               	movwf	delaynus@n& (0+255),b
  7870  0013B6  ECEB  F026         	call	_delaynus	;wreg free
  7871  0013BA  0EC3               	movlw	195
  7872  0013BC  0100               	movlb	0	; () banked
  7873  0013BE  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7874  0013C0  0E50               	movlw	80
  7875  0013C2  6FFD               	movwf	delaynus@n& (0+255),b
  7876  0013C4  ECEB  F026         	call	_delaynus	;wreg free
  7877  0013C8                     l14615:
  7878  0013C8  AA81               	btfss	3969,5,c	;volatile
  7879  0013CA  D7D2               	goto	l14613
  7880                           
  7881                           ;MotorDrive.c: 402: }
  7882                           ;MotorDrive.c: 405: hg_op.flag_warning_ma =0;
  7883  0013CC  0E00               	movlw	0
  7884  0013CE  0100               	movlb	0	; () banked
  7885  0013D0  6F8E               	movwf	(_hg_op+14)& (0+255),b
  7886                           
  7887                           ;MotorDrive.c: 406: hg_op.need_reset =1;
  7888  0013D2  0E01               	movlw	1
  7889  0013D4  0100               	movlb	0	; () banked
  7890  0013D6  6F85               	movwf	(_hg_op+5)& (0+255),b
  7891                           
  7892                           ;MotorDrive.c: 407: hg_op.working_mode = 0x03;
  7893  0013D8  0E03               	movlw	3
  7894  0013DA  0100               	movlb	0	; () banked
  7895  0013DC  6F80               	movwf	_hg_op& (0+255),b
  7896                           
  7897                           ;MotorDrive.c: 409: }
  7898  0013DE  0012               	return	
  7899  0013E0                     l14619:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;MotorDrive.c: 410: else
  7903                           ;MotorDrive.c: 411: {
  7904                           ;MotorDrive.c: 416: hg_op.drops_sa = 0;
  7905  0013E0  0E00               	movlw	0
  7906  0013E2  0100               	movlb	0	; () banked
  7907  0013E4  6F9F               	movwf	(_hg_op+31)& (0+255),b
  7908                           
  7909                           ;MotorDrive.c: 417: hg_op.drops_push = 0;
  7910  0013E6  0E00               	movlw	0
  7911  0013E8  0100               	movlb	0	; () banked
  7912  0013EA  6FA1               	movwf	(_hg_op+33)& (0+255),b
  7913                           
  7914                           ;MotorDrive.c: 418: hg_op.drops_sb = 1;
  7915  0013EC  0E01               	movlw	1
  7916  0013EE  0100               	movlb	0	; () banked
  7917  0013F0  6FA0               	movwf	(_hg_op+32)& (0+255),b
  7918                           
  7919                           ; BSR set to: 0
  7920                           ;MotorDrive.c: 420: }
  7921                           ;MotorDrive.c: 422: }
  7922  0013F2  0012               	return	
  7923  0013F4                     l14621:
  7924                           
  7925                           ; BSR set to: 0
  7926                           ;MotorDrive.c: 423: else if(hg_op.drops_sb == 1)
  7927  0013F4  0100               	movlb	0	; () banked
  7928  0013F6  05A0               	decf	(_hg_op+32)& (0+255),w,b
  7929  0013F8  A4D8               	btfss	status,2,c
  7930  0013FA  0012               	return	
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;MotorDrive.c: 424: {
  7934                           ;MotorDrive.c: 429: if(hg_op.needle_len == 13)
  7935  0013FC  0E0D               	movlw	13
  7936  0013FE  0100               	movlb	0	; () banked
  7937  001400  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  7938  001402  A4D8               	btfss	status,2,c
  7939  001404  D012               	goto	l412
  7940                           
  7941                           ; BSR set to: 0
  7942                           
  7943                           ;MotorDrive.c: 430: {
  7944                           ;MotorDrive.c: 431: do{LATDbits.LD2 =0;LATDbits.LD3 =1; LATDbits.LD4 =1;}while(0);
  7945  001406  948C               	bcf	3980,2,c	;volatile
  7946  001408  868C               	bsf	3980,3,c	;volatile
  7947  00140A  888C               	bsf	3980,4,c	;volatile
  7948  00140C                     l415:
  7949  00140C  B081               	btfsc	3969,0,c	;volatile
  7950  00140E  D7FE               	goto	l415
  7951                           
  7952                           ;MotorDrive.c: 433: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  7953  001410  848C               	bsf	3980,2,c	;volatile
  7954  001412  968C               	bcf	3980,3,c	;volatile
  7955  001414  888C               	bsf	3980,4,c	;volatile
  7956                           
  7957                           ;MotorDrive.c: 434: delaynus(12 * 1000);
  7958  001416  0E2E               	movlw	46
  7959  001418  0100               	movlb	0	; () banked
  7960  00141A  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7961  00141C  0EE0               	movlw	224
  7962  00141E  6FFD               	movwf	delaynus@n& (0+255),b
  7963  001420  ECEB  F026         	call	_delaynus	;wreg free
  7964  001424  D019               	goto	l14637
  7965  001426                     l14629:
  7966  001426  948C               	bcf	3980,2,c	;volatile
  7967  001428  D019               	goto	l14641
  7968  00142A                     l412:
  7969                           
  7970                           ; BSR set to: 0
  7971                           ;MotorDrive.c: 438: else
  7972                           ;MotorDrive.c: 439: {
  7973                           ;MotorDrive.c: 440: LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =1;
  7974  00142A  888C               	bsf	3980,4,c	;volatile
  7975  00142C  948C               	bcf	3980,2,c	;volatile
  7976  00142E  868C               	bsf	3980,3,c	;volatile
  7977  001430                     l14633:
  7978                           
  7979                           ; BSR set to: 0
  7980  001430  0100               	movlb	0	; () banked
  7981  001432  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  7982  001434  D007               	goto	l427
  7983  001436  0100               	movlb	0	; () banked
  7984  001438  51AE               	movf	(_hg_op+46)& (0+255),w,b
  7985  00143A  E1FA               	bnz	l14633
  7986  00143C  0100               	movlb	0	; () banked
  7987  00143E  05AD               	decf	(_hg_op+45)& (0+255),w,b
  7988  001440  B0D8               	btfsc	status,0,c
  7989  001442  D7F6               	goto	l14633
  7990  001444                     l427:
  7991                           
  7992                           ; BSR set to: 0
  7993  001444  848C               	bsf	3980,2,c	;volatile
  7994  001446  968C               	bcf	3980,3,c	;volatile
  7995  001448  888C               	bsf	3980,4,c	;volatile
  7996                           
  7997                           ; BSR set to: 0
  7998                           
  7999                           ; BSR set to: 0
  8000  00144A  0E3A               	movlw	58
  8001  00144C  0100               	movlb	0	; () banked
  8002  00144E  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8003  001450  0E98               	movlw	152
  8004  001452  6FFD               	movwf	delaynus@n& (0+255),b
  8005  001454  ECEB  F026         	call	_delaynus	;wreg free
  8006  001458                     l14637:
  8007  001458  888C               	bsf	3980,4,c	;volatile
  8008  00145A  D7E5               	goto	l14629
  8009  00145C                     l14641:
  8010  00145C  968C               	bcf	3980,3,c	;volatile
  8011                           
  8012                           ;MotorDrive.c: 445: }
  8013                           ;MotorDrive.c: 450: delaynus(hg_op.work_freq);
  8014  00145E  C09B  F0FD         	movff	_hg_op+27,delaynus@n
  8015  001462  C09C  F0FE         	movff	_hg_op+28,delaynus@n+1
  8016  001466  ECEB  F026         	call	_delaynus	;wreg free
  8017                           
  8018                           ;MotorDrive.c: 455: if(PORTBbits.RB5 == 1)
  8019  00146A  AA81               	btfss	3969,5,c	;volatile
  8020  00146C  D039               	goto	l432
  8021                           
  8022                           ;MotorDrive.c: 456: {
  8023                           ;MotorDrive.c: 457: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  8024  00146E  888C               	bsf	3980,4,c	;volatile
  8025  001470  948C               	bcf	3980,2,c	;volatile
  8026  001472  968C               	bcf	3980,3,c	;volatile
  8027                           
  8028                           ;MotorDrive.c: 458: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  8029  001474  848B               	bsf	3979,2,c	;volatile
  8030  001476  908C               	bcf	3980,0,c	;volatile
  8031  001478  928C               	bcf	3980,1,c	;volatile
  8032                           
  8033                           ;MotorDrive.c: 460: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  8034  00147A  908C               	bcf	3980,0,c	;volatile
  8035  00147C  828C               	bsf	3980,1,c	;volatile
  8036  00147E  848B               	bsf	3979,2,c	;volatile
  8037                           
  8038                           ;MotorDrive.c: 463: while(cnt_push < 260)
  8039  001480  D00A               	goto	l14649
  8040  001482                     l441:
  8041  001482  A880               	btfss	3968,4,c	;volatile
  8042  001484  D7FE               	goto	l441
  8043                           
  8044                           ;MotorDrive.c: 466: cnt_push ++;
  8045  001486  0101               	movlb	1	; () banked
  8046  001488  4B2E               	infsnz	drops_routine@cnt_push& (0+255),f,b
  8047  00148A  2B2F               	incf	(drops_routine@cnt_push+1)& (0+255),f,b
  8048  00148C                     l444:
  8049  00148C  B880               	btfsc	3968,4,c	;volatile
  8050  00148E  D7FE               	goto	l444
  8051                           
  8052                           ;MotorDrive.c: 468: cnt_push ++;
  8053  001490  0101               	movlb	1	; () banked
  8054  001492  4B2E               	infsnz	drops_routine@cnt_push& (0+255),f,b
  8055  001494  2B2F               	incf	(drops_routine@cnt_push+1)& (0+255),f,b
  8056  001496                     l14649:
  8057  001496  0E04               	movlw	4
  8058  001498  0101               	movlb	1	; () banked
  8059  00149A  5D2E               	subwf	drops_routine@cnt_push& (0+255),w,b
  8060  00149C  0E01               	movlw	1
  8061  00149E  0101               	movlb	1	; () banked
  8062  0014A0  592F               	subwfb	(drops_routine@cnt_push+1)& (0+255),w,b
  8063  0014A2  A0D8               	btfss	status,0,c
  8064  0014A4  D7EE               	goto	l441
  8065                           
  8066                           ; BSR set to: 1
  8067                           
  8068                           ; BSR set to: 1
  8069                           ;MotorDrive.c: 470: }
  8070                           ;MotorDrive.c: 472: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  8071  0014A6  848B               	bsf	3979,2,c	;volatile
  8072  0014A8  908C               	bcf	3980,0,c	;volatile
  8073  0014AA  928C               	bcf	3980,1,c	;volatile
  8074                           
  8075                           ; BSR set to: 1
  8076                           ;MotorDrive.c: 474: hg_op.drops_sa = 0;
  8077                           
  8078                           ; BSR set to: 1
  8079  0014AC  0E00               	movlw	0
  8080  0014AE  0100               	movlb	0	; () banked
  8081  0014B0  6F9F               	movwf	(_hg_op+31)& (0+255),b
  8082                           
  8083                           ;MotorDrive.c: 475: hg_op.drops_sb = 0;
  8084  0014B2  0E00               	movlw	0
  8085  0014B4  0100               	movlb	0	; () banked
  8086  0014B6  6FA0               	movwf	(_hg_op+32)& (0+255),b
  8087                           
  8088                           ;MotorDrive.c: 476: hg_op.drops_push = 0;
  8089  0014B8  0E00               	movlw	0
  8090  0014BA  0100               	movlb	0	; () banked
  8091  0014BC  6FA1               	movwf	(_hg_op+33)& (0+255),b
  8092                           
  8093                           ;MotorDrive.c: 479: hg_op.acting_flag =0;
  8094  0014BE  0E00               	movlw	0
  8095  0014C0  0100               	movlb	0	; () banked
  8096  0014C2  6F9E               	movwf	(_hg_op+30)& (0+255),b
  8097                           
  8098                           ; BSR set to: 0
  8099                           ;MotorDrive.c: 482: if(hg_op.needle_len == 13)
  8100  0014C4  0E0D               	movlw	13
  8101  0014C6  0100               	movlb	0	; () banked
  8102  0014C8  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  8103  0014CA  A4D8               	btfss	status,2,c
  8104  0014CC  D002               	goto	l14657
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;MotorDrive.c: 483: {
  8108                           ;MotorDrive.c: 484: hg_op.need_reset =0;
  8109  0014CE  0E00               	movlw	0
  8110  0014D0  D001               	goto	L3
  8111  0014D2                     l14657:
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;MotorDrive.c: 486: else
  8115                           ;MotorDrive.c: 487: {
  8116                           ;MotorDrive.c: 488: hg_op.need_reset =1;
  8117  0014D2  0E01               	movlw	1
  8118  0014D4                     L3:
  8119  0014D4  0100               	movlb	0	; () banked
  8120  0014D6  6F85               	movwf	(_hg_op+5)& (0+255),b
  8121                           
  8122                           ; BSR set to: 0
  8123                           ;MotorDrive.c: 489: }
  8124                           ;MotorDrive.c: 491: hg_op.working_mode = 0x03;
  8125  0014D8  0E03               	movlw	3
  8126  0014DA  0100               	movlb	0	; () banked
  8127  0014DC  6F80               	movwf	_hg_op& (0+255),b
  8128                           
  8129                           ;MotorDrive.c: 493: }
  8130  0014DE  0012               	return	
  8131  0014E0                     l432:
  8132                           
  8133                           ;MotorDrive.c: 494: else if(PORTBbits.RB5 == 0)
  8134  0014E0  BA81               	btfsc	3969,5,c	;volatile
  8135  0014E2  0012               	return	
  8136                           
  8137                           ;MotorDrive.c: 495: {
  8138                           ;MotorDrive.c: 497: hg_op.drops_sb = 0;
  8139  0014E4  0E00               	movlw	0
  8140  0014E6  0100               	movlb	0	; () banked
  8141  0014E8  6FA0               	movwf	(_hg_op+32)& (0+255),b
  8142                           
  8143                           ;MotorDrive.c: 498: hg_op.drops_push =0;
  8144  0014EA  0E00               	movlw	0
  8145  0014EC  0100               	movlb	0	; () banked
  8146  0014EE  6FA1               	movwf	(_hg_op+33)& (0+255),b
  8147                           
  8148                           ;MotorDrive.c: 499: hg_op.drops_sa = 1;
  8149  0014F0  0E01               	movlw	1
  8150  0014F2  0100               	movlb	0	; () banked
  8151  0014F4  6F9F               	movwf	(_hg_op+31)& (0+255),b
  8152                           
  8153                           ; BSR set to: 0
  8154                           
  8155                           ; BSR set to: 0
  8156                           
  8157                           ; BSR set to: 0
  8158                           
  8159                           ; BSR set to: 0
  8160                           
  8161                           ; BSR set to: 0
  8162  0014F6  0012               	return	
  8163  0014F8                     __end_of_drops_routine:
  8164                           	opt stack 0
  8165                           tblptru	equ	0xFF8
  8166                           tblptrh	equ	0xFF7
  8167                           tblptrl	equ	0xFF6
  8168                           tablat	equ	0xFF5
  8169                           prodh	equ	0xFF4
  8170                           prodl	equ	0xFF3
  8171                           intcon	equ	0xFF2
  8172                           intcon3	equ	0xFF0
  8173                           postinc0	equ	0xFEE
  8174                           wreg	equ	0xFE8
  8175                           postdec1	equ	0xFE5
  8176                           fsr1h	equ	0xFE2
  8177                           fsr1l	equ	0xFE1
  8178                           status	equ	0xFD8
  8179                           
  8180 ;; *************** function _check_ui_status *****************
  8181 ;; Defined at:
  8182 ;;		line 1659 in file "../gui.c"
  8183 ;; Parameters:    Size  Location     Type
  8184 ;;		None
  8185 ;; Auto vars:     Size  Location     Type
  8186 ;;		None
  8187 ;; Return value:  Size  Location     Type
  8188 ;;                  1    wreg      void 
  8189 ;; Registers used:
  8190 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8191 ;; Tracked objects:
  8192 ;;		On entry : 0/0
  8193 ;;		On exit  : 0/0
  8194 ;;		Unchanged: 0/0
  8195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8196 ;;      Params:         0       0       0       0       0       0       0
  8197 ;;      Locals:         0       0       0       0       0       0       0
  8198 ;;      Temps:          0       0       0       0       0       0       0
  8199 ;;      Totals:         0       0       0       0       0       0       0
  8200 ;;Total ram usage:        0 bytes
  8201 ;; Hardware stack levels used:    1
  8202 ;; Hardware stack levels required when called:    7
  8203 ;; This function calls:
  8204 ;;		_display_cmode
  8205 ;;		_display_drop
  8206 ;;		_display_drops
  8207 ;;		_display_frame_abc
  8208 ;;		_display_frame_de
  8209 ;;		_display_frame_fghi
  8210 ;;		_display_num
  8211 ;; This function is called by:
  8212 ;;		_main
  8213 ;; This function uses a non-reentrant model
  8214 ;;
  8215                           
  8216                           	psect	text13
  8217  001B64                     __ptext13:
  8218                           	opt stack 0
  8219  001B64                     _check_ui_status:
  8220                           	opt stack 23
  8221                           
  8222                           ;gui.c: 1661: static uint32_t cnt_ui_check =0;
  8223                           ;gui.c: 1662: if(menu[0].mode != 0)
  8224                           
  8225                           ;incstack = 0
  8226  001B64  5002               	movf	_menu+1,w,c
  8227  001B66  B4D8               	btfsc	status,2,c
  8228  001B68  D04D               	goto	l14921
  8229                           
  8230                           ;gui.c: 1663: {
  8231                           ;gui.c: 1664: cnt_ui_check ++;
  8232  001B6A  0E01               	movlw	1
  8233  001B6C  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8234  001B6E  0E00               	movlw	0
  8235  001B70  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8236  001B72  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8237  001B74  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8238                           
  8239                           ;gui.c: 1666: if(cnt_ui_check > 200000)
  8240  001B76  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8241  001B78  E108               	bnz	u18900
  8242  001B7A  0E41               	movlw	65
  8243  001B7C  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8244  001B7E  0E0D               	movlw	13
  8245  001B80  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8246  001B82  0E03               	movlw	3
  8247  001B84  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8248  001B86  A0D8               	btfss	status,0,c
  8249  001B88  0012               	return	
  8250  001B8A                     u18900:
  8251                           
  8252                           ;gui.c: 1667: {
  8253                           ;gui.c: 1668: display_frame_abc(1,71, 0);
  8254  001B8A  0E47               	movlw	71
  8255  001B8C  0101               	movlb	1	; () banked
  8256  001B8E  6F31               	movwf	display_frame_abc@x& (0+255),b
  8257  001B90  0E00               	movlw	0
  8258  001B92  0101               	movlb	1	; () banked
  8259  001B94  6F32               	movwf	display_frame_abc@mode& (0+255),b
  8260  001B96  0E01               	movlw	1
  8261  001B98  EC68  F016         	call	_display_frame_abc
  8262                           
  8263                           ;gui.c: 1669: if(menu[0].value == 0x00)
  8264  001B9C  5005               	movf	_menu+4,w,c
  8265  001B9E  A4D8               	btfss	status,2,c
  8266  001BA0  D00A               	goto	l14907
  8267                           
  8268                           ;gui.c: 1670: {
  8269                           ;gui.c: 1671: display_cmode(1,(71 + 2),0);
  8270  001BA2  0E49               	movlw	73
  8271  001BA4  0101               	movlb	1	; () banked
  8272  001BA6  6F31               	movwf	display_cmode@x& (0+255),b
  8273  001BA8  0E00               	movlw	0
  8274  001BAA  0101               	movlb	1	; () banked
  8275  001BAC  6F32               	movwf	display_cmode@mode& (0+255),b
  8276  001BAE  0E01               	movlw	1
  8277  001BB0  EC20  F01F         	call	_display_cmode
  8278                           
  8279                           ;gui.c: 1672: }
  8280  001BB4  D01A               	goto	l14915
  8281  001BB6                     l14907:
  8282                           
  8283                           ;gui.c: 1673: else if(menu[0].value == 0x02)
  8284  001BB6  0E02               	movlw	2
  8285  001BB8  1805               	xorwf	_menu+4,w,c
  8286  001BBA  A4D8               	btfss	status,2,c
  8287  001BBC  D00A               	goto	l14911
  8288                           
  8289                           ;gui.c: 1674: {
  8290                           ;gui.c: 1675: display_drop(1,(71 + 2),0);
  8291  001BBE  0E49               	movlw	73
  8292  001BC0  0101               	movlb	1	; () banked
  8293  001BC2  6F31               	movwf	display_drop@x& (0+255),b
  8294  001BC4  0E00               	movlw	0
  8295  001BC6  0101               	movlb	1	; () banked
  8296  001BC8  6F32               	movwf	display_drop@mode& (0+255),b
  8297  001BCA  0E01               	movlw	1
  8298  001BCC  EC60  F01E         	call	_display_drop
  8299                           
  8300                           ;gui.c: 1676: }
  8301  001BD0  D00C               	goto	l14915
  8302  001BD2                     l14911:
  8303                           
  8304                           ;gui.c: 1677: else if(menu[0].value == 0x01)
  8305  001BD2  0405               	decf	_menu+4,w,c
  8306  001BD4  A4D8               	btfss	status,2,c
  8307  001BD6  D009               	goto	l14915
  8308                           
  8309                           ;gui.c: 1678: {
  8310                           ;gui.c: 1679: display_drops(1,(71 + 2),0);
  8311  001BD8  0E49               	movlw	73
  8312  001BDA  0101               	movlb	1	; () banked
  8313  001BDC  6F31               	movwf	display_drops@x& (0+255),b
  8314  001BDE  0E00               	movlw	0
  8315  001BE0  0101               	movlb	1	; () banked
  8316  001BE2  6F32               	movwf	display_drops@mode& (0+255),b
  8317  001BE4  0E01               	movlw	1
  8318  001BE6  ECA0  F01D         	call	_display_drops
  8319  001BEA                     l14915:
  8320                           
  8321                           ;gui.c: 1680: }
  8322                           ;gui.c: 1681: menu[0].mode = 0;
  8323  001BEA  0E00               	movlw	0
  8324  001BEC  6E02               	movwf	_menu+1,c
  8325                           
  8326                           ;gui.c: 1682: cnt_ui_check =0;
  8327  001BEE  0E00               	movlw	0
  8328  001BF0  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8329  001BF2  0E00               	movlw	0
  8330  001BF4  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8331  001BF6  0E00               	movlw	0
  8332  001BF8  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8333  001BFA  0E00               	movlw	0
  8334  001BFC  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8335                           
  8336                           ;gui.c: 1684: work_mode = menu[0].value ;
  8337  001BFE  C005  F04D         	movff	_menu+4,_work_mode
  8338                           
  8339                           ;gui.c: 1687: }
  8340                           ;gui.c: 1688: }
  8341  001C02  0012               	return	
  8342  001C04                     l14921:
  8343                           
  8344                           ;gui.c: 1689: else if(menu[1].mode != 0)
  8345  001C04  500A               	movf	_menu+9,w,c
  8346  001C06  B4D8               	btfsc	status,2,c
  8347  001C08  D003               	goto	l14925
  8348                           
  8349                           ;gui.c: 1690: {
  8350                           ;gui.c: 1691: menu[1].mode = 0;
  8351  001C0A  0E00               	movlw	0
  8352  001C0C  6E0A               	movwf	_menu+9,c
  8353                           
  8354                           ;gui.c: 1692: }
  8355  001C0E  0012               	return	
  8356  001C10                     l14925:
  8357                           
  8358                           ;gui.c: 1693: else if(menu[2].mode != 0)
  8359  001C10  5012               	movf	_menu+17,w,c
  8360  001C12  B4D8               	btfsc	status,2,c
  8361  001C14  D003               	goto	l14929
  8362                           
  8363                           ;gui.c: 1694: {
  8364                           ;gui.c: 1695: menu[2].mode = 0;
  8365  001C16  0E00               	movlw	0
  8366  001C18  6E12               	movwf	_menu+17,c
  8367                           
  8368                           ;gui.c: 1696: }
  8369  001C1A  0012               	return	
  8370  001C1C                     l14929:
  8371                           
  8372                           ;gui.c: 1697: else if(menu[3].mode != 0)
  8373  001C1C  501A               	movf	_menu+25,w,c
  8374  001C1E  B4D8               	btfsc	status,2,c
  8375  001C20  D03E               	goto	l14947
  8376                           
  8377                           ;gui.c: 1698: {
  8378                           ;gui.c: 1700: cnt_ui_check ++;
  8379  001C22  0E01               	movlw	1
  8380  001C24  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8381  001C26  0E00               	movlw	0
  8382  001C28  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8383  001C2A  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8384  001C2C  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8385                           
  8386                           ;gui.c: 1701: if(cnt_ui_check > 200000)
  8387  001C2E  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8388  001C30  E108               	bnz	u18970
  8389  001C32  0E41               	movlw	65
  8390  001C34  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8391  001C36  0E0D               	movlw	13
  8392  001C38  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8393  001C3A  0E03               	movlw	3
  8394  001C3C  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8395  001C3E  A0D8               	btfss	status,0,c
  8396  001C40  0012               	return	
  8397  001C42                     u18970:
  8398                           
  8399                           ;gui.c: 1702: {
  8400                           ;gui.c: 1704: display_frame_de(1,49, 0);
  8401  001C42  0E31               	movlw	49
  8402  001C44  0101               	movlb	1	; () banked
  8403  001C46  6F31               	movwf	display_frame_de@x& (0+255),b
  8404  001C48  0E00               	movlw	0
  8405  001C4A  0101               	movlb	1	; () banked
  8406  001C4C  6F32               	movwf	display_frame_de@mode& (0+255),b
  8407  001C4E  0E01               	movlw	1
  8408  001C50  EC09  F000         	call	_display_frame_de
  8409                           
  8410                           ;gui.c: 1705: display_num(0,(49 + 14), 0|menu[3].value);
  8411  001C54  0E3F               	movlw	63
  8412  001C56  0101               	movlb	1	; () banked
  8413  001C58  6F31               	movwf	display_num@x& (0+255),b
  8414  001C5A  C01D  F132         	movff	_menu+28,display_num@mode
  8415  001C5E  0E00               	movlw	0
  8416  001C60  ECF0  F006         	call	_display_num
  8417                           
  8418                           ;gui.c: 1709: if(menu[3].value == 4)
  8419  001C64  0E04               	movlw	4
  8420  001C66  181D               	xorwf	_menu+28,w,c
  8421  001C68  A4D8               	btfss	status,2,c
  8422  001C6A  D002               	goto	l14939
  8423                           
  8424                           ;gui.c: 1710: {
  8425                           ;gui.c: 1711: menu[3].parameter =0;
  8426  001C6C  0E00               	movlw	0
  8427  001C6E  D00B               	goto	L5
  8428  001C70                     l14939:
  8429                           
  8430                           ;gui.c: 1713: else if(menu[3].value == 6)
  8431  001C70  0E06               	movlw	6
  8432  001C72  181D               	xorwf	_menu+28,w,c
  8433  001C74  A4D8               	btfss	status,2,c
  8434  001C76  D002               	goto	l14943
  8435                           
  8436                           ;gui.c: 1714: {
  8437                           ;gui.c: 1715: menu[3].parameter =1;
  8438  001C78  0E01               	movlw	1
  8439  001C7A  D005               	goto	L5
  8440  001C7C                     l14943:
  8441                           
  8442                           ;gui.c: 1717: else if(menu[3].value == 13)
  8443  001C7C  0E0D               	movlw	13
  8444  001C7E  181D               	xorwf	_menu+28,w,c
  8445  001C80  A4D8               	btfss	status,2,c
  8446  001C82  D002               	goto	l1921
  8447                           
  8448                           ;gui.c: 1718: {
  8449                           ;gui.c: 1719: menu[3].parameter =2;
  8450  001C84  0E02               	movlw	2
  8451  001C86                     L5:
  8452  001C86  6E1E               	movwf	_menu+29,c
  8453  001C88                     l1921:
  8454                           
  8455                           ;gui.c: 1720: }
  8456                           ;gui.c: 1722: menu[3].mode = 0;
  8457  001C88  0E00               	movlw	0
  8458  001C8A  6E1A               	movwf	_menu+25,c
  8459                           
  8460                           ;gui.c: 1723: cnt_ui_check =0;
  8461  001C8C  0E00               	movlw	0
  8462  001C8E  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8463  001C90  0E00               	movlw	0
  8464  001C92  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8465  001C94  0E00               	movlw	0
  8466  001C96  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8467  001C98  0E00               	movlw	0
  8468  001C9A  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8469                           
  8470                           ;gui.c: 1725: }
  8471                           ;gui.c: 1726: }
  8472  001C9C  0012               	return	
  8473  001C9E                     l14947:
  8474                           
  8475                           ;gui.c: 1727: else if(menu[4].mode != 0)
  8476  001C9E  5022               	movf	_menu+33,w,c
  8477  001CA0  B4D8               	btfsc	status,2,c
  8478  001CA2  D03C               	goto	l14965
  8479                           
  8480                           ;gui.c: 1728: {
  8481                           ;gui.c: 1730: cnt_ui_check ++;
  8482  001CA4  0E01               	movlw	1
  8483  001CA6  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8484  001CA8  0E00               	movlw	0
  8485  001CAA  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8486  001CAC  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8487  001CAE  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8488                           
  8489                           ;gui.c: 1731: if(cnt_ui_check > 200000)
  8490  001CB0  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8491  001CB2  E108               	bnz	u19020
  8492  001CB4  0E41               	movlw	65
  8493  001CB6  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8494  001CB8  0E0D               	movlw	13
  8495  001CBA  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8496  001CBC  0E03               	movlw	3
  8497  001CBE  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8498  001CC0  A0D8               	btfss	status,0,c
  8499  001CC2  0012               	return	
  8500  001CC4                     u19020:
  8501                           
  8502                           ;gui.c: 1732: {
  8503                           ;gui.c: 1733: display_frame_de(2,0, 0);
  8504  001CC4  0E00               	movlw	0
  8505  001CC6  0101               	movlb	1	; () banked
  8506  001CC8  6F31               	movwf	display_frame_de@x& (0+255),b
  8507  001CCA  0E00               	movlw	0
  8508  001CCC  0101               	movlb	1	; () banked
  8509  001CCE  6F32               	movwf	display_frame_de@mode& (0+255),b
  8510  001CD0  0E02               	movlw	2
  8511  001CD2  EC09  F000         	call	_display_frame_de
  8512                           
  8513                           ;gui.c: 1734: display_num(0,(0 + 14), 0|menu[4].value);
  8514  001CD6  0E0E               	movlw	14
  8515  001CD8  0101               	movlb	1	; () banked
  8516  001CDA  6F31               	movwf	display_num@x& (0+255),b
  8517  001CDC  C025  F132         	movff	_menu+36,display_num@mode
  8518  001CE0  0E00               	movlw	0
  8519  001CE2  ECF0  F006         	call	_display_num
  8520                           
  8521                           ;gui.c: 1736: if(menu[4].value == 1)
  8522  001CE6  0425               	decf	_menu+36,w,c
  8523  001CE8  A4D8               	btfss	status,2,c
  8524  001CEA  D002               	goto	l14957
  8525                           
  8526                           ;gui.c: 1737: {
  8527                           ;gui.c: 1738: menu[4].parameter =0;
  8528  001CEC  0E00               	movlw	0
  8529  001CEE  D00A               	goto	L7
  8530  001CF0                     l14957:
  8531                           
  8532                           ;gui.c: 1740: else if(menu[4].value == 2)
  8533  001CF0  0E02               	movlw	2
  8534  001CF2  1825               	xorwf	_menu+36,w,c
  8535  001CF4  A4D8               	btfss	status,2,c
  8536  001CF6  D002               	goto	l14961
  8537                           
  8538                           ;gui.c: 1741: {
  8539                           ;gui.c: 1742: menu[4].parameter =1;
  8540  001CF8  0E01               	movlw	1
  8541  001CFA  D004               	goto	L7
  8542  001CFC                     l14961:
  8543                           
  8544                           ;gui.c: 1744: else if(menu[4].value == 0)
  8545  001CFC  5025               	movf	_menu+36,w,c
  8546  001CFE  A4D8               	btfss	status,2,c
  8547  001D00  D002               	goto	l1929
  8548                           
  8549                           ;gui.c: 1745: {
  8550                           ;gui.c: 1746: menu[4].parameter =2;
  8551  001D02  0E02               	movlw	2
  8552  001D04                     L7:
  8553  001D04  6E26               	movwf	_menu+37,c
  8554  001D06                     l1929:
  8555                           
  8556                           ;gui.c: 1747: }
  8557                           ;gui.c: 1749: menu[4].mode = 0;
  8558  001D06  0E00               	movlw	0
  8559  001D08  6E22               	movwf	_menu+33,c
  8560                           
  8561                           ;gui.c: 1750: cnt_ui_check =0;
  8562  001D0A  0E00               	movlw	0
  8563  001D0C  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8564  001D0E  0E00               	movlw	0
  8565  001D10  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8566  001D12  0E00               	movlw	0
  8567  001D14  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8568  001D16  0E00               	movlw	0
  8569  001D18  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8570                           
  8571                           ;gui.c: 1751: }
  8572                           ;gui.c: 1752: }
  8573  001D1A  0012               	return	
  8574  001D1C                     l14965:
  8575                           
  8576                           ;gui.c: 1753: else if(menu[5].mode != 0)
  8577  001D1C  502A               	movf	_menu+41,w,c
  8578  001D1E  B4D8               	btfsc	status,2,c
  8579  001D20  D03D               	goto	l14983
  8580                           
  8581                           ;gui.c: 1754: {
  8582                           ;gui.c: 1756: cnt_ui_check ++;
  8583  001D22  0E01               	movlw	1
  8584  001D24  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8585  001D26  0E00               	movlw	0
  8586  001D28  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8587  001D2A  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8588  001D2C  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8589                           
  8590                           ;gui.c: 1757: if(cnt_ui_check > 200000)
  8591  001D2E  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8592  001D30  E108               	bnz	u19070
  8593  001D32  0E41               	movlw	65
  8594  001D34  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8595  001D36  0E0D               	movlw	13
  8596  001D38  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8597  001D3A  0E03               	movlw	3
  8598  001D3C  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8599  001D3E  A0D8               	btfss	status,0,c
  8600  001D40  0012               	return	
  8601  001D42                     u19070:
  8602                           
  8603                           ;gui.c: 1758: {
  8604                           ;gui.c: 1759: display_frame_fghi(1,49, 0);
  8605  001D42  0E31               	movlw	49
  8606  001D44  0101               	movlb	1	; () banked
  8607  001D46  6F31               	movwf	display_frame_fghi@x& (0+255),b
  8608  001D48  0E00               	movlw	0
  8609  001D4A  0101               	movlb	1	; () banked
  8610  001D4C  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  8611  001D4E  0E01               	movlw	1
  8612  001D50  EC7C  F00A         	call	_display_frame_fghi
  8613                           
  8614                           ;gui.c: 1760: display_num(3,(49 + 14), 0|menu[5].value);
  8615  001D54  0E3F               	movlw	63
  8616  001D56  0101               	movlb	1	; () banked
  8617  001D58  6F31               	movwf	display_num@x& (0+255),b
  8618  001D5A  C02D  F132         	movff	_menu+44,display_num@mode
  8619  001D5E  0E03               	movlw	3
  8620  001D60  ECF0  F006         	call	_display_num
  8621                           
  8622                           ;gui.c: 1763: if(menu[5].value == 1)
  8623  001D64  042D               	decf	_menu+44,w,c
  8624  001D66  A4D8               	btfss	status,2,c
  8625  001D68  D002               	goto	l14975
  8626                           
  8627                           ;gui.c: 1764: {
  8628                           ;gui.c: 1765: menu[5].parameter =0;
  8629  001D6A  0E00               	movlw	0
  8630  001D6C  D00B               	goto	L9
  8631  001D6E                     l14975:
  8632                           
  8633                           ;gui.c: 1767: else if(menu[5].value == 106)
  8634  001D6E  0E6A               	movlw	106
  8635  001D70  182D               	xorwf	_menu+44,w,c
  8636  001D72  A4D8               	btfss	status,2,c
  8637  001D74  D002               	goto	l14979
  8638                           
  8639                           ;gui.c: 1768: {
  8640                           ;gui.c: 1769: menu[5].parameter =1;
  8641  001D76  0E01               	movlw	1
  8642  001D78  D005               	goto	L9
  8643  001D7A                     l14979:
  8644                           
  8645                           ;gui.c: 1771: else if(menu[5].value == 5)
  8646  001D7A  0E05               	movlw	5
  8647  001D7C  182D               	xorwf	_menu+44,w,c
  8648  001D7E  A4D8               	btfss	status,2,c
  8649  001D80  D002               	goto	l1937
  8650                           
  8651                           ;gui.c: 1772: {
  8652                           ;gui.c: 1773: menu[5].parameter =2;
  8653  001D82  0E02               	movlw	2
  8654  001D84                     L9:
  8655  001D84  6E2E               	movwf	_menu+45,c
  8656  001D86                     l1937:
  8657                           
  8658                           ;gui.c: 1774: }
  8659                           ;gui.c: 1779: menu[5].mode = 0;
  8660  001D86  0E00               	movlw	0
  8661  001D88  6E2A               	movwf	_menu+41,c
  8662                           
  8663                           ;gui.c: 1780: cnt_ui_check =0;
  8664  001D8A  0E00               	movlw	0
  8665  001D8C  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8666  001D8E  0E00               	movlw	0
  8667  001D90  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8668  001D92  0E00               	movlw	0
  8669  001D94  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8670  001D96  0E00               	movlw	0
  8671  001D98  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8672                           
  8673                           ;gui.c: 1781: }
  8674                           ;gui.c: 1782: }
  8675  001D9A  0012               	return	
  8676  001D9C                     l14983:
  8677                           
  8678                           ;gui.c: 1783: else if(menu[6].mode != 0)
  8679  001D9C  5032               	movf	_menu+49,w,c
  8680  001D9E  B4D8               	btfsc	status,2,c
  8681  001DA0  D065               	goto	l15021
  8682                           
  8683                           ;gui.c: 1784: {
  8684                           ;gui.c: 1785: cnt_ui_check ++;
  8685  001DA2  0E01               	movlw	1
  8686  001DA4  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8687  001DA6  0E00               	movlw	0
  8688  001DA8  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8689  001DAA  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8690  001DAC  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8691                           
  8692                           ;gui.c: 1786: if(cnt_ui_check > 200000)
  8693  001DAE  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8694  001DB0  E108               	bnz	u19120
  8695  001DB2  0E41               	movlw	65
  8696  001DB4  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8697  001DB6  0E0D               	movlw	13
  8698  001DB8  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8699  001DBA  0E03               	movlw	3
  8700  001DBC  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8701  001DBE  A0D8               	btfss	status,0,c
  8702  001DC0  0012               	return	
  8703  001DC2                     u19120:
  8704                           
  8705                           ;gui.c: 1787: {
  8706                           ;gui.c: 1789: if(hg_op.cur_working_mode == 0x00)
  8707  001DC2  0100               	movlb	0	; () banked
  8708  001DC4  5181               	movf	(_hg_op+1)& (0+255),w,b
  8709  001DC6  A4D8               	btfss	status,2,c
  8710  001DC8  D012               	goto	l14991
  8711                           
  8712                           ; BSR set to: 0
  8713                           ;gui.c: 1790: {
  8714                           ;gui.c: 1791: display_frame_fghi(2,0, 0);
  8715  001DCA  0E00               	movlw	0
  8716  001DCC  0101               	movlb	1	; () banked
  8717  001DCE  6F31               	movwf	display_frame_fghi@x& (0+255),b
  8718  001DD0  0E00               	movlw	0
  8719  001DD2  0101               	movlb	1	; () banked
  8720  001DD4  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  8721  001DD6  0E02               	movlw	2
  8722  001DD8  EC7C  F00A         	call	_display_frame_fghi
  8723                           
  8724                           ;gui.c: 1792: display_num(3,(0 + 14), 0|menu[6].value);
  8725  001DDC  0E0E               	movlw	14
  8726  001DDE  0101               	movlb	1	; () banked
  8727  001DE0  6F31               	movwf	display_num@x& (0+255),b
  8728  001DE2  C035  F132         	movff	_menu+52,display_num@mode
  8729  001DE6  0E03               	movlw	3
  8730  001DE8  ECF0  F006         	call	_display_num
  8731                           
  8732                           ;gui.c: 1793: }
  8733  001DEC  D034               	goto	l1945
  8734  001DEE                     l14991:
  8735                           
  8736                           ;gui.c: 1794: else if(hg_op.cur_working_mode == 0x01)
  8737  001DEE  0100               	movlb	0	; () banked
  8738  001DF0  0581               	decf	(_hg_op+1)& (0+255),w,b
  8739  001DF2  A4D8               	btfss	status,2,c
  8740  001DF4  D01D               	goto	l15007
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;gui.c: 1795: {
  8744                           ;gui.c: 1796: display_frame_fghi(3,0, 0);
  8745  001DF6  0E00               	movlw	0
  8746  001DF8  0101               	movlb	1	; () banked
  8747  001DFA  6F31               	movwf	display_frame_fghi@x& (0+255),b
  8748  001DFC  0E00               	movlw	0
  8749  001DFE  0101               	movlb	1	; () banked
  8750  001E00  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  8751  001E02  0E03               	movlw	3
  8752  001E04  EC7C  F00A         	call	_display_frame_fghi
  8753                           
  8754                           ;gui.c: 1797: display_num(3,(0 + 17), 0|menu[6].value);
  8755  001E08  0E11               	movlw	17
  8756  001E0A  0101               	movlb	1	; () banked
  8757  001E0C  6F31               	movwf	display_num@x& (0+255),b
  8758  001E0E  C035  F132         	movff	_menu+52,display_num@mode
  8759  001E12  0E03               	movlw	3
  8760  001E14  ECF0  F006         	call	_display_num
  8761                           
  8762                           ;gui.c: 1799: if(menu[6].value == 103)
  8763  001E18  0E67               	movlw	103
  8764  001E1A  1835               	xorwf	_menu+52,w,c
  8765  001E1C  A4D8               	btfss	status,2,c
  8766  001E1E  D002               	goto	l14999
  8767  001E20                     l14997:
  8768                           
  8769                           ;gui.c: 1800: {
  8770                           ;gui.c: 1801: menu[6].parameter =0;
  8771  001E20  0E00               	movlw	0
  8772  001E22  D018               	goto	L14
  8773  001E24                     l14999:
  8774                           
  8775                           ;gui.c: 1803: else if(menu[6].value == 102)
  8776  001E24  0E66               	movlw	102
  8777  001E26  1835               	xorwf	_menu+52,w,c
  8778  001E28  A4D8               	btfss	status,2,c
  8779  001E2A  D00F               	goto	l15017
  8780  001E2C                     l15001:
  8781                           
  8782                           ;gui.c: 1804: {
  8783                           ;gui.c: 1805: menu[6].parameter =1;
  8784  001E2C  0E01               	movlw	1
  8785  001E2E  D012               	goto	L14
  8786  001E30                     l15007:
  8787                           
  8788                           ;gui.c: 1814: else if(hg_op.cur_working_mode == 0x02)
  8789  001E30  0E02               	movlw	2
  8790  001E32  0100               	movlb	0	; () banked
  8791  001E34  1981               	xorwf	(_hg_op+1)& (0+255),w,b
  8792  001E36  A4D8               	btfss	status,2,c
  8793  001E38  D00E               	goto	l1945
  8794                           
  8795                           ; BSR set to: 0
  8796                           ;gui.c: 1815: {
  8797                           ;gui.c: 1817: if(menu[6].value == 103)
  8798  001E3A  0E67               	movlw	103
  8799  001E3C  1835               	xorwf	_menu+52,w,c
  8800  001E3E  B4D8               	btfsc	status,2,c
  8801  001E40  D7EF               	goto	l14997
  8802                           
  8803                           ; BSR set to: 0
  8804                           ;gui.c: 1821: else if(menu[6].value == 102)
  8805                           
  8806                           ; BSR set to: 0
  8807                           
  8808                           ;gui.c: 1820: }
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;gui.c: 1818: {
  8812                           ;gui.c: 1819: menu[6].parameter =0;
  8813  001E42  0E66               	movlw	102
  8814  001E44  1835               	xorwf	_menu+52,w,c
  8815  001E46  B4D8               	btfsc	status,2,c
  8816  001E48  D7F1               	goto	l15001
  8817  001E4A                     l15017:
  8818                           
  8819                           ; BSR set to: 0
  8820                           ;gui.c: 1825: else if(menu[6].value == 101)
  8821  001E4A  0E65               	movlw	101
  8822  001E4C  1835               	xorwf	_menu+52,w,c
  8823  001E4E  A4D8               	btfss	status,2,c
  8824  001E50  D002               	goto	l1945
  8825                           
  8826                           ; BSR set to: 0
  8827                           ;gui.c: 1826: {
  8828                           ;gui.c: 1827: menu[6].parameter =2;
  8829  001E52  0E02               	movlw	2
  8830  001E54                     L14:
  8831  001E54  6E36               	movwf	_menu+53,c
  8832  001E56                     l1945:
  8833                           
  8834                           ;gui.c: 1828: }
  8835                           ;gui.c: 1832: }
  8836                           ;gui.c: 1834: menu[6].mode = 0;
  8837  001E56  0E00               	movlw	0
  8838  001E58  6E32               	movwf	_menu+49,c
  8839                           
  8840                           ;gui.c: 1835: cnt_ui_check =0;
  8841  001E5A  0E00               	movlw	0
  8842  001E5C  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8843  001E5E  0E00               	movlw	0
  8844  001E60  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8845  001E62  0E00               	movlw	0
  8846  001E64  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8847  001E66  0E00               	movlw	0
  8848  001E68  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8849                           
  8850                           ;gui.c: 1836: }
  8851                           ;gui.c: 1837: }
  8852  001E6A  0012               	return	
  8853  001E6C                     l15021:
  8854                           
  8855                           ;gui.c: 1838: else
  8856                           ;gui.c: 1839: {
  8857                           ;gui.c: 1840: cnt_ui_check =0;
  8858  001E6C  0E00               	movlw	0
  8859  001E6E  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8860  001E70  0E00               	movlw	0
  8861  001E72  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8862  001E74  0E00               	movlw	0
  8863  001E76  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8864  001E78  0E00               	movlw	0
  8865  001E7A  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8866  001E7C  0012               	return	
  8867  001E7E                     __end_of_check_ui_status:
  8868                           	opt stack 0
  8869                           tblptru	equ	0xFF8
  8870                           tblptrh	equ	0xFF7
  8871                           tblptrl	equ	0xFF6
  8872                           tablat	equ	0xFF5
  8873                           prodh	equ	0xFF4
  8874                           prodl	equ	0xFF3
  8875                           intcon	equ	0xFF2
  8876                           intcon3	equ	0xFF0
  8877                           postinc0	equ	0xFEE
  8878                           wreg	equ	0xFE8
  8879                           postdec1	equ	0xFE5
  8880                           fsr1h	equ	0xFE2
  8881                           fsr1l	equ	0xFE1
  8882                           status	equ	0xFD8
  8883                           
  8884 ;; *************** function _check_ui_blink *****************
  8885 ;; Defined at:
  8886 ;;		line 2270 in file "../gui.c"
  8887 ;; Parameters:    Size  Location     Type
  8888 ;;		None
  8889 ;; Auto vars:     Size  Location     Type
  8890 ;;		None
  8891 ;; Return value:  Size  Location     Type
  8892 ;;                  1    wreg      void 
  8893 ;; Registers used:
  8894 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8895 ;; Tracked objects:
  8896 ;;		On entry : 0/0
  8897 ;;		On exit  : 0/0
  8898 ;;		Unchanged: 0/0
  8899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8900 ;;      Params:         0       0       0       0       0       0       0
  8901 ;;      Locals:         0       0       0       0       0       0       0
  8902 ;;      Temps:          0       0       0       0       0       0       0
  8903 ;;      Totals:         0       0       0       0       0       0       0
  8904 ;;Total ram usage:        0 bytes
  8905 ;; Hardware stack levels used:    1
  8906 ;; Hardware stack levels required when called:    8
  8907 ;; This function calls:
  8908 ;;		_blink_mode
  8909 ;; This function is called by:
  8910 ;;		_main
  8911 ;; This function uses a non-reentrant model
  8912 ;;
  8913                           
  8914                           	psect	text14
  8915  004E56                     __ptext14:
  8916                           	opt stack 0
  8917  004E56                     _check_ui_blink:
  8918                           	opt stack 22
  8919                           
  8920                           ;gui.c: 2274: if(flag_blink)
  8921                           
  8922                           ;incstack = 0
  8923  004E56  5050               	movf	_flag_blink,w,c
  8924  004E58  B4D8               	btfsc	status,2,c
  8925  004E5A  0012               	return	
  8926                           
  8927                           ;gui.c: 2275: {
  8928                           ;gui.c: 2276: blink_mode();
  8929  004E5C  EC22  F00C         	call	_blink_mode	;wreg free
  8930                           
  8931                           ;gui.c: 2277: flag_blink =0;
  8932  004E60  0E00               	movlw	0
  8933  004E62  6E50               	movwf	_flag_blink,c
  8934  004E64  0012               	return	
  8935  004E66                     __end_of_check_ui_blink:
  8936                           	opt stack 0
  8937                           tblptru	equ	0xFF8
  8938                           tblptrh	equ	0xFF7
  8939                           tblptrl	equ	0xFF6
  8940                           tablat	equ	0xFF5
  8941                           prodh	equ	0xFF4
  8942                           prodl	equ	0xFF3
  8943                           intcon	equ	0xFF2
  8944                           intcon3	equ	0xFF0
  8945                           postinc0	equ	0xFEE
  8946                           wreg	equ	0xFE8
  8947                           postdec1	equ	0xFE5
  8948                           fsr1h	equ	0xFE2
  8949                           fsr1l	equ	0xFE1
  8950                           status	equ	0xFD8
  8951                           
  8952 ;; *************** function _blink_mode *****************
  8953 ;; Defined at:
  8954 ;;		line 2059 in file "../gui.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;		None
  8957 ;; Auto vars:     Size  Location     Type
  8958 ;;		None
  8959 ;; Return value:  Size  Location     Type
  8960 ;;                  1    wreg      void 
  8961 ;; Registers used:
  8962 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8963 ;; Tracked objects:
  8964 ;;		On entry : 0/0
  8965 ;;		On exit  : 0/0
  8966 ;;		Unchanged: 0/0
  8967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8968 ;;      Params:         0       0       0       0       0       0       0
  8969 ;;      Locals:         0       0       0       0       0       0       0
  8970 ;;      Temps:          0       0       0       0       0       0       0
  8971 ;;      Totals:         0       0       0       0       0       0       0
  8972 ;;Total ram usage:        0 bytes
  8973 ;; Hardware stack levels used:    1
  8974 ;; Hardware stack levels required when called:    7
  8975 ;; This function calls:
  8976 ;;		_display_blank_mode_pa
  8977 ;;		_display_cmode
  8978 ;;		_display_drop
  8979 ;;		_display_drops
  8980 ;;		_display_n_blank
  8981 ;;		_display_num
  8982 ;; This function is called by:
  8983 ;;		_check_ui_blink
  8984 ;; This function uses a non-reentrant model
  8985 ;;
  8986                           
  8987                           	psect	text15
  8988  001844                     __ptext15:
  8989                           	opt stack 0
  8990  001844                     _blink_mode:
  8991                           	opt stack 22
  8992                           
  8993                           ;gui.c: 2075: if(menu[0].mode == 3)
  8994                           
  8995                           ;incstack = 0
  8996  001844  0E03               	movlw	3
  8997  001846  1802               	xorwf	_menu+1,w,c
  8998  001848  A4D8               	btfss	status,2,c
  8999  00184A  D03C               	goto	l14233
  9000                           
  9001                           ;gui.c: 2076: {
  9002                           ;gui.c: 2077: if(flip == 1)
  9003  00184C  044E               	decf	_flip,w,c
  9004  00184E  A4D8               	btfss	status,2,c
  9005  001850  D00C               	goto	l14219
  9006                           
  9007                           ;gui.c: 2078: {
  9008                           ;gui.c: 2079: display_blank_mode_pa(0,(71 + 2),0x80);
  9009  001852  0E49               	movlw	73
  9010  001854  0101               	movlb	1	; () banked
  9011  001856  6F31               	movwf	display_blank_mode_pa@x& (0+255),b
  9012  001858  0E80               	movlw	128
  9013  00185A  0101               	movlb	1	; () banked
  9014  00185C  6F32               	movwf	display_blank_mode_pa@mode& (0+255),b
  9015  00185E  0E00               	movlw	0
  9016  001860  ECE0  F01C         	call	_display_blank_mode_pa
  9017                           
  9018                           ;gui.c: 2080: flip =0;
  9019  001864  0E00               	movlw	0
  9020  001866  6E4E               	movwf	_flip,c
  9021                           
  9022                           ;gui.c: 2081: }
  9023  001868  0012               	return	
  9024  00186A                     l14219:
  9025                           
  9026                           ;gui.c: 2082: else if(flip == 0)
  9027  00186A  504E               	movf	_flip,w,c
  9028  00186C  A4D8               	btfss	status,2,c
  9029  00186E  0012               	return	
  9030                           
  9031                           ;gui.c: 2083: {
  9032                           ;gui.c: 2084: flip =1;
  9033  001870  0E01               	movlw	1
  9034  001872  6E4E               	movwf	_flip,c
  9035                           
  9036                           ;gui.c: 2085: if(work_mode == 0x00)
  9037  001874  504D               	movf	_work_mode,w,c
  9038  001876  A4D8               	btfss	status,2,c
  9039  001878  D00A               	goto	l14225
  9040                           
  9041                           ;gui.c: 2086: {
  9042                           ;gui.c: 2087: display_cmode(0,(71 + 2), 0x80);
  9043  00187A  0E49               	movlw	73
  9044  00187C  0101               	movlb	1	; () banked
  9045  00187E  6F31               	movwf	display_cmode@x& (0+255),b
  9046  001880  0E80               	movlw	128
  9047  001882  0101               	movlb	1	; () banked
  9048  001884  6F32               	movwf	display_cmode@mode& (0+255),b
  9049  001886  0E00               	movlw	0
  9050  001888  EC20  F01F         	call	_display_cmode
  9051                           
  9052                           ;gui.c: 2088: }
  9053  00188C  0012               	return	
  9054  00188E                     l14225:
  9055                           
  9056                           ;gui.c: 2089: else if(work_mode == 0x01)
  9057  00188E  044D               	decf	_work_mode,w,c
  9058  001890  A4D8               	btfss	status,2,c
  9059  001892  D00A               	goto	l14229
  9060                           
  9061                           ;gui.c: 2090: {
  9062                           ;gui.c: 2091: display_drops(0,(71 + 2), 0x80);
  9063  001894  0E49               	movlw	73
  9064  001896  0101               	movlb	1	; () banked
  9065  001898  6F31               	movwf	display_drops@x& (0+255),b
  9066  00189A  0E80               	movlw	128
  9067  00189C  0101               	movlb	1	; () banked
  9068  00189E  6F32               	movwf	display_drops@mode& (0+255),b
  9069  0018A0  0E00               	movlw	0
  9070  0018A2  ECA0  F01D         	call	_display_drops
  9071                           
  9072                           ;gui.c: 2092: }
  9073  0018A6  0012               	return	
  9074  0018A8                     l14229:
  9075                           
  9076                           ;gui.c: 2093: else if(work_mode == 0x02)
  9077  0018A8  0E02               	movlw	2
  9078  0018AA  184D               	xorwf	_work_mode,w,c
  9079  0018AC  A4D8               	btfss	status,2,c
  9080  0018AE  0012               	return	
  9081                           
  9082                           ;gui.c: 2094: {
  9083                           ;gui.c: 2095: display_drop(0,(71 + 2), 0x80);
  9084  0018B0  0E49               	movlw	73
  9085  0018B2  0101               	movlb	1	; () banked
  9086  0018B4  6F31               	movwf	display_drop@x& (0+255),b
  9087  0018B6  0E80               	movlw	128
  9088  0018B8  0101               	movlb	1	; () banked
  9089  0018BA  6F32               	movwf	display_drop@mode& (0+255),b
  9090  0018BC  0E00               	movlw	0
  9091  0018BE  EC60  F01E         	call	_display_drop
  9092                           
  9093                           ;gui.c: 2096: }
  9094                           ;gui.c: 2097: }
  9095                           ;gui.c: 2098: }
  9096  0018C2  0012               	return	
  9097  0018C4                     l14233:
  9098                           
  9099                           ;gui.c: 2099: else if(menu[3].mode == 3)
  9100  0018C4  0E03               	movlw	3
  9101  0018C6  181A               	xorwf	_menu+25,w,c
  9102  0018C8  A4D8               	btfss	status,2,c
  9103  0018CA  D03C               	goto	l14255
  9104                           
  9105                           ;gui.c: 2100: {
  9106                           ;gui.c: 2102: if(flip == 1)
  9107  0018CC  044E               	decf	_flip,w,c
  9108  0018CE  A4D8               	btfss	status,2,c
  9109  0018D0  D00C               	goto	l14241
  9110                           
  9111                           ;gui.c: 2103: {
  9112                           ;gui.c: 2104: display_n_blank(1,(49 + 14), 0x80);
  9113  0018D2  0E3F               	movlw	63
  9114  0018D4  0101               	movlb	1	; () banked
  9115  0018D6  6F31               	movwf	display_n_blank@x& (0+255),b
  9116  0018D8  0E80               	movlw	128
  9117  0018DA  0101               	movlb	1	; () banked
  9118  0018DC  6F32               	movwf	display_n_blank@mode& (0+255),b
  9119  0018DE  0E01               	movlw	1
  9120  0018E0  ECAE  F002         	call	_display_n_blank
  9121                           
  9122                           ;gui.c: 2105: flip =0;
  9123  0018E4  0E00               	movlw	0
  9124  0018E6  6E4E               	movwf	_flip,c
  9125                           
  9126                           ;gui.c: 2106: }
  9127  0018E8  0012               	return	
  9128  0018EA                     l14241:
  9129                           
  9130                           ;gui.c: 2107: else if(flip == 0)
  9131  0018EA  504E               	movf	_flip,w,c
  9132  0018EC  A4D8               	btfss	status,2,c
  9133  0018EE  0012               	return	
  9134                           
  9135                           ;gui.c: 2108: {
  9136                           ;gui.c: 2109: flip =1;
  9137  0018F0  0E01               	movlw	1
  9138  0018F2  6E4E               	movwf	_flip,c
  9139                           
  9140                           ;gui.c: 2110: if(menu[3].parameter == 0)
  9141  0018F4  501E               	movf	_menu+29,w,c
  9142  0018F6  A4D8               	btfss	status,2,c
  9143  0018F8  D00A               	goto	l14247
  9144                           
  9145                           ;gui.c: 2111: {
  9146                           ;gui.c: 2112: display_num(0,(49 + 14), 0x80 | 4);
  9147  0018FA  0E3F               	movlw	63
  9148  0018FC  0101               	movlb	1	; () banked
  9149  0018FE  6F31               	movwf	display_num@x& (0+255),b
  9150  001900  0E84               	movlw	132
  9151  001902  0101               	movlb	1	; () banked
  9152  001904  6F32               	movwf	display_num@mode& (0+255),b
  9153  001906  0E00               	movlw	0
  9154  001908  ECF0  F006         	call	_display_num
  9155                           
  9156                           ;gui.c: 2113: }
  9157  00190C  0012               	return	
  9158  00190E                     l14247:
  9159                           
  9160                           ;gui.c: 2114: else if(menu[3].parameter == 1)
  9161  00190E  041E               	decf	_menu+29,w,c
  9162  001910  A4D8               	btfss	status,2,c
  9163  001912  D00A               	goto	l14251
  9164                           
  9165                           ;gui.c: 2115: {
  9166                           ;gui.c: 2116: display_num(0,(49 + 14), 0x80 | 6);
  9167  001914  0E3F               	movlw	63
  9168  001916  0101               	movlb	1	; () banked
  9169  001918  6F31               	movwf	display_num@x& (0+255),b
  9170  00191A  0E86               	movlw	134
  9171  00191C  0101               	movlb	1	; () banked
  9172  00191E  6F32               	movwf	display_num@mode& (0+255),b
  9173  001920  0E00               	movlw	0
  9174  001922  ECF0  F006         	call	_display_num
  9175                           
  9176                           ;gui.c: 2117: }
  9177  001926  0012               	return	
  9178  001928                     l14251:
  9179                           
  9180                           ;gui.c: 2118: else if(menu[3].parameter == 2)
  9181  001928  0E02               	movlw	2
  9182  00192A  181E               	xorwf	_menu+29,w,c
  9183  00192C  A4D8               	btfss	status,2,c
  9184  00192E  0012               	return	
  9185                           
  9186                           ;gui.c: 2119: {
  9187                           ;gui.c: 2120: display_num(0,(49 + 14), 0x80 | 13);
  9188  001930  0E3F               	movlw	63
  9189  001932  0101               	movlb	1	; () banked
  9190  001934  6F31               	movwf	display_num@x& (0+255),b
  9191  001936  0E8D               	movlw	141
  9192  001938  0101               	movlb	1	; () banked
  9193  00193A  6F32               	movwf	display_num@mode& (0+255),b
  9194  00193C  0E00               	movlw	0
  9195  00193E  ECF0  F006         	call	_display_num
  9196                           
  9197                           ;gui.c: 2121: }
  9198                           ;gui.c: 2123: }
  9199                           ;gui.c: 2124: }
  9200  001942  0012               	return	
  9201  001944                     l14255:
  9202                           
  9203                           ;gui.c: 2125: else if(menu[4].mode == 3)
  9204  001944  0E03               	movlw	3
  9205  001946  1822               	xorwf	_menu+33,w,c
  9206  001948  A4D8               	btfss	status,2,c
  9207  00194A  D03C               	goto	l14277
  9208                           
  9209                           ;gui.c: 2126: {
  9210                           ;gui.c: 2128: if(flip == 1)
  9211  00194C  044E               	decf	_flip,w,c
  9212  00194E  A4D8               	btfss	status,2,c
  9213  001950  D00C               	goto	l14263
  9214                           
  9215                           ;gui.c: 2129: {
  9216                           ;gui.c: 2130: display_n_blank(1,(0 + 14), 0x80);
  9217  001952  0E0E               	movlw	14
  9218  001954  0101               	movlb	1	; () banked
  9219  001956  6F31               	movwf	display_n_blank@x& (0+255),b
  9220  001958  0E80               	movlw	128
  9221  00195A  0101               	movlb	1	; () banked
  9222  00195C  6F32               	movwf	display_n_blank@mode& (0+255),b
  9223  00195E  0E01               	movlw	1
  9224  001960  ECAE  F002         	call	_display_n_blank
  9225                           
  9226                           ;gui.c: 2131: flip =0;
  9227  001964  0E00               	movlw	0
  9228  001966  6E4E               	movwf	_flip,c
  9229                           
  9230                           ;gui.c: 2132: }
  9231  001968  0012               	return	
  9232  00196A                     l14263:
  9233                           
  9234                           ;gui.c: 2133: else if(flip == 0)
  9235  00196A  504E               	movf	_flip,w,c
  9236  00196C  A4D8               	btfss	status,2,c
  9237  00196E  0012               	return	
  9238                           
  9239                           ;gui.c: 2134: {
  9240                           ;gui.c: 2135: flip =1;
  9241  001970  0E01               	movlw	1
  9242  001972  6E4E               	movwf	_flip,c
  9243                           
  9244                           ;gui.c: 2136: if(menu[4].parameter == 0)
  9245  001974  5026               	movf	_menu+37,w,c
  9246  001976  A4D8               	btfss	status,2,c
  9247  001978  D00A               	goto	l14269
  9248                           
  9249                           ;gui.c: 2137: {
  9250                           ;gui.c: 2138: display_num(0,(0 + 14), 0x80 | 1);
  9251  00197A  0E0E               	movlw	14
  9252  00197C  0101               	movlb	1	; () banked
  9253  00197E  6F31               	movwf	display_num@x& (0+255),b
  9254  001980  0E81               	movlw	129
  9255  001982  0101               	movlb	1	; () banked
  9256  001984  6F32               	movwf	display_num@mode& (0+255),b
  9257  001986  0E00               	movlw	0
  9258  001988  ECF0  F006         	call	_display_num
  9259                           
  9260                           ;gui.c: 2139: }
  9261  00198C  0012               	return	
  9262  00198E                     l14269:
  9263                           
  9264                           ;gui.c: 2140: else if(menu[4].parameter == 1)
  9265  00198E  0426               	decf	_menu+37,w,c
  9266  001990  A4D8               	btfss	status,2,c
  9267  001992  D00A               	goto	l14273
  9268                           
  9269                           ;gui.c: 2141: {
  9270                           ;gui.c: 2142: display_num(0,(0 + 14), 0x80 | 2);
  9271  001994  0E0E               	movlw	14
  9272  001996  0101               	movlb	1	; () banked
  9273  001998  6F31               	movwf	display_num@x& (0+255),b
  9274  00199A  0E82               	movlw	130
  9275  00199C  0101               	movlb	1	; () banked
  9276  00199E  6F32               	movwf	display_num@mode& (0+255),b
  9277  0019A0  0E00               	movlw	0
  9278  0019A2  ECF0  F006         	call	_display_num
  9279                           
  9280                           ;gui.c: 2143: }
  9281  0019A6  0012               	return	
  9282  0019A8                     l14273:
  9283                           
  9284                           ;gui.c: 2144: else if(menu[4].parameter == 2)
  9285  0019A8  0E02               	movlw	2
  9286  0019AA  1826               	xorwf	_menu+37,w,c
  9287  0019AC  A4D8               	btfss	status,2,c
  9288  0019AE  0012               	return	
  9289                           
  9290                           ;gui.c: 2145: {
  9291                           ;gui.c: 2146: display_num(0,(0 + 14), 0x80 | 0);
  9292  0019B0  0E0E               	movlw	14
  9293  0019B2  0101               	movlb	1	; () banked
  9294  0019B4  6F31               	movwf	display_num@x& (0+255),b
  9295  0019B6  0E80               	movlw	128
  9296  0019B8  0101               	movlb	1	; () banked
  9297  0019BA  6F32               	movwf	display_num@mode& (0+255),b
  9298  0019BC  0E00               	movlw	0
  9299  0019BE  ECF0  F006         	call	_display_num
  9300                           
  9301                           ;gui.c: 2147: }
  9302                           ;gui.c: 2149: }
  9303                           ;gui.c: 2150: }
  9304  0019C2  0012               	return	
  9305  0019C4                     l14277:
  9306                           
  9307                           ;gui.c: 2151: else if(menu[5].mode == 3)
  9308  0019C4  0E03               	movlw	3
  9309  0019C6  182A               	xorwf	_menu+41,w,c
  9310  0019C8  A4D8               	btfss	status,2,c
  9311  0019CA  D03C               	goto	l14299
  9312                           
  9313                           ;gui.c: 2152: {
  9314                           ;gui.c: 2154: if(flip == 1)
  9315  0019CC  044E               	decf	_flip,w,c
  9316  0019CE  A4D8               	btfss	status,2,c
  9317  0019D0  D00C               	goto	l14285
  9318                           
  9319                           ;gui.c: 2155: {
  9320                           ;gui.c: 2156: display_n_blank(2,(49 + 14), 0x80);
  9321  0019D2  0E3F               	movlw	63
  9322  0019D4  0101               	movlb	1	; () banked
  9323  0019D6  6F31               	movwf	display_n_blank@x& (0+255),b
  9324  0019D8  0E80               	movlw	128
  9325  0019DA  0101               	movlb	1	; () banked
  9326  0019DC  6F32               	movwf	display_n_blank@mode& (0+255),b
  9327  0019DE  0E02               	movlw	2
  9328  0019E0  ECAE  F002         	call	_display_n_blank
  9329                           
  9330                           ;gui.c: 2157: flip =0;
  9331  0019E4  0E00               	movlw	0
  9332  0019E6  6E4E               	movwf	_flip,c
  9333                           
  9334                           ;gui.c: 2158: }
  9335  0019E8  0012               	return	
  9336  0019EA                     l14285:
  9337                           
  9338                           ;gui.c: 2159: else if(flip == 0)
  9339  0019EA  504E               	movf	_flip,w,c
  9340  0019EC  A4D8               	btfss	status,2,c
  9341  0019EE  0012               	return	
  9342                           
  9343                           ;gui.c: 2160: {
  9344                           ;gui.c: 2161: flip =1;
  9345  0019F0  0E01               	movlw	1
  9346  0019F2  6E4E               	movwf	_flip,c
  9347                           
  9348                           ;gui.c: 2162: if(menu[5].parameter == 0)
  9349  0019F4  502E               	movf	_menu+45,w,c
  9350  0019F6  A4D8               	btfss	status,2,c
  9351  0019F8  D00A               	goto	l14291
  9352                           
  9353                           ;gui.c: 2163: {
  9354                           ;gui.c: 2165: display_num(3,(49 + 14), 0x80 | 1);
  9355  0019FA  0E3F               	movlw	63
  9356  0019FC  0101               	movlb	1	; () banked
  9357  0019FE  6F31               	movwf	display_num@x& (0+255),b
  9358  001A00  0E81               	movlw	129
  9359  001A02  0101               	movlb	1	; () banked
  9360  001A04  6F32               	movwf	display_num@mode& (0+255),b
  9361  001A06  0E03               	movlw	3
  9362  001A08  ECF0  F006         	call	_display_num
  9363                           
  9364                           ;gui.c: 2166: }
  9365  001A0C  0012               	return	
  9366  001A0E                     l14291:
  9367                           
  9368                           ;gui.c: 2167: else if(menu[5].parameter == 1)
  9369  001A0E  042E               	decf	_menu+45,w,c
  9370  001A10  A4D8               	btfss	status,2,c
  9371  001A12  D00A               	goto	l14295
  9372                           
  9373                           ;gui.c: 2168: {
  9374                           ;gui.c: 2170: display_num(3,(49 + 14), 0x80 | 106);
  9375  001A14  0E3F               	movlw	63
  9376  001A16  0101               	movlb	1	; () banked
  9377  001A18  6F31               	movwf	display_num@x& (0+255),b
  9378  001A1A  0EEA               	movlw	234
  9379  001A1C  0101               	movlb	1	; () banked
  9380  001A1E  6F32               	movwf	display_num@mode& (0+255),b
  9381  001A20  0E03               	movlw	3
  9382  001A22  ECF0  F006         	call	_display_num
  9383                           
  9384                           ;gui.c: 2171: }
  9385  001A26  0012               	return	
  9386  001A28                     l14295:
  9387                           
  9388                           ;gui.c: 2172: else if(menu[5].parameter == 2)
  9389  001A28  0E02               	movlw	2
  9390  001A2A  182E               	xorwf	_menu+45,w,c
  9391  001A2C  A4D8               	btfss	status,2,c
  9392  001A2E  0012               	return	
  9393                           
  9394                           ;gui.c: 2173: {
  9395                           ;gui.c: 2174: display_num(3,(49 + 14), 0x80 | 5);
  9396  001A30  0E3F               	movlw	63
  9397  001A32  0101               	movlb	1	; () banked
  9398  001A34  6F31               	movwf	display_num@x& (0+255),b
  9399  001A36  0E85               	movlw	133
  9400  001A38  0101               	movlb	1	; () banked
  9401  001A3A  6F32               	movwf	display_num@mode& (0+255),b
  9402  001A3C  0E03               	movlw	3
  9403  001A3E  ECF0  F006         	call	_display_num
  9404                           
  9405                           ;gui.c: 2175: }
  9406                           ;gui.c: 2176: }
  9407                           ;gui.c: 2177: }
  9408  001A42  0012               	return	
  9409  001A44                     l14299:
  9410                           
  9411                           ;gui.c: 2178: else if(menu[6].mode == 3)
  9412  001A44  0E03               	movlw	3
  9413  001A46  1832               	xorwf	_menu+49,w,c
  9414  001A48  A4D8               	btfss	status,2,c
  9415  001A4A  0012               	return	
  9416                           
  9417                           ;gui.c: 2179: {
  9418                           ;gui.c: 2181: if(flip == 1)
  9419  001A4C  044E               	decf	_flip,w,c
  9420  001A4E  A4D8               	btfss	status,2,c
  9421  001A50  D020               	goto	l14315
  9422                           
  9423                           ;gui.c: 2182: {
  9424                           ;gui.c: 2185: if(work_mode == 0x00 || work_mode == 0x02)
  9425  001A52  504D               	movf	_work_mode,w,c
  9426  001A54  B4D8               	btfsc	status,2,c
  9427  001A56  D004               	goto	l14307
  9428  001A58  0E02               	movlw	2
  9429  001A5A  184D               	xorwf	_work_mode,w,c
  9430  001A5C  A4D8               	btfss	status,2,c
  9431  001A5E  D00A               	goto	l14309
  9432  001A60                     l14307:
  9433                           
  9434                           ;gui.c: 2186: {
  9435                           ;gui.c: 2187: display_n_blank(2,(0 + 14), 0x80);
  9436  001A60  0E0E               	movlw	14
  9437  001A62  0101               	movlb	1	; () banked
  9438  001A64  6F31               	movwf	display_n_blank@x& (0+255),b
  9439  001A66  0E80               	movlw	128
  9440  001A68  0101               	movlb	1	; () banked
  9441  001A6A  6F32               	movwf	display_n_blank@mode& (0+255),b
  9442  001A6C  0E02               	movlw	2
  9443  001A6E  ECAE  F002         	call	_display_n_blank
  9444                           
  9445                           ;gui.c: 2188: }
  9446  001A72  D00C               	goto	l14313
  9447  001A74                     l14309:
  9448                           
  9449                           ;gui.c: 2189: else if(work_mode == 0x01)
  9450  001A74  044D               	decf	_work_mode,w,c
  9451  001A76  A4D8               	btfss	status,2,c
  9452  001A78  D009               	goto	l14313
  9453                           
  9454                           ;gui.c: 2190: {
  9455                           ;gui.c: 2191: display_n_blank(2,(0 + 17), 0x80);
  9456  001A7A  0E11               	movlw	17
  9457  001A7C  0101               	movlb	1	; () banked
  9458  001A7E  6F31               	movwf	display_n_blank@x& (0+255),b
  9459  001A80  0E80               	movlw	128
  9460  001A82  0101               	movlb	1	; () banked
  9461  001A84  6F32               	movwf	display_n_blank@mode& (0+255),b
  9462  001A86  0E02               	movlw	2
  9463  001A88  ECAE  F002         	call	_display_n_blank
  9464  001A8C                     l14313:
  9465                           
  9466                           ;gui.c: 2192: }
  9467                           ;gui.c: 2193: flip =0;
  9468  001A8C  0E00               	movlw	0
  9469  001A8E  6E4E               	movwf	_flip,c
  9470                           
  9471                           ;gui.c: 2194: }
  9472  001A90  0012               	return	
  9473  001A92                     l14315:
  9474                           
  9475                           ;gui.c: 2195: else if(flip == 0)
  9476  001A92  504E               	movf	_flip,w,c
  9477  001A94  A4D8               	btfss	status,2,c
  9478  001A96  0012               	return	
  9479                           
  9480                           ;gui.c: 2196: {
  9481                           ;gui.c: 2197: flip =1;
  9482  001A98  0E01               	movlw	1
  9483  001A9A  6E4E               	movwf	_flip,c
  9484                           
  9485                           ;gui.c: 2198: if(menu[6].parameter == 0)
  9486  001A9C  5036               	movf	_menu+53,w,c
  9487  001A9E  A4D8               	btfss	status,2,c
  9488  001AA0  D01E               	goto	l14329
  9489                           
  9490                           ;gui.c: 2199: {
  9491                           ;gui.c: 2200: if(work_mode == 0x00 || work_mode == 0x02)
  9492  001AA2  504D               	movf	_work_mode,w,c
  9493  001AA4  B4D8               	btfsc	status,2,c
  9494  001AA6  D004               	goto	l14323
  9495  001AA8  0E02               	movlw	2
  9496  001AAA  184D               	xorwf	_work_mode,w,c
  9497  001AAC  A4D8               	btfss	status,2,c
  9498  001AAE  D00A               	goto	l14325
  9499  001AB0                     l14323:
  9500                           
  9501                           ;gui.c: 2201: {
  9502                           ;gui.c: 2202: display_num(3,(0 + 14), 0x80 | 3);
  9503  001AB0  0E0E               	movlw	14
  9504  001AB2  0101               	movlb	1	; () banked
  9505  001AB4  6F31               	movwf	display_num@x& (0+255),b
  9506  001AB6  0E83               	movlw	131
  9507  001AB8  0101               	movlb	1	; () banked
  9508  001ABA  6F32               	movwf	display_num@mode& (0+255),b
  9509  001ABC  0E03               	movlw	3
  9510  001ABE  ECF0  F006         	call	_display_num
  9511                           
  9512                           ;gui.c: 2203: }
  9513  001AC2  0012               	return	
  9514  001AC4                     l14325:
  9515                           
  9516                           ;gui.c: 2204: else if(work_mode == 0x01)
  9517  001AC4  044D               	decf	_work_mode,w,c
  9518  001AC6  A4D8               	btfss	status,2,c
  9519  001AC8  0012               	return	
  9520                           
  9521                           ;gui.c: 2205: {
  9522                           ;gui.c: 2206: display_num(3,(0 + 17), 0x80 | 103);
  9523  001ACA  0E11               	movlw	17
  9524  001ACC  0101               	movlb	1	; () banked
  9525  001ACE  6F31               	movwf	display_num@x& (0+255),b
  9526  001AD0  0EE7               	movlw	231
  9527  001AD2  0101               	movlb	1	; () banked
  9528  001AD4  6F32               	movwf	display_num@mode& (0+255),b
  9529  001AD6  0E03               	movlw	3
  9530  001AD8  ECF0  F006         	call	_display_num
  9531                           
  9532                           ;gui.c: 2207: }
  9533                           ;gui.c: 2208: }
  9534  001ADC  0012               	return	
  9535  001ADE                     l14329:
  9536                           
  9537                           ;gui.c: 2209: else if(menu[6].parameter == 1)
  9538  001ADE  0436               	decf	_menu+53,w,c
  9539  001AE0  A4D8               	btfss	status,2,c
  9540  001AE2  D01E               	goto	l14341
  9541                           
  9542                           ;gui.c: 2210: {
  9543                           ;gui.c: 2211: if(work_mode == 0x00 || work_mode == 0x02)
  9544  001AE4  504D               	movf	_work_mode,w,c
  9545  001AE6  B4D8               	btfsc	status,2,c
  9546  001AE8  D004               	goto	l14335
  9547  001AEA  0E02               	movlw	2
  9548  001AEC  184D               	xorwf	_work_mode,w,c
  9549  001AEE  A4D8               	btfss	status,2,c
  9550  001AF0  D00A               	goto	l14337
  9551  001AF2                     l14335:
  9552                           
  9553                           ;gui.c: 2212: {
  9554                           ;gui.c: 2213: display_num(3,(0 + 14), 0x80 | 3);
  9555  001AF2  0E0E               	movlw	14
  9556  001AF4  0101               	movlb	1	; () banked
  9557  001AF6  6F31               	movwf	display_num@x& (0+255),b
  9558  001AF8  0E83               	movlw	131
  9559  001AFA  0101               	movlb	1	; () banked
  9560  001AFC  6F32               	movwf	display_num@mode& (0+255),b
  9561  001AFE  0E03               	movlw	3
  9562  001B00  ECF0  F006         	call	_display_num
  9563                           
  9564                           ;gui.c: 2214: }
  9565  001B04  0012               	return	
  9566  001B06                     l14337:
  9567                           
  9568                           ;gui.c: 2215: else if(work_mode == 0x01)
  9569  001B06  044D               	decf	_work_mode,w,c
  9570  001B08  A4D8               	btfss	status,2,c
  9571  001B0A  0012               	return	
  9572                           
  9573                           ;gui.c: 2216: {
  9574                           ;gui.c: 2217: display_num(3,(0 + 17), 0x80 | 102);
  9575  001B0C  0E11               	movlw	17
  9576  001B0E  0101               	movlb	1	; () banked
  9577  001B10  6F31               	movwf	display_num@x& (0+255),b
  9578  001B12  0EE6               	movlw	230
  9579  001B14  0101               	movlb	1	; () banked
  9580  001B16  6F32               	movwf	display_num@mode& (0+255),b
  9581  001B18  0E03               	movlw	3
  9582  001B1A  ECF0  F006         	call	_display_num
  9583                           
  9584                           ;gui.c: 2218: }
  9585                           ;gui.c: 2219: }
  9586  001B1E  0012               	return	
  9587  001B20                     l14341:
  9588                           
  9589                           ;gui.c: 2220: else if(menu[6].parameter == 2)
  9590  001B20  0E02               	movlw	2
  9591  001B22  1836               	xorwf	_menu+53,w,c
  9592  001B24  A4D8               	btfss	status,2,c
  9593  001B26  0012               	return	
  9594                           
  9595                           ;gui.c: 2221: {
  9596                           ;gui.c: 2222: if(work_mode == 0x00 || work_mode == 0x02)
  9597  001B28  504D               	movf	_work_mode,w,c
  9598  001B2A  B4D8               	btfsc	status,2,c
  9599  001B2C  D004               	goto	l14347
  9600  001B2E  0E02               	movlw	2
  9601  001B30  184D               	xorwf	_work_mode,w,c
  9602  001B32  A4D8               	btfss	status,2,c
  9603  001B34  D00A               	goto	l14349
  9604  001B36                     l14347:
  9605                           
  9606                           ;gui.c: 2223: {
  9607                           ;gui.c: 2224: display_num(3,(0 + 14), 0x80 | 3);
  9608  001B36  0E0E               	movlw	14
  9609  001B38  0101               	movlb	1	; () banked
  9610  001B3A  6F31               	movwf	display_num@x& (0+255),b
  9611  001B3C  0E83               	movlw	131
  9612  001B3E  0101               	movlb	1	; () banked
  9613  001B40  6F32               	movwf	display_num@mode& (0+255),b
  9614  001B42  0E03               	movlw	3
  9615  001B44  ECF0  F006         	call	_display_num
  9616                           
  9617                           ;gui.c: 2225: }
  9618  001B48  0012               	return	
  9619  001B4A                     l14349:
  9620                           
  9621                           ;gui.c: 2226: else if(work_mode == 0x01)
  9622  001B4A  044D               	decf	_work_mode,w,c
  9623  001B4C  A4D8               	btfss	status,2,c
  9624  001B4E  0012               	return	
  9625                           
  9626                           ;gui.c: 2227: {
  9627                           ;gui.c: 2228: display_num(3,(0 + 17), 0x80 | 101);
  9628  001B50  0E11               	movlw	17
  9629  001B52  0101               	movlb	1	; () banked
  9630  001B54  6F31               	movwf	display_num@x& (0+255),b
  9631  001B56  0EE5               	movlw	229
  9632  001B58  0101               	movlb	1	; () banked
  9633  001B5A  6F32               	movwf	display_num@mode& (0+255),b
  9634  001B5C  0E03               	movlw	3
  9635  001B5E  ECF0  F006         	call	_display_num
  9636  001B62  0012               	return	
  9637  001B64                     __end_of_blink_mode:
  9638                           	opt stack 0
  9639                           tblptru	equ	0xFF8
  9640                           tblptrh	equ	0xFF7
  9641                           tblptrl	equ	0xFF6
  9642                           tablat	equ	0xFF5
  9643                           prodh	equ	0xFF4
  9644                           prodl	equ	0xFF3
  9645                           intcon	equ	0xFF2
  9646                           intcon3	equ	0xFF0
  9647                           postinc0	equ	0xFEE
  9648                           wreg	equ	0xFE8
  9649                           postdec1	equ	0xFE5
  9650                           fsr1h	equ	0xFE2
  9651                           fsr1l	equ	0xFE1
  9652                           status	equ	0xFD8
  9653                           
  9654 ;; *************** function _display_n_blank *****************
  9655 ;; Defined at:
  9656 ;;		line 1343 in file "../Oled.c"
  9657 ;; Parameters:    Size  Location     Type
  9658 ;;  y               1    wreg     unsigned char 
  9659 ;;  x               1    9[BANK1 ] unsigned char 
  9660 ;;  mode            1   10[BANK1 ] unsigned char 
  9661 ;; Auto vars:     Size  Location     Type
  9662 ;;  y               1   11[BANK1 ] unsigned char 
  9663 ;;  temp            1   13[BANK1 ] unsigned char 
  9664 ;;  tori            1   12[BANK1 ] unsigned char 
  9665 ;; Return value:  Size  Location     Type
  9666 ;;                  1    wreg      unsigned char 
  9667 ;; Registers used:
  9668 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9669 ;; Tracked objects:
  9670 ;;		On entry : 0/0
  9671 ;;		On exit  : 0/0
  9672 ;;		Unchanged: 0/0
  9673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9674 ;;      Params:         0       0       2       0       0       0       0
  9675 ;;      Locals:         0       0       3       0       0       0       0
  9676 ;;      Temps:          0       0       0       0       0       0       0
  9677 ;;      Totals:         0       0       5       0       0       0       0
  9678 ;;Total ram usage:        5 bytes
  9679 ;; Hardware stack levels used:    1
  9680 ;; Hardware stack levels required when called:    6
  9681 ;; This function calls:
  9682 ;;		_ee_WriteBytes
  9683 ;;		_setYX_LCD
  9684 ;; This function is called by:
  9685 ;;		_blink_mode
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text16
  9690  00055C                     __ptext16:
  9691                           	opt stack 0
  9692  00055C                     _display_n_blank:
  9693                           	opt stack 22
  9694                           
  9695                           ;incstack = 0
  9696                           ;display_n_blank@y stored from wreg
  9697  00055C  0101               	movlb	1	; () banked
  9698  00055E  6F33               	movwf	display_n_blank@y& (0+255),b
  9699                           
  9700                           ;Oled.c: 1345: uint8_t temp =0;
  9701  000560  0E00               	movlw	0
  9702  000562  0101               	movlb	1	; () banked
  9703  000564  6F35               	movwf	display_n_blank@temp& (0+255),b
  9704                           
  9705                           ;Oled.c: 1346: uint8_t tori =0;
  9706  000566  0E00               	movlw	0
  9707  000568  0101               	movlb	1	; () banked
  9708  00056A  6F34               	movwf	display_n_blank@tori& (0+255),b
  9709                           
  9710                           ; BSR set to: 1
  9711                           ;Oled.c: 1347: if(y==1)
  9712  00056C  0101               	movlb	1	; () banked
  9713  00056E  0533               	decf	display_n_blank@y& (0+255),w,b
  9714  000570  A4D8               	btfss	status,2,c
  9715  000572  D11A               	goto	l12515
  9716                           
  9717                           ; BSR set to: 1
  9718                           ;Oled.c: 1348: {
  9719                           ;Oled.c: 1349: if(mode == 0)
  9720  000574  0101               	movlb	1	; () banked
  9721  000576  5132               	movf	display_n_blank@mode& (0+255),w,b
  9722  000578  0101               	movlb	1	; () banked
  9723  00057A  A4D8               	btfss	status,2,c
  9724  00057C  D080               	goto	l12451
  9725                           
  9726                           ; BSR set to: 1
  9727                           ;Oled.c: 1350: {
  9728                           ;Oled.c: 1351: setYX_LCD(2,x);
  9729  00057E  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9730  000582  0E02               	movlw	2
  9731  000584  ECB3  F024         	call	_setYX_LCD
  9732                           
  9733                           ;Oled.c: 1352: for(ms=0;ms<19;ms++)
  9734  000588  0E00               	movlw	0
  9735  00058A  6E69               	movwf	_ms,c
  9736  00058C                     l12407:
  9737  00058C  0E12               	movlw	18
  9738  00058E  6469               	cpfsgt	_ms,c
  9739  000590  D001               	goto	l12411
  9740  000592  D01D               	goto	l12419
  9741  000594                     l12411:
  9742                           
  9743                           ;Oled.c: 1353: {
  9744                           ;Oled.c: 1354: temp = n_blank_m[0][ms];
  9745  000594  5069               	movf	_ms,w,c
  9746  000596  0D01               	mullw	1
  9747  000598  0EB3               	movlw	low _n_blank_m
  9748  00059A  24F3               	addwf	prodl,w,c
  9749  00059C  6EF6               	movwf	tblptrl,c
  9750  00059E  0E74               	movlw	high _n_blank_m
  9751  0005A0  20F4               	addwfc	prodh,w,c
  9752  0005A2  6EF7               	movwf	tblptrh,c
  9753  0005A4                     	if	0	;There are less than 3 active tblptr bytes
  9754  0005A4                     	endif
  9755  0005A4  0008               	tblrd		*
  9756  0005A6  CFF5 F135          	movff	tablat,display_n_blank@temp
  9757                           
  9758                           ;Oled.c: 1355: ee_WriteBytes(&temp, 0x40, 1);
  9759  0005AA  0E35               	movlw	low display_n_blank@temp
  9760  0005AC  0101               	movlb	1	; () banked
  9761  0005AE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  9762  0005B0  0E01               	movlw	high display_n_blank@temp
  9763  0005B2  0101               	movlb	1	; () banked
  9764  0005B4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  9765  0005B6  0E40               	movlw	64
  9766  0005B8  0101               	movlb	1	; () banked
  9767  0005BA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  9768  0005BC  0E00               	movlw	0
  9769  0005BE  0101               	movlb	1	; () banked
  9770  0005C0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  9771  0005C2  0E01               	movlw	1
  9772  0005C4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  9773  0005C6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  9774  0005CA  2A69               	incf	_ms,f,c
  9775  0005CC  D7DF               	goto	l12407
  9776  0005CE                     l12419:
  9777                           
  9778                           ;Oled.c: 1356: }
  9779                           ;Oled.c: 1358: setYX_LCD(3,x);
  9780  0005CE  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9781  0005D2  0E03               	movlw	3
  9782  0005D4  ECB3  F024         	call	_setYX_LCD
  9783                           
  9784                           ;Oled.c: 1359: for(ms=0;ms<19;ms++)
  9785  0005D8  0E00               	movlw	0
  9786  0005DA  6E69               	movwf	_ms,c
  9787  0005DC                     l12423:
  9788  0005DC  0E12               	movlw	18
  9789  0005DE  6469               	cpfsgt	_ms,c
  9790  0005E0  D001               	goto	l12427
  9791  0005E2  D021               	goto	l12435
  9792  0005E4                     l12427:
  9793                           
  9794                           ;Oled.c: 1360: {
  9795                           ;Oled.c: 1361: temp = n_blank_m[1][ms];
  9796  0005E4  5069               	movf	_ms,w,c
  9797  0005E6  0D01               	mullw	1
  9798  0005E8  0E13               	movlw	19
  9799  0005EA  26F3               	addwf	prodl,f,c
  9800  0005EC  0E00               	movlw	0
  9801  0005EE  22F4               	addwfc	prodh,f,c
  9802  0005F0  0EB3               	movlw	low _n_blank_m
  9803  0005F2  24F3               	addwf	prodl,w,c
  9804  0005F4  6EF6               	movwf	tblptrl,c
  9805  0005F6  0E74               	movlw	high _n_blank_m
  9806  0005F8  20F4               	addwfc	prodh,w,c
  9807  0005FA  6EF7               	movwf	tblptrh,c
  9808  0005FC                     	if	0	;There are less than 3 active tblptr bytes
  9809  0005FC                     	endif
  9810  0005FC  0008               	tblrd		*
  9811  0005FE  CFF5 F135          	movff	tablat,display_n_blank@temp
  9812                           
  9813                           ;Oled.c: 1362: ee_WriteBytes(&temp, 0x40, 1);
  9814  000602  0E35               	movlw	low display_n_blank@temp
  9815  000604  0101               	movlb	1	; () banked
  9816  000606  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  9817  000608  0E01               	movlw	high display_n_blank@temp
  9818  00060A  0101               	movlb	1	; () banked
  9819  00060C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  9820  00060E  0E40               	movlw	64
  9821  000610  0101               	movlb	1	; () banked
  9822  000612  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  9823  000614  0E00               	movlw	0
  9824  000616  0101               	movlb	1	; () banked
  9825  000618  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  9826  00061A  0E01               	movlw	1
  9827  00061C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  9828  00061E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  9829  000622  2A69               	incf	_ms,f,c
  9830  000624  D7DB               	goto	l12423
  9831  000626                     l12435:
  9832                           
  9833                           ;Oled.c: 1363: }
  9834                           ;Oled.c: 1365: setYX_LCD(4,x);
  9835  000626  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9836  00062A  0E04               	movlw	4
  9837  00062C  ECB3  F024         	call	_setYX_LCD
  9838                           
  9839                           ;Oled.c: 1366: for(ms=0;ms<19;ms++)
  9840  000630  0E00               	movlw	0
  9841  000632  6E69               	movwf	_ms,c
  9842  000634                     l12439:
  9843  000634  0E12               	movlw	18
  9844  000636  6469               	cpfsgt	_ms,c
  9845  000638  D001               	goto	l12443
  9846  00063A  0012               	return	
  9847  00063C                     l12443:
  9848                           
  9849                           ;Oled.c: 1367: {
  9850                           ;Oled.c: 1368: temp = n_blank_m[2][ms];
  9851  00063C  5069               	movf	_ms,w,c
  9852  00063E  0D01               	mullw	1
  9853  000640  0E26               	movlw	38
  9854  000642  26F3               	addwf	prodl,f,c
  9855  000644  0E00               	movlw	0
  9856  000646  22F4               	addwfc	prodh,f,c
  9857  000648  0EB3               	movlw	low _n_blank_m
  9858  00064A  24F3               	addwf	prodl,w,c
  9859  00064C  6EF6               	movwf	tblptrl,c
  9860  00064E  0E74               	movlw	high _n_blank_m
  9861  000650  20F4               	addwfc	prodh,w,c
  9862  000652  6EF7               	movwf	tblptrh,c
  9863  000654                     	if	0	;There are less than 3 active tblptr bytes
  9864  000654                     	endif
  9865  000654  0008               	tblrd		*
  9866  000656  CFF5 F135          	movff	tablat,display_n_blank@temp
  9867                           
  9868                           ;Oled.c: 1369: ee_WriteBytes(&temp, 0x40, 1);
  9869  00065A  0E35               	movlw	low display_n_blank@temp
  9870  00065C  0101               	movlb	1	; () banked
  9871  00065E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  9872  000660  0E01               	movlw	high display_n_blank@temp
  9873  000662  0101               	movlb	1	; () banked
  9874  000664  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  9875  000666  0E40               	movlw	64
  9876  000668  0101               	movlb	1	; () banked
  9877  00066A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  9878  00066C  0E00               	movlw	0
  9879  00066E  0101               	movlb	1	; () banked
  9880  000670  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  9881  000672  0E01               	movlw	1
  9882  000674  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  9883  000676  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  9884  00067A  2A69               	incf	_ms,f,c
  9885  00067C  D7DB               	goto	l12439
  9886  00067E                     l12451:
  9887                           
  9888                           ;Oled.c: 1372: else if(mode == 0x80)
  9889  00067E  0E80               	movlw	128
  9890  000680  0101               	movlb	1	; () banked
  9891  000682  1932               	xorwf	display_n_blank@mode& (0+255),w,b
  9892  000684  A4D8               	btfss	status,2,c
  9893  000686  0012               	return	
  9894                           
  9895                           ; BSR set to: 1
  9896                           ;Oled.c: 1373: {
  9897                           ;Oled.c: 1375: setYX_LCD(2,x);
  9898  000688  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9899  00068C  0E02               	movlw	2
  9900  00068E  ECB3  F024         	call	_setYX_LCD
  9901                           
  9902                           ;Oled.c: 1376: for(ms=0;ms<19;ms++)
  9903  000692  0E00               	movlw	0
  9904  000694  6E69               	movwf	_ms,c
  9905  000696                     l12457:
  9906  000696  0E12               	movlw	18
  9907  000698  6469               	cpfsgt	_ms,c
  9908  00069A  D001               	goto	l12461
  9909  00069C  D024               	goto	l12475
  9910  00069E                     l12461:
  9911                           
  9912                           ;Oled.c: 1377: {
  9913                           ;Oled.c: 1378: temp = n_blank_m[0][ms];
  9914  00069E  5069               	movf	_ms,w,c
  9915  0006A0  0D01               	mullw	1
  9916  0006A2  0EB3               	movlw	low _n_blank_m
  9917  0006A4  24F3               	addwf	prodl,w,c
  9918  0006A6  6EF6               	movwf	tblptrl,c
  9919  0006A8  0E74               	movlw	high _n_blank_m
  9920  0006AA  20F4               	addwfc	prodh,w,c
  9921  0006AC  6EF7               	movwf	tblptrh,c
  9922  0006AE                     	if	0	;There are less than 3 active tblptr bytes
  9923  0006AE                     	endif
  9924  0006AE  0008               	tblrd		*
  9925  0006B0  CFF5 F135          	movff	tablat,display_n_blank@temp
  9926                           
  9927                           ;Oled.c: 1379: tori = temp;
  9928  0006B4  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
  9929                           
  9930                           ;Oled.c: 1381: temp = ~temp;
  9931  0006B8  0101               	movlb	1	; () banked
  9932  0006BA  1F35               	comf	display_n_blank@temp& (0+255),f,b
  9933                           
  9934                           ; BSR set to: 1
  9935                           ;Oled.c: 1382: temp &= 0x3f;
  9936  0006BC  0E3F               	movlw	63
  9937  0006BE  0101               	movlb	1	; () banked
  9938  0006C0  1735               	andwf	display_n_blank@temp& (0+255),f,b
  9939                           
  9940                           ; BSR set to: 1
  9941                           ;Oled.c: 1384: ee_WriteBytes(&temp, 0x40, 1);
  9942  0006C2  0E35               	movlw	low display_n_blank@temp
  9943  0006C4  0101               	movlb	1	; () banked
  9944  0006C6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  9945  0006C8  0E01               	movlw	high display_n_blank@temp
  9946  0006CA  0101               	movlb	1	; () banked
  9947  0006CC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  9948  0006CE  0E40               	movlw	64
  9949  0006D0  0101               	movlb	1	; () banked
  9950  0006D2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  9951  0006D4  0E00               	movlw	0
  9952  0006D6  0101               	movlb	1	; () banked
  9953  0006D8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  9954  0006DA  0E01               	movlw	1
  9955  0006DC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  9956  0006DE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
  9957  0006E2  2A69               	incf	_ms,f,c
  9958  0006E4  D7D8               	goto	l12457
  9959  0006E6                     l12475:
  9960                           
  9961                           ;Oled.c: 1385: }
  9962                           ;Oled.c: 1387: setYX_LCD(3,x);
  9963  0006E6  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9964  0006EA  0E03               	movlw	3
  9965  0006EC  ECB3  F024         	call	_setYX_LCD
  9966                           
  9967                           ;Oled.c: 1388: for(ms=0;ms<19;ms++)
  9968  0006F0  0E00               	movlw	0
  9969  0006F2  6E69               	movwf	_ms,c
  9970  0006F4                     l12479:
  9971  0006F4  0E12               	movlw	18
  9972  0006F6  6469               	cpfsgt	_ms,c
  9973  0006F8  D001               	goto	l12483
  9974  0006FA  D025               	goto	l12495
  9975  0006FC                     l12483:
  9976                           
  9977                           ;Oled.c: 1389: {
  9978                           ;Oled.c: 1390: temp = n_blank_m[1][ms];
  9979  0006FC  5069               	movf	_ms,w,c
  9980  0006FE  0D01               	mullw	1
  9981  000700  0E13               	movlw	19
  9982  000702  26F3               	addwf	prodl,f,c
  9983  000704  0E00               	movlw	0
  9984  000706  22F4               	addwfc	prodh,f,c
  9985  000708  0EB3               	movlw	low _n_blank_m
  9986  00070A  24F3               	addwf	prodl,w,c
  9987  00070C  6EF6               	movwf	tblptrl,c
  9988  00070E  0E74               	movlw	high _n_blank_m
  9989  000710  20F4               	addwfc	prodh,w,c
  9990  000712  6EF7               	movwf	tblptrh,c
  9991  000714                     	if	0	;There are less than 3 active tblptr bytes
  9992  000714                     	endif
  9993  000714  0008               	tblrd		*
  9994  000716  CFF5 F135          	movff	tablat,display_n_blank@temp
  9995                           
  9996                           ;Oled.c: 1391: tori = temp;
  9997  00071A  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
  9998                           
  9999                           ;Oled.c: 1393: temp = ~temp;
 10000  00071E  0101               	movlb	1	; () banked
 10001  000720  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10002                           
 10003                           ; BSR set to: 1
 10004                           ;Oled.c: 1395: ee_WriteBytes(&temp, 0x40, 1);
 10005  000722  0E35               	movlw	low display_n_blank@temp
 10006  000724  0101               	movlb	1	; () banked
 10007  000726  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10008  000728  0E01               	movlw	high display_n_blank@temp
 10009  00072A  0101               	movlb	1	; () banked
 10010  00072C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10011  00072E  0E40               	movlw	64
 10012  000730  0101               	movlb	1	; () banked
 10013  000732  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10014  000734  0E00               	movlw	0
 10015  000736  0101               	movlb	1	; () banked
 10016  000738  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10017  00073A  0E01               	movlw	1
 10018  00073C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10019  00073E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10020  000742  2A69               	incf	_ms,f,c
 10021  000744  D7D7               	goto	l12479
 10022  000746                     l12495:
 10023                           
 10024                           ;Oled.c: 1396: }
 10025                           ;Oled.c: 1398: setYX_LCD(4,x);
 10026  000746  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10027  00074A  0E04               	movlw	4
 10028  00074C  ECB3  F024         	call	_setYX_LCD
 10029                           
 10030                           ;Oled.c: 1399: for(ms=0;ms<19;ms++)
 10031  000750  0E00               	movlw	0
 10032  000752  6E69               	movwf	_ms,c
 10033  000754                     l12499:
 10034  000754  0E12               	movlw	18
 10035  000756  6469               	cpfsgt	_ms,c
 10036  000758  D001               	goto	l12503
 10037  00075A  0012               	return	
 10038  00075C                     l12503:
 10039                           
 10040                           ;Oled.c: 1400: {
 10041                           ;Oled.c: 1401: temp = n_blank_m[2][ms];
 10042  00075C  5069               	movf	_ms,w,c
 10043  00075E  0D01               	mullw	1
 10044  000760  0E26               	movlw	38
 10045  000762  26F3               	addwf	prodl,f,c
 10046  000764  0E00               	movlw	0
 10047  000766  22F4               	addwfc	prodh,f,c
 10048  000768  0EB3               	movlw	low _n_blank_m
 10049  00076A  24F3               	addwf	prodl,w,c
 10050  00076C  6EF6               	movwf	tblptrl,c
 10051  00076E  0E74               	movlw	high _n_blank_m
 10052  000770  20F4               	addwfc	prodh,w,c
 10053  000772  6EF7               	movwf	tblptrh,c
 10054  000774                     	if	0	;There are less than 3 active tblptr bytes
 10055  000774                     	endif
 10056  000774  0008               	tblrd		*
 10057  000776  CFF5 F135          	movff	tablat,display_n_blank@temp
 10058                           
 10059                           ;Oled.c: 1402: tori = temp;
 10060  00077A  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10061                           
 10062                           ;Oled.c: 1403: temp = 0xf0;
 10063  00077E  0EF0               	movlw	240
 10064  000780  0101               	movlb	1	; () banked
 10065  000782  6F35               	movwf	display_n_blank@temp& (0+255),b
 10066                           
 10067                           ; BSR set to: 1
 10068                           ;Oled.c: 1404: ee_WriteBytes(&temp, 0x40, 1);
 10069  000784  0E35               	movlw	low display_n_blank@temp
 10070  000786  0101               	movlb	1	; () banked
 10071  000788  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10072  00078A  0E01               	movlw	high display_n_blank@temp
 10073  00078C  0101               	movlb	1	; () banked
 10074  00078E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10075  000790  0E40               	movlw	64
 10076  000792  0101               	movlb	1	; () banked
 10077  000794  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10078  000796  0E00               	movlw	0
 10079  000798  0101               	movlb	1	; () banked
 10080  00079A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10081  00079C  0E01               	movlw	1
 10082  00079E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10083  0007A0  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10084  0007A4  2A69               	incf	_ms,f,c
 10085  0007A6  D7D6               	goto	l12499
 10086  0007A8                     l12515:
 10087                           
 10088                           ;Oled.c: 1409: else if(y ==2)
 10089  0007A8  0E02               	movlw	2
 10090  0007AA  0101               	movlb	1	; () banked
 10091  0007AC  1933               	xorwf	display_n_blank@y& (0+255),w,b
 10092  0007AE  A4D8               	btfss	status,2,c
 10093  0007B0  0012               	return	
 10094                           
 10095                           ; BSR set to: 1
 10096                           ;Oled.c: 1410: {
 10097                           ;Oled.c: 1412: if(mode == 0)
 10098  0007B2  0101               	movlb	1	; () banked
 10099  0007B4  5132               	movf	display_n_blank@mode& (0+255),w,b
 10100  0007B6  0101               	movlb	1	; () banked
 10101  0007B8  A4D8               	btfss	status,2,c
 10102  0007BA  D080               	goto	l12567
 10103                           
 10104                           ; BSR set to: 1
 10105                           ;Oled.c: 1413: {
 10106                           ;Oled.c: 1414: setYX_LCD(5,x);
 10107  0007BC  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10108  0007C0  0E05               	movlw	5
 10109  0007C2  ECB3  F024         	call	_setYX_LCD
 10110                           
 10111                           ;Oled.c: 1415: for(ms=0;ms<19;ms++)
 10112  0007C6  0E00               	movlw	0
 10113  0007C8  6E69               	movwf	_ms,c
 10114  0007CA                     l12523:
 10115  0007CA  0E12               	movlw	18
 10116  0007CC  6469               	cpfsgt	_ms,c
 10117  0007CE  D001               	goto	l12527
 10118  0007D0  D01D               	goto	l12535
 10119  0007D2                     l12527:
 10120                           
 10121                           ;Oled.c: 1416: {
 10122                           ;Oled.c: 1417: temp = n_blank_m[0][ms];
 10123  0007D2  5069               	movf	_ms,w,c
 10124  0007D4  0D01               	mullw	1
 10125  0007D6  0EB3               	movlw	low _n_blank_m
 10126  0007D8  24F3               	addwf	prodl,w,c
 10127  0007DA  6EF6               	movwf	tblptrl,c
 10128  0007DC  0E74               	movlw	high _n_blank_m
 10129  0007DE  20F4               	addwfc	prodh,w,c
 10130  0007E0  6EF7               	movwf	tblptrh,c
 10131  0007E2                     	if	0	;There are less than 3 active tblptr bytes
 10132  0007E2                     	endif
 10133  0007E2  0008               	tblrd		*
 10134  0007E4  CFF5 F135          	movff	tablat,display_n_blank@temp
 10135                           
 10136                           ;Oled.c: 1418: ee_WriteBytes(&temp, 0x40, 1);
 10137  0007E8  0E35               	movlw	low display_n_blank@temp
 10138  0007EA  0101               	movlb	1	; () banked
 10139  0007EC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10140  0007EE  0E01               	movlw	high display_n_blank@temp
 10141  0007F0  0101               	movlb	1	; () banked
 10142  0007F2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10143  0007F4  0E40               	movlw	64
 10144  0007F6  0101               	movlb	1	; () banked
 10145  0007F8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10146  0007FA  0E00               	movlw	0
 10147  0007FC  0101               	movlb	1	; () banked
 10148  0007FE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10149  000800  0E01               	movlw	1
 10150  000802  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10151  000804  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10152  000808  2A69               	incf	_ms,f,c
 10153  00080A  D7DF               	goto	l12523
 10154  00080C                     l12535:
 10155                           
 10156                           ;Oled.c: 1419: }
 10157                           ;Oled.c: 1421: setYX_LCD(6,x);
 10158  00080C  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10159  000810  0E06               	movlw	6
 10160  000812  ECB3  F024         	call	_setYX_LCD
 10161                           
 10162                           ;Oled.c: 1422: for(ms=0;ms<19;ms++)
 10163  000816  0E00               	movlw	0
 10164  000818  6E69               	movwf	_ms,c
 10165  00081A                     l12539:
 10166  00081A  0E12               	movlw	18
 10167  00081C  6469               	cpfsgt	_ms,c
 10168  00081E  D001               	goto	l12543
 10169  000820  D021               	goto	l12551
 10170  000822                     l12543:
 10171                           
 10172                           ;Oled.c: 1423: {
 10173                           ;Oled.c: 1424: temp = n_blank_m[1][ms];
 10174  000822  5069               	movf	_ms,w,c
 10175  000824  0D01               	mullw	1
 10176  000826  0E13               	movlw	19
 10177  000828  26F3               	addwf	prodl,f,c
 10178  00082A  0E00               	movlw	0
 10179  00082C  22F4               	addwfc	prodh,f,c
 10180  00082E  0EB3               	movlw	low _n_blank_m
 10181  000830  24F3               	addwf	prodl,w,c
 10182  000832  6EF6               	movwf	tblptrl,c
 10183  000834  0E74               	movlw	high _n_blank_m
 10184  000836  20F4               	addwfc	prodh,w,c
 10185  000838  6EF7               	movwf	tblptrh,c
 10186  00083A                     	if	0	;There are less than 3 active tblptr bytes
 10187  00083A                     	endif
 10188  00083A  0008               	tblrd		*
 10189  00083C  CFF5 F135          	movff	tablat,display_n_blank@temp
 10190                           
 10191                           ;Oled.c: 1425: ee_WriteBytes(&temp, 0x40, 1);
 10192  000840  0E35               	movlw	low display_n_blank@temp
 10193  000842  0101               	movlb	1	; () banked
 10194  000844  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10195  000846  0E01               	movlw	high display_n_blank@temp
 10196  000848  0101               	movlb	1	; () banked
 10197  00084A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10198  00084C  0E40               	movlw	64
 10199  00084E  0101               	movlb	1	; () banked
 10200  000850  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10201  000852  0E00               	movlw	0
 10202  000854  0101               	movlb	1	; () banked
 10203  000856  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10204  000858  0E01               	movlw	1
 10205  00085A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10206  00085C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10207  000860  2A69               	incf	_ms,f,c
 10208  000862  D7DB               	goto	l12539
 10209  000864                     l12551:
 10210                           
 10211                           ;Oled.c: 1426: }
 10212                           ;Oled.c: 1428: setYX_LCD(7,x);
 10213  000864  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10214  000868  0E07               	movlw	7
 10215  00086A  ECB3  F024         	call	_setYX_LCD
 10216                           
 10217                           ;Oled.c: 1429: for(ms=0;ms<19;ms++)
 10218  00086E  0E00               	movlw	0
 10219  000870  6E69               	movwf	_ms,c
 10220  000872                     l12555:
 10221  000872  0E12               	movlw	18
 10222  000874  6469               	cpfsgt	_ms,c
 10223  000876  D001               	goto	l12559
 10224  000878  0012               	return	
 10225  00087A                     l12559:
 10226                           
 10227                           ;Oled.c: 1430: {
 10228                           ;Oled.c: 1431: temp = n_blank_m[2][ms];
 10229  00087A  5069               	movf	_ms,w,c
 10230  00087C  0D01               	mullw	1
 10231  00087E  0E26               	movlw	38
 10232  000880  26F3               	addwf	prodl,f,c
 10233  000882  0E00               	movlw	0
 10234  000884  22F4               	addwfc	prodh,f,c
 10235  000886  0EB3               	movlw	low _n_blank_m
 10236  000888  24F3               	addwf	prodl,w,c
 10237  00088A  6EF6               	movwf	tblptrl,c
 10238  00088C  0E74               	movlw	high _n_blank_m
 10239  00088E  20F4               	addwfc	prodh,w,c
 10240  000890  6EF7               	movwf	tblptrh,c
 10241  000892                     	if	0	;There are less than 3 active tblptr bytes
 10242  000892                     	endif
 10243  000892  0008               	tblrd		*
 10244  000894  CFF5 F135          	movff	tablat,display_n_blank@temp
 10245                           
 10246                           ;Oled.c: 1432: ee_WriteBytes(&temp, 0x40, 1);
 10247  000898  0E35               	movlw	low display_n_blank@temp
 10248  00089A  0101               	movlb	1	; () banked
 10249  00089C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10250  00089E  0E01               	movlw	high display_n_blank@temp
 10251  0008A0  0101               	movlb	1	; () banked
 10252  0008A2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10253  0008A4  0E40               	movlw	64
 10254  0008A6  0101               	movlb	1	; () banked
 10255  0008A8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10256  0008AA  0E00               	movlw	0
 10257  0008AC  0101               	movlb	1	; () banked
 10258  0008AE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10259  0008B0  0E01               	movlw	1
 10260  0008B2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10261  0008B4  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10262  0008B8  2A69               	incf	_ms,f,c
 10263  0008BA  D7DB               	goto	l12555
 10264  0008BC                     l12567:
 10265                           
 10266                           ;Oled.c: 1435: else if(mode == 0x80)
 10267  0008BC  0E80               	movlw	128
 10268  0008BE  0101               	movlb	1	; () banked
 10269  0008C0  1932               	xorwf	display_n_blank@mode& (0+255),w,b
 10270  0008C2  A4D8               	btfss	status,2,c
 10271  0008C4  0012               	return	
 10272                           
 10273                           ; BSR set to: 1
 10274                           ;Oled.c: 1436: {
 10275                           ;Oled.c: 1438: setYX_LCD(5,x);
 10276  0008C6  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10277  0008CA  0E05               	movlw	5
 10278  0008CC  ECB3  F024         	call	_setYX_LCD
 10279                           
 10280                           ;Oled.c: 1439: for(ms=0;ms<19;ms++)
 10281  0008D0  0E00               	movlw	0
 10282  0008D2  6E69               	movwf	_ms,c
 10283  0008D4                     l12573:
 10284  0008D4  0E12               	movlw	18
 10285  0008D6  6469               	cpfsgt	_ms,c
 10286  0008D8  D001               	goto	l12577
 10287  0008DA  D024               	goto	l12591
 10288  0008DC                     l12577:
 10289                           
 10290                           ;Oled.c: 1440: {
 10291                           ;Oled.c: 1441: temp = n_blank_m[0][ms];
 10292  0008DC  5069               	movf	_ms,w,c
 10293  0008DE  0D01               	mullw	1
 10294  0008E0  0EB3               	movlw	low _n_blank_m
 10295  0008E2  24F3               	addwf	prodl,w,c
 10296  0008E4  6EF6               	movwf	tblptrl,c
 10297  0008E6  0E74               	movlw	high _n_blank_m
 10298  0008E8  20F4               	addwfc	prodh,w,c
 10299  0008EA  6EF7               	movwf	tblptrh,c
 10300  0008EC                     	if	0	;There are less than 3 active tblptr bytes
 10301  0008EC                     	endif
 10302  0008EC  0008               	tblrd		*
 10303  0008EE  CFF5 F135          	movff	tablat,display_n_blank@temp
 10304                           
 10305                           ;Oled.c: 1442: tori = temp;
 10306  0008F2  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10307                           
 10308                           ;Oled.c: 1444: temp = ~temp;
 10309  0008F6  0101               	movlb	1	; () banked
 10310  0008F8  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10311                           
 10312                           ; BSR set to: 1
 10313                           ;Oled.c: 1445: temp &= 0x3f;
 10314  0008FA  0E3F               	movlw	63
 10315  0008FC  0101               	movlb	1	; () banked
 10316  0008FE  1735               	andwf	display_n_blank@temp& (0+255),f,b
 10317                           
 10318                           ; BSR set to: 1
 10319                           ;Oled.c: 1447: ee_WriteBytes(&temp, 0x40, 1);
 10320  000900  0E35               	movlw	low display_n_blank@temp
 10321  000902  0101               	movlb	1	; () banked
 10322  000904  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10323  000906  0E01               	movlw	high display_n_blank@temp
 10324  000908  0101               	movlb	1	; () banked
 10325  00090A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10326  00090C  0E40               	movlw	64
 10327  00090E  0101               	movlb	1	; () banked
 10328  000910  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10329  000912  0E00               	movlw	0
 10330  000914  0101               	movlb	1	; () banked
 10331  000916  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10332  000918  0E01               	movlw	1
 10333  00091A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10334  00091C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10335  000920  2A69               	incf	_ms,f,c
 10336  000922  D7D8               	goto	l12573
 10337  000924                     l12591:
 10338                           
 10339                           ;Oled.c: 1448: }
 10340                           ;Oled.c: 1450: setYX_LCD(6,x);
 10341  000924  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10342  000928  0E06               	movlw	6
 10343  00092A  ECB3  F024         	call	_setYX_LCD
 10344                           
 10345                           ;Oled.c: 1451: for(ms=0;ms<19;ms++)
 10346  00092E  0E00               	movlw	0
 10347  000930  6E69               	movwf	_ms,c
 10348  000932                     l12595:
 10349  000932  0E12               	movlw	18
 10350  000934  6469               	cpfsgt	_ms,c
 10351  000936  D001               	goto	l12599
 10352  000938  D025               	goto	l12611
 10353  00093A                     l12599:
 10354                           
 10355                           ;Oled.c: 1452: {
 10356                           ;Oled.c: 1453: temp = n_blank_m[1][ms];
 10357  00093A  5069               	movf	_ms,w,c
 10358  00093C  0D01               	mullw	1
 10359  00093E  0E13               	movlw	19
 10360  000940  26F3               	addwf	prodl,f,c
 10361  000942  0E00               	movlw	0
 10362  000944  22F4               	addwfc	prodh,f,c
 10363  000946  0EB3               	movlw	low _n_blank_m
 10364  000948  24F3               	addwf	prodl,w,c
 10365  00094A  6EF6               	movwf	tblptrl,c
 10366  00094C  0E74               	movlw	high _n_blank_m
 10367  00094E  20F4               	addwfc	prodh,w,c
 10368  000950  6EF7               	movwf	tblptrh,c
 10369  000952                     	if	0	;There are less than 3 active tblptr bytes
 10370  000952                     	endif
 10371  000952  0008               	tblrd		*
 10372  000954  CFF5 F135          	movff	tablat,display_n_blank@temp
 10373                           
 10374                           ;Oled.c: 1454: tori = temp;
 10375  000958  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10376                           
 10377                           ;Oled.c: 1456: temp = ~temp;
 10378  00095C  0101               	movlb	1	; () banked
 10379  00095E  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10380                           
 10381                           ; BSR set to: 1
 10382                           ;Oled.c: 1458: ee_WriteBytes(&temp, 0x40, 1);
 10383  000960  0E35               	movlw	low display_n_blank@temp
 10384  000962  0101               	movlb	1	; () banked
 10385  000964  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10386  000966  0E01               	movlw	high display_n_blank@temp
 10387  000968  0101               	movlb	1	; () banked
 10388  00096A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10389  00096C  0E40               	movlw	64
 10390  00096E  0101               	movlb	1	; () banked
 10391  000970  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10392  000972  0E00               	movlw	0
 10393  000974  0101               	movlb	1	; () banked
 10394  000976  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10395  000978  0E01               	movlw	1
 10396  00097A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10397  00097C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10398  000980  2A69               	incf	_ms,f,c
 10399  000982  D7D7               	goto	l12595
 10400  000984                     l12611:
 10401                           
 10402                           ;Oled.c: 1459: }
 10403                           ;Oled.c: 1461: setYX_LCD(7,x);
 10404  000984  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10405  000988  0E07               	movlw	7
 10406  00098A  ECB3  F024         	call	_setYX_LCD
 10407                           
 10408                           ;Oled.c: 1462: for(ms=0;ms<19;ms++)
 10409  00098E  0E00               	movlw	0
 10410  000990  6E69               	movwf	_ms,c
 10411  000992                     l12615:
 10412  000992  0E12               	movlw	18
 10413  000994  6469               	cpfsgt	_ms,c
 10414  000996  D001               	goto	l12619
 10415  000998  0012               	return	
 10416  00099A                     l12619:
 10417                           
 10418                           ;Oled.c: 1463: {
 10419                           ;Oled.c: 1464: temp = n_blank_m[2][ms];
 10420  00099A  5069               	movf	_ms,w,c
 10421  00099C  0D01               	mullw	1
 10422  00099E  0E26               	movlw	38
 10423  0009A0  26F3               	addwf	prodl,f,c
 10424  0009A2  0E00               	movlw	0
 10425  0009A4  22F4               	addwfc	prodh,f,c
 10426  0009A6  0EB3               	movlw	low _n_blank_m
 10427  0009A8  24F3               	addwf	prodl,w,c
 10428  0009AA  6EF6               	movwf	tblptrl,c
 10429  0009AC  0E74               	movlw	high _n_blank_m
 10430  0009AE  20F4               	addwfc	prodh,w,c
 10431  0009B0  6EF7               	movwf	tblptrh,c
 10432  0009B2                     	if	0	;There are less than 3 active tblptr bytes
 10433  0009B2                     	endif
 10434  0009B2  0008               	tblrd		*
 10435  0009B4  CFF5 F135          	movff	tablat,display_n_blank@temp
 10436                           
 10437                           ;Oled.c: 1465: tori = temp;
 10438  0009B8  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10439                           
 10440                           ;Oled.c: 1466: temp = 0xf0;
 10441  0009BC  0EF0               	movlw	240
 10442  0009BE  0101               	movlb	1	; () banked
 10443  0009C0  6F35               	movwf	display_n_blank@temp& (0+255),b
 10444                           
 10445                           ; BSR set to: 1
 10446                           ;Oled.c: 1469: ee_WriteBytes(&temp, 0x40, 1);
 10447  0009C2  0E35               	movlw	low display_n_blank@temp
 10448  0009C4  0101               	movlb	1	; () banked
 10449  0009C6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10450  0009C8  0E01               	movlw	high display_n_blank@temp
 10451  0009CA  0101               	movlb	1	; () banked
 10452  0009CC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10453  0009CE  0E40               	movlw	64
 10454  0009D0  0101               	movlb	1	; () banked
 10455  0009D2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10456  0009D4  0E00               	movlw	0
 10457  0009D6  0101               	movlb	1	; () banked
 10458  0009D8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10459  0009DA  0E01               	movlw	1
 10460  0009DC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10461  0009DE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10462  0009E2  2A69               	incf	_ms,f,c
 10463  0009E4  D7D6               	goto	l12615
 10464  0009E6                     __end_of_display_n_blank:
 10465                           	opt stack 0
 10466                           tblptru	equ	0xFF8
 10467                           tblptrh	equ	0xFF7
 10468                           tblptrl	equ	0xFF6
 10469                           tablat	equ	0xFF5
 10470                           prodh	equ	0xFF4
 10471                           prodl	equ	0xFF3
 10472                           intcon	equ	0xFF2
 10473                           intcon3	equ	0xFF0
 10474                           postinc0	equ	0xFEE
 10475                           wreg	equ	0xFE8
 10476                           postdec1	equ	0xFE5
 10477                           fsr1h	equ	0xFE2
 10478                           fsr1l	equ	0xFE1
 10479                           status	equ	0xFD8
 10480                           
 10481 ;; *************** function _display_blank_mode_pa *****************
 10482 ;; Defined at:
 10483 ;;		line 1952 in file "../Oled.c"
 10484 ;; Parameters:    Size  Location     Type
 10485 ;;  y               1    wreg     unsigned char 
 10486 ;;  x               1    9[BANK1 ] unsigned char 
 10487 ;;  mode            1   10[BANK1 ] unsigned char 
 10488 ;; Auto vars:     Size  Location     Type
 10489 ;;  y               1    0[COMRAM] unsigned char 
 10490 ;;  temp            1   12[BANK1 ] unsigned char 
 10491 ;;  tori            1   11[BANK1 ] unsigned char 
 10492 ;; Return value:  Size  Location     Type
 10493 ;;                  1    wreg      void 
 10494 ;; Registers used:
 10495 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10496 ;; Tracked objects:
 10497 ;;		On entry : 0/0
 10498 ;;		On exit  : 0/0
 10499 ;;		Unchanged: 0/0
 10500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10501 ;;      Params:         0       0       2       0       0       0       0
 10502 ;;      Locals:         0       0       2       0       0       0       0
 10503 ;;      Temps:          0       0       0       0       0       0       0
 10504 ;;      Totals:         0       0       4       0       0       0       0
 10505 ;;Total ram usage:        4 bytes
 10506 ;; Hardware stack levels used:    1
 10507 ;; Hardware stack levels required when called:    6
 10508 ;; This function calls:
 10509 ;;		_ee_WriteBytes
 10510 ;;		_setYX_LCD
 10511 ;; This function is called by:
 10512 ;;		_blink_mode
 10513 ;; This function uses a non-reentrant model
 10514 ;;
 10515                           
 10516                           	psect	text17
 10517  0039C0                     __ptext17:
 10518                           	opt stack 0
 10519  0039C0                     _display_blank_mode_pa:
 10520                           	opt stack 22
 10521                           
 10522                           ;Oled.c: 1955: uint8_t temp =0;
 10523                           
 10524                           ;incstack = 0
 10525  0039C0  0E00               	movlw	0
 10526  0039C2  0101               	movlb	1	; () banked
 10527  0039C4  6F34               	movwf	display_blank_mode_pa@temp& (0+255),b
 10528                           
 10529                           ;Oled.c: 1956: uint8_t tori =0;
 10530  0039C6  0E00               	movlw	0
 10531  0039C8  0101               	movlb	1	; () banked
 10532  0039CA  6F33               	movwf	display_blank_mode_pa@tori& (0+255),b
 10533                           
 10534                           ;Oled.c: 1957: switch(mode)
 10535  0039CC  D0B0               	goto	l12707
 10536  0039CE                     l12633:
 10537                           
 10538                           ; BSR set to: 1
 10539                           ;Oled.c: 1963: setYX_LCD(0,x);
 10540  0039CE  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10541  0039D2  0E00               	movlw	0
 10542  0039D4  ECB3  F024         	call	_setYX_LCD
 10543                           
 10544                           ;Oled.c: 1964: for(ms=0;ms<23;ms++)
 10545  0039D8  0E00               	movlw	0
 10546  0039DA  6E69               	movwf	_ms,c
 10547  0039DC                     l12637:
 10548  0039DC  0E16               	movlw	22
 10549  0039DE  6469               	cpfsgt	_ms,c
 10550  0039E0  D001               	goto	l12641
 10551  0039E2  D01D               	goto	l12649
 10552  0039E4                     l12641:
 10553                           
 10554                           ;Oled.c: 1965: {
 10555                           ;Oled.c: 1967: temp =blank_m[0][ms];
 10556  0039E4  5069               	movf	_ms,w,c
 10557  0039E6  0D01               	mullw	1
 10558  0039E8  0EDA               	movlw	low _blank_m
 10559  0039EA  24F3               	addwf	prodl,w,c
 10560  0039EC  6EF6               	movwf	tblptrl,c
 10561  0039EE  0E75               	movlw	high _blank_m
 10562  0039F0  20F4               	addwfc	prodh,w,c
 10563  0039F2  6EF7               	movwf	tblptrh,c
 10564  0039F4                     	if	0	;There are less than 3 active tblptr bytes
 10565  0039F4                     	endif
 10566  0039F4  0008               	tblrd		*
 10567  0039F6  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10568                           
 10569                           ;Oled.c: 1969: ee_WriteBytes(&temp, 0x40, 1);
 10570  0039FA  0E34               	movlw	low display_blank_mode_pa@temp
 10571  0039FC  0101               	movlb	1	; () banked
 10572  0039FE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10573  003A00  0E01               	movlw	high display_blank_mode_pa@temp
 10574  003A02  0101               	movlb	1	; () banked
 10575  003A04  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10576  003A06  0E40               	movlw	64
 10577  003A08  0101               	movlb	1	; () banked
 10578  003A0A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10579  003A0C  0E00               	movlw	0
 10580  003A0E  0101               	movlb	1	; () banked
 10581  003A10  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10582  003A12  0E01               	movlw	1
 10583  003A14  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10584  003A16  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10585  003A1A  2A69               	incf	_ms,f,c
 10586  003A1C  D7DF               	goto	l12637
 10587  003A1E                     l12649:
 10588                           
 10589                           ;Oled.c: 1970: }
 10590                           ;Oled.c: 1973: setYX_LCD(1,x);
 10591  003A1E  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10592  003A22  0E01               	movlw	1
 10593  003A24  ECB3  F024         	call	_setYX_LCD
 10594                           
 10595                           ;Oled.c: 1974: for(ms=0;ms<23;ms++)
 10596  003A28  0E00               	movlw	0
 10597  003A2A  6E69               	movwf	_ms,c
 10598  003A2C                     l12653:
 10599  003A2C  0E16               	movlw	22
 10600  003A2E  6469               	cpfsgt	_ms,c
 10601  003A30  D001               	goto	l12657
 10602  003A32  0012               	return	
 10603  003A34                     l12657:
 10604                           
 10605                           ;Oled.c: 1975: {
 10606                           ;Oled.c: 1976: temp = blank_m[1][ms];
 10607  003A34  5069               	movf	_ms,w,c
 10608  003A36  0D01               	mullw	1
 10609  003A38  0E17               	movlw	23
 10610  003A3A  26F3               	addwf	prodl,f,c
 10611  003A3C  0E00               	movlw	0
 10612  003A3E  22F4               	addwfc	prodh,f,c
 10613  003A40  0EDA               	movlw	low _blank_m
 10614  003A42  24F3               	addwf	prodl,w,c
 10615  003A44  6EF6               	movwf	tblptrl,c
 10616  003A46  0E75               	movlw	high _blank_m
 10617  003A48  20F4               	addwfc	prodh,w,c
 10618  003A4A  6EF7               	movwf	tblptrh,c
 10619  003A4C                     	if	0	;There are less than 3 active tblptr bytes
 10620  003A4C                     	endif
 10621  003A4C  0008               	tblrd		*
 10622  003A4E  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10623                           
 10624                           ;Oled.c: 1978: ee_WriteBytes(&temp, 0x40, 1);
 10625  003A52  0E34               	movlw	low display_blank_mode_pa@temp
 10626  003A54  0101               	movlb	1	; () banked
 10627  003A56  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10628  003A58  0E01               	movlw	high display_blank_mode_pa@temp
 10629  003A5A  0101               	movlb	1	; () banked
 10630  003A5C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10631  003A5E  0E40               	movlw	64
 10632  003A60  0101               	movlb	1	; () banked
 10633  003A62  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10634  003A64  0E00               	movlw	0
 10635  003A66  0101               	movlb	1	; () banked
 10636  003A68  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10637  003A6A  0E01               	movlw	1
 10638  003A6C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10639  003A6E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10640  003A72  2A69               	incf	_ms,f,c
 10641  003A74  D7DB               	goto	l12653
 10642  003A76                     l12665:
 10643                           
 10644                           ;Oled.c: 1987: setYX_LCD(0,x);
 10645  003A76  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10646  003A7A  0E00               	movlw	0
 10647  003A7C  ECB3  F024         	call	_setYX_LCD
 10648                           
 10649                           ;Oled.c: 1988: for(ms=0;ms<23;ms++)
 10650  003A80  0E00               	movlw	0
 10651  003A82  6E69               	movwf	_ms,c
 10652  003A84                     l12669:
 10653  003A84  0E16               	movlw	22
 10654  003A86  6469               	cpfsgt	_ms,c
 10655  003A88  D001               	goto	l12673
 10656  003A8A  D021               	goto	l12685
 10657  003A8C                     l12673:
 10658                           
 10659                           ;Oled.c: 1989: {
 10660                           ;Oled.c: 1991: temp = blank_m[0][ms];
 10661  003A8C  5069               	movf	_ms,w,c
 10662  003A8E  0D01               	mullw	1
 10663  003A90  0EDA               	movlw	low _blank_m
 10664  003A92  24F3               	addwf	prodl,w,c
 10665  003A94  6EF6               	movwf	tblptrl,c
 10666  003A96  0E75               	movlw	high _blank_m
 10667  003A98  20F4               	addwfc	prodh,w,c
 10668  003A9A  6EF7               	movwf	tblptrh,c
 10669  003A9C                     	if	0	;There are less than 3 active tblptr bytes
 10670  003A9C                     	endif
 10671  003A9C  0008               	tblrd		*
 10672  003A9E  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10673                           
 10674                           ;Oled.c: 1992: tori = temp;
 10675  003AA2  C134  F133         	movff	display_blank_mode_pa@temp,display_blank_mode_pa@tori
 10676                           
 10677                           ;Oled.c: 1994: temp = ~temp;
 10678  003AA6  0101               	movlb	1	; () banked
 10679  003AA8  1F34               	comf	display_blank_mode_pa@temp& (0+255),f,b
 10680                           
 10681                           ; BSR set to: 1
 10682                           ;Oled.c: 1997: ee_WriteBytes(&temp, 0x40, 1);
 10683  003AAA  0E34               	movlw	low display_blank_mode_pa@temp
 10684  003AAC  0101               	movlb	1	; () banked
 10685  003AAE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10686  003AB0  0E01               	movlw	high display_blank_mode_pa@temp
 10687  003AB2  0101               	movlb	1	; () banked
 10688  003AB4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10689  003AB6  0E40               	movlw	64
 10690  003AB8  0101               	movlb	1	; () banked
 10691  003ABA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10692  003ABC  0E00               	movlw	0
 10693  003ABE  0101               	movlb	1	; () banked
 10694  003AC0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10695  003AC2  0E01               	movlw	1
 10696  003AC4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10697  003AC6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10698  003ACA  2A69               	incf	_ms,f,c
 10699  003ACC  D7DB               	goto	l12669
 10700  003ACE                     l12685:
 10701                           
 10702                           ;Oled.c: 1998: }
 10703                           ;Oled.c: 2001: setYX_LCD(1,x);
 10704  003ACE  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10705  003AD2  0E01               	movlw	1
 10706  003AD4  ECB3  F024         	call	_setYX_LCD
 10707                           
 10708                           ;Oled.c: 2002: for(ms=0;ms<23;ms++)
 10709  003AD8  0E00               	movlw	0
 10710  003ADA  6E69               	movwf	_ms,c
 10711  003ADC                     l12689:
 10712  003ADC  0E16               	movlw	22
 10713  003ADE  6469               	cpfsgt	_ms,c
 10714  003AE0  D001               	goto	l12693
 10715  003AE2  0012               	return	
 10716  003AE4                     l12693:
 10717                           
 10718                           ;Oled.c: 2003: {
 10719                           ;Oled.c: 2004: temp = blank_m[1][ms];
 10720  003AE4  5069               	movf	_ms,w,c
 10721  003AE6  0D01               	mullw	1
 10722  003AE8  0E17               	movlw	23
 10723  003AEA  26F3               	addwf	prodl,f,c
 10724  003AEC  0E00               	movlw	0
 10725  003AEE  22F4               	addwfc	prodh,f,c
 10726  003AF0  0EDA               	movlw	low _blank_m
 10727  003AF2  24F3               	addwf	prodl,w,c
 10728  003AF4  6EF6               	movwf	tblptrl,c
 10729  003AF6  0E75               	movlw	high _blank_m
 10730  003AF8  20F4               	addwfc	prodh,w,c
 10731  003AFA  6EF7               	movwf	tblptrh,c
 10732  003AFC                     	if	0	;There are less than 3 active tblptr bytes
 10733  003AFC                     	endif
 10734  003AFC  0008               	tblrd		*
 10735  003AFE  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10736                           
 10737                           ;Oled.c: 2005: tori =temp;
 10738  003B02  C134  F133         	movff	display_blank_mode_pa@temp,display_blank_mode_pa@tori
 10739                           
 10740                           ;Oled.c: 2007: temp = ~temp;
 10741  003B06  0101               	movlb	1	; () banked
 10742  003B08  1F34               	comf	display_blank_mode_pa@temp& (0+255),f,b
 10743                           
 10744                           ; BSR set to: 1
 10745                           ;Oled.c: 2010: ee_WriteBytes(&temp, 0x40, 1);
 10746  003B0A  0E34               	movlw	low display_blank_mode_pa@temp
 10747  003B0C  0101               	movlb	1	; () banked
 10748  003B0E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10749  003B10  0E01               	movlw	high display_blank_mode_pa@temp
 10750  003B12  0101               	movlb	1	; () banked
 10751  003B14  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10752  003B16  0E40               	movlw	64
 10753  003B18  0101               	movlb	1	; () banked
 10754  003B1A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10755  003B1C  0E00               	movlw	0
 10756  003B1E  0101               	movlb	1	; () banked
 10757  003B20  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10758  003B22  0E01               	movlw	1
 10759  003B24  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10760  003B26  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 10761  003B2A  2A69               	incf	_ms,f,c
 10762  003B2C  D7D7               	goto	l12689
 10763  003B2E                     l12707:
 10764  003B2E  0101               	movlb	1	; () banked
 10765  003B30  5132               	movf	display_blank_mode_pa@mode& (0+255),w,b
 10766                           
 10767                           ; Switch size 1, requested type "space"
 10768                           ; Number of cases is 2, Range of values is 0 to 128
 10769                           ; switch strategies available:
 10770                           ; Name         Instructions Cycles
 10771                           ; simple_byte            7     4 (average)
 10772                           ;	Chosen strategy is simple_byte
 10773  003B32  0A00               	xorlw	0	; case 0
 10774  003B34  B4D8               	btfsc	status,2,c
 10775  003B36  D74B               	goto	l12633
 10776  003B38  0A80               	xorlw	128	; case 128
 10777  003B3A  A4D8               	btfss	status,2,c
 10778  003B3C  0012               	return	
 10779  003B3E  D79B               	goto	l12665
 10780  003B40                     __end_of_display_blank_mode_pa:
 10781                           	opt stack 0
 10782                           tblptru	equ	0xFF8
 10783                           tblptrh	equ	0xFF7
 10784                           tblptrl	equ	0xFF6
 10785                           tablat	equ	0xFF5
 10786                           prodh	equ	0xFF4
 10787                           prodl	equ	0xFF3
 10788                           intcon	equ	0xFF2
 10789                           intcon3	equ	0xFF0
 10790                           postinc0	equ	0xFEE
 10791                           wreg	equ	0xFE8
 10792                           postdec1	equ	0xFE5
 10793                           fsr1h	equ	0xFE2
 10794                           fsr1l	equ	0xFE1
 10795                           status	equ	0xFD8
 10796                           
 10797 ;; *************** function _check_shut_device *****************
 10798 ;; Defined at:
 10799 ;;		line 1897 in file "../gui.c"
 10800 ;; Parameters:    Size  Location     Type
 10801 ;;		None
 10802 ;; Auto vars:     Size  Location     Type
 10803 ;;		None
 10804 ;; Return value:  Size  Location     Type
 10805 ;;                  1    wreg      void 
 10806 ;; Registers used:
 10807 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10808 ;; Tracked objects:
 10809 ;;		On entry : 0/0
 10810 ;;		On exit  : 0/0
 10811 ;;		Unchanged: 0/0
 10812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10813 ;;      Params:         0       0       0       0       0       0       0
 10814 ;;      Locals:         0       0       0       0       0       0       0
 10815 ;;      Temps:          0       0       0       0       0       0       0
 10816 ;;      Totals:         0       0       0       0       0       0       0
 10817 ;;Total ram usage:        0 bytes
 10818 ;; Hardware stack levels used:    1
 10819 ;; Hardware stack levels required when called:    6
 10820 ;; This function calls:
 10821 ;;		_delay_nms
 10822 ;;		_delay_pwm
 10823 ;;		_shut_device
 10824 ;; This function is called by:
 10825 ;;		_main
 10826 ;; This function uses a non-reentrant model
 10827 ;;
 10828                           
 10829                           	psect	text18
 10830  004762                     __ptext18:
 10831                           	opt stack 0
 10832  004762                     _check_shut_device:
 10833                           	opt stack 24
 10834                           
 10835                           ;gui.c: 1899: if(hg_op.flag_shut_device == 1)
 10836                           
 10837                           ;incstack = 0
 10838  004762  0100               	movlb	0	; () banked
 10839  004764  0592               	decf	(_hg_op+18)& (0+255),w,b
 10840  004766  A4D8               	btfss	status,2,c
 10841  004768  0012               	return	
 10842                           
 10843                           ; BSR set to: 0
 10844                           ;gui.c: 1900: {
 10845                           ;gui.c: 1903: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
 10846  00476A  A881               	btfss	3969,4,c	;volatile
 10847                           
 10848                           ; BSR set to: 0
 10849  00476C  AC83               	btfss	3971,6,c	;volatile
 10850  00476E  D030               	goto	l15059
 10851                           
 10852                           ; BSR set to: 0
 10853  004770  BE83               	btfsc	3971,7,c	;volatile
 10854                           
 10855                           ; BSR set to: 0
 10856  004772  A681               	btfss	3969,3,c	;volatile
 10857  004774  D02D               	goto	l15059
 10858                           
 10859                           ; BSR set to: 0
 10860                           ;gui.c: 1904: {
 10861                           ;gui.c: 1905: delay_nms(4);
 10862  004776  0E04               	movlw	4
 10863  004778  0101               	movlb	1	; () banked
 10864  00477A  6F28               	movwf	delay_nms@n& (0+255),b
 10865  00477C  0E00               	movlw	0
 10866  00477E  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 10867  004780  0E00               	movlw	0
 10868  004782  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 10869  004784  0E00               	movlw	0
 10870  004786  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 10871  004788  EC5E  F025         	call	_delay_nms	;wreg free
 10872                           
 10873                           ;gui.c: 1906: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
 10874  00478C  A881               	btfss	3969,4,c	;volatile
 10875  00478E  AC83               	btfss	3971,6,c	;volatile
 10876  004790  D01F               	goto	l15059
 10877  004792  BE83               	btfsc	3971,7,c	;volatile
 10878  004794  A681               	btfss	3969,3,c	;volatile
 10879  004796  D01C               	goto	l15059
 10880                           
 10881                           ;gui.c: 1907: {
 10882                           ;gui.c: 1909: test_mode =0;
 10883  004798  0E00               	movlw	0
 10884  00479A  0100               	movlb	0	; () banked
 10885  00479C  6FF2               	movwf	_test_mode& (0+255),b
 10886                           
 10887                           ; BSR set to: 0
 10888                           ;gui.c: 1911: if(hg_op.status_powerup == 0x01)
 10889  00479E  0100               	movlb	0	; () banked
 10890  0047A0  0583               	decf	(_hg_op+3)& (0+255),w,b
 10891  0047A2  A4D8               	btfss	status,2,c
 10892  0047A4  D015               	goto	l15059
 10893                           
 10894                           ; BSR set to: 0
 10895                           ;gui.c: 1912: {
 10896                           ;gui.c: 1914: delay_pwm(400000);
 10897  0047A6  0E80               	movlw	128
 10898  0047A8  0101               	movlb	1	; () banked
 10899  0047AA  6F2C               	movwf	delay_pwm@n& (0+255),b
 10900  0047AC  0E1A               	movlw	26
 10901  0047AE  6F2D               	movwf	(delay_pwm@n+1)& (0+255),b
 10902  0047B0  0E06               	movlw	6
 10903  0047B2  6F2E               	movwf	(delay_pwm@n+2)& (0+255),b
 10904  0047B4  0E00               	movlw	0
 10905  0047B6  6F2F               	movwf	(delay_pwm@n+3)& (0+255),b
 10906  0047B8  EC7E  F026         	call	_delay_pwm	;wreg free
 10907                           
 10908                           ;gui.c: 1915: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
 10909  0047BC  A881               	btfss	3969,4,c	;volatile
 10910  0047BE  AC83               	btfss	3971,6,c	;volatile
 10911  0047C0  D007               	goto	l15059
 10912  0047C2  BE83               	btfsc	3971,7,c	;volatile
 10913  0047C4  A681               	btfss	3969,3,c	;volatile
 10914  0047C6  D004               	goto	l15059
 10915                           
 10916                           ;gui.c: 1916: {
 10917                           ;gui.c: 1918: shut_device();
 10918  0047C8  ECD3  F025         	call	_shut_device	;wreg free
 10919  0047CC                     l1981:
 10920  0047CC  A881               	btfss	3969,4,c	;volatile
 10921  0047CE  D7FE               	goto	l1981
 10922  0047D0                     l15059:
 10923                           
 10924                           ;gui.c: 1945: }
 10925                           ;gui.c: 1946: }
 10926                           ;gui.c: 1947: }
 10927                           ;gui.c: 1949: }
 10928                           ;gui.c: 1952: hg_op.flag_shut_device = 0;
 10929  0047D0  0E00               	movlw	0
 10930  0047D2  0100               	movlb	0	; () banked
 10931  0047D4  6F92               	movwf	(_hg_op+18)& (0+255),b
 10932  0047D6  0012               	return	
 10933  0047D8                     __end_of_check_shut_device:
 10934                           	opt stack 0
 10935                           tblptru	equ	0xFF8
 10936                           tblptrh	equ	0xFF7
 10937                           tblptrl	equ	0xFF6
 10938                           tablat	equ	0xFF5
 10939                           prodh	equ	0xFF4
 10940                           prodl	equ	0xFF3
 10941                           intcon	equ	0xFF2
 10942                           intcon3	equ	0xFF0
 10943                           postinc0	equ	0xFEE
 10944                           wreg	equ	0xFE8
 10945                           postdec1	equ	0xFE5
 10946                           fsr1h	equ	0xFE2
 10947                           fsr1l	equ	0xFE1
 10948                           status	equ	0xFD8
 10949                           
 10950 ;; *************** function _check_device_idle *****************
 10951 ;; Defined at:
 10952 ;;		line 1873 in file "../gui.c"
 10953 ;; Parameters:    Size  Location     Type
 10954 ;;		None
 10955 ;; Auto vars:     Size  Location     Type
 10956 ;;		None
 10957 ;; Return value:  Size  Location     Type
 10958 ;;                  2  146[None  ] int 
 10959 ;; Registers used:
 10960 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10961 ;; Tracked objects:
 10962 ;;		On entry : 0/0
 10963 ;;		On exit  : 0/0
 10964 ;;		Unchanged: 0/0
 10965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10966 ;;      Params:         0       0       0       0       0       0       0
 10967 ;;      Locals:         0       0       0       0       0       0       0
 10968 ;;      Temps:          0       0       0       0       0       0       0
 10969 ;;      Totals:         0       0       0       0       0       0       0
 10970 ;;Total ram usage:        0 bytes
 10971 ;; Hardware stack levels used:    1
 10972 ;; Hardware stack levels required when called:    6
 10973 ;; This function calls:
 10974 ;;		_delay_nms
 10975 ;;		_shut_device
 10976 ;; This function is called by:
 10977 ;;		_main
 10978 ;; This function uses a non-reentrant model
 10979 ;;
 10980                           
 10981                           	psect	text19
 10982  0047D8                     __ptext19:
 10983                           	opt stack 0
 10984  0047D8                     _check_device_idle:
 10985                           	opt stack 24
 10986                           
 10987                           ;gui.c: 1877: if(hg_op.working_mode == 0x03)
 10988                           
 10989                           ; BSR set to: 0
 10990                           ;incstack = 0
 10991  0047D8  0E03               	movlw	3
 10992  0047DA  0100               	movlb	0	; () banked
 10993  0047DC  1980               	xorwf	_hg_op& (0+255),w,b
 10994  0047DE  A4D8               	btfss	status,2,c
 10995  0047E0  D02C               	goto	l15123
 10996                           
 10997                           ; BSR set to: 0
 10998                           ;gui.c: 1878: {
 10999                           ;gui.c: 1879: hg_op.cnt_device_idle ++;
 11000  0047E2  0E01               	movlw	1
 11001  0047E4  0100               	movlb	0	; () banked
 11002  0047E6  2793               	addwf	(_hg_op+19)& (0+255),f,b
 11003  0047E8  0E00               	movlw	0
 11004  0047EA  2394               	addwfc	(_hg_op+20)& (0+255),f,b
 11005  0047EC  2395               	addwfc	(_hg_op+21)& (0+255),f,b
 11006  0047EE  2396               	addwfc	(_hg_op+22)& (0+255),f,b
 11007                           
 11008                           ; BSR set to: 0
 11009                           ;gui.c: 1880: delay_nms(1);
 11010  0047F0  0E01               	movlw	1
 11011  0047F2  0101               	movlb	1	; () banked
 11012  0047F4  6F28               	movwf	delay_nms@n& (0+255),b
 11013  0047F6  0E00               	movlw	0
 11014  0047F8  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 11015  0047FA  0E00               	movlw	0
 11016  0047FC  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 11017  0047FE  0E00               	movlw	0
 11018  004800  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 11019  004802  EC5E  F025         	call	_delay_nms	;wreg free
 11020                           
 11021                           ;gui.c: 1881: if(hg_op.cnt_device_idle > (100000))
 11022  004806  0100               	movlb	0	; () banked
 11023  004808  5196               	movf	(_hg_op+22)& (0+255),w,b
 11024  00480A  E10B               	bnz	u19470
 11025  00480C  0EA1               	movlw	161
 11026  00480E  0100               	movlb	0	; () banked
 11027  004810  5D93               	subwf	(_hg_op+19)& (0+255),w,b
 11028  004812  0E86               	movlw	134
 11029  004814  0100               	movlb	0	; () banked
 11030  004816  5994               	subwfb	(_hg_op+20)& (0+255),w,b
 11031  004818  0E01               	movlw	1
 11032  00481A  0100               	movlb	0	; () banked
 11033  00481C  5995               	subwfb	(_hg_op+21)& (0+255),w,b
 11034  00481E  A0D8               	btfss	status,0,c
 11035  004820  0012               	return	
 11036  004822                     u19470:
 11037                           
 11038                           ; BSR set to: 0
 11039                           ;gui.c: 1882: {
 11040                           ;gui.c: 1883: hg_op.cnt_device_idle = 0;
 11041  004822  0E00               	movlw	0
 11042  004824  0100               	movlb	0	; () banked
 11043  004826  6F93               	movwf	(_hg_op+19)& (0+255),b
 11044  004828  0E00               	movlw	0
 11045  00482A  6F94               	movwf	(_hg_op+20)& (0+255),b
 11046  00482C  0E00               	movlw	0
 11047  00482E  6F95               	movwf	(_hg_op+21)& (0+255),b
 11048  004830  0E00               	movlw	0
 11049  004832  6F96               	movwf	(_hg_op+22)& (0+255),b
 11050                           
 11051                           ; BSR set to: 0
 11052                           ;gui.c: 1884: shut_device();
 11053  004834  ECD3  F025         	call	_shut_device	;wreg free
 11054                           
 11055                           ;gui.c: 1885: }
 11056                           ;gui.c: 1886: }
 11057  004838  0012               	return	
 11058  00483A                     l15123:
 11059                           
 11060                           ;gui.c: 1887: else
 11061                           ;gui.c: 1888: {
 11062                           ;gui.c: 1889: hg_op.cnt_device_idle = 0;
 11063  00483A  0E00               	movlw	0
 11064  00483C  0100               	movlb	0	; () banked
 11065  00483E  6F93               	movwf	(_hg_op+19)& (0+255),b
 11066  004840  0E00               	movlw	0
 11067  004842  6F94               	movwf	(_hg_op+20)& (0+255),b
 11068  004844  0E00               	movlw	0
 11069  004846  6F95               	movwf	(_hg_op+21)& (0+255),b
 11070  004848  0E00               	movlw	0
 11071  00484A  6F96               	movwf	(_hg_op+22)& (0+255),b
 11072  00484C  0012               	return	
 11073  00484E                     __end_of_check_device_idle:
 11074                           	opt stack 0
 11075                           tblptru	equ	0xFF8
 11076                           tblptrh	equ	0xFF7
 11077                           tblptrl	equ	0xFF6
 11078                           tablat	equ	0xFF5
 11079                           prodh	equ	0xFF4
 11080                           prodl	equ	0xFF3
 11081                           intcon	equ	0xFF2
 11082                           intcon3	equ	0xFF0
 11083                           postinc0	equ	0xFEE
 11084                           wreg	equ	0xFE8
 11085                           postdec1	equ	0xFE5
 11086                           fsr1h	equ	0xFE2
 11087                           fsr1l	equ	0xFE1
 11088                           status	equ	0xFD8
 11089                           
 11090 ;; *************** function _shut_device *****************
 11091 ;; Defined at:
 11092 ;;		line 1847 in file "../gui.c"
 11093 ;; Parameters:    Size  Location     Type
 11094 ;;		None
 11095 ;; Auto vars:     Size  Location     Type
 11096 ;;		None
 11097 ;; Return value:  Size  Location     Type
 11098 ;;                  1    wreg      void 
 11099 ;; Registers used:
 11100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11101 ;; Tracked objects:
 11102 ;;		On entry : 0/0
 11103 ;;		On exit  : 0/0
 11104 ;;		Unchanged: 0/0
 11105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11106 ;;      Params:         0       0       0       0       0       0       0
 11107 ;;      Locals:         0       0       0       0       0       0       0
 11108 ;;      Temps:          0       0       0       0       0       0       0
 11109 ;;      Totals:         0       0       0       0       0       0       0
 11110 ;;Total ram usage:        0 bytes
 11111 ;; Hardware stack levels used:    1
 11112 ;; Hardware stack levels required when called:    5
 11113 ;; This function calls:
 11114 ;;		_LCD_Off
 11115 ;;		_ee_WriteBytes
 11116 ;; This function is called by:
 11117 ;;		_check_device_idle
 11118 ;;		_check_shut_device
 11119 ;; This function uses a non-reentrant model
 11120 ;;
 11121                           
 11122                           	psect	text20
 11123  004BA6                     __ptext20:
 11124                           	opt stack 0
 11125  004BA6                     _shut_device:
 11126                           	opt stack 24
 11127                           
 11128                           ;gui.c: 1850: hg_op.status_powerup = 0x00;
 11129                           
 11130                           ;incstack = 0
 11131  004BA6  0E00               	movlw	0
 11132  004BA8  0100               	movlb	0	; () banked
 11133  004BAA  6F83               	movwf	(_hg_op+3)& (0+255),b
 11134                           
 11135                           ; BSR set to: 0
 11136                           ;gui.c: 1852: LCD_Off();
 11137  004BAC  EC5C  F027         	call	_LCD_Off	;wreg free
 11138                           
 11139                           ;gui.c: 1854: write_buf[0]=0x25;
 11140  004BB0  0E25               	movlw	37
 11141  004BB2  0102               	movlb	2	; () banked
 11142  004BB4  6F00               	movwf	_write_buf& (0+255),b
 11143                           
 11144                           ; BSR set to: 2
 11145                           ;gui.c: 1855: ee_WriteBytes(write_buf, 0x00, 1);
 11146  004BB6  0E00               	movlw	low _write_buf
 11147  004BB8  0101               	movlb	1	; () banked
 11148  004BBA  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11149  004BBC  0E02               	movlw	high _write_buf
 11150  004BBE  0101               	movlb	1	; () banked
 11151  004BC0  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11152  004BC2  0E00               	movlw	0
 11153  004BC4  0101               	movlb	1	; () banked
 11154  004BC6  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11155  004BC8  0E00               	movlw	0
 11156  004BCA  0101               	movlb	1	; () banked
 11157  004BCC  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11158  004BCE  0E01               	movlw	1
 11159  004BD0  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11160  004BD2  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11161                           
 11162                           ;gui.c: 1857: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 11163  004BD6  848B               	bsf	3979,2,c	;volatile
 11164  004BD8  908C               	bcf	3980,0,c	;volatile
 11165  004BDA  928C               	bcf	3980,1,c	;volatile
 11166                           
 11167                           ;gui.c: 1858: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 11168  004BDC  888C               	bsf	3980,4,c	;volatile
 11169  004BDE  948C               	bcf	3980,2,c	;volatile
 11170  004BE0  968C               	bcf	3980,3,c	;volatile
 11171                           
 11172                           ;gui.c: 1863: hg_op.working_mode = 0x03;
 11173  004BE2  0E03               	movlw	3
 11174  004BE4  0100               	movlb	0	; () banked
 11175  004BE6  6F80               	movwf	_hg_op& (0+255),b
 11176                           
 11177                           ; BSR set to: 0
 11178                           ;gui.c: 1864: hg_op.need_reset =0;
 11179  004BE8  0E00               	movlw	0
 11180  004BEA  0100               	movlb	0	; () banked
 11181  004BEC  6F85               	movwf	(_hg_op+5)& (0+255),b
 11182                           
 11183                           ; BSR set to: 0
 11184  004BEE  0012               	return		;funcret
 11185  004BF0                     __end_of_shut_device:
 11186                           	opt stack 0
 11187                           tblptru	equ	0xFF8
 11188                           tblptrh	equ	0xFF7
 11189                           tblptrl	equ	0xFF6
 11190                           tablat	equ	0xFF5
 11191                           prodh	equ	0xFF4
 11192                           prodl	equ	0xFF3
 11193                           intcon	equ	0xFF2
 11194                           intcon3	equ	0xFF0
 11195                           postinc0	equ	0xFEE
 11196                           wreg	equ	0xFE8
 11197                           postdec1	equ	0xFE5
 11198                           fsr1h	equ	0xFE2
 11199                           fsr1l	equ	0xFE1
 11200                           status	equ	0xFD8
 11201                           
 11202 ;; *************** function _check_bat *****************
 11203 ;; Defined at:
 11204 ;;		line 1661 in file "../Oled.c"
 11205 ;; Parameters:    Size  Location     Type
 11206 ;;		None
 11207 ;; Auto vars:     Size  Location     Type
 11208 ;;		None
 11209 ;; Return value:  Size  Location     Type
 11210 ;;                  1    wreg      void 
 11211 ;; Registers used:
 11212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11213 ;; Tracked objects:
 11214 ;;		On entry : 0/0
 11215 ;;		On exit  : 0/0
 11216 ;;		Unchanged: 0/0
 11217 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11218 ;;      Params:         0       0       0       0       0       0       0
 11219 ;;      Locals:         0       0       0       0       0       0       0
 11220 ;;      Temps:          0       0       0       0       0       0       0
 11221 ;;      Totals:         0       0       0       0       0       0       0
 11222 ;;Total ram usage:        0 bytes
 11223 ;; Hardware stack levels used:    1
 11224 ;; Hardware stack levels required when called:    7
 11225 ;; This function calls:
 11226 ;;		_display_bat
 11227 ;;		_display_bat_blank
 11228 ;; This function is called by:
 11229 ;;		_main
 11230 ;; This function uses a non-reentrant model
 11231 ;;
 11232                           
 11233                           	psect	text21
 11234  004C3A                     __ptext21:
 11235                           	opt stack 0
 11236  004C3A                     _check_bat:
 11237                           	opt stack 23
 11238                           
 11239                           ;Oled.c: 1663: static uint8_t bat_flip =1;
 11240                           ;Oled.c: 1664: if( hg_op.bat_volume == 1)
 11241                           
 11242                           ; BSR set to: 0
 11243                           ;incstack = 0
 11244  004C3A  0100               	movlb	0	; () banked
 11245  004C3C  0587               	decf	(_hg_op+7)& (0+255),w,b
 11246  004C3E  A4D8               	btfss	status,2,c
 11247  004C40  0012               	return	
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;Oled.c: 1665: {
 11251                           ;Oled.c: 1667: if(bat_flip)
 11252  004C42  5068               	movf	check_bat@bat_flip,w,c
 11253  004C44  B4D8               	btfsc	status,2,c
 11254  004C46  D00B               	goto	l938
 11255                           
 11256                           ; BSR set to: 0
 11257                           ;Oled.c: 1668: {
 11258                           ;Oled.c: 1669: display_bat(1,(0 + 2),0);
 11259  004C48  0E02               	movlw	2
 11260  004C4A  0101               	movlb	1	; () banked
 11261  004C4C  6F31               	movwf	display_bat@x& (0+255),b
 11262  004C4E  0E00               	movlw	0
 11263  004C50  0101               	movlb	1	; () banked
 11264  004C52  6F32               	movwf	display_bat@mode& (0+255),b
 11265  004C54  0E01               	movlw	1
 11266  004C56  ECBD  F010         	call	_display_bat
 11267                           
 11268                           ;Oled.c: 1670: bat_flip =0;
 11269  004C5A  0E00               	movlw	0
 11270  004C5C  D00C               	goto	L15
 11271  004C5E                     l938:
 11272                           
 11273                           ; BSR set to: 0
 11274                           ;Oled.c: 1672: else
 11275                           ;Oled.c: 1673: {
 11276                           ;Oled.c: 1674: if(PORTAbits.RA3 == 0)
 11277  004C5E  B680               	btfsc	3968,3,c	;volatile
 11278  004C60  D009               	goto	l14893
 11279                           
 11280                           ; BSR set to: 0
 11281                           ;Oled.c: 1675: {
 11282                           ;Oled.c: 1676: display_bat_blank(1,(0 + 2),0);
 11283  004C62  0E02               	movlw	2
 11284  004C64  0101               	movlb	1	; () banked
 11285  004C66  6F31               	movwf	display_bat_blank@x& (0+255),b
 11286  004C68  0E00               	movlw	0
 11287  004C6A  0101               	movlb	1	; () banked
 11288  004C6C  6F32               	movwf	display_bat_blank@mode& (0+255),b
 11289  004C6E  0E01               	movlw	1
 11290  004C70  EC62  F01A         	call	_display_bat_blank
 11291  004C74                     l14893:
 11292                           
 11293                           ;Oled.c: 1677: }
 11294                           ;Oled.c: 1679: bat_flip =1;
 11295  004C74  0E01               	movlw	1
 11296  004C76                     L15:
 11297  004C76  6E68               	movwf	check_bat@bat_flip,c
 11298                           
 11299                           ;Oled.c: 1680: }
 11300                           ;Oled.c: 1681: hg_op.bat_volume =0;
 11301  004C78  0E00               	movlw	0
 11302  004C7A  0100               	movlb	0	; () banked
 11303  004C7C  6F87               	movwf	(_hg_op+7)& (0+255),b
 11304  004C7E  0012               	return	
 11305  004C80                     __end_of_check_bat:
 11306                           	opt stack 0
 11307                           tblptru	equ	0xFF8
 11308                           tblptrh	equ	0xFF7
 11309                           tblptrl	equ	0xFF6
 11310                           tablat	equ	0xFF5
 11311                           prodh	equ	0xFF4
 11312                           prodl	equ	0xFF3
 11313                           intcon	equ	0xFF2
 11314                           intcon3	equ	0xFF0
 11315                           postinc0	equ	0xFEE
 11316                           wreg	equ	0xFE8
 11317                           postdec1	equ	0xFE5
 11318                           fsr1h	equ	0xFE2
 11319                           fsr1l	equ	0xFE1
 11320                           status	equ	0xFD8
 11321                           
 11322 ;; *************** function _display_bat_blank *****************
 11323 ;; Defined at:
 11324 ;;		line 1692 in file "../Oled.c"
 11325 ;; Parameters:    Size  Location     Type
 11326 ;;  y               1    wreg     unsigned char 
 11327 ;;  x               1    9[BANK1 ] unsigned char 
 11328 ;;  mode            1   10[BANK1 ] unsigned char 
 11329 ;; Auto vars:     Size  Location     Type
 11330 ;;  y               1    0[COMRAM] unsigned char 
 11331 ;;  temp            1   14[BANK1 ] unsigned char 
 11332 ;;  tori            1   13[BANK1 ] unsigned char 
 11333 ;; Return value:  Size  Location     Type
 11334 ;;                  1    wreg      void 
 11335 ;; Registers used:
 11336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11337 ;; Tracked objects:
 11338 ;;		On entry : 0/0
 11339 ;;		On exit  : 0/0
 11340 ;;		Unchanged: 0/0
 11341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11342 ;;      Params:         0       0       2       0       0       0       0
 11343 ;;      Locals:         0       0       2       0       0       0       0
 11344 ;;      Temps:          0       0       2       0       0       0       0
 11345 ;;      Totals:         0       0       6       0       0       0       0
 11346 ;;Total ram usage:        6 bytes
 11347 ;; Hardware stack levels used:    1
 11348 ;; Hardware stack levels required when called:    6
 11349 ;; This function calls:
 11350 ;;		_ee_WriteBytes
 11351 ;;		_setYX_LCD
 11352 ;; This function is called by:
 11353 ;;		_check_bat
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text22
 11358  0034C4                     __ptext22:
 11359                           	opt stack 0
 11360  0034C4                     _display_bat_blank:
 11361                           	opt stack 23
 11362                           
 11363                           ;Oled.c: 1694: uint8_t temp =0;
 11364                           
 11365                           ; BSR set to: 0
 11366                           ;incstack = 0
 11367  0034C4  0E00               	movlw	0
 11368  0034C6  0101               	movlb	1	; () banked
 11369  0034C8  6F36               	movwf	display_bat_blank@temp& (0+255),b
 11370                           
 11371                           ;Oled.c: 1695: uint8_t tori =0;
 11372  0034CA  0E00               	movlw	0
 11373  0034CC  0101               	movlb	1	; () banked
 11374  0034CE  6F35               	movwf	display_bat_blank@tori& (0+255),b
 11375                           
 11376                           ;Oled.c: 1698: bat_x_m = bat00_m;
 11377  0034D0  0ED0               	movlw	low _bat00_m
 11378  0034D2  6E49               	movwf	_bat_x_m,c
 11379  0034D4  0E7F               	movlw	high _bat00_m
 11380  0034D6  6E4A               	movwf	_bat_x_m+1,c
 11381                           
 11382                           ;Oled.c: 1699: switch(mode)
 11383  0034D8  D0D2               	goto	l13169
 11384  0034DA                     l13095:
 11385                           
 11386                           ; BSR set to: 1
 11387                           ;Oled.c: 1705: setYX_LCD(0,x);
 11388  0034DA  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11389  0034DE  0E00               	movlw	0
 11390  0034E0  ECB3  F024         	call	_setYX_LCD
 11391                           
 11392                           ;Oled.c: 1706: for(ms=0;ms<23;ms++)
 11393  0034E4  0E00               	movlw	0
 11394  0034E6  6E69               	movwf	_ms,c
 11395  0034E8                     l13099:
 11396  0034E8  0E16               	movlw	22
 11397  0034EA  6469               	cpfsgt	_ms,c
 11398  0034EC  D001               	goto	l13103
 11399  0034EE  D025               	goto	l13111
 11400  0034F0                     l13103:
 11401                           
 11402                           ;Oled.c: 1707: {
 11403                           ;Oled.c: 1709: temp =bat_x_m[0][ms];
 11404  0034F0  5069               	movf	_ms,w,c
 11405  0034F2  0D01               	mullw	1
 11406  0034F4  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11407  0034F8  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11408  0034FC  50F3               	movf	prodl,w,c
 11409  0034FE  0101               	movlb	1	; () banked
 11410  003500  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11411  003502  50F4               	movf	prodh,w,c
 11412  003504  0101               	movlb	1	; () banked
 11413  003506  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11414  003508  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11415  00350C  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11416  003510                     	if	0	;tblptru may be non-zero
 11417  003510                     	endif
 11418  003510                     	if	0	;tblptru may be non-zero
 11419  003510                     	endif
 11420  003510  0008               	tblrd		*
 11421  003512  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11422                           
 11423                           ; BSR set to: 1
 11424                           ;Oled.c: 1711: ee_WriteBytes(&temp, 0x40, 1);
 11425  003516  0E36               	movlw	low display_bat_blank@temp
 11426  003518  0101               	movlb	1	; () banked
 11427  00351A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11428  00351C  0E01               	movlw	high display_bat_blank@temp
 11429  00351E  0101               	movlb	1	; () banked
 11430  003520  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11431  003522  0E40               	movlw	64
 11432  003524  0101               	movlb	1	; () banked
 11433  003526  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11434  003528  0E00               	movlw	0
 11435  00352A  0101               	movlb	1	; () banked
 11436  00352C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11437  00352E  0E01               	movlw	1
 11438  003530  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11439  003532  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11440  003536  2A69               	incf	_ms,f,c
 11441  003538  D7D7               	goto	l13099
 11442  00353A                     l13111:
 11443                           
 11444                           ;Oled.c: 1712: }
 11445                           ;Oled.c: 1715: setYX_LCD(1,x);
 11446  00353A  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11447  00353E  0E01               	movlw	1
 11448  003540  ECB3  F024         	call	_setYX_LCD
 11449                           
 11450                           ;Oled.c: 1716: for(ms=0;ms<23;ms++)
 11451  003544  0E00               	movlw	0
 11452  003546  6E69               	movwf	_ms,c
 11453  003548                     l13115:
 11454  003548  0E16               	movlw	22
 11455  00354A  6469               	cpfsgt	_ms,c
 11456  00354C  D001               	goto	l13119
 11457  00354E  0012               	return	
 11458  003550                     l13119:
 11459                           
 11460                           ;Oled.c: 1717: {
 11461                           ;Oled.c: 1718: temp = bat_x_m[1][ms];
 11462  003550  5069               	movf	_ms,w,c
 11463  003552  0D01               	mullw	1
 11464  003554  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11465  003558  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11466  00355C  50F3               	movf	prodl,w,c
 11467  00355E  0101               	movlb	1	; () banked
 11468  003560  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11469  003562  50F4               	movf	prodh,w,c
 11470  003564  0101               	movlb	1	; () banked
 11471  003566  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11472  003568  0E17               	movlw	23
 11473  00356A  0101               	movlb	1	; () banked
 11474  00356C  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11475  00356E  0E00               	movlw	0
 11476  003570  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11477  003572  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11478  003576  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11479  00357A                     	if	0	;tblptru may be non-zero
 11480  00357A                     	endif
 11481  00357A                     	if	0	;tblptru may be non-zero
 11482  00357A                     	endif
 11483  00357A  0008               	tblrd		*
 11484  00357C  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11485                           
 11486                           ; BSR set to: 1
 11487                           ;Oled.c: 1720: ee_WriteBytes(&temp, 0x40, 1);
 11488  003580  0E36               	movlw	low display_bat_blank@temp
 11489  003582  0101               	movlb	1	; () banked
 11490  003584  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11491  003586  0E01               	movlw	high display_bat_blank@temp
 11492  003588  0101               	movlb	1	; () banked
 11493  00358A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11494  00358C  0E40               	movlw	64
 11495  00358E  0101               	movlb	1	; () banked
 11496  003590  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11497  003592  0E00               	movlw	0
 11498  003594  0101               	movlb	1	; () banked
 11499  003596  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11500  003598  0E01               	movlw	1
 11501  00359A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11502  00359C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11503  0035A0  2A69               	incf	_ms,f,c
 11504  0035A2  D7D2               	goto	l13115
 11505  0035A4                     l13127:
 11506                           
 11507                           ;Oled.c: 1729: setYX_LCD(0,x);
 11508  0035A4  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11509  0035A8  0E00               	movlw	0
 11510  0035AA  ECB3  F024         	call	_setYX_LCD
 11511                           
 11512                           ;Oled.c: 1730: for(ms=0;ms<23;ms++)
 11513  0035AE  0E00               	movlw	0
 11514  0035B0  6E69               	movwf	_ms,c
 11515  0035B2                     l13131:
 11516  0035B2  0E16               	movlw	22
 11517  0035B4  6469               	cpfsgt	_ms,c
 11518  0035B6  D001               	goto	l13135
 11519  0035B8  D029               	goto	l13147
 11520  0035BA                     l13135:
 11521                           
 11522                           ;Oled.c: 1731: {
 11523                           ;Oled.c: 1733: temp = bat_x_m[0][ms];
 11524  0035BA  5069               	movf	_ms,w,c
 11525  0035BC  0D01               	mullw	1
 11526  0035BE  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11527  0035C2  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11528  0035C6  50F3               	movf	prodl,w,c
 11529  0035C8  0101               	movlb	1	; () banked
 11530  0035CA  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11531  0035CC  50F4               	movf	prodh,w,c
 11532  0035CE  0101               	movlb	1	; () banked
 11533  0035D0  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11534  0035D2  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11535  0035D6  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11536  0035DA                     	if	0	;tblptru may be non-zero
 11537  0035DA                     	endif
 11538  0035DA                     	if	0	;tblptru may be non-zero
 11539  0035DA                     	endif
 11540  0035DA  0008               	tblrd		*
 11541  0035DC  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11542                           
 11543                           ; BSR set to: 1
 11544                           ;Oled.c: 1734: tori = temp;
 11545  0035E0  C136  F135         	movff	display_bat_blank@temp,display_bat_blank@tori
 11546                           
 11547                           ; BSR set to: 1
 11548                           ;Oled.c: 1736: temp = ~temp;
 11549  0035E4  0101               	movlb	1	; () banked
 11550  0035E6  1F36               	comf	display_bat_blank@temp& (0+255),f,b
 11551                           
 11552                           ; BSR set to: 1
 11553                           ;Oled.c: 1739: ee_WriteBytes(&temp, 0x40, 1);
 11554  0035E8  0E36               	movlw	low display_bat_blank@temp
 11555  0035EA  0101               	movlb	1	; () banked
 11556  0035EC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11557  0035EE  0E01               	movlw	high display_bat_blank@temp
 11558  0035F0  0101               	movlb	1	; () banked
 11559  0035F2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11560  0035F4  0E40               	movlw	64
 11561  0035F6  0101               	movlb	1	; () banked
 11562  0035F8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11563  0035FA  0E00               	movlw	0
 11564  0035FC  0101               	movlb	1	; () banked
 11565  0035FE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11566  003600  0E01               	movlw	1
 11567  003602  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11568  003604  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11569  003608  2A69               	incf	_ms,f,c
 11570  00360A  D7D3               	goto	l13131
 11571  00360C                     l13147:
 11572                           
 11573                           ;Oled.c: 1740: }
 11574                           ;Oled.c: 1743: setYX_LCD(1,x);
 11575  00360C  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11576  003610  0E01               	movlw	1
 11577  003612  ECB3  F024         	call	_setYX_LCD
 11578                           
 11579                           ;Oled.c: 1744: for(ms=0;ms<23;ms++)
 11580  003616  0E00               	movlw	0
 11581  003618  6E69               	movwf	_ms,c
 11582  00361A                     l13151:
 11583  00361A  0E16               	movlw	22
 11584  00361C  6469               	cpfsgt	_ms,c
 11585  00361E  D001               	goto	l13155
 11586  003620  0012               	return	
 11587  003622                     l13155:
 11588                           
 11589                           ;Oled.c: 1745: {
 11590                           ;Oled.c: 1746: temp = bat_x_m[1][ms];
 11591  003622  5069               	movf	_ms,w,c
 11592  003624  0D01               	mullw	1
 11593  003626  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11594  00362A  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11595  00362E  50F3               	movf	prodl,w,c
 11596  003630  0101               	movlb	1	; () banked
 11597  003632  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11598  003634  50F4               	movf	prodh,w,c
 11599  003636  0101               	movlb	1	; () banked
 11600  003638  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11601  00363A  0E17               	movlw	23
 11602  00363C  0101               	movlb	1	; () banked
 11603  00363E  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11604  003640  0E00               	movlw	0
 11605  003642  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11606  003644  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11607  003648  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11608  00364C                     	if	0	;tblptru may be non-zero
 11609  00364C                     	endif
 11610  00364C                     	if	0	;tblptru may be non-zero
 11611  00364C                     	endif
 11612  00364C  0008               	tblrd		*
 11613  00364E  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11614                           
 11615                           ; BSR set to: 1
 11616                           ;Oled.c: 1747: tori =temp;
 11617  003652  C136  F135         	movff	display_bat_blank@temp,display_bat_blank@tori
 11618                           
 11619                           ; BSR set to: 1
 11620                           ;Oled.c: 1749: temp = ~temp;
 11621  003656  0101               	movlb	1	; () banked
 11622  003658  1F36               	comf	display_bat_blank@temp& (0+255),f,b
 11623                           
 11624                           ; BSR set to: 1
 11625                           ;Oled.c: 1752: ee_WriteBytes(&temp, 0x40, 1);
 11626  00365A  0E36               	movlw	low display_bat_blank@temp
 11627  00365C  0101               	movlb	1	; () banked
 11628  00365E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11629  003660  0E01               	movlw	high display_bat_blank@temp
 11630  003662  0101               	movlb	1	; () banked
 11631  003664  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11632  003666  0E40               	movlw	64
 11633  003668  0101               	movlb	1	; () banked
 11634  00366A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11635  00366C  0E00               	movlw	0
 11636  00366E  0101               	movlb	1	; () banked
 11637  003670  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11638  003672  0E01               	movlw	1
 11639  003674  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11640  003676  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11641  00367A  2A69               	incf	_ms,f,c
 11642  00367C  D7CE               	goto	l13151
 11643  00367E                     l13169:
 11644  00367E  0101               	movlb	1	; () banked
 11645  003680  5132               	movf	display_bat_blank@mode& (0+255),w,b
 11646                           
 11647                           ; Switch size 1, requested type "space"
 11648                           ; Number of cases is 2, Range of values is 0 to 128
 11649                           ; switch strategies available:
 11650                           ; Name         Instructions Cycles
 11651                           ; simple_byte            7     4 (average)
 11652                           ;	Chosen strategy is simple_byte
 11653  003682  0A00               	xorlw	0	; case 0
 11654  003684  B4D8               	btfsc	status,2,c
 11655  003686  D729               	goto	l13095
 11656  003688  0A80               	xorlw	128	; case 128
 11657  00368A  A4D8               	btfss	status,2,c
 11658  00368C  0012               	return	
 11659  00368E  D78A               	goto	l13127
 11660  003690                     __end_of_display_bat_blank:
 11661                           	opt stack 0
 11662                           tblptru	equ	0xFF8
 11663                           tblptrh	equ	0xFF7
 11664                           tblptrl	equ	0xFF6
 11665                           tablat	equ	0xFF5
 11666                           prodh	equ	0xFF4
 11667                           prodl	equ	0xFF3
 11668                           intcon	equ	0xFF2
 11669                           intcon3	equ	0xFF0
 11670                           postinc0	equ	0xFEE
 11671                           wreg	equ	0xFE8
 11672                           postdec1	equ	0xFE5
 11673                           fsr1h	equ	0xFE2
 11674                           fsr1l	equ	0xFE1
 11675                           status	equ	0xFD8
 11676                           
 11677 ;; *************** function _display_bat *****************
 11678 ;; Defined at:
 11679 ;;		line 1770 in file "../Oled.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;  y               1    wreg     unsigned char 
 11682 ;;  x               1    9[BANK1 ] unsigned char 
 11683 ;;  mode            1   10[BANK1 ] unsigned char 
 11684 ;; Auto vars:     Size  Location     Type
 11685 ;;  y               1    0[COMRAM] unsigned char 
 11686 ;;  temp            1   14[BANK1 ] unsigned char 
 11687 ;;  tori            1   13[BANK1 ] unsigned char 
 11688 ;; Return value:  Size  Location     Type
 11689 ;;                  1    wreg      void 
 11690 ;; Registers used:
 11691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11692 ;; Tracked objects:
 11693 ;;		On entry : 0/0
 11694 ;;		On exit  : 0/0
 11695 ;;		Unchanged: 0/0
 11696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11697 ;;      Params:         0       0       2       0       0       0       0
 11698 ;;      Locals:         0       0       2       0       0       0       0
 11699 ;;      Temps:          0       0       2       0       0       0       0
 11700 ;;      Totals:         0       0       6       0       0       0       0
 11701 ;;Total ram usage:        6 bytes
 11702 ;; Hardware stack levels used:    1
 11703 ;; Hardware stack levels required when called:    6
 11704 ;; This function calls:
 11705 ;;		_ee_WriteBytes
 11706 ;;		_get_AD_vaule
 11707 ;;		_setYX_LCD
 11708 ;; This function is called by:
 11709 ;;		_check_bat
 11710 ;;		_initial_ui_setting
 11711 ;; This function uses a non-reentrant model
 11712 ;;
 11713                           
 11714                           	psect	text23
 11715  00217A                     __ptext23:
 11716                           	opt stack 0
 11717  00217A                     _display_bat:
 11718                           	opt stack 21
 11719                           
 11720                           ;Oled.c: 1773: uint8_t temp =0;
 11721                           
 11722                           ;incstack = 0
 11723  00217A  0E00               	movlw	0
 11724  00217C  0101               	movlb	1	; () banked
 11725  00217E  6F36               	movwf	display_bat@temp& (0+255),b
 11726                           
 11727                           ;Oled.c: 1774: uint8_t tori =0;
 11728  002180  0E00               	movlw	0
 11729  002182  0101               	movlb	1	; () banked
 11730  002184  6F35               	movwf	display_bat@tori& (0+255),b
 11731                           
 11732                           ; BSR set to: 1
 11733                           ;Oled.c: 1777: bat_vol = get_AD_vaule();
 11734  002186  EC71  F023         	call	_get_AD_vaule	;wreg free
 11735  00218A  C0FD  F047         	movff	?_get_AD_vaule,_bat_vol
 11736  00218E  C0FE  F048         	movff	?_get_AD_vaule+1,_bat_vol+1
 11737                           
 11738                           ;Oled.c: 1780: if(bat_vol > 730)
 11739  002192  0EDB               	movlw	219
 11740  002194  5C47               	subwf	_bat_vol,w,c
 11741  002196  0E02               	movlw	2
 11742  002198  5848               	subwfb	_bat_vol+1,w,c
 11743  00219A  A0D8               	btfss	status,0,c
 11744  00219C  D004               	goto	l11495
 11745                           
 11746                           ;Oled.c: 1781: {
 11747                           ;Oled.c: 1782: bat_x_m = bat100_m;
 11748  00219E  0EEA               	movlw	low _bat100_m
 11749  0021A0  6E49               	movwf	_bat_x_m,c
 11750  0021A2  0E7E               	movlw	high _bat100_m
 11751  0021A4  D049               	goto	L20
 11752  0021A6                     l11495:
 11753                           
 11754                           ;Oled.c: 1784: else if(bat_vol > 720 && bat_vol <= 730)
 11755  0021A6  0ED1               	movlw	209
 11756  0021A8  5C47               	subwf	_bat_vol,w,c
 11757  0021AA  0E02               	movlw	2
 11758  0021AC  5848               	subwfb	_bat_vol+1,w,c
 11759  0021AE  A0D8               	btfss	status,0,c
 11760  0021B0  D00A               	goto	l11501
 11761  0021B2  0EDB               	movlw	219
 11762  0021B4  5C47               	subwf	_bat_vol,w,c
 11763  0021B6  0E02               	movlw	2
 11764  0021B8  5848               	subwfb	_bat_vol+1,w,c
 11765  0021BA  B0D8               	btfsc	status,0,c
 11766  0021BC  D004               	goto	l11501
 11767                           
 11768                           ;Oled.c: 1785: {
 11769                           ;Oled.c: 1786: bat_x_m = bat80_m;
 11770  0021BE  0E18               	movlw	low _bat80_m
 11771  0021C0  6E49               	movwf	_bat_x_m,c
 11772  0021C2  0E7F               	movlw	high _bat80_m
 11773  0021C4  D039               	goto	L20
 11774  0021C6                     l11501:
 11775                           
 11776                           ;Oled.c: 1788: else if(bat_vol > 710 && bat_vol <= 720)
 11777  0021C6  0EC7               	movlw	199
 11778  0021C8  5C47               	subwf	_bat_vol,w,c
 11779  0021CA  0E02               	movlw	2
 11780  0021CC  5848               	subwfb	_bat_vol+1,w,c
 11781  0021CE  A0D8               	btfss	status,0,c
 11782  0021D0  D00A               	goto	l11507
 11783  0021D2  0ED1               	movlw	209
 11784  0021D4  5C47               	subwf	_bat_vol,w,c
 11785  0021D6  0E02               	movlw	2
 11786  0021D8  5848               	subwfb	_bat_vol+1,w,c
 11787  0021DA  B0D8               	btfsc	status,0,c
 11788  0021DC  D004               	goto	l11507
 11789                           
 11790                           ;Oled.c: 1789: {
 11791                           ;Oled.c: 1790: bat_x_m = bat60_m;
 11792  0021DE  0E46               	movlw	low _bat60_m
 11793  0021E0  6E49               	movwf	_bat_x_m,c
 11794  0021E2  0E7F               	movlw	high _bat60_m
 11795  0021E4  D029               	goto	L20
 11796  0021E6                     l11507:
 11797                           
 11798                           ;Oled.c: 1792: else if(bat_vol > 700 && bat_vol <= 710)
 11799  0021E6  0EBD               	movlw	189
 11800  0021E8  5C47               	subwf	_bat_vol,w,c
 11801  0021EA  0E02               	movlw	2
 11802  0021EC  5848               	subwfb	_bat_vol+1,w,c
 11803  0021EE  A0D8               	btfss	status,0,c
 11804  0021F0  D00A               	goto	l11513
 11805  0021F2  0EC7               	movlw	199
 11806  0021F4  5C47               	subwf	_bat_vol,w,c
 11807  0021F6  0E02               	movlw	2
 11808  0021F8  5848               	subwfb	_bat_vol+1,w,c
 11809  0021FA  B0D8               	btfsc	status,0,c
 11810  0021FC  D004               	goto	l11513
 11811                           
 11812                           ;Oled.c: 1793: {
 11813                           ;Oled.c: 1794: bat_x_m = bat40_m;
 11814  0021FE  0E74               	movlw	low _bat40_m
 11815  002200  6E49               	movwf	_bat_x_m,c
 11816  002202  0E7F               	movlw	high _bat40_m
 11817  002204  D019               	goto	L20
 11818  002206                     l11513:
 11819                           
 11820                           ;Oled.c: 1796: else if(bat_vol > 690 && bat_vol <= 700)
 11821  002206  0EB3               	movlw	179
 11822  002208  5C47               	subwf	_bat_vol,w,c
 11823  00220A  0E02               	movlw	2
 11824  00220C  5848               	subwfb	_bat_vol+1,w,c
 11825  00220E  A0D8               	btfss	status,0,c
 11826  002210  D00A               	goto	l11519
 11827  002212  0EBD               	movlw	189
 11828  002214  5C47               	subwf	_bat_vol,w,c
 11829  002216  0E02               	movlw	2
 11830  002218  5848               	subwfb	_bat_vol+1,w,c
 11831  00221A  B0D8               	btfsc	status,0,c
 11832  00221C  D004               	goto	l11519
 11833                           
 11834                           ;Oled.c: 1797: {
 11835                           ;Oled.c: 1798: bat_x_m = bat20_m;
 11836  00221E  0EA2               	movlw	low _bat20_m
 11837  002220  6E49               	movwf	_bat_x_m,c
 11838  002222  0E7F               	movlw	high _bat20_m
 11839  002224  D009               	goto	L20
 11840  002226                     l11519:
 11841                           
 11842                           ;Oled.c: 1800: else if(bat_vol <= 690)
 11843  002226  0EB3               	movlw	179
 11844  002228  5C47               	subwf	_bat_vol,w,c
 11845  00222A  0E02               	movlw	2
 11846  00222C  5848               	subwfb	_bat_vol+1,w,c
 11847  00222E  B0D8               	btfsc	status,0,c
 11848  002230  D0D7               	goto	l11597
 11849                           
 11850                           ;Oled.c: 1801: {
 11851                           ;Oled.c: 1802: bat_x_m = bat00_m;
 11852  002232  0ED0               	movlw	low _bat00_m
 11853  002234  6E49               	movwf	_bat_x_m,c
 11854  002236  0E7F               	movlw	high _bat00_m
 11855  002238                     L20:
 11856  002238  6E4A               	movwf	_bat_x_m+1,c
 11857                           
 11858                           ;Oled.c: 1807: }
 11859                           ;Oled.c: 1811: switch(mode)
 11860                           
 11861                           ;Oled.c: 1804: else
 11862                           ;Oled.c: 1805: {
 11863                           
 11864                           ;Oled.c: 1803: }
 11865  00223A  D0D2               	goto	l11597
 11866  00223C                     l11523:
 11867                           
 11868                           ;Oled.c: 1817: setYX_LCD(0,x);
 11869  00223C  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 11870  002240  0E00               	movlw	0
 11871  002242  ECB3  F024         	call	_setYX_LCD
 11872                           
 11873                           ;Oled.c: 1818: for(ms=0;ms<23;ms++)
 11874  002246  0E00               	movlw	0
 11875  002248  6E69               	movwf	_ms,c
 11876  00224A                     l11527:
 11877  00224A  0E16               	movlw	22
 11878  00224C  6469               	cpfsgt	_ms,c
 11879  00224E  D001               	goto	l11531
 11880  002250  D025               	goto	l11539
 11881  002252                     l11531:
 11882                           
 11883                           ;Oled.c: 1819: {
 11884                           ;Oled.c: 1821: temp =bat_x_m[0][ms];
 11885  002252  5069               	movf	_ms,w,c
 11886  002254  0D01               	mullw	1
 11887  002256  C049  F133         	movff	_bat_x_m,??_display_bat
 11888  00225A  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 11889  00225E  50F3               	movf	prodl,w,c
 11890  002260  0101               	movlb	1	; () banked
 11891  002262  2733               	addwf	??_display_bat& (0+255),f,b
 11892  002264  50F4               	movf	prodh,w,c
 11893  002266  0101               	movlb	1	; () banked
 11894  002268  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 11895  00226A  C133  FFF6         	movff	??_display_bat,tblptrl
 11896  00226E  C134  FFF7         	movff	??_display_bat+1,tblptrh
 11897  002272                     	if	0	;tblptru may be non-zero
 11898  002272                     	endif
 11899  002272                     	if	0	;tblptru may be non-zero
 11900  002272                     	endif
 11901  002272  0008               	tblrd		*
 11902  002274  CFF5 F136          	movff	tablat,display_bat@temp
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;Oled.c: 1823: ee_WriteBytes(&temp, 0x40, 1);
 11906  002278  0E36               	movlw	low display_bat@temp
 11907  00227A  0101               	movlb	1	; () banked
 11908  00227C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11909  00227E  0E01               	movlw	high display_bat@temp
 11910  002280  0101               	movlb	1	; () banked
 11911  002282  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11912  002284  0E40               	movlw	64
 11913  002286  0101               	movlb	1	; () banked
 11914  002288  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11915  00228A  0E00               	movlw	0
 11916  00228C  0101               	movlb	1	; () banked
 11917  00228E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11918  002290  0E01               	movlw	1
 11919  002292  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11920  002294  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11921  002298  2A69               	incf	_ms,f,c
 11922  00229A  D7D7               	goto	l11527
 11923  00229C                     l11539:
 11924                           
 11925                           ;Oled.c: 1824: }
 11926                           ;Oled.c: 1827: setYX_LCD(1,x);
 11927  00229C  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 11928  0022A0  0E01               	movlw	1
 11929  0022A2  ECB3  F024         	call	_setYX_LCD
 11930                           
 11931                           ;Oled.c: 1828: for(ms=0;ms<23;ms++)
 11932  0022A6  0E00               	movlw	0
 11933  0022A8  6E69               	movwf	_ms,c
 11934  0022AA                     l11543:
 11935  0022AA  0E16               	movlw	22
 11936  0022AC  6469               	cpfsgt	_ms,c
 11937  0022AE  D001               	goto	l11547
 11938  0022B0  0012               	return	
 11939  0022B2                     l11547:
 11940                           
 11941                           ;Oled.c: 1829: {
 11942                           ;Oled.c: 1830: temp = bat_x_m[1][ms];
 11943  0022B2  5069               	movf	_ms,w,c
 11944  0022B4  0D01               	mullw	1
 11945  0022B6  C049  F133         	movff	_bat_x_m,??_display_bat
 11946  0022BA  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 11947  0022BE  50F3               	movf	prodl,w,c
 11948  0022C0  0101               	movlb	1	; () banked
 11949  0022C2  2733               	addwf	??_display_bat& (0+255),f,b
 11950  0022C4  50F4               	movf	prodh,w,c
 11951  0022C6  0101               	movlb	1	; () banked
 11952  0022C8  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 11953  0022CA  0E17               	movlw	23
 11954  0022CC  0101               	movlb	1	; () banked
 11955  0022CE  2733               	addwf	??_display_bat& (0+255),f,b
 11956  0022D0  0E00               	movlw	0
 11957  0022D2  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 11958  0022D4  C133  FFF6         	movff	??_display_bat,tblptrl
 11959  0022D8  C134  FFF7         	movff	??_display_bat+1,tblptrh
 11960  0022DC                     	if	0	;tblptru may be non-zero
 11961  0022DC                     	endif
 11962  0022DC                     	if	0	;tblptru may be non-zero
 11963  0022DC                     	endif
 11964  0022DC  0008               	tblrd		*
 11965  0022DE  CFF5 F136          	movff	tablat,display_bat@temp
 11966                           
 11967                           ; BSR set to: 1
 11968                           ;Oled.c: 1832: ee_WriteBytes(&temp, 0x40, 1);
 11969  0022E2  0E36               	movlw	low display_bat@temp
 11970  0022E4  0101               	movlb	1	; () banked
 11971  0022E6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11972  0022E8  0E01               	movlw	high display_bat@temp
 11973  0022EA  0101               	movlb	1	; () banked
 11974  0022EC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11975  0022EE  0E40               	movlw	64
 11976  0022F0  0101               	movlb	1	; () banked
 11977  0022F2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11978  0022F4  0E00               	movlw	0
 11979  0022F6  0101               	movlb	1	; () banked
 11980  0022F8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11981  0022FA  0E01               	movlw	1
 11982  0022FC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11983  0022FE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 11984  002302  2A69               	incf	_ms,f,c
 11985  002304  D7D2               	goto	l11543
 11986  002306                     l11555:
 11987                           
 11988                           ;Oled.c: 1841: setYX_LCD(0,x);
 11989  002306  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 11990  00230A  0E00               	movlw	0
 11991  00230C  ECB3  F024         	call	_setYX_LCD
 11992                           
 11993                           ;Oled.c: 1842: for(ms=0;ms<23;ms++)
 11994  002310  0E00               	movlw	0
 11995  002312  6E69               	movwf	_ms,c
 11996  002314                     l11559:
 11997  002314  0E16               	movlw	22
 11998  002316  6469               	cpfsgt	_ms,c
 11999  002318  D001               	goto	l11563
 12000  00231A  D029               	goto	l11575
 12001  00231C                     l11563:
 12002                           
 12003                           ;Oled.c: 1843: {
 12004                           ;Oled.c: 1845: temp = bat_x_m[0][ms];
 12005  00231C  5069               	movf	_ms,w,c
 12006  00231E  0D01               	mullw	1
 12007  002320  C049  F133         	movff	_bat_x_m,??_display_bat
 12008  002324  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 12009  002328  50F3               	movf	prodl,w,c
 12010  00232A  0101               	movlb	1	; () banked
 12011  00232C  2733               	addwf	??_display_bat& (0+255),f,b
 12012  00232E  50F4               	movf	prodh,w,c
 12013  002330  0101               	movlb	1	; () banked
 12014  002332  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12015  002334  C133  FFF6         	movff	??_display_bat,tblptrl
 12016  002338  C134  FFF7         	movff	??_display_bat+1,tblptrh
 12017  00233C                     	if	0	;tblptru may be non-zero
 12018  00233C                     	endif
 12019  00233C                     	if	0	;tblptru may be non-zero
 12020  00233C                     	endif
 12021  00233C  0008               	tblrd		*
 12022  00233E  CFF5 F136          	movff	tablat,display_bat@temp
 12023                           
 12024                           ; BSR set to: 1
 12025                           ;Oled.c: 1846: tori = temp;
 12026  002342  C136  F135         	movff	display_bat@temp,display_bat@tori
 12027                           
 12028                           ; BSR set to: 1
 12029                           ;Oled.c: 1848: temp = ~temp;
 12030  002346  0101               	movlb	1	; () banked
 12031  002348  1F36               	comf	display_bat@temp& (0+255),f,b
 12032                           
 12033                           ; BSR set to: 1
 12034                           ;Oled.c: 1851: ee_WriteBytes(&temp, 0x40, 1);
 12035  00234A  0E36               	movlw	low display_bat@temp
 12036  00234C  0101               	movlb	1	; () banked
 12037  00234E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 12038  002350  0E01               	movlw	high display_bat@temp
 12039  002352  0101               	movlb	1	; () banked
 12040  002354  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 12041  002356  0E40               	movlw	64
 12042  002358  0101               	movlb	1	; () banked
 12043  00235A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 12044  00235C  0E00               	movlw	0
 12045  00235E  0101               	movlb	1	; () banked
 12046  002360  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 12047  002362  0E01               	movlw	1
 12048  002364  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 12049  002366  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 12050  00236A  2A69               	incf	_ms,f,c
 12051  00236C  D7D3               	goto	l11559
 12052  00236E                     l11575:
 12053                           
 12054                           ;Oled.c: 1852: }
 12055                           ;Oled.c: 1855: setYX_LCD(1,x);
 12056  00236E  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 12057  002372  0E01               	movlw	1
 12058  002374  ECB3  F024         	call	_setYX_LCD
 12059                           
 12060                           ;Oled.c: 1856: for(ms=0;ms<23;ms++)
 12061  002378  0E00               	movlw	0
 12062  00237A  6E69               	movwf	_ms,c
 12063  00237C                     l11579:
 12064  00237C  0E16               	movlw	22
 12065  00237E  6469               	cpfsgt	_ms,c
 12066  002380  D001               	goto	l11583
 12067  002382  0012               	return	
 12068  002384                     l11583:
 12069                           
 12070                           ;Oled.c: 1857: {
 12071                           ;Oled.c: 1858: temp = bat_x_m[1][ms];
 12072  002384  5069               	movf	_ms,w,c
 12073  002386  0D01               	mullw	1
 12074  002388  C049  F133         	movff	_bat_x_m,??_display_bat
 12075  00238C  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 12076  002390  50F3               	movf	prodl,w,c
 12077  002392  0101               	movlb	1	; () banked
 12078  002394  2733               	addwf	??_display_bat& (0+255),f,b
 12079  002396  50F4               	movf	prodh,w,c
 12080  002398  0101               	movlb	1	; () banked
 12081  00239A  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12082  00239C  0E17               	movlw	23
 12083  00239E  0101               	movlb	1	; () banked
 12084  0023A0  2733               	addwf	??_display_bat& (0+255),f,b
 12085  0023A2  0E00               	movlw	0
 12086  0023A4  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12087  0023A6  C133  FFF6         	movff	??_display_bat,tblptrl
 12088  0023AA  C134  FFF7         	movff	??_display_bat+1,tblptrh
 12089  0023AE                     	if	0	;tblptru may be non-zero
 12090  0023AE                     	endif
 12091  0023AE                     	if	0	;tblptru may be non-zero
 12092  0023AE                     	endif
 12093  0023AE  0008               	tblrd		*
 12094  0023B0  CFF5 F136          	movff	tablat,display_bat@temp
 12095                           
 12096                           ; BSR set to: 1
 12097                           ;Oled.c: 1859: tori =temp;
 12098  0023B4  C136  F135         	movff	display_bat@temp,display_bat@tori
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;Oled.c: 1861: temp = ~temp;
 12102  0023B8  0101               	movlb	1	; () banked
 12103  0023BA  1F36               	comf	display_bat@temp& (0+255),f,b
 12104                           
 12105                           ; BSR set to: 1
 12106                           ;Oled.c: 1864: ee_WriteBytes(&temp, 0x40, 1);
 12107  0023BC  0E36               	movlw	low display_bat@temp
 12108  0023BE  0101               	movlb	1	; () banked
 12109  0023C0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 12110  0023C2  0E01               	movlw	high display_bat@temp
 12111  0023C4  0101               	movlb	1	; () banked
 12112  0023C6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 12113  0023C8  0E40               	movlw	64
 12114  0023CA  0101               	movlb	1	; () banked
 12115  0023CC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 12116  0023CE  0E00               	movlw	0
 12117  0023D0  0101               	movlb	1	; () banked
 12118  0023D2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 12119  0023D4  0E01               	movlw	1
 12120  0023D6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 12121  0023D8  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 12122  0023DC  2A69               	incf	_ms,f,c
 12123  0023DE  D7CE               	goto	l11579
 12124  0023E0                     l11597:
 12125  0023E0  0101               	movlb	1	; () banked
 12126  0023E2  5132               	movf	display_bat@mode& (0+255),w,b
 12127                           
 12128                           ; Switch size 1, requested type "space"
 12129                           ; Number of cases is 2, Range of values is 0 to 128
 12130                           ; switch strategies available:
 12131                           ; Name         Instructions Cycles
 12132                           ; simple_byte            7     4 (average)
 12133                           ;	Chosen strategy is simple_byte
 12134  0023E4  0A00               	xorlw	0	; case 0
 12135  0023E6  B4D8               	btfsc	status,2,c
 12136  0023E8  D729               	goto	l11523
 12137  0023EA  0A80               	xorlw	128	; case 128
 12138  0023EC  A4D8               	btfss	status,2,c
 12139  0023EE  0012               	return	
 12140  0023F0  D78A               	goto	l11555
 12141  0023F2                     __end_of_display_bat:
 12142                           	opt stack 0
 12143                           tblptru	equ	0xFF8
 12144                           tblptrh	equ	0xFF7
 12145                           tblptrl	equ	0xFF6
 12146                           tablat	equ	0xFF5
 12147                           prodh	equ	0xFF4
 12148                           prodl	equ	0xFF3
 12149                           intcon	equ	0xFF2
 12150                           intcon3	equ	0xFF0
 12151                           postinc0	equ	0xFEE
 12152                           wreg	equ	0xFE8
 12153                           postdec1	equ	0xFE5
 12154                           fsr1h	equ	0xFE2
 12155                           fsr1l	equ	0xFE1
 12156                           status	equ	0xFD8
 12157                           
 12158 ;; *************** function _get_AD_vaule *****************
 12159 ;; Defined at:
 12160 ;;		line 294 in file "../Oled.c"
 12161 ;; Parameters:    Size  Location     Type
 12162 ;;		None
 12163 ;; Auto vars:     Size  Location     Type
 12164 ;;  rv              2    4[BANK1 ] unsigned int 
 12165 ;;  lv              1    7[BANK1 ] unsigned char 
 12166 ;;  hv              1    6[BANK1 ] unsigned char 
 12167 ;;  ts              1    3[BANK1 ] unsigned char 
 12168 ;; Return value:  Size  Location     Type
 12169 ;;                  2    0[BANK0 ] unsigned int 
 12170 ;; Registers used:
 12171 ;;		wreg, status,2, status,0
 12172 ;; Tracked objects:
 12173 ;;		On entry : 0/0
 12174 ;;		On exit  : 0/0
 12175 ;;		Unchanged: 0/0
 12176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12177 ;;      Params:         0       2       0       0       0       0       0
 12178 ;;      Locals:         0       0       5       0       0       0       0
 12179 ;;      Temps:          0       0       3       0       0       0       0
 12180 ;;      Totals:         0       2       8       0       0       0       0
 12181 ;;Total ram usage:       10 bytes
 12182 ;; Hardware stack levels used:    1
 12183 ;; Hardware stack levels required when called:    2
 12184 ;; This function calls:
 12185 ;;		Nothing
 12186 ;; This function is called by:
 12187 ;;		_display_bat
 12188 ;; This function uses a non-reentrant model
 12189 ;;
 12190                           
 12191                           	psect	text24
 12192  0046E2                     __ptext24:
 12193                           	opt stack 0
 12194  0046E2                     _get_AD_vaule:
 12195                           	opt stack 24
 12196                           
 12197                           ;Oled.c: 297: uint8_t hv=0;
 12198                           
 12199                           ;incstack = 0
 12200  0046E2  0E00               	movlw	0
 12201  0046E4  0101               	movlb	1	; () banked
 12202  0046E6  6F2E               	movwf	get_AD_vaule@hv& (0+255),b
 12203                           
 12204                           ;Oled.c: 298: uint8_t lv=0;
 12205  0046E8  0E00               	movlw	0
 12206  0046EA  0101               	movlb	1	; () banked
 12207  0046EC  6F2F               	movwf	get_AD_vaule@lv& (0+255),b
 12208                           
 12209                           ;Oled.c: 299: uint8_t ts=0;
 12210  0046EE  0E00               	movlw	0
 12211  0046F0  0101               	movlb	1	; () banked
 12212  0046F2  6F2B               	movwf	get_AD_vaule@ts& (0+255),b
 12213                           
 12214                           ;Oled.c: 300: uint16_t rv=0;
 12215  0046F4  0E00               	movlw	0
 12216  0046F6  0101               	movlb	1	; () banked
 12217  0046F8  6F2D               	movwf	(get_AD_vaule@rv+1)& (0+255),b
 12218  0046FA  0E00               	movlw	0
 12219  0046FC  6F2C               	movwf	get_AD_vaule@rv& (0+255),b
 12220                           
 12221                           ; BSR set to: 1
 12222                           ;Oled.c: 301: ADCON0bits.CHS = 0;
 12223  0046FE  94C2               	bcf	4034,2,c	;volatile
 12224  004700  96C2               	bcf	4034,3,c	;volatile
 12225  004702  98C2               	bcf	4034,4,c	;volatile
 12226  004704  9AC2               	bcf	4034,5,c	;volatile
 12227                           
 12228                           ; BSR set to: 1
 12229                           ;Oled.c: 302: ADCON0bits.GO =1;
 12230  004706  82C2               	bsf	4034,1,c	;volatile
 12231  004708                     l735:
 12232  004708  B2C2               	btfsc	4034,1,c	;volatile
 12233  00470A  D7FE               	goto	l735
 12234                           
 12235                           ;Oled.c: 306: hv = ADRESH;
 12236  00470C  CFC4 F12E          	movff	4036,get_AD_vaule@hv	;volatile
 12237                           
 12238                           ;Oled.c: 307: lv = ADRESL;
 12239  004710  CFC3 F12F          	movff	4035,get_AD_vaule@lv	;volatile
 12240                           
 12241                           ;Oled.c: 309: rv = ((uint16_t)(hv<<8 | lv) >>6)& 0x03ff;
 12242  004714  0101               	movlb	1	; () banked
 12243  004716  512F               	movf	get_AD_vaule@lv& (0+255),w,b
 12244  004718  C12E  F128         	movff	get_AD_vaule@hv,??_get_AD_vaule
 12245  00471C  0101               	movlb	1	; () banked
 12246  00471E  6B29               	clrf	(??_get_AD_vaule+1)& (0+255),b
 12247  004720  C128  F129         	movff	??_get_AD_vaule,??_get_AD_vaule+1
 12248  004724  0101               	movlb	1	; () banked
 12249  004726  6B28               	clrf	??_get_AD_vaule& (0+255),b
 12250  004728  0101               	movlb	1	; () banked
 12251  00472A  1328               	iorwf	??_get_AD_vaule& (0+255),f,b
 12252  00472C  0E00               	movlw	0
 12253  00472E  1329               	iorwf	(??_get_AD_vaule+1)& (0+255),f,b
 12254  004730  0E06               	movlw	6
 12255  004732  0101               	movlb	1	; () banked
 12256  004734  6F2A               	movwf	(??_get_AD_vaule+2)& (0+255),b
 12257  004736                     u13555:
 12258  004736  0101               	movlb	1	; () banked
 12259  004738  90D8               	bcf	status,0,c
 12260  00473A  3329               	rrcf	(??_get_AD_vaule+1)& (0+255),f,b
 12261  00473C  3328               	rrcf	??_get_AD_vaule& (0+255),f,b
 12262  00473E  0101               	movlb	1	; () banked
 12263  004740  2F2A               	decfsz	(??_get_AD_vaule+2)& (0+255),f,b
 12264  004742  D7F9               	goto	u13555
 12265  004744  0EFF               	movlw	255
 12266  004746  0101               	movlb	1	; () banked
 12267  004748  1528               	andwf	??_get_AD_vaule& (0+255),w,b
 12268  00474A  0101               	movlb	1	; () banked
 12269  00474C  6F2C               	movwf	get_AD_vaule@rv& (0+255),b
 12270  00474E  0E03               	movlw	3
 12271  004750  0101               	movlb	1	; () banked
 12272  004752  1529               	andwf	(??_get_AD_vaule+1)& (0+255),w,b
 12273  004754  0101               	movlb	1	; () banked
 12274  004756  6F2D               	movwf	(get_AD_vaule@rv+1)& (0+255),b
 12275                           
 12276                           ; BSR set to: 1
 12277                           ;Oled.c: 312: return rv;
 12278  004758  C12C  F0FD         	movff	get_AD_vaule@rv,?_get_AD_vaule
 12279  00475C  C12D  F0FE         	movff	get_AD_vaule@rv+1,?_get_AD_vaule+1
 12280  004760  0012               	return	
 12281  004762                     __end_of_get_AD_vaule:
 12282                           	opt stack 0
 12283                           tblptru	equ	0xFF8
 12284                           tblptrh	equ	0xFF7
 12285                           tblptrl	equ	0xFF6
 12286                           tablat	equ	0xFF5
 12287                           prodh	equ	0xFF4
 12288                           prodl	equ	0xFF3
 12289                           intcon	equ	0xFF2
 12290                           intcon3	equ	0xFF0
 12291                           postinc0	equ	0xFEE
 12292                           wreg	equ	0xFE8
 12293                           postdec1	equ	0xFE5
 12294                           fsr1h	equ	0xFE2
 12295                           fsr1l	equ	0xFE1
 12296                           status	equ	0xFD8
 12297                           
 12298 ;; *************** function _check_acting *****************
 12299 ;; Defined at:
 12300 ;;		line 882 in file "../MotorDrive.c"
 12301 ;; Parameters:    Size  Location     Type
 12302 ;;		None
 12303 ;; Auto vars:     Size  Location     Type
 12304 ;;		None
 12305 ;; Return value:  Size  Location     Type
 12306 ;;                  1    wreg      char 
 12307 ;; Registers used:
 12308 ;;		wreg, status,2, status,0, cstack
 12309 ;; Tracked objects:
 12310 ;;		On entry : 0/0
 12311 ;;		On exit  : 0/0
 12312 ;;		Unchanged: 0/0
 12313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12314 ;;      Params:         0       0       0       0       0       0       0
 12315 ;;      Locals:         0       0       0       0       0       0       0
 12316 ;;      Temps:          0       0       0       0       0       0       0
 12317 ;;      Totals:         0       0       0       0       0       0       0
 12318 ;;Total ram usage:        0 bytes
 12319 ;; Hardware stack levels used:    1
 12320 ;; Hardware stack levels required when called:    4
 12321 ;; This function calls:
 12322 ;;		_buzz
 12323 ;;		_delaynus
 12324 ;; This function is called by:
 12325 ;;		_main
 12326 ;; This function uses a non-reentrant model
 12327 ;;
 12328                           
 12329                           	psect	text25
 12330  004656                     __ptext25:
 12331                           	opt stack 0
 12332  004656                     _check_acting:
 12333                           	opt stack 26
 12334                           
 12335                           ;MotorDrive.c: 884: if(hg_op.acting_flag)
 12336                           
 12337                           ; BSR set to: 1
 12338                           ;incstack = 0
 12339  004656  0100               	movlb	0	; () banked
 12340  004658  519E               	movf	(_hg_op+30)& (0+255),w,b
 12341  00465A  B4D8               	btfsc	status,2,c
 12342  00465C  0012               	return	
 12343                           
 12344                           ; BSR set to: 0
 12345                           ;MotorDrive.c: 885: {
 12346                           ;MotorDrive.c: 887: if( hg_op.drops_sa || hg_op.drops_push || hg_op.drops_sb)
 12347  00465E  0100               	movlb	0	; () banked
 12348  004660  519F               	movf	(_hg_op+31)& (0+255),w,b
 12349  004662  A4D8               	btfss	status,2,c
 12350  004664  D008               	goto	l15069
 12351                           
 12352                           ; BSR set to: 0
 12353  004666  0100               	movlb	0	; () banked
 12354  004668  51A1               	movf	(_hg_op+33)& (0+255),w,b
 12355  00466A  A4D8               	btfss	status,2,c
 12356  00466C  D004               	goto	l15069
 12357                           
 12358                           ; BSR set to: 0
 12359  00466E  0100               	movlb	0	; () banked
 12360  004670  51A0               	movf	(_hg_op+32)& (0+255),w,b
 12361  004672  B4D8               	btfsc	status,2,c
 12362  004674  D004               	goto	l15073
 12363  004676                     l15069:
 12364                           
 12365                           ; BSR set to: 0
 12366                           ;MotorDrive.c: 888: {
 12367                           ;MotorDrive.c: 889: hg_op.acting_flag =0;
 12368  004676  0E00               	movlw	0
 12369  004678  0100               	movlb	0	; () banked
 12370  00467A  6F9E               	movwf	(_hg_op+30)& (0+255),b
 12371                           
 12372                           ; BSR set to: 0
 12373                           ;MotorDrive.c: 890: return -1;
 12374                           ;	Return value of _check_acting is never used
 12375  00467C  0012               	return	
 12376  00467E                     l15073:
 12377                           
 12378                           ; BSR set to: 0
 12379                           ;MotorDrive.c: 891: }
 12380                           ;MotorDrive.c: 894: delaynus(20 * 1000);
 12381  00467E  0E4E               	movlw	78
 12382  004680  0100               	movlb	0	; () banked
 12383  004682  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12384  004684  0E20               	movlw	32
 12385  004686  6FFD               	movwf	delaynus@n& (0+255),b
 12386  004688  ECEB  F026         	call	_delaynus	;wreg free
 12387                           
 12388                           ;MotorDrive.c: 895: if(PORTBbits.RB5 == 0)
 12389  00468C  BA81               	btfsc	3969,5,c	;volatile
 12390  00468E  D023               	goto	l621
 12391                           
 12392                           ;MotorDrive.c: 896: {
 12393                           ;MotorDrive.c: 897: do{T0IE=0;T0IF = 0;T0CONbits.TMR0ON =0;}while(0);
 12394  004690  9AF2               	bcf	intcon,5,c	;volatile
 12395  004692  94F2               	bcf	intcon,2,c	;volatile
 12396  004694  9ED5               	bcf	4053,7,c	;volatile
 12397                           
 12398                           ;MotorDrive.c: 901: if(1)
 12399  004696  EC09  F027         	call	_buzz	;wreg free
 12400                           
 12401                           ;MotorDrive.c: 902: {
 12402                           ;MotorDrive.c: 905: if(hg_op.cur_working_mode == 0x01)
 12403  00469A  0100               	movlb	0	; () banked
 12404  00469C  0581               	decf	(_hg_op+1)& (0+255),w,b
 12405  00469E  A4D8               	btfss	status,2,c
 12406  0046A0  D004               	goto	l15085
 12407  0046A2  D00F               	goto	l15095
 12408  0046A4                     l15083:
 12409                           
 12410                           ; BSR set to: 0
 12411                           ;MotorDrive.c: 914: hg_op.working_mode = hg_op.cur_working_mode;
 12412  0046A4  C081  F080         	movff	_hg_op+1,_hg_op
 12413                           
 12414                           ;MotorDrive.c: 915: }
 12415  0046A8  D018               	goto	l15103
 12416  0046AA                     l15085:
 12417                           
 12418                           ; BSR set to: 0
 12419                           ;MotorDrive.c: 916: else if(hg_op.cur_working_mode == 0x00)
 12420  0046AA  0100               	movlb	0	; () banked
 12421  0046AC  5181               	movf	(_hg_op+1)& (0+255),w,b
 12422  0046AE  B4D8               	btfsc	status,2,c
 12423  0046B0  D008               	goto	l15095
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;MotorDrive.c: 926: else if(hg_op.cur_working_mode == 0x04)
 12427                           
 12428                           ; BSR set to: 0
 12429                           
 12430                           ;MotorDrive.c: 925: }
 12431                           
 12432                           ; BSR set to: 0
 12433                           ;MotorDrive.c: 923: hg_op.working_mode = hg_op.cur_working_mode;
 12434                           
 12435                           ;MotorDrive.c: 921: hg_op.drops_push =0;
 12436                           
 12437                           ;MotorDrive.c: 920: hg_op.drops_sb =0;
 12438                           
 12439                           ; BSR set to: 0
 12440                           ;MotorDrive.c: 917: {
 12441                           ;MotorDrive.c: 919: hg_op.drops_sa =1;
 12442  0046B2  0E04               	movlw	4
 12443  0046B4  0100               	movlb	0	; () banked
 12444  0046B6  1981               	xorwf	(_hg_op+1)& (0+255),w,b
 12445  0046B8  A4D8               	btfss	status,2,c
 12446  0046BA  D00F               	goto	l15103
 12447                           
 12448                           ; BSR set to: 0
 12449                           ;MotorDrive.c: 927: {
 12450                           ;MotorDrive.c: 928: action_btn_cnt ++;
 12451  0046BC  0100               	movlb	0	; () banked
 12452  0046BE  4BD1               	infsnz	_action_btn_cnt& (0+255),f,b
 12453  0046C0  2BD2               	incf	(_action_btn_cnt+1)& (0+255),f,b
 12454  0046C2                     l15095:
 12455                           
 12456                           ; BSR set to: 0
 12457                           ;MotorDrive.c: 930: hg_op.drops_sa =1;
 12458  0046C2  0E01               	movlw	1
 12459  0046C4  0100               	movlb	0	; () banked
 12460  0046C6  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12461                           
 12462                           ; BSR set to: 0
 12463                           ;MotorDrive.c: 931: hg_op.drops_sb =0;
 12464  0046C8  0E00               	movlw	0
 12465  0046CA  0100               	movlb	0	; () banked
 12466  0046CC  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12467                           
 12468                           ; BSR set to: 0
 12469                           ;MotorDrive.c: 932: hg_op.drops_push =0;
 12470  0046CE  0E00               	movlw	0
 12471  0046D0  0100               	movlb	0	; () banked
 12472  0046D2  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12473  0046D4  D7E7               	goto	l15083
 12474  0046D6                     l621:
 12475  0046D6  8AF2               	bsf	intcon,5,c	;volatile
 12476  0046D8  8ED5               	bsf	4053,7,c	;volatile
 12477  0046DA                     l15103:
 12478                           
 12479                           ;MotorDrive.c: 947: }
 12480                           ;MotorDrive.c: 951: hg_op.acting_flag = 0;
 12481  0046DA  0E00               	movlw	0
 12482  0046DC  0100               	movlb	0	; () banked
 12483  0046DE  6F9E               	movwf	(_hg_op+30)& (0+255),b
 12484  0046E0  0012               	return	
 12485  0046E2                     __end_of_check_acting:
 12486                           	opt stack 0
 12487                           tblptru	equ	0xFF8
 12488                           tblptrh	equ	0xFF7
 12489                           tblptrl	equ	0xFF6
 12490                           tablat	equ	0xFF5
 12491                           prodh	equ	0xFF4
 12492                           prodl	equ	0xFF3
 12493                           intcon	equ	0xFF2
 12494                           intcon3	equ	0xFF0
 12495                           postinc0	equ	0xFEE
 12496                           wreg	equ	0xFE8
 12497                           postdec1	equ	0xFE5
 12498                           fsr1h	equ	0xFE2
 12499                           fsr1l	equ	0xFE1
 12500                           status	equ	0xFD8
 12501                           
 12502 ;; *************** function _c_routine *****************
 12503 ;; Defined at:
 12504 ;;		line 517 in file "../MotorDrive.c"
 12505 ;; Parameters:    Size  Location     Type
 12506 ;;		None
 12507 ;; Auto vars:     Size  Location     Type
 12508 ;;  cnt_push        2    8[BANK1 ] unsigned int 
 12509 ;; Return value:  Size  Location     Type
 12510 ;;                  1    wreg      void 
 12511 ;; Registers used:
 12512 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12513 ;; Tracked objects:
 12514 ;;		On entry : 0/0
 12515 ;;		On exit  : 0/0
 12516 ;;		Unchanged: 0/0
 12517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12518 ;;      Params:         0       0       0       0       0       0       0
 12519 ;;      Locals:         0       0       2       0       0       0       0
 12520 ;;      Temps:          0       0       0       0       0       0       0
 12521 ;;      Totals:         0       0       2       0       0       0       0
 12522 ;;Total ram usage:        2 bytes
 12523 ;; Hardware stack levels used:    1
 12524 ;; Hardware stack levels required when called:    3
 12525 ;; This function calls:
 12526 ;;		___wmul
 12527 ;;		_delay_pwm
 12528 ;;		_delaynus
 12529 ;; This function is called by:
 12530 ;;		_main
 12531 ;; This function uses a non-reentrant model
 12532 ;;
 12533                           
 12534                           	psect	text26
 12535  002EE4                     __ptext26:
 12536                           	opt stack 0
 12537  002EE4                     _c_routine:
 12538                           	opt stack 27
 12539                           
 12540                           ;MotorDrive.c: 519: uint16_t cnt_push =0;
 12541                           
 12542                           ; BSR set to: 0
 12543                           ;incstack = 0
 12544  002EE4  0E00               	movlw	0
 12545  002EE6  0101               	movlb	1	; () banked
 12546  002EE8  6F31               	movwf	(c_routine@cnt_push+1)& (0+255),b
 12547  002EEA  0E00               	movlw	0
 12548  002EEC  6F30               	movwf	c_routine@cnt_push& (0+255),b
 12549                           
 12550                           ;MotorDrive.c: 536: else
 12551                           ;MotorDrive.c: 537: {
 12552                           ;MotorDrive.c: 538: if(hg_op.drops_sa == 1)
 12553                           
 12554                           ; BSR set to: 0
 12555                           
 12556                           ;MotorDrive.c: 535: }
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;MotorDrive.c: 534: hg_op.need_reset =1;
 12560                           
 12561                           ; BSR set to: 0
 12562                           ;MotorDrive.c: 533: hg_op.working_mode = 0x03;
 12563                           
 12564                           ;MotorDrive.c: 532: hg_op.acting_flag =0;
 12565                           
 12566                           ;MotorDrive.c: 528: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 12567                           
 12568                           ; BSR set to: 1
 12569                           ;MotorDrive.c: 527: delaynus(30 * 1000);
 12570                           
 12571                           ; BSR set to: 1
 12572                           
 12573                           ; BSR set to: 1
 12574                           
 12575                           ; BSR set to: 1
 12576                           ;MotorDrive.c: 526: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
 12577                           
 12578                           ; BSR set to: 1
 12579                           
 12580                           ;MotorDrive.c: 523: {
 12581                           ;MotorDrive.c: 524: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 12582                           
 12583                           ;MotorDrive.c: 522: if(0)
 12584  002EEE  0100               	movlb	0	; () banked
 12585  002EF0  059F               	decf	(_hg_op+31)& (0+255),w,b
 12586  002EF2  A4D8               	btfss	status,2,c
 12587  002EF4  D038               	goto	l14701
 12588                           
 12589                           ; BSR set to: 0
 12590                           ;MotorDrive.c: 539: {
 12591                           ;MotorDrive.c: 540: hg_op.cnt_posa =0;
 12592  002EF6  0E00               	movlw	0
 12593  002EF8  0100               	movlb	0	; () banked
 12594  002EFA  6FA6               	movwf	(_hg_op+38)& (0+255),b
 12595  002EFC  0E00               	movlw	0
 12596  002EFE  6FA5               	movwf	(_hg_op+37)& (0+255),b
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;MotorDrive.c: 542: if( hg_op.needle_len == 13)
 12600  002F00  0E0D               	movlw	13
 12601  002F02  0100               	movlb	0	; () banked
 12602  002F04  1997               	xorwf	(_hg_op+23)& (0+255),w,b
 12603  002F06  A4D8               	btfss	status,2,c
 12604  002F08  D00B               	goto	l466
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;MotorDrive.c: 543: {
 12608                           ;MotorDrive.c: 545: LATDbits.LD4 =1;LATDbits.LD2 =1;
 12609  002F0A  888C               	bsf	3980,4,c	;volatile
 12610  002F0C  848C               	bsf	3980,2,c	;volatile
 12611  002F0E                     l14685:
 12612                           
 12613                           ; BSR set to: 0
 12614  002F0E  0100               	movlb	0	; () banked
 12615  002F10  51A6               	movf	(_hg_op+38)& (0+255),w,b
 12616  002F12  E10F               	bnz	l14689
 12617  002F14  0EBB               	movlw	187
 12618  002F16  0100               	movlb	0	; () banked
 12619  002F18  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
 12620  002F1A  B0D8               	btfsc	status,0,c
 12621  002F1C  D00A               	goto	l14689
 12622  002F1E  D7F7               	goto	l14685
 12623  002F20                     l466:
 12624                           
 12625                           ; BSR set to: 0
 12626                           ;MotorDrive.c: 548: else
 12627                           ;MotorDrive.c: 549: {
 12628                           ;MotorDrive.c: 550: LATDbits.LD4 =1;LATDbits.LD2 =1;
 12629  002F20  888C               	bsf	3980,4,c	;volatile
 12630  002F22  848C               	bsf	3980,2,c	;volatile
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;MotorDrive.c: 551: delaynus(14 * 1000);
 12634  002F24  0E36               	movlw	54
 12635  002F26  0100               	movlb	0	; () banked
 12636  002F28  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12637  002F2A  0EB0               	movlw	176
 12638  002F2C  6FFD               	movwf	delaynus@n& (0+255),b
 12639  002F2E  ECEB  F026         	call	_delaynus	;wreg free
 12640  002F32                     l14689:
 12641  002F32  888C               	bsf	3980,4,c	;volatile
 12642  002F34  948C               	bcf	3980,2,c	;volatile
 12643  002F36  968C               	bcf	3980,3,c	;volatile
 12644                           
 12645                           ;MotorDrive.c: 556: delaynus(50 * 1000);
 12646  002F38  0EC3               	movlw	195
 12647  002F3A  0100               	movlb	0	; () banked
 12648  002F3C  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12649  002F3E  0E50               	movlw	80
 12650  002F40  6FFD               	movwf	delaynus@n& (0+255),b
 12651  002F42  ECEB  F026         	call	_delaynus	;wreg free
 12652                           
 12653                           ;MotorDrive.c: 557: delaynus(50 * 1000);
 12654  002F46  0EC3               	movlw	195
 12655  002F48  0100               	movlb	0	; () banked
 12656  002F4A  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12657  002F4C  0E50               	movlw	80
 12658  002F4E  6FFD               	movwf	delaynus@n& (0+255),b
 12659  002F50  ECEB  F026         	call	_delaynus	;wreg free
 12660                           
 12661                           ;MotorDrive.c: 559: hg_op.drops_sa = 0;
 12662  002F54  0E00               	movlw	0
 12663  002F56  0100               	movlb	0	; () banked
 12664  002F58  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12665                           
 12666                           ; BSR set to: 0
 12667                           ;MotorDrive.c: 560: hg_op.drops_sb = 0;
 12668  002F5A  0E00               	movlw	0
 12669  002F5C  0100               	movlb	0	; () banked
 12670  002F5E  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;MotorDrive.c: 561: hg_op.drops_push = 1;
 12674  002F60  0E01               	movlw	1
 12675  002F62  0100               	movlb	0	; () banked
 12676  002F64  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12677  002F66                     l14701:
 12678                           
 12679                           ; BSR set to: 0
 12680                           ;MotorDrive.c: 562: }
 12681                           ;MotorDrive.c: 565: if(hg_op.drops_push == 1)
 12682  002F66  0100               	movlb	0	; () banked
 12683  002F68  05A1               	decf	(_hg_op+33)& (0+255),w,b
 12684  002F6A  B4D8               	btfsc	status,2,c
 12685  002F6C  D026               	goto	l14721
 12686  002F6E  D03A               	goto	l14731
 12687  002F70                     l14705:
 12688                           
 12689                           ;MotorDrive.c: 579: {
 12690                           ;MotorDrive.c: 580: cnt_push =0;
 12691  002F70  0E00               	movlw	0
 12692  002F72  0101               	movlb	1	; () banked
 12693  002F74  6F31               	movwf	(c_routine@cnt_push+1)& (0+255),b
 12694  002F76  0E00               	movlw	0
 12695  002F78  6F30               	movwf	c_routine@cnt_push& (0+255),b
 12696                           
 12697                           ; BSR set to: 1
 12698                           
 12699                           ; BSR set to: 1
 12700                           
 12701                           ;MotorDrive.c: 581: do{LATDbits.LD0 =1;LATDbits.LD1 =0; LATCbits.LC2 =1; }while(0);
 12702  002F7A  808C               	bsf	3980,0,c	;volatile
 12703                           
 12704                           ; BSR set to: 1
 12705  002F7C  928C               	bcf	3980,1,c	;volatile
 12706                           
 12707                           ; BSR set to: 1
 12708  002F7E  848B               	bsf	3979,2,c	;volatile
 12709                           
 12710                           ; BSR set to: 1
 12711                           ;MotorDrive.c: 583: while(cnt_push < 146)
 12712  002F80  D00A               	goto	l14717
 12713  002F82                     l480:
 12714  002F82  A880               	btfss	3968,4,c	;volatile
 12715  002F84  D7FE               	goto	l480
 12716                           
 12717                           ;MotorDrive.c: 586: cnt_push ++;
 12718  002F86  0101               	movlb	1	; () banked
 12719  002F88  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 12720  002F8A  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 12721  002F8C                     l483:
 12722  002F8C  B880               	btfsc	3968,4,c	;volatile
 12723  002F8E  D7FE               	goto	l483
 12724                           
 12725                           ;MotorDrive.c: 588: cnt_push ++;
 12726  002F90  0101               	movlb	1	; () banked
 12727  002F92  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 12728  002F94  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 12729  002F96                     l14717:
 12730                           
 12731                           ; BSR set to: 1
 12732  002F96  0101               	movlb	1	; () banked
 12733  002F98  5131               	movf	(c_routine@cnt_push+1)& (0+255),w,b
 12734  002F9A  E105               	bnz	l487
 12735  002F9C  0E92               	movlw	146
 12736  002F9E  0101               	movlb	1	; () banked
 12737  002FA0  5D30               	subwf	c_routine@cnt_push& (0+255),w,b
 12738  002FA2  A0D8               	btfss	status,0,c
 12739  002FA4  D7EE               	goto	l480
 12740  002FA6                     l487:
 12741                           
 12742                           ; BSR set to: 1
 12743  002FA6  848B               	bsf	3979,2,c	;volatile
 12744  002FA8  908C               	bcf	3980,0,c	;volatile
 12745  002FAA  928C               	bcf	3980,1,c	;volatile
 12746                           
 12747                           ; BSR set to: 1
 12748                           ;MotorDrive.c: 592: delaynus(50 * 1000);
 12749                           
 12750                           ; BSR set to: 1
 12751  002FAC  0EC3               	movlw	195
 12752  002FAE  0100               	movlb	0	; () banked
 12753  002FB0  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12754  002FB2  0E50               	movlw	80
 12755  002FB4  6FFD               	movwf	delaynus@n& (0+255),b
 12756  002FB6  ECEB  F026         	call	_delaynus	;wreg free
 12757  002FBA                     l14721:
 12758  002FBA  AA81               	btfss	3969,5,c	;volatile
 12759  002FBC  D7D9               	goto	l14705
 12760                           
 12761                           ;MotorDrive.c: 595: }
 12762                           ;MotorDrive.c: 598: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 12763  002FBE  848B               	bsf	3979,2,c	;volatile
 12764  002FC0  908C               	bcf	3980,0,c	;volatile
 12765  002FC2  928C               	bcf	3980,1,c	;volatile
 12766                           
 12767                           ;MotorDrive.c: 600: delaynus(50* 1000);
 12768  002FC4  0EC3               	movlw	195
 12769  002FC6  0100               	movlb	0	; () banked
 12770  002FC8  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12771  002FCA  0E50               	movlw	80
 12772  002FCC  6FFD               	movwf	delaynus@n& (0+255),b
 12773  002FCE  ECEB  F026         	call	_delaynus	;wreg free
 12774                           
 12775                           ;MotorDrive.c: 601: hg_op.drops_sa = 0;
 12776  002FD2  0E00               	movlw	0
 12777  002FD4  0100               	movlb	0	; () banked
 12778  002FD6  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;MotorDrive.c: 602: hg_op.drops_push = 0;
 12782  002FD8  0E00               	movlw	0
 12783  002FDA  0100               	movlb	0	; () banked
 12784  002FDC  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;MotorDrive.c: 603: hg_op.drops_sb = 1;
 12788  002FDE  0E01               	movlw	1
 12789  002FE0  0100               	movlb	0	; () banked
 12790  002FE2  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12791  002FE4                     l14731:
 12792                           
 12793                           ; BSR set to: 0
 12794                           ;MotorDrive.c: 604: }
 12795                           ;MotorDrive.c: 606: if(hg_op.drops_sb == 1)
 12796  002FE4  0100               	movlb	0	; () banked
 12797  002FE6  05A0               	decf	(_hg_op+32)& (0+255),w,b
 12798  002FE8  A4D8               	btfss	status,2,c
 12799  002FEA  0012               	return	
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;MotorDrive.c: 607: {
 12803                           ;MotorDrive.c: 608: hg_op.cnt_posb =0;
 12804  002FEC  0E00               	movlw	0
 12805  002FEE  0100               	movlb	0	; () banked
 12806  002FF0  6FA8               	movwf	(_hg_op+40)& (0+255),b
 12807  002FF2  0E00               	movlw	0
 12808  002FF4  6FA7               	movwf	(_hg_op+39)& (0+255),b
 12809                           
 12810                           ; BSR set to: 0
 12811                           ;MotorDrive.c: 611: if(hg_op.needle_len == 13)
 12812  002FF6  0E0D               	movlw	13
 12813  002FF8  0100               	movlb	0	; () banked
 12814  002FFA  1997               	xorwf	(_hg_op+23)& (0+255),w,b
 12815  002FFC  A4D8               	btfss	status,2,c
 12816  002FFE  D005               	goto	l493
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;MotorDrive.c: 612: {
 12820                           ;MotorDrive.c: 613: LATDbits.LD4 =1;LATDbits.LD3 =1;
 12821  003000  888C               	bsf	3980,4,c	;volatile
 12822  003002  868C               	bsf	3980,3,c	;volatile
 12823  003004                     l494:
 12824  003004  A081               	btfss	3969,0,c	;volatile
 12825  003006  D00A               	goto	l14741
 12826  003008  D7FD               	goto	l494
 12827  00300A                     l493:
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;MotorDrive.c: 616: else
 12831                           ;MotorDrive.c: 617: {
 12832                           ;MotorDrive.c: 618: LATDbits.LD4 =1;
 12833  00300A  888C               	bsf	3980,4,c	;volatile
 12834                           
 12835                           ;MotorDrive.c: 619: LATDbits.LD3 =1;
 12836  00300C  868C               	bsf	3980,3,c	;volatile
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;MotorDrive.c: 621: delaynus(10 * 1000);
 12840  00300E  0E27               	movlw	39
 12841  003010  0100               	movlb	0	; () banked
 12842  003012  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12843  003014  0E10               	movlw	16
 12844  003016  6FFD               	movwf	delaynus@n& (0+255),b
 12845  003018  ECEB  F026         	call	_delaynus	;wreg free
 12846  00301C                     l14741:
 12847  00301C  888C               	bsf	3980,4,c	;volatile
 12848  00301E  948C               	bcf	3980,2,c	;volatile
 12849  003020  968C               	bcf	3980,3,c	;volatile
 12850                           
 12851                           ;MotorDrive.c: 630: delay_pwm(hg_op.work_freq * 300);
 12852  003022  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
 12853  003026  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
 12854  00302A  0E01               	movlw	1
 12855  00302C  0101               	movlb	1	; () banked
 12856  00302E  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
 12857  003030  0E2C               	movlw	44
 12858  003032  6F2A               	movwf	___wmul@multiplicand& (0+255),b
 12859  003034  EC63  F026         	call	___wmul	;wreg free
 12860  003038  0101               	movlb	1	; () banked
 12861  00303A  C128  F12C         	movff	?___wmul,delay_pwm@n
 12862  00303E  0101               	movlb	1	; () banked
 12863  003040  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
 12864  003044  0101               	movlb	1	; () banked
 12865  003046  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
 12866  003048  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
 12867  00304A  EC7E  F026         	call	_delay_pwm	;wreg free
 12868                           
 12869                           ;MotorDrive.c: 633: if(PORTBbits.RB5 == 1)
 12870  00304E  AA81               	btfss	3969,5,c	;volatile
 12871  003050  0012               	return	
 12872                           
 12873                           ;MotorDrive.c: 634: {
 12874                           ;MotorDrive.c: 635: delaynus(15 * 1000);
 12875  003052  0E3A               	movlw	58
 12876  003054  0100               	movlb	0	; () banked
 12877  003056  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12878  003058  0E98               	movlw	152
 12879  00305A  6FFD               	movwf	delaynus@n& (0+255),b
 12880  00305C  ECEB  F026         	call	_delaynus	;wreg free
 12881                           
 12882                           ;MotorDrive.c: 636: if(PORTBbits.RB5 == 1)
 12883  003060  AA81               	btfss	3969,5,c	;volatile
 12884  003062  0012               	return	
 12885                           
 12886                           ;MotorDrive.c: 637: {
 12887                           ;MotorDrive.c: 638: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 12888  003064  888C               	bsf	3980,4,c	;volatile
 12889  003066  948C               	bcf	3980,2,c	;volatile
 12890  003068  968C               	bcf	3980,3,c	;volatile
 12891                           
 12892                           ;MotorDrive.c: 639: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 12893  00306A  848B               	bsf	3979,2,c	;volatile
 12894  00306C  908C               	bcf	3980,0,c	;volatile
 12895  00306E  928C               	bcf	3980,1,c	;volatile
 12896                           
 12897                           ;MotorDrive.c: 642: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
 12898  003070  908C               	bcf	3980,0,c	;volatile
 12899  003072  828C               	bsf	3980,1,c	;volatile
 12900  003074  848B               	bsf	3979,2,c	;volatile
 12901                           
 12902                           ;MotorDrive.c: 644: cnt_push = 0;
 12903  003076  0E00               	movlw	0
 12904  003078  0101               	movlb	1	; () banked
 12905  00307A  6F31               	movwf	(c_routine@cnt_push+1)& (0+255),b
 12906  00307C  0E00               	movlw	0
 12907  00307E  6F30               	movwf	c_routine@cnt_push& (0+255),b
 12908                           
 12909                           ;MotorDrive.c: 646: while(cnt_push < 120)
 12910  003080  D00A               	goto	l14761
 12911  003082                     l510:
 12912  003082  A880               	btfss	3968,4,c	;volatile
 12913  003084  D7FE               	goto	l510
 12914                           
 12915                           ;MotorDrive.c: 649: cnt_push ++;
 12916  003086  0101               	movlb	1	; () banked
 12917  003088  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 12918  00308A  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 12919  00308C                     l513:
 12920  00308C  B880               	btfsc	3968,4,c	;volatile
 12921  00308E  D7FE               	goto	l513
 12922                           
 12923                           ;MotorDrive.c: 651: cnt_push ++;
 12924  003090  0101               	movlb	1	; () banked
 12925  003092  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 12926  003094  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 12927  003096                     l14761:
 12928                           
 12929                           ; BSR set to: 1
 12930  003096  0101               	movlb	1	; () banked
 12931  003098  5131               	movf	(c_routine@cnt_push+1)& (0+255),w,b
 12932  00309A  E105               	bnz	l517
 12933  00309C  0E78               	movlw	120
 12934  00309E  0101               	movlb	1	; () banked
 12935  0030A0  5D30               	subwf	c_routine@cnt_push& (0+255),w,b
 12936  0030A2  A0D8               	btfss	status,0,c
 12937  0030A4  D7EE               	goto	l510
 12938  0030A6                     l517:
 12939                           
 12940                           ; BSR set to: 1
 12941  0030A6  848B               	bsf	3979,2,c	;volatile
 12942  0030A8  908C               	bcf	3980,0,c	;volatile
 12943  0030AA  928C               	bcf	3980,1,c	;volatile
 12944                           
 12945                           ; BSR set to: 1
 12946                           ;MotorDrive.c: 657: hg_op.drops_sa = 0;
 12947                           
 12948                           ; BSR set to: 1
 12949  0030AC  0E00               	movlw	0
 12950  0030AE  0100               	movlb	0	; () banked
 12951  0030B0  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12952                           
 12953                           ;MotorDrive.c: 658: hg_op.drops_sb = 0;
 12954  0030B2  0E00               	movlw	0
 12955  0030B4  0100               	movlb	0	; () banked
 12956  0030B6  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12957                           
 12958                           ;MotorDrive.c: 659: hg_op.drops_push = 0;
 12959  0030B8  0E00               	movlw	0
 12960  0030BA  0100               	movlb	0	; () banked
 12961  0030BC  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12962                           
 12963                           ;MotorDrive.c: 662: hg_op.acting_flag =0;
 12964  0030BE  0E00               	movlw	0
 12965  0030C0  0100               	movlb	0	; () banked
 12966  0030C2  6F9E               	movwf	(_hg_op+30)& (0+255),b
 12967                           
 12968                           ; BSR set to: 0
 12969                           ;MotorDrive.c: 665: if(hg_op.needle_len == 13)
 12970  0030C4  0E0D               	movlw	13
 12971  0030C6  0100               	movlb	0	; () banked
 12972  0030C8  1997               	xorwf	(_hg_op+23)& (0+255),w,b
 12973  0030CA  A4D8               	btfss	status,2,c
 12974  0030CC  D002               	goto	l14769
 12975                           
 12976                           ; BSR set to: 0
 12977                           ;MotorDrive.c: 666: {
 12978                           ;MotorDrive.c: 667: hg_op.need_reset =0;
 12979  0030CE  0E00               	movlw	0
 12980  0030D0  D001               	goto	L21
 12981  0030D2                     l14769:
 12982                           
 12983                           ; BSR set to: 0
 12984                           ;MotorDrive.c: 669: else
 12985                           ;MotorDrive.c: 670: {
 12986                           ;MotorDrive.c: 671: hg_op.need_reset =1;
 12987  0030D2  0E01               	movlw	1
 12988  0030D4                     L21:
 12989  0030D4  0100               	movlb	0	; () banked
 12990  0030D6  6F85               	movwf	(_hg_op+5)& (0+255),b
 12991                           
 12992                           ; BSR set to: 0
 12993                           ;MotorDrive.c: 672: }
 12994                           ;MotorDrive.c: 674: hg_op.working_mode = 0x03;
 12995  0030D8  0E03               	movlw	3
 12996  0030DA  0100               	movlb	0	; () banked
 12997  0030DC  6F80               	movwf	_hg_op& (0+255),b
 12998                           
 12999                           ; BSR set to: 0
 13000                           
 13001                           ; BSR set to: 0
 13002                           
 13003                           ; BSR set to: 0
 13004  0030DE  0012               	return	
 13005  0030E0                     __end_of_c_routine:
 13006                           	opt stack 0
 13007                           tblptru	equ	0xFF8
 13008                           tblptrh	equ	0xFF7
 13009                           tblptrl	equ	0xFF6
 13010                           tablat	equ	0xFF5
 13011                           prodh	equ	0xFF4
 13012                           prodl	equ	0xFF3
 13013                           intcon	equ	0xFF2
 13014                           intcon3	equ	0xFF0
 13015                           postinc0	equ	0xFEE
 13016                           wreg	equ	0xFE8
 13017                           postdec1	equ	0xFE5
 13018                           fsr1h	equ	0xFE2
 13019                           fsr1l	equ	0xFE1
 13020                           status	equ	0xFD8
 13021                           
 13022 ;; *************** function _delay_pwm *****************
 13023 ;; Defined at:
 13024 ;;		line 45 in file "../Oled.c"
 13025 ;; Parameters:    Size  Location     Type
 13026 ;;  n               4    4[BANK1 ] unsigned long 
 13027 ;; Auto vars:     Size  Location     Type
 13028 ;;		None
 13029 ;; Return value:  Size  Location     Type
 13030 ;;                  1    wreg      void 
 13031 ;; Registers used:
 13032 ;;		wreg, status,2, status,0
 13033 ;; Tracked objects:
 13034 ;;		On entry : 0/0
 13035 ;;		On exit  : 0/0
 13036 ;;		Unchanged: 0/0
 13037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13038 ;;      Params:         0       0       4       0       0       0       0
 13039 ;;      Locals:         0       0       0       0       0       0       0
 13040 ;;      Temps:          0       0       0       0       0       0       0
 13041 ;;      Totals:         0       0       4       0       0       0       0
 13042 ;;Total ram usage:        4 bytes
 13043 ;; Hardware stack levels used:    1
 13044 ;; Hardware stack levels required when called:    2
 13045 ;; This function calls:
 13046 ;;		Nothing
 13047 ;; This function is called by:
 13048 ;;		_c_routine
 13049 ;;		_test_routine
 13050 ;;		_check_shut_device
 13051 ;; This function uses a non-reentrant model
 13052 ;;
 13053                           
 13054                           	psect	text27
 13055  004CFC                     __ptext27:
 13056                           	opt stack 0
 13057  004CFC                     _delay_pwm:
 13058                           	opt stack 27
 13059                           
 13060                           ;Oled.c: 47: while(n)
 13061                           
 13062                           ;incstack = 0
 13063  004CFC  D00D               	goto	l675
 13064  004CFE                     l676:
 13065                           
 13066                           ; BSR set to: 1
 13067                           ;Oled.c: 48: {
 13068                           ;Oled.c: 49: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop();
 13069  004CFE  F000               	nop	
 13070  004D00  F000               	nop	
 13071  004D02  F000               	nop	
 13072  004D04  F000               	nop	
 13073  004D06  F000               	nop	
 13074  004D08  F000               	nop	
 13075  004D0A  F000               	nop	
 13076                           
 13077                           ;Oled.c: 50: n--;
 13078  004D0C  0101               	movlb	1	; () banked
 13079  004D0E  072C               	decf	delay_pwm@n& (0+255),f,b
 13080  004D10  0E00               	movlw	0
 13081  004D12  5B2D               	subwfb	(delay_pwm@n+1)& (0+255),f,b
 13082  004D14  5B2E               	subwfb	(delay_pwm@n+2)& (0+255),f,b
 13083  004D16  5B2F               	subwfb	(delay_pwm@n+3)& (0+255),f,b
 13084  004D18                     l675:
 13085  004D18  0101               	movlb	1	; () banked
 13086  004D1A  512C               	movf	delay_pwm@n& (0+255),w,b
 13087  004D1C  0101               	movlb	1	; () banked
 13088  004D1E  112D               	iorwf	(delay_pwm@n+1)& (0+255),w,b
 13089  004D20  0101               	movlb	1	; () banked
 13090  004D22  112E               	iorwf	(delay_pwm@n+2)& (0+255),w,b
 13091  004D24  0101               	movlb	1	; () banked
 13092  004D26  112F               	iorwf	(delay_pwm@n+3)& (0+255),w,b
 13093  004D28  B4D8               	btfsc	status,2,c
 13094  004D2A  0012               	return	
 13095  004D2C  D7E8               	goto	l676
 13096  004D2E                     __end_of_delay_pwm:
 13097                           	opt stack 0
 13098                           tblptru	equ	0xFF8
 13099                           tblptrh	equ	0xFF7
 13100                           tblptrl	equ	0xFF6
 13101                           tablat	equ	0xFF5
 13102                           prodh	equ	0xFF4
 13103                           prodl	equ	0xFF3
 13104                           intcon	equ	0xFF2
 13105                           intcon3	equ	0xFF0
 13106                           postinc0	equ	0xFEE
 13107                           wreg	equ	0xFE8
 13108                           postdec1	equ	0xFE5
 13109                           fsr1h	equ	0xFE2
 13110                           fsr1l	equ	0xFE1
 13111                           status	equ	0xFD8
 13112                           
 13113 ;; *************** function ___wmul *****************
 13114 ;; Defined at:
 13115 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 13116 ;; Parameters:    Size  Location     Type
 13117 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13118 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13119 ;; Auto vars:     Size  Location     Type
 13120 ;;  product         2    0[BANK0 ] unsigned int 
 13121 ;; Return value:  Size  Location     Type
 13122 ;;                  2    0[BANK1 ] unsigned int 
 13123 ;; Registers used:
 13124 ;;		wreg, status,2, status,0, prodl, prodh
 13125 ;; Tracked objects:
 13126 ;;		On entry : 0/0
 13127 ;;		On exit  : 0/0
 13128 ;;		Unchanged: 0/0
 13129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13130 ;;      Params:         0       0       4       0       0       0       0
 13131 ;;      Locals:         0       2       0       0       0       0       0
 13132 ;;      Temps:          0       0       0       0       0       0       0
 13133 ;;      Totals:         0       2       4       0       0       0       0
 13134 ;;Total ram usage:        6 bytes
 13135 ;; Hardware stack levels used:    1
 13136 ;; Hardware stack levels required when called:    2
 13137 ;; This function calls:
 13138 ;;		Nothing
 13139 ;; This function is called by:
 13140 ;;		_c_routine
 13141 ;;		_test_routine
 13142 ;; This function uses a non-reentrant model
 13143 ;;
 13144                           
 13145                           	psect	text28
 13146  004CC6                     __ptext28:
 13147                           	opt stack 0
 13148  004CC6                     ___wmul:
 13149                           	opt stack 27
 13150                           
 13151                           ; BSR set to: 1
 13152                           ;incstack = 0
 13153  004CC6  0101               	movlb	1	; () banked
 13154  004CC8  5128               	movf	___wmul@multiplier& (0+255),w,b
 13155  004CCA  0101               	movlb	1	; () banked
 13156  004CCC  032A               	mulwf	___wmul@multiplicand& (0+255),b
 13157  004CCE  CFF3 F0FD          	movff	prodl,___wmul@product
 13158  004CD2  CFF4 F0FE          	movff	prodh,___wmul@product+1
 13159  004CD6  0101               	movlb	1	; () banked
 13160  004CD8  5128               	movf	___wmul@multiplier& (0+255),w,b
 13161  004CDA  0101               	movlb	1	; () banked
 13162  004CDC  032B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13163  004CDE  50F3               	movf	prodl,w,c
 13164  004CE0  0100               	movlb	0	; () banked
 13165  004CE2  27FE               	addwf	(___wmul@product+1)& (0+255),f,b
 13166  004CE4  0101               	movlb	1	; () banked
 13167  004CE6  5129               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13168  004CE8  0101               	movlb	1	; () banked
 13169  004CEA  032A               	mulwf	___wmul@multiplicand& (0+255),b
 13170  004CEC  50F3               	movf	prodl,w,c
 13171  004CEE  0100               	movlb	0	; () banked
 13172  004CF0  27FE               	addwf	(___wmul@product+1)& (0+255),f,b
 13173                           
 13174                           ; BSR set to: 0
 13175  004CF2  C0FD  F128         	movff	___wmul@product,?___wmul
 13176  004CF6  C0FE  F129         	movff	___wmul@product+1,?___wmul+1
 13177  004CFA  0012               	return	
 13178  004CFC                     __end_of___wmul:
 13179                           	opt stack 0
 13180                           tblptru	equ	0xFF8
 13181                           tblptrh	equ	0xFF7
 13182                           tblptrl	equ	0xFF6
 13183                           tablat	equ	0xFF5
 13184                           prodh	equ	0xFF4
 13185                           prodl	equ	0xFF3
 13186                           intcon	equ	0xFF2
 13187                           intcon3	equ	0xFF0
 13188                           postinc0	equ	0xFEE
 13189                           wreg	equ	0xFE8
 13190                           postdec1	equ	0xFE5
 13191                           fsr1h	equ	0xFE2
 13192                           fsr1l	equ	0xFE1
 13193                           status	equ	0xFD8
 13194                           
 13195 ;; *************** function _HG_interface *****************
 13196 ;; Defined at:
 13197 ;;		line 1522 in file "../gui.c"
 13198 ;; Parameters:    Size  Location     Type
 13199 ;;		None
 13200 ;; Auto vars:     Size  Location     Type
 13201 ;;  kv              1   17[BANK1 ] unsigned char 
 13202 ;; Return value:  Size  Location     Type
 13203 ;;                  1    wreg      void 
 13204 ;; Registers used:
 13205 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13206 ;; Tracked objects:
 13207 ;;		On entry : 0/0
 13208 ;;		On exit  : 0/0
 13209 ;;		Unchanged: 0/0
 13210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13211 ;;      Params:         0       0       0       0       0       0       0
 13212 ;;      Locals:         0       0       1       0       0       0       0
 13213 ;;      Temps:          0       0       0       0       0       0       0
 13214 ;;      Totals:         0       0       1       0       0       0       0
 13215 ;;Total ram usage:        1 bytes
 13216 ;; Hardware stack levels used:    1
 13217 ;; Hardware stack levels required when called:    8
 13218 ;; This function calls:
 13219 ;;		_KEY_Scan
 13220 ;;		_menu0_MsgHandlle
 13221 ;;		_menu1_MsgHandlle
 13222 ;;		_menu2_MsgHandlle
 13223 ;;		_menu3_MsgHandlle
 13224 ;;		_menu4_MsgHandlle
 13225 ;;		_menu5_MsgHandlle
 13226 ;;		_menu6_MsgHandlle
 13227 ;;		_update_focus
 13228 ;; This function is called by:
 13229 ;;		_main
 13230 ;; This function uses a non-reentrant model
 13231 ;;
 13232                           
 13233                           	psect	text29
 13234  00490C                     __ptext29:
 13235                           	opt stack 0
 13236  00490C                     _HG_interface:
 13237                           	opt stack 22
 13238                           
 13239                           ;gui.c: 1524: uint8_t kv = 0;
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;incstack = 0
 13243  00490C  0E00               	movlw	0
 13244  00490E  0101               	movlb	1	; () banked
 13245  004910  6F39               	movwf	HG_interface@kv& (0+255),b
 13246                           
 13247                           ; BSR set to: 1
 13248                           ;gui.c: 1525: kv = KEY_Scan();
 13249  004912  ECED  F020         	call	_KEY_Scan	;wreg free
 13250  004916  0101               	movlb	1	; () banked
 13251  004918  6F39               	movwf	HG_interface@kv& (0+255),b
 13252                           
 13253                           ; BSR set to: 1
 13254                           ;gui.c: 1526: update_focus(kv);
 13255  00491A  0101               	movlb	1	; () banked
 13256  00491C  5139               	movf	HG_interface@kv& (0+255),w,b
 13257  00491E  EC9C  F022         	call	_update_focus
 13258                           
 13259                           ;gui.c: 1529: if(kv)
 13260  004922  0101               	movlb	1	; () banked
 13261  004924  5139               	movf	HG_interface@kv& (0+255),w,b
 13262  004926  0101               	movlb	1	; () banked
 13263  004928  B4D8               	btfsc	status,2,c
 13264  00492A  0012               	return	
 13265                           
 13266                           ; BSR set to: 1
 13267                           ;gui.c: 1530: {
 13268                           ;gui.c: 1531: menu0_MsgHandlle(kv);
 13269  00492C  0101               	movlb	1	; () banked
 13270  00492E  5139               	movf	HG_interface@kv& (0+255),w,b
 13271  004930  EC3F  F00F         	call	_menu0_MsgHandlle
 13272                           
 13273                           ;gui.c: 1532: menu1_MsgHandlle(kv);
 13274  004934  0101               	movlb	1	; () banked
 13275  004936  5139               	movf	HG_interface@kv& (0+255),w,b
 13276  004938  EC35  F025         	call	_menu1_MsgHandlle
 13277                           
 13278                           ;gui.c: 1533: menu2_MsgHandlle(kv);
 13279  00493C  0101               	movlb	1	; () banked
 13280  00493E  5139               	movf	HG_interface@kv& (0+255),w,b
 13281  004940  EC0C  F025         	call	_menu2_MsgHandlle
 13282                           
 13283                           ;gui.c: 1534: menu3_MsgHandlle(kv);
 13284  004944  0101               	movlb	1	; () banked
 13285  004946  5139               	movf	HG_interface@kv& (0+255),w,b
 13286  004948  EC53  F015         	call	_menu3_MsgHandlle
 13287                           
 13288                           ;gui.c: 1535: menu4_MsgHandlle(kv);
 13289  00494C  0101               	movlb	1	; () banked
 13290  00494E  5139               	movf	HG_interface@kv& (0+255),w,b
 13291  004950  EC1E  F013         	call	_menu4_MsgHandlle
 13292                           
 13293                           ;gui.c: 1536: menu5_MsgHandlle(kv);
 13294  004954  0101               	movlb	1	; () banked
 13295  004956  5139               	movf	HG_interface@kv& (0+255),w,b
 13296  004958  EC70  F018         	call	_menu5_MsgHandlle
 13297                           
 13298                           ;gui.c: 1537: menu6_MsgHandlle(kv);
 13299  00495C  0101               	movlb	1	; () banked
 13300  00495E  5139               	movf	HG_interface@kv& (0+255),w,b
 13301  004960  ECF3  F004         	call	_menu6_MsgHandlle
 13302  004964  0012               	return	
 13303  004966                     __end_of_HG_interface:
 13304                           	opt stack 0
 13305                           tblptru	equ	0xFF8
 13306                           tblptrh	equ	0xFF7
 13307                           tblptrl	equ	0xFF6
 13308                           tablat	equ	0xFF5
 13309                           prodh	equ	0xFF4
 13310                           prodl	equ	0xFF3
 13311                           intcon	equ	0xFF2
 13312                           intcon3	equ	0xFF0
 13313                           postinc0	equ	0xFEE
 13314                           wreg	equ	0xFE8
 13315                           postdec1	equ	0xFE5
 13316                           fsr1h	equ	0xFE2
 13317                           fsr1l	equ	0xFE1
 13318                           status	equ	0xFD8
 13319                           
 13320 ;; *************** function _update_focus *****************
 13321 ;; Defined at:
 13322 ;;		line 1461 in file "../gui.c"
 13323 ;; Parameters:    Size  Location     Type
 13324 ;;  key             1    wreg     unsigned char 
 13325 ;; Auto vars:     Size  Location     Type
 13326 ;;  key             1    1[BANK0 ] unsigned char 
 13327 ;;  i               1    2[BANK0 ] unsigned char 
 13328 ;; Return value:  Size  Location     Type
 13329 ;;                  1    wreg      void 
 13330 ;; Registers used:
 13331 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13332 ;; Tracked objects:
 13333 ;;		On entry : 0/0
 13334 ;;		On exit  : 0/0
 13335 ;;		Unchanged: 0/0
 13336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13337 ;;      Params:         0       0       0       0       0       0       0
 13338 ;;      Locals:         0       2       0       0       0       0       0
 13339 ;;      Temps:          0       1       0       0       0       0       0
 13340 ;;      Totals:         0       3       0       0       0       0       0
 13341 ;;Total ram usage:        3 bytes
 13342 ;; Hardware stack levels used:    1
 13343 ;; Hardware stack levels required when called:    2
 13344 ;; This function calls:
 13345 ;;		Nothing
 13346 ;; This function is called by:
 13347 ;;		_HG_interface
 13348 ;; This function uses a non-reentrant model
 13349 ;;
 13350                           
 13351                           	psect	text30
 13352  004538                     __ptext30:
 13353                           	opt stack 0
 13354  004538                     _update_focus:
 13355                           	opt stack 27
 13356                           
 13357                           ;incstack = 0
 13358                           ;update_focus@key stored from wreg
 13359  004538  0100               	movlb	0	; () banked
 13360  00453A  6FFE               	movwf	update_focus@key& (0+255),b
 13361                           
 13362                           ;gui.c: 1464: uint8_t i = 0;
 13363  00453C  0E00               	movlw	0
 13364  00453E  0100               	movlb	0	; () banked
 13365  004540  6FFF               	movwf	update_focus@i& (0+255),b
 13366                           
 13367                           ;gui.c: 1465: for(i=0;i<8;i++)
 13368  004542  0E00               	movlw	0
 13369  004544  0100               	movlb	0	; () banked
 13370  004546  6FFF               	movwf	update_focus@i& (0+255),b
 13371  004548                     l14067:
 13372                           
 13373                           ; BSR set to: 0
 13374  004548  0E07               	movlw	7
 13375  00454A  0100               	movlb	0	; () banked
 13376  00454C  65FF               	cpfsgt	update_focus@i& (0+255),b
 13377  00454E  D001               	goto	l14071
 13378  004550  D033               	goto	l14101
 13379  004552                     l14071:
 13380                           
 13381                           ; BSR set to: 0
 13382                           ;gui.c: 1466: if(menu[i].mode == 3) key = 0x00;
 13383  004552  0100               	movlb	0	; () banked
 13384  004554  51FF               	movf	update_focus@i& (0+255),w,b
 13385  004556  0D08               	mullw	8
 13386  004558  0E01               	movlw	1
 13387  00455A  26F3               	addwf	prodl,f,c
 13388  00455C  0E00               	movlw	0
 13389  00455E  22F4               	addwfc	prodh,f,c
 13390  004560  0E01               	movlw	low _menu
 13391  004562  24F3               	addwf	prodl,w,c
 13392  004564  6ED9               	movwf	fsr2l,c
 13393  004566  0E00               	movlw	high _menu
 13394  004568  20F4               	addwfc	prodh,w,c
 13395  00456A  6EDA               	movwf	fsr2h,c
 13396  00456C  0E03               	movlw	3
 13397  00456E  18DE               	xorwf	postinc2,w,c
 13398  004570  A4D8               	btfss	status,2,c
 13399  004572  D003               	goto	l14075
 13400                           
 13401                           ; BSR set to: 0
 13402  004574  0E00               	movlw	0
 13403  004576  0100               	movlb	0	; () banked
 13404  004578  6FFE               	movwf	update_focus@key& (0+255),b
 13405  00457A                     l14075:
 13406                           
 13407                           ; BSR set to: 0
 13408  00457A  0100               	movlb	0	; () banked
 13409  00457C  2BFF               	incf	update_focus@i& (0+255),f,b
 13410  00457E  D7E4               	goto	l14067
 13411  004580                     l14079:
 13412                           
 13413                           ; BSR set to: 0
 13414                           ;gui.c: 1478: {
 13415                           ;gui.c: 1479: if(focus == 1)
 13416  004580  044F               	decf	_focus,w,c
 13417  004582  A4D8               	btfss	status,2,c
 13418  004584  D003               	goto	l14083
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;gui.c: 1480: {
 13422                           ;gui.c: 1481: focus += 3;
 13423  004586  0E03               	movlw	3
 13424  004588  264F               	addwf	_focus,f,c
 13425                           
 13426                           ;gui.c: 1482: }
 13427  00458A  0012               	return	
 13428  00458C                     l14083:
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;gui.c: 1483: else
 13432                           ;gui.c: 1484: {
 13433                           ;gui.c: 1485: focus ++;
 13434  00458C  2A4F               	incf	_focus,f,c
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;gui.c: 1486: if(focus == 8)focus =1;
 13438  00458E  0E08               	movlw	8
 13439  004590  184F               	xorwf	_focus,w,c
 13440  004592  A4D8               	btfss	status,2,c
 13441  004594  0012               	return	
 13442                           
 13443                           ; BSR set to: 0
 13444  004596  0E01               	movlw	1
 13445  004598  6E4F               	movwf	_focus,c
 13446                           
 13447                           ; BSR set to: 0
 13448                           ;gui.c: 1487: }
 13449                           ;gui.c: 1488: }
 13450                           ;gui.c: 1489: break;
 13451                           
 13452                           ; BSR set to: 0
 13453  00459A  0012               	return	
 13454  00459C                     l14089:
 13455                           
 13456                           ; BSR set to: 0
 13457                           ;gui.c: 1500: {
 13458                           ;gui.c: 1501: if(focus == 4)
 13459  00459C  0E04               	movlw	4
 13460  00459E  184F               	xorwf	_focus,w,c
 13461  0045A0  A4D8               	btfss	status,2,c
 13462  0045A2  D003               	goto	l14093
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;gui.c: 1502: {
 13466                           ;gui.c: 1503: focus -= 3;
 13467  0045A4  0E03               	movlw	3
 13468  0045A6  5E4F               	subwf	_focus,f,c
 13469                           
 13470                           ;gui.c: 1504: }
 13471  0045A8  0012               	return	
 13472  0045AA                     l14093:
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;gui.c: 1505: else
 13476                           ;gui.c: 1506: {
 13477                           ;gui.c: 1507: focus --;
 13478  0045AA  064F               	decf	_focus,f,c
 13479                           
 13480                           ; BSR set to: 0
 13481                           ;gui.c: 1508: if(focus==0) focus =7;
 13482  0045AC  504F               	movf	_focus,w,c
 13483  0045AE  A4D8               	btfss	status,2,c
 13484  0045B0  0012               	return	
 13485                           
 13486                           ; BSR set to: 0
 13487  0045B2  0E07               	movlw	7
 13488  0045B4  6E4F               	movwf	_focus,c
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;gui.c: 1516: }
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;gui.c: 1509: }
 13495                           ;gui.c: 1510: }
 13496                           ;gui.c: 1511: break;
 13497                           
 13498                           ; BSR set to: 0
 13499  0045B6  0012               	return	
 13500  0045B8                     l14101:
 13501                           
 13502                           ; BSR set to: 0
 13503  0045B8  0100               	movlb	0	; () banked
 13504  0045BA  51FE               	movf	update_focus@key& (0+255),w,b
 13505                           
 13506                           ; Switch size 1, requested type "space"
 13507                           ; Number of cases is 2, Range of values is 241 to 242
 13508                           ; switch strategies available:
 13509                           ; Name         Instructions Cycles
 13510                           ; simple_byte            7     4 (average)
 13511                           ;	Chosen strategy is simple_byte
 13512  0045BC  0AF1               	xorlw	241	; case 241
 13513  0045BE  B4D8               	btfsc	status,2,c
 13514  0045C0  D7DF               	goto	l14079
 13515  0045C2  0A03               	xorlw	3	; case 242
 13516  0045C4  A4D8               	btfss	status,2,c
 13517  0045C6  0012               	return	
 13518  0045C8  D7E9               	goto	l14089
 13519  0045CA                     __end_of_update_focus:
 13520                           	opt stack 0
 13521                           tblptru	equ	0xFF8
 13522                           tblptrh	equ	0xFF7
 13523                           tblptrl	equ	0xFF6
 13524                           tablat	equ	0xFF5
 13525                           prodh	equ	0xFF4
 13526                           prodl	equ	0xFF3
 13527                           intcon	equ	0xFF2
 13528                           intcon3	equ	0xFF0
 13529                           postinc0	equ	0xFEE
 13530                           wreg	equ	0xFE8
 13531                           postdec1	equ	0xFE5
 13532                           fsr1h	equ	0xFE2
 13533                           fsr1l	equ	0xFE1
 13534                           postinc2	equ	0xFDE
 13535                           fsr2h	equ	0xFDA
 13536                           fsr2l	equ	0xFD9
 13537                           status	equ	0xFD8
 13538                           
 13539 ;; *************** function _menu6_MsgHandlle *****************
 13540 ;; Defined at:
 13541 ;;		line 977 in file "../gui.c"
 13542 ;; Parameters:    Size  Location     Type
 13543 ;;  key             1    wreg     unsigned char 
 13544 ;; Auto vars:     Size  Location     Type
 13545 ;;  key             1   16[BANK1 ] unsigned char 
 13546 ;; Return value:  Size  Location     Type
 13547 ;;                  1    wreg      void 
 13548 ;; Registers used:
 13549 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13550 ;; Tracked objects:
 13551 ;;		On entry : 0/0
 13552 ;;		On exit  : 0/0
 13553 ;;		Unchanged: 0/0
 13554 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13555 ;;      Params:         0       0       0       0       0       0       0
 13556 ;;      Locals:         0       0       1       0       0       0       0
 13557 ;;      Temps:          0       0       0       0       0       0       0
 13558 ;;      Totals:         0       0       1       0       0       0       0
 13559 ;;Total ram usage:        1 bytes
 13560 ;; Hardware stack levels used:    1
 13561 ;; Hardware stack levels required when called:    7
 13562 ;; This function calls:
 13563 ;;		_display_frame_fghi
 13564 ;;		_display_num
 13565 ;; This function is called by:
 13566 ;;		_init_menu
 13567 ;;		_HG_interface
 13568 ;; This function uses a non-reentrant model
 13569 ;;
 13570                           
 13571                           	psect	text31
 13572  0009E6                     __ptext31:
 13573                           	opt stack 0
 13574  0009E6                     _menu6_MsgHandlle:
 13575                           	opt stack 22
 13576                           
 13577                           ; BSR set to: 0
 13578                           ;incstack = 0
 13579                           ;menu6_MsgHandlle@key stored from wreg
 13580  0009E6  0101               	movlb	1	; () banked
 13581  0009E8  6F38               	movwf	menu6_MsgHandlle@key& (0+255),b
 13582                           
 13583                           ;gui.c: 980: switch(key)
 13584  0009EA  D1EE               	goto	l14063
 13585  0009EC                     l13855:
 13586                           
 13587                           ;gui.c: 984: if(menu[6].mode == 3)
 13588  0009EC  0E03               	movlw	3
 13589  0009EE  1832               	xorwf	_menu+49,w,c
 13590  0009F0  A4D8               	btfss	status,2,c
 13591  0009F2  D008               	goto	l13863
 13592                           
 13593                           ;gui.c: 985: {
 13594                           ;gui.c: 986: menu[6].parameter ++;
 13595  0009F4  2A36               	incf	_menu+53,f,c
 13596                           
 13597                           ;gui.c: 987: if(menu[6].parameter == 3) menu[6].parameter = 0;
 13598  0009F6  0E03               	movlw	3
 13599  0009F8  1836               	xorwf	_menu+53,w,c
 13600  0009FA  A4D8               	btfss	status,2,c
 13601  0009FC  0012               	return	
 13602  0009FE  0E00               	movlw	0
 13603  000A00  6E36               	movwf	_menu+53,c
 13604                           
 13605                           ;gui.c: 988: }
 13606  000A02  0012               	return	
 13607  000A04                     l13863:
 13608                           
 13609                           ;gui.c: 989: else
 13610                           ;gui.c: 990: {
 13611                           ;gui.c: 991: if(focus == 7)
 13612  000A04  0E07               	movlw	7
 13613  000A06  184F               	xorwf	_focus,w,c
 13614  000A08  A4D8               	btfss	status,2,c
 13615  000A0A  D002               	goto	l13867
 13616                           
 13617                           ;gui.c: 992: {
 13618                           ;gui.c: 993: menu[6].mode = 0x80;
 13619  000A0C  0E80               	movlw	128
 13620  000A0E  D001               	goto	L22
 13621  000A10                     l13867:
 13622                           
 13623                           ;gui.c: 995: else
 13624                           ;gui.c: 996: {
 13625                           ;gui.c: 997: menu[6].mode = 0;
 13626  000A10  0E00               	movlw	0
 13627  000A12                     L22:
 13628  000A12  6E32               	movwf	_menu+49,c
 13629                           
 13630                           ;gui.c: 998: }
 13631                           ;gui.c: 1001: if(menu[6].cur_mode != menu[6].mode)
 13632  000A14  5032               	movf	_menu+49,w,c
 13633  000A16  1833               	xorwf	_menu+50,w,c
 13634  000A18  B4D8               	btfsc	status,2,c
 13635  000A1A  0012               	return	
 13636                           
 13637                           ;gui.c: 1002: {
 13638                           ;gui.c: 1004: if(work_mode == 0x00 || work_mode == 0x02)
 13639  000A1C  504D               	movf	_work_mode,w,c
 13640  000A1E  B4D8               	btfsc	status,2,c
 13641  000A20  D004               	goto	l13875
 13642  000A22  0E02               	movlw	2
 13643  000A24  184D               	xorwf	_work_mode,w,c
 13644  000A26  A4D8               	btfss	status,2,c
 13645  000A28  D009               	goto	l13877
 13646  000A2A                     l13875:
 13647                           
 13648                           ;gui.c: 1005: {
 13649                           ;gui.c: 1006: display_frame_fghi(2,0, menu[6].mode);
 13650  000A2A  0E00               	movlw	0
 13651  000A2C  0101               	movlb	1	; () banked
 13652  000A2E  6F31               	movwf	display_frame_fghi@x& (0+255),b
 13653  000A30  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 13654  000A34  0E02               	movlw	2
 13655  000A36  EC7C  F00A         	call	_display_frame_fghi
 13656                           
 13657                           ;gui.c: 1007: }
 13658  000A3A  D00B               	goto	l13881
 13659  000A3C                     l13877:
 13660                           
 13661                           ;gui.c: 1008: else if(work_mode == 0x01)
 13662  000A3C  044D               	decf	_work_mode,w,c
 13663  000A3E  A4D8               	btfss	status,2,c
 13664  000A40  D008               	goto	l13881
 13665                           
 13666                           ;gui.c: 1009: {
 13667                           ;gui.c: 1010: display_frame_fghi(3,0, menu[6].mode);
 13668  000A42  0E00               	movlw	0
 13669  000A44  0101               	movlb	1	; () banked
 13670  000A46  6F31               	movwf	display_frame_fghi@x& (0+255),b
 13671  000A48  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 13672  000A4C  0E03               	movlw	3
 13673  000A4E  EC7C  F00A         	call	_display_frame_fghi
 13674  000A52                     l13881:
 13675                           
 13676                           ;gui.c: 1011: }
 13677                           ;gui.c: 1012: if( menu[6].parameter == 0)
 13678  000A52  5036               	movf	_menu+53,w,c
 13679  000A54  A4D8               	btfss	status,2,c
 13680  000A56  D020               	goto	l13893
 13681                           
 13682                           ;gui.c: 1013: {
 13683                           ;gui.c: 1014: if(work_mode == 0x00 || work_mode == 0x02)
 13684  000A58  504D               	movf	_work_mode,w,c
 13685  000A5A  B4D8               	btfsc	status,2,c
 13686  000A5C  D004               	goto	l13887
 13687  000A5E  0E02               	movlw	2
 13688  000A60  184D               	xorwf	_work_mode,w,c
 13689  000A62  A4D8               	btfss	status,2,c
 13690  000A64  D00B               	goto	l13889
 13691  000A66                     l13887:
 13692                           
 13693                           ;gui.c: 1015: {
 13694                           ;gui.c: 1016: display_num(3,(0 + 14), menu[6].mode | 3);
 13695  000A66  0E0E               	movlw	14
 13696  000A68  0101               	movlb	1	; () banked
 13697  000A6A  6F31               	movwf	display_num@x& (0+255),b
 13698  000A6C  5032               	movf	_menu+49,w,c
 13699  000A6E  0903               	iorlw	3
 13700  000A70  0101               	movlb	1	; () banked
 13701  000A72  6F32               	movwf	display_num@mode& (0+255),b
 13702  000A74  0E03               	movlw	3
 13703  000A76  ECF0  F006         	call	_display_num
 13704                           
 13705                           ;gui.c: 1017: }
 13706  000A7A  D054               	goto	l13917
 13707  000A7C                     l13889:
 13708                           
 13709                           ;gui.c: 1018: else if(work_mode == 0x01)
 13710  000A7C  044D               	decf	_work_mode,w,c
 13711  000A7E  A4D8               	btfss	status,2,c
 13712  000A80  D051               	goto	l13917
 13713                           
 13714                           ;gui.c: 1019: {
 13715                           ;gui.c: 1020: display_num(3,(0 + 17), menu[6].mode | 103);
 13716  000A82  0E11               	movlw	17
 13717  000A84  0101               	movlb	1	; () banked
 13718  000A86  6F31               	movwf	display_num@x& (0+255),b
 13719  000A88  5032               	movf	_menu+49,w,c
 13720  000A8A  0967               	iorlw	103
 13721  000A8C  0101               	movlb	1	; () banked
 13722  000A8E  6F32               	movwf	display_num@mode& (0+255),b
 13723  000A90  0E03               	movlw	3
 13724  000A92  ECF0  F006         	call	_display_num
 13725                           
 13726                           ;gui.c: 1021: }
 13727                           ;gui.c: 1023: }
 13728  000A96  D046               	goto	l13917
 13729  000A98                     l13893:
 13730                           
 13731                           ;gui.c: 1024: else if( menu[6].parameter == 1)
 13732  000A98  0436               	decf	_menu+53,w,c
 13733  000A9A  A4D8               	btfss	status,2,c
 13734  000A9C  D020               	goto	l13905
 13735                           
 13736                           ;gui.c: 1025: {
 13737                           ;gui.c: 1026: if(work_mode == 0x00 || work_mode == 0x02)
 13738  000A9E  504D               	movf	_work_mode,w,c
 13739  000AA0  B4D8               	btfsc	status,2,c
 13740  000AA2  D004               	goto	l13899
 13741  000AA4  0E02               	movlw	2
 13742  000AA6  184D               	xorwf	_work_mode,w,c
 13743  000AA8  A4D8               	btfss	status,2,c
 13744  000AAA  D00B               	goto	l13901
 13745  000AAC                     l13899:
 13746                           
 13747                           ;gui.c: 1027: {
 13748                           ;gui.c: 1028: display_num(3,(0 + 14), menu[6].mode | 3);
 13749  000AAC  0E0E               	movlw	14
 13750  000AAE  0101               	movlb	1	; () banked
 13751  000AB0  6F31               	movwf	display_num@x& (0+255),b
 13752  000AB2  5032               	movf	_menu+49,w,c
 13753  000AB4  0903               	iorlw	3
 13754  000AB6  0101               	movlb	1	; () banked
 13755  000AB8  6F32               	movwf	display_num@mode& (0+255),b
 13756  000ABA  0E03               	movlw	3
 13757  000ABC  ECF0  F006         	call	_display_num
 13758                           
 13759                           ;gui.c: 1029: }
 13760  000AC0  D031               	goto	l13917
 13761  000AC2                     l13901:
 13762                           
 13763                           ;gui.c: 1030: else if(work_mode == 0x01)
 13764  000AC2  044D               	decf	_work_mode,w,c
 13765  000AC4  A4D8               	btfss	status,2,c
 13766  000AC6  D02E               	goto	l13917
 13767                           
 13768                           ;gui.c: 1031: {
 13769                           ;gui.c: 1032: display_num(3,(0 + 17), menu[6].mode | 102);
 13770  000AC8  0E11               	movlw	17
 13771  000ACA  0101               	movlb	1	; () banked
 13772  000ACC  6F31               	movwf	display_num@x& (0+255),b
 13773  000ACE  5032               	movf	_menu+49,w,c
 13774  000AD0  0966               	iorlw	102
 13775  000AD2  0101               	movlb	1	; () banked
 13776  000AD4  6F32               	movwf	display_num@mode& (0+255),b
 13777  000AD6  0E03               	movlw	3
 13778  000AD8  ECF0  F006         	call	_display_num
 13779                           
 13780                           ;gui.c: 1033: }
 13781                           ;gui.c: 1034: }
 13782  000ADC  D023               	goto	l13917
 13783  000ADE                     l13905:
 13784                           
 13785                           ;gui.c: 1035: else if( menu[6].parameter == 2)
 13786  000ADE  0E02               	movlw	2
 13787  000AE0  1836               	xorwf	_menu+53,w,c
 13788  000AE2  A4D8               	btfss	status,2,c
 13789  000AE4  D01F               	goto	l13917
 13790                           
 13791                           ;gui.c: 1036: {
 13792                           ;gui.c: 1038: if(work_mode == 0x00 || work_mode == 0x02)
 13793  000AE6  504D               	movf	_work_mode,w,c
 13794  000AE8  B4D8               	btfsc	status,2,c
 13795  000AEA  D004               	goto	l13911
 13796  000AEC  0E02               	movlw	2
 13797  000AEE  184D               	xorwf	_work_mode,w,c
 13798  000AF0  A4D8               	btfss	status,2,c
 13799  000AF2  D00B               	goto	l13913
 13800  000AF4                     l13911:
 13801                           
 13802                           ;gui.c: 1039: {
 13803                           ;gui.c: 1040: display_num(3,(0 + 14), menu[6].mode | 3);
 13804  000AF4  0E0E               	movlw	14
 13805  000AF6  0101               	movlb	1	; () banked
 13806  000AF8  6F31               	movwf	display_num@x& (0+255),b
 13807  000AFA  5032               	movf	_menu+49,w,c
 13808  000AFC  0903               	iorlw	3
 13809  000AFE  0101               	movlb	1	; () banked
 13810  000B00  6F32               	movwf	display_num@mode& (0+255),b
 13811  000B02  0E03               	movlw	3
 13812  000B04  ECF0  F006         	call	_display_num
 13813                           
 13814                           ;gui.c: 1041: }
 13815  000B08  D00D               	goto	l13917
 13816  000B0A                     l13913:
 13817                           
 13818                           ;gui.c: 1042: else if(work_mode == 0x01)
 13819  000B0A  044D               	decf	_work_mode,w,c
 13820  000B0C  A4D8               	btfss	status,2,c
 13821  000B0E  D00A               	goto	l13917
 13822                           
 13823                           ;gui.c: 1043: {
 13824                           ;gui.c: 1044: display_num(3,(0 + 17), menu[6].mode | 101);
 13825  000B10  0E11               	movlw	17
 13826  000B12  0101               	movlb	1	; () banked
 13827  000B14  6F31               	movwf	display_num@x& (0+255),b
 13828  000B16  5032               	movf	_menu+49,w,c
 13829  000B18  0965               	iorlw	101
 13830  000B1A  0101               	movlb	1	; () banked
 13831  000B1C  6F32               	movwf	display_num@mode& (0+255),b
 13832  000B1E  0E03               	movlw	3
 13833  000B20  ECF0  F006         	call	_display_num
 13834  000B24                     l13917:
 13835                           
 13836                           ;gui.c: 1045: }
 13837                           ;gui.c: 1047: }
 13838                           ;gui.c: 1050: menu[6].cur_mode = menu[6].mode;
 13839  000B24  C032  F033         	movff	_menu+49,_menu+50
 13840                           
 13841                           ;gui.c: 1051: }
 13842                           ;gui.c: 1052: }
 13843                           ;gui.c: 1054: break;
 13844  000B28  0012               	return	
 13845  000B2A                     l13919:
 13846                           
 13847                           ;gui.c: 1058: if(menu[6].mode == 3)
 13848  000B2A  0E03               	movlw	3
 13849  000B2C  1832               	xorwf	_menu+49,w,c
 13850  000B2E  A4D8               	btfss	status,2,c
 13851  000B30  D007               	goto	l13927
 13852                           
 13853                           ;gui.c: 1059: {
 13854                           ;gui.c: 1060: menu[6].parameter --;
 13855  000B32  0636               	decf	_menu+53,f,c
 13856                           
 13857                           ;gui.c: 1061: if(menu[6].parameter == -1) menu[6].parameter = 2;
 13858  000B34  2836               	incf	_menu+53,w,c
 13859  000B36  A4D8               	btfss	status,2,c
 13860  000B38  0012               	return	
 13861  000B3A  0E02               	movlw	2
 13862  000B3C  6E36               	movwf	_menu+53,c
 13863                           
 13864                           ;gui.c: 1062: }
 13865  000B3E  0012               	return	
 13866  000B40                     l13927:
 13867                           
 13868                           ;gui.c: 1063: else
 13869                           ;gui.c: 1064: {
 13870                           ;gui.c: 1065: if(focus == 7)
 13871  000B40  0E07               	movlw	7
 13872  000B42  184F               	xorwf	_focus,w,c
 13873  000B44  A4D8               	btfss	status,2,c
 13874  000B46  D002               	goto	l13931
 13875                           
 13876                           ;gui.c: 1066: {
 13877                           ;gui.c: 1067: menu[6].mode = 0x80;
 13878  000B48  0E80               	movlw	128
 13879  000B4A  D001               	goto	L23
 13880  000B4C                     l13931:
 13881                           
 13882                           ;gui.c: 1069: else
 13883                           ;gui.c: 1070: {
 13884                           ;gui.c: 1071: menu[6].mode = 0;
 13885  000B4C  0E00               	movlw	0
 13886  000B4E                     L23:
 13887  000B4E  6E32               	movwf	_menu+49,c
 13888                           
 13889                           ;gui.c: 1072: }
 13890                           ;gui.c: 1075: if(menu[6].cur_mode != menu[6].mode)
 13891  000B50  5032               	movf	_menu+49,w,c
 13892  000B52  1833               	xorwf	_menu+50,w,c
 13893  000B54  B4D8               	btfsc	status,2,c
 13894  000B56  0012               	return	
 13895                           
 13896                           ;gui.c: 1076: {
 13897                           ;gui.c: 1078: if(work_mode == 0x00 || work_mode == 0x02)
 13898  000B58  504D               	movf	_work_mode,w,c
 13899  000B5A  B4D8               	btfsc	status,2,c
 13900  000B5C  D004               	goto	l13939
 13901  000B5E  0E02               	movlw	2
 13902  000B60  184D               	xorwf	_work_mode,w,c
 13903  000B62  A4D8               	btfss	status,2,c
 13904  000B64  D009               	goto	l13941
 13905  000B66                     l13939:
 13906                           
 13907                           ;gui.c: 1079: {
 13908                           ;gui.c: 1080: display_frame_fghi(2,0, menu[6].mode);
 13909  000B66  0E00               	movlw	0
 13910  000B68  0101               	movlb	1	; () banked
 13911  000B6A  6F31               	movwf	display_frame_fghi@x& (0+255),b
 13912  000B6C  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 13913  000B70  0E02               	movlw	2
 13914  000B72  EC7C  F00A         	call	_display_frame_fghi
 13915                           
 13916                           ;gui.c: 1081: }
 13917  000B76  D00B               	goto	l13945
 13918  000B78                     l13941:
 13919                           
 13920                           ;gui.c: 1082: else if(work_mode == 0x01)
 13921  000B78  044D               	decf	_work_mode,w,c
 13922  000B7A  A4D8               	btfss	status,2,c
 13923  000B7C  D008               	goto	l13945
 13924                           
 13925                           ;gui.c: 1083: {
 13926                           ;gui.c: 1084: display_frame_fghi(3,0, menu[6].mode);
 13927  000B7E  0E00               	movlw	0
 13928  000B80  0101               	movlb	1	; () banked
 13929  000B82  6F31               	movwf	display_frame_fghi@x& (0+255),b
 13930  000B84  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 13931  000B88  0E03               	movlw	3
 13932  000B8A  EC7C  F00A         	call	_display_frame_fghi
 13933  000B8E                     l13945:
 13934                           
 13935                           ;gui.c: 1085: }
 13936                           ;gui.c: 1089: if( menu[6].parameter == 0)
 13937  000B8E  5036               	movf	_menu+53,w,c
 13938  000B90  A4D8               	btfss	status,2,c
 13939  000B92  D020               	goto	l13957
 13940                           
 13941                           ;gui.c: 1090: {
 13942                           ;gui.c: 1091: if(work_mode == 0x00 || work_mode == 0x02)
 13943  000B94  504D               	movf	_work_mode,w,c
 13944  000B96  B4D8               	btfsc	status,2,c
 13945  000B98  D004               	goto	l13951
 13946  000B9A  0E02               	movlw	2
 13947  000B9C  184D               	xorwf	_work_mode,w,c
 13948  000B9E  A4D8               	btfss	status,2,c
 13949  000BA0  D00B               	goto	l13953
 13950  000BA2                     l13951:
 13951                           
 13952                           ;gui.c: 1092: {
 13953                           ;gui.c: 1093: display_num(3,(0 + 14), menu[6].mode | 3);
 13954  000BA2  0E0E               	movlw	14
 13955  000BA4  0101               	movlb	1	; () banked
 13956  000BA6  6F31               	movwf	display_num@x& (0+255),b
 13957  000BA8  5032               	movf	_menu+49,w,c
 13958  000BAA  0903               	iorlw	3
 13959  000BAC  0101               	movlb	1	; () banked
 13960  000BAE  6F32               	movwf	display_num@mode& (0+255),b
 13961  000BB0  0E03               	movlw	3
 13962  000BB2  ECF0  F006         	call	_display_num
 13963                           
 13964                           ;gui.c: 1094: }
 13965  000BB6  D054               	goto	l13981
 13966  000BB8                     l13953:
 13967                           
 13968                           ;gui.c: 1095: else if(work_mode == 0x01)
 13969  000BB8  044D               	decf	_work_mode,w,c
 13970  000BBA  A4D8               	btfss	status,2,c
 13971  000BBC  D051               	goto	l13981
 13972                           
 13973                           ;gui.c: 1096: {
 13974                           ;gui.c: 1097: display_num(3,(0 + 17), menu[6].mode | 103);
 13975  000BBE  0E11               	movlw	17
 13976  000BC0  0101               	movlb	1	; () banked
 13977  000BC2  6F31               	movwf	display_num@x& (0+255),b
 13978  000BC4  5032               	movf	_menu+49,w,c
 13979  000BC6  0967               	iorlw	103
 13980  000BC8  0101               	movlb	1	; () banked
 13981  000BCA  6F32               	movwf	display_num@mode& (0+255),b
 13982  000BCC  0E03               	movlw	3
 13983  000BCE  ECF0  F006         	call	_display_num
 13984                           
 13985                           ;gui.c: 1098: }
 13986                           ;gui.c: 1100: }
 13987  000BD2  D046               	goto	l13981
 13988  000BD4                     l13957:
 13989                           
 13990                           ;gui.c: 1101: else if( menu[6].parameter == 1)
 13991  000BD4  0436               	decf	_menu+53,w,c
 13992  000BD6  A4D8               	btfss	status,2,c
 13993  000BD8  D020               	goto	l13969
 13994                           
 13995                           ;gui.c: 1102: {
 13996                           ;gui.c: 1103: if(work_mode == 0x00 || work_mode == 0x02)
 13997  000BDA  504D               	movf	_work_mode,w,c
 13998  000BDC  B4D8               	btfsc	status,2,c
 13999  000BDE  D004               	goto	l13963
 14000  000BE0  0E02               	movlw	2
 14001  000BE2  184D               	xorwf	_work_mode,w,c
 14002  000BE4  A4D8               	btfss	status,2,c
 14003  000BE6  D00B               	goto	l13965
 14004  000BE8                     l13963:
 14005                           
 14006                           ;gui.c: 1104: {
 14007                           ;gui.c: 1105: display_num(3,(0 + 14), menu[6].mode | 3);
 14008  000BE8  0E0E               	movlw	14
 14009  000BEA  0101               	movlb	1	; () banked
 14010  000BEC  6F31               	movwf	display_num@x& (0+255),b
 14011  000BEE  5032               	movf	_menu+49,w,c
 14012  000BF0  0903               	iorlw	3
 14013  000BF2  0101               	movlb	1	; () banked
 14014  000BF4  6F32               	movwf	display_num@mode& (0+255),b
 14015  000BF6  0E03               	movlw	3
 14016  000BF8  ECF0  F006         	call	_display_num
 14017                           
 14018                           ;gui.c: 1106: }
 14019  000BFC  D031               	goto	l13981
 14020  000BFE                     l13965:
 14021                           
 14022                           ;gui.c: 1107: else if(work_mode == 0x01)
 14023  000BFE  044D               	decf	_work_mode,w,c
 14024  000C00  A4D8               	btfss	status,2,c
 14025  000C02  D02E               	goto	l13981
 14026                           
 14027                           ;gui.c: 1108: {
 14028                           ;gui.c: 1109: display_num(3,(0 + 17), menu[6].mode | 102);
 14029  000C04  0E11               	movlw	17
 14030  000C06  0101               	movlb	1	; () banked
 14031  000C08  6F31               	movwf	display_num@x& (0+255),b
 14032  000C0A  5032               	movf	_menu+49,w,c
 14033  000C0C  0966               	iorlw	102
 14034  000C0E  0101               	movlb	1	; () banked
 14035  000C10  6F32               	movwf	display_num@mode& (0+255),b
 14036  000C12  0E03               	movlw	3
 14037  000C14  ECF0  F006         	call	_display_num
 14038                           
 14039                           ;gui.c: 1110: }
 14040                           ;gui.c: 1111: }
 14041  000C18  D023               	goto	l13981
 14042  000C1A                     l13969:
 14043                           
 14044                           ;gui.c: 1112: else if( menu[6].parameter == 2)
 14045  000C1A  0E02               	movlw	2
 14046  000C1C  1836               	xorwf	_menu+53,w,c
 14047  000C1E  A4D8               	btfss	status,2,c
 14048  000C20  D01F               	goto	l13981
 14049                           
 14050                           ;gui.c: 1113: {
 14051                           ;gui.c: 1114: if(work_mode == 0x00 || work_mode == 0x02)
 14052  000C22  504D               	movf	_work_mode,w,c
 14053  000C24  B4D8               	btfsc	status,2,c
 14054  000C26  D004               	goto	l13975
 14055  000C28  0E02               	movlw	2
 14056  000C2A  184D               	xorwf	_work_mode,w,c
 14057  000C2C  A4D8               	btfss	status,2,c
 14058  000C2E  D00B               	goto	l13977
 14059  000C30                     l13975:
 14060                           
 14061                           ;gui.c: 1115: {
 14062                           ;gui.c: 1116: display_num(3,(0 + 14), menu[6].mode | 3);
 14063  000C30  0E0E               	movlw	14
 14064  000C32  0101               	movlb	1	; () banked
 14065  000C34  6F31               	movwf	display_num@x& (0+255),b
 14066  000C36  5032               	movf	_menu+49,w,c
 14067  000C38  0903               	iorlw	3
 14068  000C3A  0101               	movlb	1	; () banked
 14069  000C3C  6F32               	movwf	display_num@mode& (0+255),b
 14070  000C3E  0E03               	movlw	3
 14071  000C40  ECF0  F006         	call	_display_num
 14072                           
 14073                           ;gui.c: 1117: }
 14074  000C44  D00D               	goto	l13981
 14075  000C46                     l13977:
 14076                           
 14077                           ;gui.c: 1118: else if(work_mode == 0x01)
 14078  000C46  044D               	decf	_work_mode,w,c
 14079  000C48  A4D8               	btfss	status,2,c
 14080  000C4A  D00A               	goto	l13981
 14081                           
 14082                           ;gui.c: 1119: {
 14083                           ;gui.c: 1120: display_num(3,(0 + 17), menu[6].mode | 101);
 14084  000C4C  0E11               	movlw	17
 14085  000C4E  0101               	movlb	1	; () banked
 14086  000C50  6F31               	movwf	display_num@x& (0+255),b
 14087  000C52  5032               	movf	_menu+49,w,c
 14088  000C54  0965               	iorlw	101
 14089  000C56  0101               	movlb	1	; () banked
 14090  000C58  6F32               	movwf	display_num@mode& (0+255),b
 14091  000C5A  0E03               	movlw	3
 14092  000C5C  ECF0  F006         	call	_display_num
 14093  000C60                     l13981:
 14094                           
 14095                           ;gui.c: 1121: }
 14096                           ;gui.c: 1122: }
 14097                           ;gui.c: 1125: menu[6].cur_mode = menu[6].mode;
 14098  000C60  C032  F033         	movff	_menu+49,_menu+50
 14099                           
 14100                           ;gui.c: 1126: }
 14101                           ;gui.c: 1127: }
 14102                           ;gui.c: 1130: break;
 14103  000C64  0012               	return	
 14104  000C66                     l13983:
 14105                           
 14106                           ;gui.c: 1135: if(menu[6].mode == 0x80)
 14107  000C66  0E80               	movlw	128
 14108  000C68  1832               	xorwf	_menu+49,w,c
 14109  000C6A  A4D8               	btfss	status,2,c
 14110  000C6C  D005               	goto	l13987
 14111                           
 14112                           ;gui.c: 1136: {
 14113                           ;gui.c: 1137: menu[6].mode = 3;
 14114  000C6E  0E03               	movlw	3
 14115  000C70  6E32               	movwf	_menu+49,c
 14116                           
 14117                           ;gui.c: 1138: flip = 1;
 14118  000C72  0E01               	movlw	1
 14119  000C74  6E4E               	movwf	_flip,c
 14120                           
 14121                           ;gui.c: 1139: }
 14122  000C76  D006               	goto	l13991
 14123  000C78                     l13987:
 14124                           
 14125                           ;gui.c: 1140: else if(menu[6].mode == 3)
 14126  000C78  0E03               	movlw	3
 14127  000C7A  1832               	xorwf	_menu+49,w,c
 14128  000C7C  A4D8               	btfss	status,2,c
 14129  000C7E  D002               	goto	l13991
 14130                           
 14131                           ;gui.c: 1141: {
 14132                           ;gui.c: 1142: menu[6].mode = 0;
 14133  000C80  0E00               	movlw	0
 14134  000C82  6E32               	movwf	_menu+49,c
 14135  000C84                     l13991:
 14136                           
 14137                           ;gui.c: 1143: }
 14138                           ;gui.c: 1145: if(menu[6].cur_mode != menu[6].mode)
 14139  000C84  5032               	movf	_menu+49,w,c
 14140  000C86  1833               	xorwf	_menu+50,w,c
 14141  000C88  B4D8               	btfsc	status,2,c
 14142  000C8A  0012               	return	
 14143                           
 14144                           ;gui.c: 1147: {
 14145                           ;gui.c: 1148: if(menu[6].mode == 0)
 14146  000C8C  5032               	movf	_menu+49,w,c
 14147  000C8E  A4D8               	btfss	status,2,c
 14148  000C90  D098               	goto	l14059
 14149                           
 14150                           ;gui.c: 1149: {
 14151                           ;gui.c: 1151: if(work_mode == 0x00 || work_mode == 0x02)
 14152  000C92  504D               	movf	_work_mode,w,c
 14153  000C94  B4D8               	btfsc	status,2,c
 14154  000C96  D004               	goto	l13999
 14155  000C98  0E02               	movlw	2
 14156  000C9A  184D               	xorwf	_work_mode,w,c
 14157  000C9C  A4D8               	btfss	status,2,c
 14158  000C9E  D00A               	goto	l14001
 14159  000CA0                     l13999:
 14160                           
 14161                           ;gui.c: 1152: {
 14162                           ;gui.c: 1153: display_frame_fghi(2,0,0);
 14163  000CA0  0E00               	movlw	0
 14164  000CA2  0101               	movlb	1	; () banked
 14165  000CA4  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14166  000CA6  0E00               	movlw	0
 14167  000CA8  0101               	movlb	1	; () banked
 14168  000CAA  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 14169  000CAC  0E02               	movlw	2
 14170  000CAE  EC7C  F00A         	call	_display_frame_fghi
 14171                           
 14172                           ;gui.c: 1154: }
 14173  000CB2  D00C               	goto	l14005
 14174  000CB4                     l14001:
 14175                           
 14176                           ;gui.c: 1155: else if(work_mode == 0x01)
 14177  000CB4  044D               	decf	_work_mode,w,c
 14178  000CB6  A4D8               	btfss	status,2,c
 14179  000CB8  D009               	goto	l14005
 14180                           
 14181                           ;gui.c: 1156: {
 14182                           ;gui.c: 1157: display_frame_fghi(3,0,0);
 14183  000CBA  0E00               	movlw	0
 14184  000CBC  0101               	movlb	1	; () banked
 14185  000CBE  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14186  000CC0  0E00               	movlw	0
 14187  000CC2  0101               	movlb	1	; () banked
 14188  000CC4  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 14189  000CC6  0E03               	movlw	3
 14190  000CC8  EC7C  F00A         	call	_display_frame_fghi
 14191  000CCC                     l14005:
 14192                           
 14193                           ;gui.c: 1158: }
 14194                           ;gui.c: 1160: if(menu[6].parameter == 0)
 14195  000CCC  5036               	movf	_menu+53,w,c
 14196  000CCE  A4D8               	btfss	status,2,c
 14197  000CD0  D025               	goto	l14023
 14198                           
 14199                           ;gui.c: 1161: {
 14200                           ;gui.c: 1163: if(work_mode == 0x00 || work_mode == 0x02)
 14201  000CD2  504D               	movf	_work_mode,w,c
 14202  000CD4  B4D8               	btfsc	status,2,c
 14203  000CD6  D004               	goto	l14011
 14204  000CD8  0E02               	movlw	2
 14205  000CDA  184D               	xorwf	_work_mode,w,c
 14206  000CDC  A4D8               	btfss	status,2,c
 14207  000CDE  D00A               	goto	l14015
 14208  000CE0                     l14011:
 14209                           
 14210                           ;gui.c: 1164: {
 14211                           ;gui.c: 1165: display_num(3,(0 + 14),3);
 14212  000CE0  0E0E               	movlw	14
 14213  000CE2  0101               	movlb	1	; () banked
 14214  000CE4  6F31               	movwf	display_num@x& (0+255),b
 14215  000CE6  0E03               	movlw	3
 14216  000CE8  0101               	movlb	1	; () banked
 14217  000CEA  6F32               	movwf	display_num@mode& (0+255),b
 14218  000CEC  0E03               	movlw	3
 14219  000CEE  ECF0  F006         	call	_display_num
 14220  000CF2  D050               	goto	l14049
 14221  000CF4                     l14015:
 14222                           
 14223                           ;gui.c: 1168: else if(work_mode == 0x01)
 14224  000CF4  044D               	decf	_work_mode,w,c
 14225  000CF6  A4D8               	btfss	status,2,c
 14226  000CF8  D064               	goto	l14059
 14227                           
 14228                           ;gui.c: 1169: {
 14229                           ;gui.c: 1170: display_num(3,(0 + 17), menu[7].mode | 103);
 14230  000CFA  0E11               	movlw	17
 14231  000CFC  0101               	movlb	1	; () banked
 14232  000CFE  6F31               	movwf	display_num@x& (0+255),b
 14233  000D00  503A               	movf	_menu+57,w,c
 14234  000D02  0967               	iorlw	103
 14235  000D04  0101               	movlb	1	; () banked
 14236  000D06  6F32               	movwf	display_num@mode& (0+255),b
 14237  000D08  0E03               	movlw	3
 14238  000D0A  ECF0  F006         	call	_display_num
 14239                           
 14240                           ;gui.c: 1171: menu[6].value = 103;
 14241  000D0E  0E67               	movlw	103
 14242  000D10  6E35               	movwf	_menu+52,c
 14243                           
 14244                           ;gui.c: 1172: hg_op.work_freq = (2*1000);
 14245  000D12  0E07               	movlw	7
 14246  000D14  0100               	movlb	0	; () banked
 14247  000D16  6F9C               	movwf	(_hg_op+28)& (0+255),b
 14248  000D18  0ED0               	movlw	208
 14249  000D1A  D052               	goto	L25
 14250  000D1C                     l14023:
 14251                           
 14252                           ;gui.c: 1183: else if(menu[6].parameter == 1)
 14253  000D1C  0436               	decf	_menu+53,w,c
 14254  000D1E  A4D8               	btfss	status,2,c
 14255  000D20  D025               	goto	l14041
 14256                           
 14257                           ;gui.c: 1184: {
 14258                           ;gui.c: 1186: if(work_mode == 0x00 || work_mode == 0x02)
 14259  000D22  504D               	movf	_work_mode,w,c
 14260  000D24  B4D8               	btfsc	status,2,c
 14261  000D26  D004               	goto	l14029
 14262  000D28  0E02               	movlw	2
 14263  000D2A  184D               	xorwf	_work_mode,w,c
 14264  000D2C  A4D8               	btfss	status,2,c
 14265  000D2E  D00A               	goto	l14033
 14266  000D30                     l14029:
 14267                           
 14268                           ;gui.c: 1187: {
 14269                           ;gui.c: 1188: display_num(3,(0 + 14),3);
 14270  000D30  0E0E               	movlw	14
 14271  000D32  0101               	movlb	1	; () banked
 14272  000D34  6F31               	movwf	display_num@x& (0+255),b
 14273  000D36  0E03               	movlw	3
 14274  000D38  0101               	movlb	1	; () banked
 14275  000D3A  6F32               	movwf	display_num@mode& (0+255),b
 14276  000D3C  0E03               	movlw	3
 14277  000D3E  ECF0  F006         	call	_display_num
 14278  000D42  D028               	goto	l14049
 14279  000D44                     l14033:
 14280                           
 14281                           ;gui.c: 1191: else if(work_mode == 0x01)
 14282  000D44  044D               	decf	_work_mode,w,c
 14283  000D46  A4D8               	btfss	status,2,c
 14284  000D48  D03C               	goto	l14059
 14285                           
 14286                           ;gui.c: 1192: {
 14287                           ;gui.c: 1193: display_num(3,(0 + 17), menu[7].mode | 102);
 14288  000D4A  0E11               	movlw	17
 14289  000D4C  0101               	movlb	1	; () banked
 14290  000D4E  6F31               	movwf	display_num@x& (0+255),b
 14291  000D50  503A               	movf	_menu+57,w,c
 14292  000D52  0966               	iorlw	102
 14293  000D54  0101               	movlb	1	; () banked
 14294  000D56  6F32               	movwf	display_num@mode& (0+255),b
 14295  000D58  0E03               	movlw	3
 14296  000D5A  ECF0  F006         	call	_display_num
 14297                           
 14298                           ;gui.c: 1194: menu[6].value = 102;
 14299  000D5E  0E66               	movlw	102
 14300  000D60  6E35               	movwf	_menu+52,c
 14301                           
 14302                           ;gui.c: 1195: hg_op.work_freq = (3*1000);
 14303  000D62  0E0B               	movlw	11
 14304  000D64  0100               	movlb	0	; () banked
 14305  000D66  6F9C               	movwf	(_hg_op+28)& (0+255),b
 14306  000D68  0EB8               	movlw	184
 14307  000D6A  D02A               	goto	L25
 14308  000D6C                     l14041:
 14309                           
 14310                           ;gui.c: 1212: else if(menu[6].parameter == 2)
 14311  000D6C  0E02               	movlw	2
 14312  000D6E  1836               	xorwf	_menu+53,w,c
 14313  000D70  A4D8               	btfss	status,2,c
 14314  000D72  D027               	goto	l14059
 14315                           
 14316                           ;gui.c: 1213: {
 14317                           ;gui.c: 1215: if(work_mode == 0x00 || work_mode == 0x02)
 14318  000D74  504D               	movf	_work_mode,w,c
 14319  000D76  B4D8               	btfsc	status,2,c
 14320  000D78  D004               	goto	l14047
 14321  000D7A  0E02               	movlw	2
 14322  000D7C  184D               	xorwf	_work_mode,w,c
 14323  000D7E  A4D8               	btfss	status,2,c
 14324  000D80  D00C               	goto	l14051
 14325  000D82                     l14047:
 14326                           
 14327                           ;gui.c: 1216: {
 14328                           ;gui.c: 1217: display_num(3,(0 + 14),3);
 14329  000D82  0E0E               	movlw	14
 14330  000D84  0101               	movlb	1	; () banked
 14331  000D86  6F31               	movwf	display_num@x& (0+255),b
 14332  000D88  0E03               	movlw	3
 14333  000D8A  0101               	movlb	1	; () banked
 14334  000D8C  6F32               	movwf	display_num@mode& (0+255),b
 14335  000D8E  0E03               	movlw	3
 14336  000D90  ECF0  F006         	call	_display_num
 14337  000D94                     l14049:
 14338                           
 14339                           ;gui.c: 1218: menu[6].value = 3;
 14340  000D94  0E03               	movlw	3
 14341  000D96  6E35               	movwf	_menu+52,c
 14342                           
 14343                           ;gui.c: 1219: }
 14344  000D98  D014               	goto	l14059
 14345  000D9A                     l14051:
 14346                           
 14347                           ;gui.c: 1220: else if(work_mode == 0x01)
 14348  000D9A  044D               	decf	_work_mode,w,c
 14349  000D9C  A4D8               	btfss	status,2,c
 14350  000D9E  D011               	goto	l14059
 14351                           
 14352                           ;gui.c: 1221: {
 14353                           ;gui.c: 1222: display_num(3,(0 + 17), menu[7].mode | 101);
 14354  000DA0  0E11               	movlw	17
 14355  000DA2  0101               	movlb	1	; () banked
 14356  000DA4  6F31               	movwf	display_num@x& (0+255),b
 14357  000DA6  503A               	movf	_menu+57,w,c
 14358  000DA8  0965               	iorlw	101
 14359  000DAA  0101               	movlb	1	; () banked
 14360  000DAC  6F32               	movwf	display_num@mode& (0+255),b
 14361  000DAE  0E03               	movlw	3
 14362  000DB0  ECF0  F006         	call	_display_num
 14363                           
 14364                           ;gui.c: 1223: menu[6].value = 101;
 14365  000DB4  0E65               	movlw	101
 14366  000DB6  6E35               	movwf	_menu+52,c
 14367                           
 14368                           ;gui.c: 1224: hg_op.work_freq = (4*1000);
 14369  000DB8  0E0F               	movlw	15
 14370  000DBA  0100               	movlb	0	; () banked
 14371  000DBC  6F9C               	movwf	(_hg_op+28)& (0+255),b
 14372  000DBE  0EA0               	movlw	160
 14373  000DC0                     L25:
 14374  000DC0  6F9B               	movwf	(_hg_op+27)& (0+255),b
 14375  000DC2                     l14059:
 14376                           
 14377                           ;gui.c: 1225: }
 14378                           ;gui.c: 1227: }
 14379                           ;gui.c: 1229: }
 14380                           ;gui.c: 1249: menu[6].cur_mode = menu[6].mode;
 14381  000DC2  C032  F033         	movff	_menu+49,_menu+50
 14382                           
 14383                           ;gui.c: 1255: }
 14384                           
 14385                           ;gui.c: 1252: }
 14386                           ;gui.c: 1254: break;
 14387  000DC6  0012               	return	
 14388  000DC8                     l14063:
 14389  000DC8  0101               	movlb	1	; () banked
 14390  000DCA  5138               	movf	menu6_MsgHandlle@key& (0+255),w,b
 14391                           
 14392                           ; Switch size 1, requested type "space"
 14393                           ; Number of cases is 3, Range of values is 241 to 243
 14394                           ; switch strategies available:
 14395                           ; Name         Instructions Cycles
 14396                           ; simple_byte           10     6 (average)
 14397                           ;	Chosen strategy is simple_byte
 14398  000DCC  0AF1               	xorlw	241	; case 241
 14399  000DCE  B4D8               	btfsc	status,2,c
 14400  000DD0  D60D               	goto	l13855
 14401  000DD2  0A03               	xorlw	3	; case 242
 14402  000DD4  B4D8               	btfsc	status,2,c
 14403  000DD6  D6A9               	goto	l13919
 14404  000DD8  0A01               	xorlw	1	; case 243
 14405  000DDA  A4D8               	btfss	status,2,c
 14406  000DDC  0012               	return	
 14407  000DDE  D743               	goto	l13983
 14408  000DE0                     __end_of_menu6_MsgHandlle:
 14409                           	opt stack 0
 14410                           tblptru	equ	0xFF8
 14411                           tblptrh	equ	0xFF7
 14412                           tblptrl	equ	0xFF6
 14413                           tablat	equ	0xFF5
 14414                           prodh	equ	0xFF4
 14415                           prodl	equ	0xFF3
 14416                           intcon	equ	0xFF2
 14417                           intcon3	equ	0xFF0
 14418                           postinc0	equ	0xFEE
 14419                           wreg	equ	0xFE8
 14420                           postdec1	equ	0xFE5
 14421                           fsr1h	equ	0xFE2
 14422                           fsr1l	equ	0xFE1
 14423                           postinc2	equ	0xFDE
 14424                           fsr2h	equ	0xFDA
 14425                           fsr2l	equ	0xFD9
 14426                           status	equ	0xFD8
 14427                           
 14428 ;; *************** function _menu5_MsgHandlle *****************
 14429 ;; Defined at:
 14430 ;;		line 802 in file "../gui.c"
 14431 ;; Parameters:    Size  Location     Type
 14432 ;;  key             1    wreg     unsigned char 
 14433 ;; Auto vars:     Size  Location     Type
 14434 ;;  key             1   16[BANK1 ] unsigned char 
 14435 ;; Return value:  Size  Location     Type
 14436 ;;                  1    wreg      void 
 14437 ;; Registers used:
 14438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14439 ;; Tracked objects:
 14440 ;;		On entry : 0/0
 14441 ;;		On exit  : 0/0
 14442 ;;		Unchanged: 0/0
 14443 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14444 ;;      Params:         0       0       0       0       0       0       0
 14445 ;;      Locals:         0       0       1       0       0       0       0
 14446 ;;      Temps:          0       0       0       0       0       0       0
 14447 ;;      Totals:         0       0       1       0       0       0       0
 14448 ;;Total ram usage:        1 bytes
 14449 ;; Hardware stack levels used:    1
 14450 ;; Hardware stack levels required when called:    7
 14451 ;; This function calls:
 14452 ;;		_display_frame_fghi
 14453 ;;		_display_num
 14454 ;; This function is called by:
 14455 ;;		_init_menu
 14456 ;;		_HG_interface
 14457 ;; This function uses a non-reentrant model
 14458 ;;
 14459                           
 14460                           	psect	text32
 14461  0030E0                     __ptext32:
 14462                           	opt stack 0
 14463  0030E0                     _menu5_MsgHandlle:
 14464                           	opt stack 22
 14465                           
 14466                           ;incstack = 0
 14467                           ;menu5_MsgHandlle@key stored from wreg
 14468  0030E0  0101               	movlb	1	; () banked
 14469  0030E2  6F38               	movwf	menu5_MsgHandlle@key& (0+255),b
 14470                           
 14471                           ;gui.c: 805: switch(key)
 14472  0030E4  D0EB               	goto	l13851
 14473  0030E6                     l13745:
 14474                           
 14475                           ;gui.c: 810: if(menu[5].mode == 3)
 14476  0030E6  0E03               	movlw	3
 14477  0030E8  182A               	xorwf	_menu+41,w,c
 14478  0030EA  A4D8               	btfss	status,2,c
 14479  0030EC  D008               	goto	l13753
 14480                           
 14481                           ;gui.c: 811: {
 14482                           ;gui.c: 812: menu[5].parameter ++;
 14483  0030EE  2A2E               	incf	_menu+45,f,c
 14484                           
 14485                           ;gui.c: 813: if(menu[5].parameter == 3) menu[5].parameter = 0;
 14486  0030F0  0E03               	movlw	3
 14487  0030F2  182E               	xorwf	_menu+45,w,c
 14488  0030F4  A4D8               	btfss	status,2,c
 14489  0030F6  0012               	return	
 14490  0030F8  0E00               	movlw	0
 14491  0030FA  6E2E               	movwf	_menu+45,c
 14492                           
 14493                           ;gui.c: 814: }
 14494  0030FC  0012               	return	
 14495  0030FE                     l13753:
 14496                           
 14497                           ;gui.c: 815: else
 14498                           ;gui.c: 816: {
 14499                           ;gui.c: 817: if(focus ==6)
 14500  0030FE  0E06               	movlw	6
 14501  003100  184F               	xorwf	_focus,w,c
 14502  003102  A4D8               	btfss	status,2,c
 14503  003104  D002               	goto	l13757
 14504                           
 14505                           ;gui.c: 818: {
 14506                           ;gui.c: 819: menu[5].mode = 0x80;
 14507  003106  0E80               	movlw	128
 14508  003108  D001               	goto	L26
 14509  00310A                     l13757:
 14510                           
 14511                           ;gui.c: 821: else
 14512                           ;gui.c: 822: {
 14513                           ;gui.c: 823: menu[5].mode = 0;
 14514  00310A  0E00               	movlw	0
 14515  00310C                     L26:
 14516  00310C  6E2A               	movwf	_menu+41,c
 14517                           
 14518                           ;gui.c: 824: }
 14519                           ;gui.c: 826: if(menu[5].cur_mode != menu[5].mode)
 14520  00310E  502A               	movf	_menu+41,w,c
 14521  003110  182B               	xorwf	_menu+42,w,c
 14522  003112  B4D8               	btfsc	status,2,c
 14523  003114  0012               	return	
 14524                           
 14525                           ;gui.c: 827: {
 14526                           ;gui.c: 829: display_frame_fghi(1,49, menu[5].mode);
 14527  003116  0E31               	movlw	49
 14528  003118  0101               	movlb	1	; () banked
 14529  00311A  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14530  00311C  C02A  F132         	movff	_menu+41,display_frame_fghi@mode
 14531  003120  0E01               	movlw	1
 14532  003122  EC7C  F00A         	call	_display_frame_fghi
 14533                           
 14534                           ;gui.c: 832: if( menu[5].parameter == 0)
 14535  003126  502E               	movf	_menu+45,w,c
 14536  003128  A4D8               	btfss	status,2,c
 14537  00312A  D00B               	goto	l13767
 14538                           
 14539                           ;gui.c: 833: {
 14540                           ;gui.c: 835: display_num(3,(49 + 14), menu[5].mode | 1);
 14541  00312C  0E3F               	movlw	63
 14542  00312E  0101               	movlb	1	; () banked
 14543  003130  6F31               	movwf	display_num@x& (0+255),b
 14544  003132  502A               	movf	_menu+41,w,c
 14545  003134  0901               	iorlw	1
 14546  003136  0101               	movlb	1	; () banked
 14547  003138  6F32               	movwf	display_num@mode& (0+255),b
 14548  00313A  0E03               	movlw	3
 14549  00313C  ECF0  F006         	call	_display_num
 14550                           
 14551                           ;gui.c: 836: }
 14552  003140  D01C               	goto	l13775
 14553  003142                     l13767:
 14554                           
 14555                           ;gui.c: 837: else if( menu[5].parameter == 1)
 14556  003142  042E               	decf	_menu+45,w,c
 14557  003144  A4D8               	btfss	status,2,c
 14558  003146  D00B               	goto	l13771
 14559                           
 14560                           ;gui.c: 838: {
 14561                           ;gui.c: 840: display_num(3,(49 + 14), menu[5].mode | 106);
 14562  003148  0E3F               	movlw	63
 14563  00314A  0101               	movlb	1	; () banked
 14564  00314C  6F31               	movwf	display_num@x& (0+255),b
 14565  00314E  502A               	movf	_menu+41,w,c
 14566  003150  096A               	iorlw	106
 14567  003152  0101               	movlb	1	; () banked
 14568  003154  6F32               	movwf	display_num@mode& (0+255),b
 14569  003156  0E03               	movlw	3
 14570  003158  ECF0  F006         	call	_display_num
 14571                           
 14572                           ;gui.c: 841: }
 14573  00315C  D00E               	goto	l13775
 14574  00315E                     l13771:
 14575                           
 14576                           ;gui.c: 842: else if( menu[5].parameter == 2)
 14577  00315E  0E02               	movlw	2
 14578  003160  182E               	xorwf	_menu+45,w,c
 14579  003162  A4D8               	btfss	status,2,c
 14580  003164  D00A               	goto	l13775
 14581                           
 14582                           ;gui.c: 843: {
 14583                           ;gui.c: 844: display_num(3,(49 + 14), menu[5].mode | 5);
 14584  003166  0E3F               	movlw	63
 14585  003168  0101               	movlb	1	; () banked
 14586  00316A  6F31               	movwf	display_num@x& (0+255),b
 14587  00316C  502A               	movf	_menu+41,w,c
 14588  00316E  0905               	iorlw	5
 14589  003170  0101               	movlb	1	; () banked
 14590  003172  6F32               	movwf	display_num@mode& (0+255),b
 14591  003174  0E03               	movlw	3
 14592  003176  ECF0  F006         	call	_display_num
 14593  00317A                     l13775:
 14594                           
 14595                           ;gui.c: 845: }
 14596                           ;gui.c: 847: menu[5].cur_mode = menu[5].mode;
 14597  00317A  C02A  F02B         	movff	_menu+41,_menu+42
 14598                           
 14599                           ;gui.c: 848: }
 14600                           ;gui.c: 850: }
 14601                           ;gui.c: 852: break;
 14602  00317E  0012               	return	
 14603  003180                     l13777:
 14604                           
 14605                           ;gui.c: 857: if(menu[5].mode == 3)
 14606  003180  0E03               	movlw	3
 14607  003182  182A               	xorwf	_menu+41,w,c
 14608  003184  A4D8               	btfss	status,2,c
 14609  003186  D007               	goto	l13785
 14610                           
 14611                           ;gui.c: 858: {
 14612                           ;gui.c: 859: menu[5].parameter --;
 14613  003188  062E               	decf	_menu+45,f,c
 14614                           
 14615                           ;gui.c: 860: if(menu[5].parameter == -1) menu[5].parameter = 2;
 14616  00318A  282E               	incf	_menu+45,w,c
 14617  00318C  A4D8               	btfss	status,2,c
 14618  00318E  0012               	return	
 14619  003190  0E02               	movlw	2
 14620  003192  6E2E               	movwf	_menu+45,c
 14621                           
 14622                           ;gui.c: 861: }
 14623  003194  0012               	return	
 14624  003196                     l13785:
 14625                           
 14626                           ;gui.c: 862: else
 14627                           ;gui.c: 863: {
 14628                           ;gui.c: 864: if(focus ==6)
 14629  003196  0E06               	movlw	6
 14630  003198  184F               	xorwf	_focus,w,c
 14631  00319A  A4D8               	btfss	status,2,c
 14632  00319C  D002               	goto	l13789
 14633                           
 14634                           ;gui.c: 865: {
 14635                           ;gui.c: 866: menu[5].mode = 0x80;
 14636  00319E  0E80               	movlw	128
 14637  0031A0  D001               	goto	L27
 14638  0031A2                     l13789:
 14639                           
 14640                           ;gui.c: 868: else
 14641                           ;gui.c: 869: {
 14642                           ;gui.c: 870: menu[5].mode = 0;
 14643  0031A2  0E00               	movlw	0
 14644  0031A4                     L27:
 14645  0031A4  6E2A               	movwf	_menu+41,c
 14646                           
 14647                           ;gui.c: 871: }
 14648                           ;gui.c: 873: if(menu[5].cur_mode != menu[5].mode)
 14649  0031A6  502A               	movf	_menu+41,w,c
 14650  0031A8  182B               	xorwf	_menu+42,w,c
 14651  0031AA  B4D8               	btfsc	status,2,c
 14652  0031AC  0012               	return	
 14653                           
 14654                           ;gui.c: 874: {
 14655                           ;gui.c: 876: display_frame_fghi(1,49, menu[5].mode);
 14656  0031AE  0E31               	movlw	49
 14657  0031B0  0101               	movlb	1	; () banked
 14658  0031B2  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14659  0031B4  C02A  F132         	movff	_menu+41,display_frame_fghi@mode
 14660  0031B8  0E01               	movlw	1
 14661  0031BA  EC7C  F00A         	call	_display_frame_fghi
 14662                           
 14663                           ;gui.c: 879: if( menu[5].parameter == 0)
 14664  0031BE  502E               	movf	_menu+45,w,c
 14665  0031C0  A4D8               	btfss	status,2,c
 14666  0031C2  D00B               	goto	l13799
 14667                           
 14668                           ;gui.c: 880: {
 14669                           ;gui.c: 882: display_num(3,(49 + 14), menu[5].mode | 1);
 14670  0031C4  0E3F               	movlw	63
 14671  0031C6  0101               	movlb	1	; () banked
 14672  0031C8  6F31               	movwf	display_num@x& (0+255),b
 14673  0031CA  502A               	movf	_menu+41,w,c
 14674  0031CC  0901               	iorlw	1
 14675  0031CE  0101               	movlb	1	; () banked
 14676  0031D0  6F32               	movwf	display_num@mode& (0+255),b
 14677  0031D2  0E03               	movlw	3
 14678  0031D4  ECF0  F006         	call	_display_num
 14679                           
 14680                           ;gui.c: 883: }
 14681  0031D8  D01C               	goto	l13807
 14682  0031DA                     l13799:
 14683                           
 14684                           ;gui.c: 884: else if( menu[5].parameter == 1)
 14685  0031DA  042E               	decf	_menu+45,w,c
 14686  0031DC  A4D8               	btfss	status,2,c
 14687  0031DE  D00B               	goto	l13803
 14688                           
 14689                           ;gui.c: 885: {
 14690                           ;gui.c: 887: display_num(3,(49 + 14), menu[5].mode | 106);
 14691  0031E0  0E3F               	movlw	63
 14692  0031E2  0101               	movlb	1	; () banked
 14693  0031E4  6F31               	movwf	display_num@x& (0+255),b
 14694  0031E6  502A               	movf	_menu+41,w,c
 14695  0031E8  096A               	iorlw	106
 14696  0031EA  0101               	movlb	1	; () banked
 14697  0031EC  6F32               	movwf	display_num@mode& (0+255),b
 14698  0031EE  0E03               	movlw	3
 14699  0031F0  ECF0  F006         	call	_display_num
 14700                           
 14701                           ;gui.c: 888: }
 14702  0031F4  D00E               	goto	l13807
 14703  0031F6                     l13803:
 14704                           
 14705                           ;gui.c: 889: else if( menu[5].parameter == 2)
 14706  0031F6  0E02               	movlw	2
 14707  0031F8  182E               	xorwf	_menu+45,w,c
 14708  0031FA  A4D8               	btfss	status,2,c
 14709  0031FC  D00A               	goto	l13807
 14710                           
 14711                           ;gui.c: 890: {
 14712                           ;gui.c: 891: display_num(3,(49 + 14), menu[5].mode | 5);
 14713  0031FE  0E3F               	movlw	63
 14714  003200  0101               	movlb	1	; () banked
 14715  003202  6F31               	movwf	display_num@x& (0+255),b
 14716  003204  502A               	movf	_menu+41,w,c
 14717  003206  0905               	iorlw	5
 14718  003208  0101               	movlb	1	; () banked
 14719  00320A  6F32               	movwf	display_num@mode& (0+255),b
 14720  00320C  0E03               	movlw	3
 14721  00320E  ECF0  F006         	call	_display_num
 14722  003212                     l13807:
 14723                           
 14724                           ;gui.c: 892: }
 14725                           ;gui.c: 896: menu[5].cur_mode = menu[5].mode;
 14726  003212  C02A  F02B         	movff	_menu+41,_menu+42
 14727                           
 14728                           ;gui.c: 897: }
 14729                           ;gui.c: 899: }
 14730                           ;gui.c: 902: break;
 14731  003216  0012               	return	
 14732  003218                     l13809:
 14733                           
 14734                           ;gui.c: 906: if(menu[5].mode == 0x80)
 14735  003218  0E80               	movlw	128
 14736  00321A  182A               	xorwf	_menu+41,w,c
 14737  00321C  A4D8               	btfss	status,2,c
 14738  00321E  D005               	goto	l13813
 14739                           
 14740                           ;gui.c: 907: {
 14741                           ;gui.c: 908: menu[5].mode = 3;
 14742  003220  0E03               	movlw	3
 14743  003222  6E2A               	movwf	_menu+41,c
 14744                           
 14745                           ;gui.c: 909: flip = 1;
 14746  003224  0E01               	movlw	1
 14747  003226  6E4E               	movwf	_flip,c
 14748                           
 14749                           ;gui.c: 910: }
 14750  003228  D006               	goto	l13817
 14751  00322A                     l13813:
 14752                           
 14753                           ;gui.c: 911: else if(menu[5].mode == 3)
 14754  00322A  0E03               	movlw	3
 14755  00322C  182A               	xorwf	_menu+41,w,c
 14756  00322E  A4D8               	btfss	status,2,c
 14757  003230  D002               	goto	l13817
 14758                           
 14759                           ;gui.c: 912: {
 14760                           ;gui.c: 913: menu[5].mode = 0;
 14761  003232  0E00               	movlw	0
 14762  003234  6E2A               	movwf	_menu+41,c
 14763  003236                     l13817:
 14764                           
 14765                           ;gui.c: 914: }
 14766                           ;gui.c: 916: if(menu[5].cur_mode != menu[5].mode)
 14767  003236  502A               	movf	_menu+41,w,c
 14768  003238  182B               	xorwf	_menu+42,w,c
 14769  00323A  B4D8               	btfsc	status,2,c
 14770  00323C  0012               	return	
 14771                           
 14772                           ;gui.c: 918: {
 14773                           ;gui.c: 919: if(menu[5].mode == 0)
 14774  00323E  502A               	movf	_menu+41,w,c
 14775  003240  A4D8               	btfss	status,2,c
 14776  003242  D039               	goto	l13847
 14777                           
 14778                           ;gui.c: 920: {
 14779                           ;gui.c: 922: display_frame_fghi(1,49, 0);
 14780  003244  0E31               	movlw	49
 14781  003246  0101               	movlb	1	; () banked
 14782  003248  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14783  00324A  0E00               	movlw	0
 14784  00324C  0101               	movlb	1	; () banked
 14785  00324E  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 14786  003250  0E01               	movlw	1
 14787  003252  EC7C  F00A         	call	_display_frame_fghi
 14788                           
 14789                           ;gui.c: 923: if(menu[5].parameter == 0)
 14790  003256  502E               	movf	_menu+45,w,c
 14791  003258  A4D8               	btfss	status,2,c
 14792  00325A  D00F               	goto	l13831
 14793                           
 14794                           ;gui.c: 924: {
 14795                           ;gui.c: 927: display_num(3,(49 + 14),1);
 14796  00325C  0E3F               	movlw	63
 14797  00325E  0101               	movlb	1	; () banked
 14798  003260  6F31               	movwf	display_num@x& (0+255),b
 14799  003262  0E01               	movlw	1
 14800  003264  0101               	movlb	1	; () banked
 14801  003266  6F32               	movwf	display_num@mode& (0+255),b
 14802  003268  0E03               	movlw	3
 14803  00326A  ECF0  F006         	call	_display_num
 14804                           
 14805                           ;gui.c: 928: menu[5].value = 1;
 14806  00326E  0E01               	movlw	1
 14807  003270  D020               	goto	L29
 14808  003272                     l13829:
 14809                           
 14810                           ;gui.c: 934: hg_op.push_len = (112);
 14811  003272  0E70               	movlw	112
 14812  003274  0100               	movlb	0	; () banked
 14813  003276  6F9D               	movwf	(_hg_op+29)& (0+255),b
 14814                           
 14815                           ;gui.c: 935: }
 14816  003278  D01E               	goto	l13847
 14817  00327A                     l13831:
 14818                           
 14819                           ;gui.c: 936: else if(menu[5].parameter == 1)
 14820  00327A  042E               	decf	_menu+45,w,c
 14821  00327C  A4D8               	btfss	status,2,c
 14822  00327E  D00B               	goto	l13839
 14823                           
 14824                           ;gui.c: 937: {
 14825                           ;gui.c: 941: display_num(3,(49 + 14),106);
 14826  003280  0E3F               	movlw	63
 14827  003282  0101               	movlb	1	; () banked
 14828  003284  6F31               	movwf	display_num@x& (0+255),b
 14829  003286  0E6A               	movlw	106
 14830  003288  0101               	movlb	1	; () banked
 14831  00328A  6F32               	movwf	display_num@mode& (0+255),b
 14832  00328C  0E03               	movlw	3
 14833  00328E  ECF0  F006         	call	_display_num
 14834                           
 14835                           ;gui.c: 942: menu[5].value = 106;
 14836  003292  0E6A               	movlw	106
 14837  003294  D00E               	goto	L29
 14838  003296                     l13839:
 14839                           
 14840                           ;gui.c: 955: else if(menu[5].parameter == 2)
 14841  003296  0E02               	movlw	2
 14842  003298  182E               	xorwf	_menu+45,w,c
 14843  00329A  A4D8               	btfss	status,2,c
 14844  00329C  D00C               	goto	l13847
 14845                           
 14846                           ;gui.c: 956: {
 14847                           ;gui.c: 957: display_num(3,(49 + 14),5);
 14848  00329E  0E3F               	movlw	63
 14849  0032A0  0101               	movlb	1	; () banked
 14850  0032A2  6F31               	movwf	display_num@x& (0+255),b
 14851  0032A4  0E05               	movlw	5
 14852  0032A6  0101               	movlb	1	; () banked
 14853  0032A8  6F32               	movwf	display_num@mode& (0+255),b
 14854  0032AA  0E03               	movlw	3
 14855  0032AC  ECF0  F006         	call	_display_num
 14856                           
 14857                           ;gui.c: 958: menu[5].value = 5;
 14858  0032B0  0E05               	movlw	5
 14859  0032B2                     L29:
 14860  0032B2  6E2D               	movwf	_menu+44,c
 14861  0032B4  D7DE               	goto	l13829
 14862  0032B6                     l13847:
 14863                           
 14864                           ;gui.c: 960: }
 14865                           ;gui.c: 962: }
 14866                           ;gui.c: 963: menu[5].cur_mode = menu[5].mode;
 14867  0032B6  C02A  F02B         	movff	_menu+41,_menu+42
 14868                           
 14869                           ;gui.c: 970: }
 14870                           
 14871                           ;gui.c: 966: }
 14872                           ;gui.c: 969: break;
 14873  0032BA  0012               	return	
 14874  0032BC                     l13851:
 14875  0032BC  0101               	movlb	1	; () banked
 14876  0032BE  5138               	movf	menu5_MsgHandlle@key& (0+255),w,b
 14877                           
 14878                           ; Switch size 1, requested type "space"
 14879                           ; Number of cases is 3, Range of values is 241 to 243
 14880                           ; switch strategies available:
 14881                           ; Name         Instructions Cycles
 14882                           ; simple_byte           10     6 (average)
 14883                           ;	Chosen strategy is simple_byte
 14884  0032C0  0AF1               	xorlw	241	; case 241
 14885  0032C2  B4D8               	btfsc	status,2,c
 14886  0032C4  D710               	goto	l13745
 14887  0032C6  0A03               	xorlw	3	; case 242
 14888  0032C8  B4D8               	btfsc	status,2,c
 14889  0032CA  D75A               	goto	l13777
 14890  0032CC  0A01               	xorlw	1	; case 243
 14891  0032CE  A4D8               	btfss	status,2,c
 14892  0032D0  0012               	return	
 14893  0032D2  D7A2               	goto	l13809
 14894  0032D4                     __end_of_menu5_MsgHandlle:
 14895                           	opt stack 0
 14896                           tblptru	equ	0xFF8
 14897                           tblptrh	equ	0xFF7
 14898                           tblptrl	equ	0xFF6
 14899                           tablat	equ	0xFF5
 14900                           prodh	equ	0xFF4
 14901                           prodl	equ	0xFF3
 14902                           intcon	equ	0xFF2
 14903                           intcon3	equ	0xFF0
 14904                           postinc0	equ	0xFEE
 14905                           wreg	equ	0xFE8
 14906                           postdec1	equ	0xFE5
 14907                           fsr1h	equ	0xFE2
 14908                           fsr1l	equ	0xFE1
 14909                           postinc2	equ	0xFDE
 14910                           fsr2h	equ	0xFDA
 14911                           fsr2l	equ	0xFD9
 14912                           status	equ	0xFD8
 14913                           
 14914 ;; *************** function _menu4_MsgHandlle *****************
 14915 ;; Defined at:
 14916 ;;		line 617 in file "../gui.c"
 14917 ;; Parameters:    Size  Location     Type
 14918 ;;  key             1    wreg     unsigned char 
 14919 ;; Auto vars:     Size  Location     Type
 14920 ;;  key             1   16[BANK1 ] unsigned char 
 14921 ;; Return value:  Size  Location     Type
 14922 ;;                  1    wreg      void 
 14923 ;; Registers used:
 14924 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14925 ;; Tracked objects:
 14926 ;;		On entry : 0/0
 14927 ;;		On exit  : 0/0
 14928 ;;		Unchanged: 0/0
 14929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14930 ;;      Params:         0       0       0       0       0       0       0
 14931 ;;      Locals:         0       0       1       0       0       0       0
 14932 ;;      Temps:          0       0       0       0       0       0       0
 14933 ;;      Totals:         0       0       1       0       0       0       0
 14934 ;;Total ram usage:        1 bytes
 14935 ;; Hardware stack levels used:    1
 14936 ;; Hardware stack levels required when called:    7
 14937 ;; This function calls:
 14938 ;;		_display_frame_de
 14939 ;;		_display_num
 14940 ;; This function is called by:
 14941 ;;		_init_menu
 14942 ;;		_HG_interface
 14943 ;; This function uses a non-reentrant model
 14944 ;;
 14945                           
 14946                           	psect	text33
 14947  00263C                     __ptext33:
 14948                           	opt stack 0
 14949  00263C                     _menu4_MsgHandlle:
 14950                           	opt stack 22
 14951                           
 14952                           ;incstack = 0
 14953                           ;menu4_MsgHandlle@key stored from wreg
 14954  00263C  0101               	movlb	1	; () banked
 14955  00263E  6F38               	movwf	menu4_MsgHandlle@key& (0+255),b
 14956                           
 14957                           ;gui.c: 620: switch(key)
 14958  002640  D110               	goto	l13741
 14959  002642                     l13623:
 14960                           
 14961                           ;gui.c: 625: if(menu[4].mode == 3)
 14962  002642  0E03               	movlw	3
 14963  002644  1822               	xorwf	_menu+33,w,c
 14964  002646  A4D8               	btfss	status,2,c
 14965  002648  D008               	goto	l13631
 14966                           
 14967                           ;gui.c: 626: {
 14968                           ;gui.c: 627: menu[4].parameter ++;
 14969  00264A  2A26               	incf	_menu+37,f,c
 14970                           
 14971                           ;gui.c: 628: if(menu[4].parameter == 3) menu[4].parameter = 0;
 14972  00264C  0E03               	movlw	3
 14973  00264E  1826               	xorwf	_menu+37,w,c
 14974  002650  A4D8               	btfss	status,2,c
 14975  002652  0012               	return	
 14976  002654  0E00               	movlw	0
 14977  002656  6E26               	movwf	_menu+37,c
 14978                           
 14979                           ;gui.c: 629: }
 14980  002658  0012               	return	
 14981  00265A                     l13631:
 14982                           
 14983                           ;gui.c: 630: else
 14984                           ;gui.c: 631: {
 14985                           ;gui.c: 632: if(focus ==5)
 14986  00265A  0E05               	movlw	5
 14987  00265C  184F               	xorwf	_focus,w,c
 14988  00265E  A4D8               	btfss	status,2,c
 14989  002660  D002               	goto	l13635
 14990                           
 14991                           ;gui.c: 633: {
 14992                           ;gui.c: 634: menu[4].mode = 0x80;
 14993  002662  0E80               	movlw	128
 14994  002664  D001               	goto	L30
 14995  002666                     l13635:
 14996                           
 14997                           ;gui.c: 636: else
 14998                           ;gui.c: 637: {
 14999                           ;gui.c: 638: menu[4].mode = 0;
 15000  002666  0E00               	movlw	0
 15001  002668                     L30:
 15002  002668  6E22               	movwf	_menu+33,c
 15003                           
 15004                           ;gui.c: 639: }
 15005                           ;gui.c: 641: if(menu[4].cur_mode != menu[4].mode)
 15006  00266A  5022               	movf	_menu+33,w,c
 15007  00266C  1823               	xorwf	_menu+34,w,c
 15008  00266E  B4D8               	btfsc	status,2,c
 15009  002670  0012               	return	
 15010                           
 15011                           ;gui.c: 642: {
 15012                           ;gui.c: 643: display_frame_de(2,0, menu[4].mode);
 15013  002672  0E00               	movlw	0
 15014  002674  0101               	movlb	1	; () banked
 15015  002676  6F31               	movwf	display_frame_de@x& (0+255),b
 15016  002678  C022  F132         	movff	_menu+33,display_frame_de@mode
 15017  00267C  0E02               	movlw	2
 15018  00267E  EC09  F000         	call	_display_frame_de
 15019                           
 15020                           ;gui.c: 645: if( menu[4].parameter == 0)
 15021  002682  5026               	movf	_menu+37,w,c
 15022  002684  A4D8               	btfss	status,2,c
 15023  002686  D00B               	goto	l13645
 15024                           
 15025                           ;gui.c: 646: {
 15026                           ;gui.c: 648: display_num(0,(0 + 14), menu[4].mode | 1);
 15027  002688  0E0E               	movlw	14
 15028  00268A  0101               	movlb	1	; () banked
 15029  00268C  6F31               	movwf	display_num@x& (0+255),b
 15030  00268E  5022               	movf	_menu+33,w,c
 15031  002690  0901               	iorlw	1
 15032  002692  0101               	movlb	1	; () banked
 15033  002694  6F32               	movwf	display_num@mode& (0+255),b
 15034  002696  0E00               	movlw	0
 15035  002698  ECF0  F006         	call	_display_num
 15036                           
 15037                           ;gui.c: 649: }
 15038  00269C  D01A               	goto	l13653
 15039  00269E                     l13645:
 15040                           
 15041                           ;gui.c: 650: else if( menu[4].parameter == 1)
 15042  00269E  0426               	decf	_menu+37,w,c
 15043  0026A0  A4D8               	btfss	status,2,c
 15044  0026A2  D00B               	goto	l13649
 15045                           
 15046                           ;gui.c: 651: {
 15047                           ;gui.c: 653: display_num(0,(0 + 14), menu[4].mode | 2);
 15048  0026A4  0E0E               	movlw	14
 15049  0026A6  0101               	movlb	1	; () banked
 15050  0026A8  6F31               	movwf	display_num@x& (0+255),b
 15051  0026AA  5022               	movf	_menu+33,w,c
 15052  0026AC  0902               	iorlw	2
 15053  0026AE  0101               	movlb	1	; () banked
 15054  0026B0  6F32               	movwf	display_num@mode& (0+255),b
 15055  0026B2  0E00               	movlw	0
 15056  0026B4  ECF0  F006         	call	_display_num
 15057                           
 15058                           ;gui.c: 654: }
 15059  0026B8  D00C               	goto	l13653
 15060  0026BA                     l13649:
 15061                           
 15062                           ;gui.c: 655: else if( menu[4].parameter == 2)
 15063  0026BA  0E02               	movlw	2
 15064  0026BC  1826               	xorwf	_menu+37,w,c
 15065  0026BE  A4D8               	btfss	status,2,c
 15066  0026C0  D008               	goto	l13653
 15067                           
 15068                           ;gui.c: 656: {
 15069                           ;gui.c: 658: display_num(0,(0 + 14), menu[4].mode | 0);
 15070  0026C2  0E0E               	movlw	14
 15071  0026C4  0101               	movlb	1	; () banked
 15072  0026C6  6F31               	movwf	display_num@x& (0+255),b
 15073  0026C8  C022  F132         	movff	_menu+33,display_num@mode
 15074  0026CC  0E00               	movlw	0
 15075  0026CE  ECF0  F006         	call	_display_num
 15076  0026D2                     l13653:
 15077                           
 15078                           ;gui.c: 659: }
 15079                           ;gui.c: 662: menu[4].cur_mode = menu[4].mode;
 15080  0026D2  C022  F023         	movff	_menu+33,_menu+34
 15081                           
 15082                           ;gui.c: 663: }
 15083                           ;gui.c: 666: }
 15084                           ;gui.c: 668: break;
 15085  0026D6  0012               	return	
 15086  0026D8                     l13655:
 15087                           
 15088                           ;gui.c: 673: if(menu[4].mode == 3)
 15089  0026D8  0E03               	movlw	3
 15090  0026DA  1822               	xorwf	_menu+33,w,c
 15091  0026DC  A4D8               	btfss	status,2,c
 15092  0026DE  D007               	goto	l13663
 15093                           
 15094                           ;gui.c: 674: {
 15095                           ;gui.c: 675: menu[4].parameter --;
 15096  0026E0  0626               	decf	_menu+37,f,c
 15097                           
 15098                           ;gui.c: 676: if(menu[4].parameter == -1) menu[4].parameter = 1;
 15099  0026E2  2826               	incf	_menu+37,w,c
 15100  0026E4  A4D8               	btfss	status,2,c
 15101  0026E6  0012               	return	
 15102  0026E8  0E01               	movlw	1
 15103  0026EA  6E26               	movwf	_menu+37,c
 15104                           
 15105                           ;gui.c: 677: }
 15106  0026EC  0012               	return	
 15107  0026EE                     l13663:
 15108                           
 15109                           ;gui.c: 678: else
 15110                           ;gui.c: 679: {
 15111                           ;gui.c: 680: if(focus ==5)
 15112  0026EE  0E05               	movlw	5
 15113  0026F0  184F               	xorwf	_focus,w,c
 15114  0026F2  A4D8               	btfss	status,2,c
 15115  0026F4  D002               	goto	l13667
 15116                           
 15117                           ;gui.c: 681: {
 15118                           ;gui.c: 682: menu[4].mode = 0x80;
 15119  0026F6  0E80               	movlw	128
 15120  0026F8  D001               	goto	L31
 15121  0026FA                     l13667:
 15122                           
 15123                           ;gui.c: 684: else
 15124                           ;gui.c: 685: {
 15125                           ;gui.c: 686: menu[4].mode = 0;
 15126  0026FA  0E00               	movlw	0
 15127  0026FC                     L31:
 15128  0026FC  6E22               	movwf	_menu+33,c
 15129                           
 15130                           ;gui.c: 687: }
 15131                           ;gui.c: 689: if(menu[4].cur_mode != menu[4].mode)
 15132  0026FE  5022               	movf	_menu+33,w,c
 15133  002700  1823               	xorwf	_menu+34,w,c
 15134  002702  B4D8               	btfsc	status,2,c
 15135  002704  0012               	return	
 15136                           
 15137                           ;gui.c: 690: {
 15138                           ;gui.c: 691: display_frame_de(2,0, menu[4].mode);
 15139  002706  0E00               	movlw	0
 15140  002708  0101               	movlb	1	; () banked
 15141  00270A  6F31               	movwf	display_frame_de@x& (0+255),b
 15142  00270C  C022  F132         	movff	_menu+33,display_frame_de@mode
 15143  002710  0E02               	movlw	2
 15144  002712  EC09  F000         	call	_display_frame_de
 15145                           
 15146                           ;gui.c: 693: if( menu[4].parameter == 0)
 15147  002716  5026               	movf	_menu+37,w,c
 15148  002718  A4D8               	btfss	status,2,c
 15149  00271A  D00B               	goto	l13677
 15150                           
 15151                           ;gui.c: 694: {
 15152                           ;gui.c: 696: display_num(0,(0 + 14), menu[4].mode | 1);
 15153  00271C  0E0E               	movlw	14
 15154  00271E  0101               	movlb	1	; () banked
 15155  002720  6F31               	movwf	display_num@x& (0+255),b
 15156  002722  5022               	movf	_menu+33,w,c
 15157  002724  0901               	iorlw	1
 15158  002726  0101               	movlb	1	; () banked
 15159  002728  6F32               	movwf	display_num@mode& (0+255),b
 15160  00272A  0E00               	movlw	0
 15161  00272C  ECF0  F006         	call	_display_num
 15162                           
 15163                           ;gui.c: 697: }
 15164  002730  D01A               	goto	l13685
 15165  002732                     l13677:
 15166                           
 15167                           ;gui.c: 698: else if( menu[4].parameter == 1)
 15168  002732  0426               	decf	_menu+37,w,c
 15169  002734  A4D8               	btfss	status,2,c
 15170  002736  D00B               	goto	l13681
 15171                           
 15172                           ;gui.c: 699: {
 15173                           ;gui.c: 701: display_num(0,(0 + 14), menu[4].mode | 2);
 15174  002738  0E0E               	movlw	14
 15175  00273A  0101               	movlb	1	; () banked
 15176  00273C  6F31               	movwf	display_num@x& (0+255),b
 15177  00273E  5022               	movf	_menu+33,w,c
 15178  002740  0902               	iorlw	2
 15179  002742  0101               	movlb	1	; () banked
 15180  002744  6F32               	movwf	display_num@mode& (0+255),b
 15181  002746  0E00               	movlw	0
 15182  002748  ECF0  F006         	call	_display_num
 15183                           
 15184                           ;gui.c: 702: }
 15185  00274C  D00C               	goto	l13685
 15186  00274E                     l13681:
 15187                           
 15188                           ;gui.c: 703: else if( menu[4].parameter == 2)
 15189  00274E  0E02               	movlw	2
 15190  002750  1826               	xorwf	_menu+37,w,c
 15191  002752  A4D8               	btfss	status,2,c
 15192  002754  D008               	goto	l13685
 15193                           
 15194                           ;gui.c: 704: {
 15195                           ;gui.c: 706: display_num(0,(0 + 14), menu[4].mode | 0);
 15196  002756  0E0E               	movlw	14
 15197  002758  0101               	movlb	1	; () banked
 15198  00275A  6F31               	movwf	display_num@x& (0+255),b
 15199  00275C  C022  F132         	movff	_menu+33,display_num@mode
 15200  002760  0E00               	movlw	0
 15201  002762  ECF0  F006         	call	_display_num
 15202  002766                     l13685:
 15203                           
 15204                           ;gui.c: 707: }
 15205                           ;gui.c: 709: menu[4].cur_mode = menu[4].mode;
 15206  002766  C022  F023         	movff	_menu+33,_menu+34
 15207                           
 15208                           ;gui.c: 710: }
 15209                           ;gui.c: 713: }
 15210                           ;gui.c: 715: break;
 15211  00276A  0012               	return	
 15212  00276C                     l13687:
 15213                           
 15214                           ;gui.c: 719: if(menu[4].mode == 0x80)
 15215  00276C  0E80               	movlw	128
 15216  00276E  1822               	xorwf	_menu+33,w,c
 15217  002770  A4D8               	btfss	status,2,c
 15218  002772  D005               	goto	l13691
 15219                           
 15220                           ;gui.c: 720: {
 15221                           ;gui.c: 721: menu[4].mode = 3;
 15222  002774  0E03               	movlw	3
 15223  002776  6E22               	movwf	_menu+33,c
 15224                           
 15225                           ;gui.c: 722: flip = 1;
 15226  002778  0E01               	movlw	1
 15227  00277A  6E4E               	movwf	_flip,c
 15228                           
 15229                           ;gui.c: 723: }
 15230  00277C  D006               	goto	l13695
 15231  00277E                     l13691:
 15232                           
 15233                           ;gui.c: 724: else if(menu[4].mode == 3)
 15234  00277E  0E03               	movlw	3
 15235  002780  1822               	xorwf	_menu+33,w,c
 15236  002782  A4D8               	btfss	status,2,c
 15237  002784  D002               	goto	l13695
 15238                           
 15239                           ;gui.c: 725: {
 15240                           ;gui.c: 726: menu[4].mode = 0;
 15241  002786  0E00               	movlw	0
 15242  002788  6E22               	movwf	_menu+33,c
 15243  00278A                     l13695:
 15244                           
 15245                           ;gui.c: 727: }
 15246                           ;gui.c: 729: if(menu[4].cur_mode != menu[4].mode)
 15247  00278A  5022               	movf	_menu+33,w,c
 15248  00278C  1823               	xorwf	_menu+34,w,c
 15249  00278E  B4D8               	btfsc	status,2,c
 15250  002790  0012               	return	
 15251                           
 15252                           ;gui.c: 731: {
 15253                           ;gui.c: 732: if(menu[4].mode == 0)
 15254  002792  5022               	movf	_menu+33,w,c
 15255  002794  A4D8               	btfss	status,2,c
 15256  002796  D062               	goto	l13737
 15257                           
 15258                           ;gui.c: 733: {
 15259                           ;gui.c: 734: display_frame_de(2,0,0);
 15260  002798  0E00               	movlw	0
 15261  00279A  0101               	movlb	1	; () banked
 15262  00279C  6F31               	movwf	display_frame_de@x& (0+255),b
 15263  00279E  0E00               	movlw	0
 15264  0027A0  0101               	movlb	1	; () banked
 15265  0027A2  6F32               	movwf	display_frame_de@mode& (0+255),b
 15266  0027A4  0E02               	movlw	2
 15267  0027A6  EC09  F000         	call	_display_frame_de
 15268                           
 15269                           ;gui.c: 735: if(menu[4].parameter == 0)
 15270  0027AA  5026               	movf	_menu+37,w,c
 15271  0027AC  A4D8               	btfss	status,2,c
 15272  0027AE  D01B               	goto	l13713
 15273                           
 15274                           ;gui.c: 736: {
 15275                           ;gui.c: 738: display_num(0,(0 + 14), menu[4].mode | 1);
 15276  0027B0  0E0E               	movlw	14
 15277  0027B2  0101               	movlb	1	; () banked
 15278  0027B4  6F31               	movwf	display_num@x& (0+255),b
 15279  0027B6  5022               	movf	_menu+33,w,c
 15280  0027B8  0901               	iorlw	1
 15281  0027BA  0101               	movlb	1	; () banked
 15282  0027BC  6F32               	movwf	display_num@mode& (0+255),b
 15283  0027BE  0E00               	movlw	0
 15284  0027C0  ECF0  F006         	call	_display_num
 15285                           
 15286                           ;gui.c: 739: menu[4].value = 1;
 15287  0027C4  0E01               	movlw	1
 15288  0027C6  6E25               	movwf	_menu+36,c
 15289                           
 15290                           ;gui.c: 747: hg_op.cnt_pos_nmm_target = (236);
 15291  0027C8  0E00               	movlw	0
 15292  0027CA  0100               	movlb	0	; () banked
 15293  0027CC  6FB4               	movwf	(_hg_op+52)& (0+255),b
 15294  0027CE  0EEC               	movlw	236
 15295  0027D0  6FB3               	movwf	(_hg_op+51)& (0+255),b
 15296                           
 15297                           ; BSR set to: 0
 15298                           ;gui.c: 748: hg_op.cnt_pos_nmm =0;
 15299  0027D2  0E00               	movlw	0
 15300  0027D4  0100               	movlb	0	; () banked
 15301  0027D6  6FAE               	movwf	(_hg_op+46)& (0+255),b
 15302  0027D8  0E00               	movlw	0
 15303  0027DA  6FAD               	movwf	(_hg_op+45)& (0+255),b
 15304                           
 15305                           ; BSR set to: 0
 15306                           ;gui.c: 750: hg_op.inject_len = 1;
 15307  0027DC  0E00               	movlw	0
 15308  0027DE  0100               	movlb	0	; () banked
 15309  0027E0  6F99               	movwf	(_hg_op+25)& (0+255),b
 15310  0027E2  0E01               	movlw	1
 15311  0027E4  D03A               	goto	L33
 15312  0027E6                     l13713:
 15313                           
 15314                           ;gui.c: 753: else if(menu[4].parameter == 1)
 15315  0027E6  0426               	decf	_menu+37,w,c
 15316  0027E8  A4D8               	btfss	status,2,c
 15317  0027EA  D01B               	goto	l13725
 15318                           
 15319                           ;gui.c: 754: {
 15320                           ;gui.c: 756: display_num(0,(0 + 14), menu[4].mode | 2);
 15321  0027EC  0E0E               	movlw	14
 15322  0027EE  0101               	movlb	1	; () banked
 15323  0027F0  6F31               	movwf	display_num@x& (0+255),b
 15324  0027F2  5022               	movf	_menu+33,w,c
 15325  0027F4  0902               	iorlw	2
 15326  0027F6  0101               	movlb	1	; () banked
 15327  0027F8  6F32               	movwf	display_num@mode& (0+255),b
 15328  0027FA  0E00               	movlw	0
 15329  0027FC  ECF0  F006         	call	_display_num
 15330                           
 15331                           ;gui.c: 757: menu[4].value = 2;
 15332  002800  0E02               	movlw	2
 15333  002802  6E25               	movwf	_menu+36,c
 15334                           
 15335                           ;gui.c: 760: hg_op.cnt_pos_nmm_target = (325);
 15336  002804  0E01               	movlw	1
 15337  002806  0100               	movlb	0	; () banked
 15338  002808  6FB4               	movwf	(_hg_op+52)& (0+255),b
 15339  00280A  0E45               	movlw	69
 15340  00280C  6FB3               	movwf	(_hg_op+51)& (0+255),b
 15341                           
 15342                           ; BSR set to: 0
 15343                           ;gui.c: 761: hg_op.cnt_pos_nmm =0;
 15344  00280E  0E00               	movlw	0
 15345  002810  0100               	movlb	0	; () banked
 15346  002812  6FAE               	movwf	(_hg_op+46)& (0+255),b
 15347  002814  0E00               	movlw	0
 15348  002816  6FAD               	movwf	(_hg_op+45)& (0+255),b
 15349                           
 15350                           ; BSR set to: 0
 15351                           ;gui.c: 765: hg_op.inject_len = 2;
 15352  002818  0E00               	movlw	0
 15353  00281A  0100               	movlb	0	; () banked
 15354  00281C  6F99               	movwf	(_hg_op+25)& (0+255),b
 15355  00281E  0E02               	movlw	2
 15356  002820  D01C               	goto	L33
 15357  002822                     l13725:
 15358                           
 15359                           ;gui.c: 778: else if(menu[4].parameter == 2)
 15360  002822  0E02               	movlw	2
 15361  002824  1826               	xorwf	_menu+37,w,c
 15362  002826  A4D8               	btfss	status,2,c
 15363  002828  D019               	goto	l13737
 15364                           
 15365                           ;gui.c: 779: {
 15366                           ;gui.c: 780: display_num(0,(0 + 14), menu[4].mode | 0);
 15367  00282A  0E0E               	movlw	14
 15368  00282C  0101               	movlb	1	; () banked
 15369  00282E  6F31               	movwf	display_num@x& (0+255),b
 15370  002830  C022  F132         	movff	_menu+33,display_num@mode
 15371  002834  0E00               	movlw	0
 15372  002836  ECF0  F006         	call	_display_num
 15373                           
 15374                           ;gui.c: 781: menu[4].value = 0;
 15375  00283A  0E00               	movlw	0
 15376  00283C  6E25               	movwf	_menu+36,c
 15377                           
 15378                           ;gui.c: 784: hg_op.cnt_pos_nmm_target = (148);
 15379  00283E  0E00               	movlw	0
 15380  002840  0100               	movlb	0	; () banked
 15381  002842  6FB4               	movwf	(_hg_op+52)& (0+255),b
 15382  002844  0E94               	movlw	148
 15383  002846  6FB3               	movwf	(_hg_op+51)& (0+255),b
 15384                           
 15385                           ; BSR set to: 0
 15386                           ;gui.c: 785: hg_op.cnt_pos_nmm =0;
 15387  002848  0E00               	movlw	0
 15388  00284A  0100               	movlb	0	; () banked
 15389  00284C  6FAE               	movwf	(_hg_op+46)& (0+255),b
 15390  00284E  0E00               	movlw	0
 15391  002850  6FAD               	movwf	(_hg_op+45)& (0+255),b
 15392                           
 15393                           ; BSR set to: 0
 15394                           ;gui.c: 787: hg_op.inject_len = 0;
 15395  002852  0E00               	movlw	0
 15396  002854  0100               	movlb	0	; () banked
 15397  002856  6F99               	movwf	(_hg_op+25)& (0+255),b
 15398  002858  0E00               	movlw	0
 15399  00285A                     L33:
 15400  00285A  6F98               	movwf	(_hg_op+24)& (0+255),b
 15401  00285C                     l13737:
 15402                           
 15403                           ;gui.c: 788: }
 15404                           ;gui.c: 790: }
 15405                           ;gui.c: 791: menu[4].cur_mode = menu[4].mode;
 15406  00285C  C022  F023         	movff	_menu+33,_menu+34
 15407                           
 15408                           ;gui.c: 795: }
 15409                           
 15410                           ;gui.c: 792: }
 15411                           ;gui.c: 794: break;
 15412  002860  0012               	return	
 15413  002862                     l13741:
 15414  002862  0101               	movlb	1	; () banked
 15415  002864  5138               	movf	menu4_MsgHandlle@key& (0+255),w,b
 15416                           
 15417                           ; Switch size 1, requested type "space"
 15418                           ; Number of cases is 3, Range of values is 241 to 243
 15419                           ; switch strategies available:
 15420                           ; Name         Instructions Cycles
 15421                           ; simple_byte           10     6 (average)
 15422                           ;	Chosen strategy is simple_byte
 15423  002866  0AF1               	xorlw	241	; case 241
 15424  002868  B4D8               	btfsc	status,2,c
 15425  00286A  D6EB               	goto	l13623
 15426  00286C  0A03               	xorlw	3	; case 242
 15427  00286E  B4D8               	btfsc	status,2,c
 15428  002870  D733               	goto	l13655
 15429  002872  0A01               	xorlw	1	; case 243
 15430  002874  A4D8               	btfss	status,2,c
 15431  002876  0012               	return	
 15432  002878  D779               	goto	l13687
 15433  00287A                     __end_of_menu4_MsgHandlle:
 15434                           	opt stack 0
 15435                           tblptru	equ	0xFF8
 15436                           tblptrh	equ	0xFF7
 15437                           tblptrl	equ	0xFF6
 15438                           tablat	equ	0xFF5
 15439                           prodh	equ	0xFF4
 15440                           prodl	equ	0xFF3
 15441                           intcon	equ	0xFF2
 15442                           intcon3	equ	0xFF0
 15443                           postinc0	equ	0xFEE
 15444                           wreg	equ	0xFE8
 15445                           postdec1	equ	0xFE5
 15446                           fsr1h	equ	0xFE2
 15447                           fsr1l	equ	0xFE1
 15448                           postinc2	equ	0xFDE
 15449                           fsr2h	equ	0xFDA
 15450                           fsr2l	equ	0xFD9
 15451                           status	equ	0xFD8
 15452                           
 15453 ;; *************** function _menu3_MsgHandlle *****************
 15454 ;; Defined at:
 15455 ;;		line 447 in file "../gui.c"
 15456 ;; Parameters:    Size  Location     Type
 15457 ;;  key             1    wreg     unsigned char 
 15458 ;; Auto vars:     Size  Location     Type
 15459 ;;  key             1   16[BANK1 ] unsigned char 
 15460 ;; Return value:  Size  Location     Type
 15461 ;;                  1    wreg      void 
 15462 ;; Registers used:
 15463 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15464 ;; Tracked objects:
 15465 ;;		On entry : 0/0
 15466 ;;		On exit  : 0/0
 15467 ;;		Unchanged: 0/0
 15468 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15469 ;;      Params:         0       0       0       0       0       0       0
 15470 ;;      Locals:         0       0       1       0       0       0       0
 15471 ;;      Temps:          0       0       0       0       0       0       0
 15472 ;;      Totals:         0       0       1       0       0       0       0
 15473 ;;Total ram usage:        1 bytes
 15474 ;; Hardware stack levels used:    1
 15475 ;; Hardware stack levels required when called:    7
 15476 ;; This function calls:
 15477 ;;		_display_frame_de
 15478 ;;		_display_num
 15479 ;; This function is called by:
 15480 ;;		_init_menu
 15481 ;;		_HG_interface
 15482 ;; This function uses a non-reentrant model
 15483 ;;
 15484                           
 15485                           	psect	text34
 15486  002AA6                     __ptext34:
 15487                           	opt stack 0
 15488  002AA6                     _menu3_MsgHandlle:
 15489                           	opt stack 22
 15490                           
 15491                           ;incstack = 0
 15492                           ;menu3_MsgHandlle@key stored from wreg
 15493  002AA6  0101               	movlb	1	; () banked
 15494  002AA8  6F38               	movwf	menu3_MsgHandlle@key& (0+255),b
 15495                           
 15496                           ;gui.c: 450: switch(key)
 15497  002AAA  D106               	goto	l13619
 15498  002AAC                     l13501:
 15499                           
 15500                           ;gui.c: 455: if(menu[3].mode == 3)
 15501  002AAC  0E03               	movlw	3
 15502  002AAE  181A               	xorwf	_menu+25,w,c
 15503  002AB0  A4D8               	btfss	status,2,c
 15504  002AB2  D008               	goto	l13509
 15505                           
 15506                           ;gui.c: 456: {
 15507                           ;gui.c: 457: menu[3].parameter ++;
 15508  002AB4  2A1E               	incf	_menu+29,f,c
 15509                           
 15510                           ;gui.c: 458: if(menu[3].parameter == 3) menu[3].parameter = 0;
 15511  002AB6  0E03               	movlw	3
 15512  002AB8  181E               	xorwf	_menu+29,w,c
 15513  002ABA  A4D8               	btfss	status,2,c
 15514  002ABC  0012               	return	
 15515  002ABE  0E00               	movlw	0
 15516  002AC0  6E1E               	movwf	_menu+29,c
 15517                           
 15518                           ;gui.c: 459: }
 15519  002AC2  0012               	return	
 15520  002AC4                     l13509:
 15521                           
 15522                           ;gui.c: 460: else
 15523                           ;gui.c: 461: {
 15524                           ;gui.c: 462: if(focus == 4)
 15525  002AC4  0E04               	movlw	4
 15526  002AC6  184F               	xorwf	_focus,w,c
 15527  002AC8  A4D8               	btfss	status,2,c
 15528  002ACA  D002               	goto	l13513
 15529                           
 15530                           ;gui.c: 463: {
 15531                           ;gui.c: 464: menu[3].mode = 0x80;
 15532  002ACC  0E80               	movlw	128
 15533  002ACE  D001               	goto	L34
 15534  002AD0                     l13513:
 15535                           
 15536                           ;gui.c: 466: else
 15537                           ;gui.c: 467: {
 15538                           ;gui.c: 468: menu[3].mode = 0;
 15539  002AD0  0E00               	movlw	0
 15540  002AD2                     L34:
 15541  002AD2  6E1A               	movwf	_menu+25,c
 15542                           
 15543                           ;gui.c: 469: }
 15544                           ;gui.c: 472: if(menu[3].cur_mode != menu[3].mode)
 15545  002AD4  501A               	movf	_menu+25,w,c
 15546  002AD6  181B               	xorwf	_menu+26,w,c
 15547  002AD8  B4D8               	btfsc	status,2,c
 15548  002ADA  0012               	return	
 15549                           
 15550                           ;gui.c: 473: {
 15551                           ;gui.c: 474: display_frame_de(1,49, menu[3].mode);
 15552  002ADC  0E31               	movlw	49
 15553  002ADE  0101               	movlb	1	; () banked
 15554  002AE0  6F31               	movwf	display_frame_de@x& (0+255),b
 15555  002AE2  C01A  F132         	movff	_menu+25,display_frame_de@mode
 15556  002AE6  0E01               	movlw	1
 15557  002AE8  EC09  F000         	call	_display_frame_de
 15558                           
 15559                           ;gui.c: 477: if( menu[3].parameter == 0)
 15560  002AEC  501E               	movf	_menu+29,w,c
 15561  002AEE  A4D8               	btfss	status,2,c
 15562  002AF0  D00B               	goto	l13523
 15563                           
 15564                           ;gui.c: 478: {
 15565                           ;gui.c: 480: display_num(0,(49 + 14), menu[3].mode | 4);
 15566  002AF2  0E3F               	movlw	63
 15567  002AF4  0101               	movlb	1	; () banked
 15568  002AF6  6F31               	movwf	display_num@x& (0+255),b
 15569  002AF8  501A               	movf	_menu+25,w,c
 15570  002AFA  0904               	iorlw	4
 15571  002AFC  0101               	movlb	1	; () banked
 15572  002AFE  6F32               	movwf	display_num@mode& (0+255),b
 15573  002B00  0E00               	movlw	0
 15574  002B02  ECF0  F006         	call	_display_num
 15575                           
 15576                           ;gui.c: 481: }
 15577  002B06  D01C               	goto	l13531
 15578  002B08                     l13523:
 15579                           
 15580                           ;gui.c: 482: else if( menu[3].parameter == 1)
 15581  002B08  041E               	decf	_menu+29,w,c
 15582  002B0A  A4D8               	btfss	status,2,c
 15583  002B0C  D00B               	goto	l13527
 15584                           
 15585                           ;gui.c: 483: {
 15586                           ;gui.c: 485: display_num(0,(49 + 14), menu[3].mode | 6);
 15587  002B0E  0E3F               	movlw	63
 15588  002B10  0101               	movlb	1	; () banked
 15589  002B12  6F31               	movwf	display_num@x& (0+255),b
 15590  002B14  501A               	movf	_menu+25,w,c
 15591  002B16  0906               	iorlw	6
 15592  002B18  0101               	movlb	1	; () banked
 15593  002B1A  6F32               	movwf	display_num@mode& (0+255),b
 15594  002B1C  0E00               	movlw	0
 15595  002B1E  ECF0  F006         	call	_display_num
 15596                           
 15597                           ;gui.c: 486: }
 15598  002B22  D00E               	goto	l13531
 15599  002B24                     l13527:
 15600                           
 15601                           ;gui.c: 487: else if( menu[3].parameter == 2)
 15602  002B24  0E02               	movlw	2
 15603  002B26  181E               	xorwf	_menu+29,w,c
 15604  002B28  A4D8               	btfss	status,2,c
 15605  002B2A  D00A               	goto	l13531
 15606                           
 15607                           ;gui.c: 488: {
 15608                           ;gui.c: 489: display_num(0,(49 + 14), menu[3].mode | 13);
 15609  002B2C  0E3F               	movlw	63
 15610  002B2E  0101               	movlb	1	; () banked
 15611  002B30  6F31               	movwf	display_num@x& (0+255),b
 15612  002B32  501A               	movf	_menu+25,w,c
 15613  002B34  090D               	iorlw	13
 15614  002B36  0101               	movlb	1	; () banked
 15615  002B38  6F32               	movwf	display_num@mode& (0+255),b
 15616  002B3A  0E00               	movlw	0
 15617  002B3C  ECF0  F006         	call	_display_num
 15618  002B40                     l13531:
 15619                           
 15620                           ;gui.c: 490: }
 15621                           ;gui.c: 492: menu[3].cur_mode = menu[3].mode;
 15622  002B40  C01A  F01B         	movff	_menu+25,_menu+26
 15623                           
 15624                           ;gui.c: 493: }
 15625                           ;gui.c: 494: }
 15626                           ;gui.c: 497: break;
 15627  002B44  0012               	return	
 15628  002B46                     l13533:
 15629                           
 15630                           ;gui.c: 502: if(menu[3].mode == 3)
 15631  002B46  0E03               	movlw	3
 15632  002B48  181A               	xorwf	_menu+25,w,c
 15633  002B4A  A4D8               	btfss	status,2,c
 15634  002B4C  D007               	goto	l13541
 15635                           
 15636                           ;gui.c: 503: {
 15637                           ;gui.c: 504: menu[3].parameter --;
 15638  002B4E  061E               	decf	_menu+29,f,c
 15639                           
 15640                           ;gui.c: 505: if(menu[3].parameter == -1) menu[3].parameter = 2;
 15641  002B50  281E               	incf	_menu+29,w,c
 15642  002B52  A4D8               	btfss	status,2,c
 15643  002B54  0012               	return	
 15644  002B56  0E02               	movlw	2
 15645  002B58  6E1E               	movwf	_menu+29,c
 15646                           
 15647                           ;gui.c: 506: }
 15648  002B5A  0012               	return	
 15649  002B5C                     l13541:
 15650                           
 15651                           ;gui.c: 507: else
 15652                           ;gui.c: 508: {
 15653                           ;gui.c: 509: if(focus == 4)
 15654  002B5C  0E04               	movlw	4
 15655  002B5E  184F               	xorwf	_focus,w,c
 15656  002B60  A4D8               	btfss	status,2,c
 15657  002B62  D002               	goto	l13545
 15658                           
 15659                           ;gui.c: 510: {
 15660                           ;gui.c: 511: menu[3].mode = 0x80;
 15661  002B64  0E80               	movlw	128
 15662  002B66  D001               	goto	L35
 15663  002B68                     l13545:
 15664                           
 15665                           ;gui.c: 513: else
 15666                           ;gui.c: 514: {
 15667                           ;gui.c: 515: menu[3].mode = 0;
 15668  002B68  0E00               	movlw	0
 15669  002B6A                     L35:
 15670  002B6A  6E1A               	movwf	_menu+25,c
 15671                           
 15672                           ;gui.c: 516: }
 15673                           ;gui.c: 519: if(menu[3].cur_mode != menu[3].mode)
 15674  002B6C  501A               	movf	_menu+25,w,c
 15675  002B6E  181B               	xorwf	_menu+26,w,c
 15676  002B70  B4D8               	btfsc	status,2,c
 15677  002B72  0012               	return	
 15678                           
 15679                           ;gui.c: 520: {
 15680                           ;gui.c: 521: display_frame_de(1,49, menu[3].mode);
 15681  002B74  0E31               	movlw	49
 15682  002B76  0101               	movlb	1	; () banked
 15683  002B78  6F31               	movwf	display_frame_de@x& (0+255),b
 15684  002B7A  C01A  F132         	movff	_menu+25,display_frame_de@mode
 15685  002B7E  0E01               	movlw	1
 15686  002B80  EC09  F000         	call	_display_frame_de
 15687                           
 15688                           ;gui.c: 524: if( menu[3].parameter == 0)
 15689  002B84  501E               	movf	_menu+29,w,c
 15690  002B86  A4D8               	btfss	status,2,c
 15691  002B88  D00B               	goto	l13555
 15692                           
 15693                           ;gui.c: 525: {
 15694                           ;gui.c: 527: display_num(0,(49 + 14), menu[3].mode | 4);
 15695  002B8A  0E3F               	movlw	63
 15696  002B8C  0101               	movlb	1	; () banked
 15697  002B8E  6F31               	movwf	display_num@x& (0+255),b
 15698  002B90  501A               	movf	_menu+25,w,c
 15699  002B92  0904               	iorlw	4
 15700  002B94  0101               	movlb	1	; () banked
 15701  002B96  6F32               	movwf	display_num@mode& (0+255),b
 15702  002B98  0E00               	movlw	0
 15703  002B9A  ECF0  F006         	call	_display_num
 15704                           
 15705                           ;gui.c: 528: }
 15706  002B9E  D01C               	goto	l13563
 15707  002BA0                     l13555:
 15708                           
 15709                           ;gui.c: 529: else if( menu[3].parameter == 1)
 15710  002BA0  041E               	decf	_menu+29,w,c
 15711  002BA2  A4D8               	btfss	status,2,c
 15712  002BA4  D00B               	goto	l13559
 15713                           
 15714                           ;gui.c: 530: {
 15715                           ;gui.c: 532: display_num(0,(49 + 14), menu[3].mode | 6);
 15716  002BA6  0E3F               	movlw	63
 15717  002BA8  0101               	movlb	1	; () banked
 15718  002BAA  6F31               	movwf	display_num@x& (0+255),b
 15719  002BAC  501A               	movf	_menu+25,w,c
 15720  002BAE  0906               	iorlw	6
 15721  002BB0  0101               	movlb	1	; () banked
 15722  002BB2  6F32               	movwf	display_num@mode& (0+255),b
 15723  002BB4  0E00               	movlw	0
 15724  002BB6  ECF0  F006         	call	_display_num
 15725                           
 15726                           ;gui.c: 533: }
 15727  002BBA  D00E               	goto	l13563
 15728  002BBC                     l13559:
 15729                           
 15730                           ;gui.c: 534: else if( menu[3].parameter == 2)
 15731  002BBC  0E02               	movlw	2
 15732  002BBE  181E               	xorwf	_menu+29,w,c
 15733  002BC0  A4D8               	btfss	status,2,c
 15734  002BC2  D00A               	goto	l13563
 15735                           
 15736                           ;gui.c: 535: {
 15737                           ;gui.c: 536: display_num(0,(49 + 14), menu[3].mode | 13);
 15738  002BC4  0E3F               	movlw	63
 15739  002BC6  0101               	movlb	1	; () banked
 15740  002BC8  6F31               	movwf	display_num@x& (0+255),b
 15741  002BCA  501A               	movf	_menu+25,w,c
 15742  002BCC  090D               	iorlw	13
 15743  002BCE  0101               	movlb	1	; () banked
 15744  002BD0  6F32               	movwf	display_num@mode& (0+255),b
 15745  002BD2  0E00               	movlw	0
 15746  002BD4  ECF0  F006         	call	_display_num
 15747  002BD8                     l13563:
 15748                           
 15749                           ;gui.c: 537: }
 15750                           ;gui.c: 539: menu[3].cur_mode = menu[3].mode;
 15751  002BD8  C01A  F01B         	movff	_menu+25,_menu+26
 15752                           
 15753                           ;gui.c: 540: }
 15754                           ;gui.c: 541: }
 15755                           ;gui.c: 543: break;
 15756  002BDC  0012               	return	
 15757  002BDE                     l13565:
 15758                           
 15759                           ;gui.c: 547: if(menu[3].mode == 0x80)
 15760  002BDE  0E80               	movlw	128
 15761  002BE0  181A               	xorwf	_menu+25,w,c
 15762  002BE2  A4D8               	btfss	status,2,c
 15763  002BE4  D005               	goto	l13569
 15764                           
 15765                           ;gui.c: 548: {
 15766                           ;gui.c: 549: menu[3].mode = 3;
 15767  002BE6  0E03               	movlw	3
 15768  002BE8  6E1A               	movwf	_menu+25,c
 15769                           
 15770                           ;gui.c: 550: flip = 1;
 15771  002BEA  0E01               	movlw	1
 15772  002BEC  6E4E               	movwf	_flip,c
 15773                           
 15774                           ;gui.c: 551: }
 15775  002BEE  D006               	goto	l13573
 15776  002BF0                     l13569:
 15777                           
 15778                           ;gui.c: 552: else if(menu[3].mode == 3)
 15779  002BF0  0E03               	movlw	3
 15780  002BF2  181A               	xorwf	_menu+25,w,c
 15781  002BF4  A4D8               	btfss	status,2,c
 15782  002BF6  D002               	goto	l13573
 15783                           
 15784                           ;gui.c: 553: {
 15785                           ;gui.c: 554: menu[3].mode = 0;
 15786  002BF8  0E00               	movlw	0
 15787  002BFA  6E1A               	movwf	_menu+25,c
 15788  002BFC                     l13573:
 15789                           
 15790                           ;gui.c: 555: }
 15791                           ;gui.c: 557: if(menu[3].cur_mode != menu[3].mode)
 15792  002BFC  501A               	movf	_menu+25,w,c
 15793  002BFE  181B               	xorwf	_menu+26,w,c
 15794  002C00  B4D8               	btfsc	status,2,c
 15795  002C02  0012               	return	
 15796                           
 15797                           ;gui.c: 558: {
 15798                           ;gui.c: 559: if(menu[3].mode == 0)
 15799  002C04  501A               	movf	_menu+25,w,c
 15800  002C06  A4D8               	btfss	status,2,c
 15801  002C08  D054               	goto	l13615
 15802                           
 15803                           ;gui.c: 560: {
 15804                           ;gui.c: 561: display_frame_de(1,49,0);
 15805  002C0A  0E31               	movlw	49
 15806  002C0C  0101               	movlb	1	; () banked
 15807  002C0E  6F31               	movwf	display_frame_de@x& (0+255),b
 15808  002C10  0E00               	movlw	0
 15809  002C12  0101               	movlb	1	; () banked
 15810  002C14  6F32               	movwf	display_frame_de@mode& (0+255),b
 15811  002C16  0E01               	movlw	1
 15812  002C18  EC09  F000         	call	_display_frame_de
 15813                           
 15814                           ;gui.c: 562: if(menu[3].parameter == 0)
 15815  002C1C  501E               	movf	_menu+29,w,c
 15816  002C1E  A4D8               	btfss	status,2,c
 15817  002C20  D018               	goto	l13591
 15818                           
 15819                           ;gui.c: 563: {
 15820                           ;gui.c: 564: display_num(0,(49 + 14), menu[3].mode | 4);
 15821  002C22  0E3F               	movlw	63
 15822  002C24  0101               	movlb	1	; () banked
 15823  002C26  6F31               	movwf	display_num@x& (0+255),b
 15824  002C28  501A               	movf	_menu+25,w,c
 15825  002C2A  0904               	iorlw	4
 15826  002C2C  0101               	movlb	1	; () banked
 15827  002C2E  6F32               	movwf	display_num@mode& (0+255),b
 15828  002C30  0E00               	movlw	0
 15829  002C32  ECF0  F006         	call	_display_num
 15830                           
 15831                           ;gui.c: 565: menu[3].value = 4;
 15832  002C36  0E04               	movlw	4
 15833  002C38  6E1D               	movwf	_menu+28,c
 15834                           
 15835                           ;gui.c: 567: hg_op.needle_len = 4;
 15836  002C3A  0E04               	movlw	4
 15837  002C3C  0100               	movlb	0	; () banked
 15838  002C3E  6F97               	movwf	(_hg_op+23)& (0+255),b
 15839                           
 15840                           ; BSR set to: 0
 15841                           ;gui.c: 568: hg_op.cnt_target_posrst = (789);
 15842  002C40  0E03               	movlw	3
 15843  002C42  0100               	movlb	0	; () banked
 15844  002C44  6FB8               	movwf	(_hg_op+56)& (0+255),b
 15845  002C46  0E15               	movlw	21
 15846  002C48  D032               	goto	L37
 15847  002C4A                     l13589:
 15848                           
 15849                           ; BSR set to: 0
 15850                           ;gui.c: 569: hg_op.need_reset =1;
 15851  002C4A  0E01               	movlw	1
 15852  002C4C  0100               	movlb	0	; () banked
 15853  002C4E  6F85               	movwf	(_hg_op+5)& (0+255),b
 15854                           
 15855                           ;gui.c: 570: }
 15856  002C50  D030               	goto	l13615
 15857  002C52                     l13591:
 15858                           
 15859                           ;gui.c: 571: else if(menu[3].parameter == 1)
 15860  002C52  041E               	decf	_menu+29,w,c
 15861  002C54  A4D8               	btfss	status,2,c
 15862  002C56  D014               	goto	l13603
 15863                           
 15864                           ;gui.c: 572: {
 15865                           ;gui.c: 573: display_num(0,(49 + 14), menu[3].mode | 6);
 15866  002C58  0E3F               	movlw	63
 15867  002C5A  0101               	movlb	1	; () banked
 15868  002C5C  6F31               	movwf	display_num@x& (0+255),b
 15869  002C5E  501A               	movf	_menu+25,w,c
 15870  002C60  0906               	iorlw	6
 15871  002C62  0101               	movlb	1	; () banked
 15872  002C64  6F32               	movwf	display_num@mode& (0+255),b
 15873  002C66  0E00               	movlw	0
 15874  002C68  ECF0  F006         	call	_display_num
 15875                           
 15876                           ;gui.c: 574: menu[3].value = 6;
 15877  002C6C  0E06               	movlw	6
 15878  002C6E  6E1D               	movwf	_menu+28,c
 15879                           
 15880                           ;gui.c: 576: hg_op.needle_len = 6;
 15881  002C70  0E06               	movlw	6
 15882  002C72  0100               	movlb	0	; () banked
 15883  002C74  6F97               	movwf	(_hg_op+23)& (0+255),b
 15884                           
 15885                           ; BSR set to: 0
 15886                           ;gui.c: 578: hg_op.cnt_target_posrst = (614 );
 15887  002C76  0E02               	movlw	2
 15888  002C78  0100               	movlb	0	; () banked
 15889  002C7A  6FB8               	movwf	(_hg_op+56)& (0+255),b
 15890  002C7C  0E66               	movlw	102
 15891  002C7E  D017               	goto	L37
 15892  002C80                     l13603:
 15893                           
 15894                           ;gui.c: 584: else if(menu[3].parameter == 2)
 15895  002C80  0E02               	movlw	2
 15896  002C82  181E               	xorwf	_menu+29,w,c
 15897  002C84  A4D8               	btfss	status,2,c
 15898  002C86  D015               	goto	l13615
 15899                           
 15900                           ;gui.c: 585: {
 15901                           ;gui.c: 586: display_num(0,(49 + 14), menu[3].mode | 13);
 15902  002C88  0E3F               	movlw	63
 15903  002C8A  0101               	movlb	1	; () banked
 15904  002C8C  6F31               	movwf	display_num@x& (0+255),b
 15905  002C8E  501A               	movf	_menu+25,w,c
 15906  002C90  090D               	iorlw	13
 15907  002C92  0101               	movlb	1	; () banked
 15908  002C94  6F32               	movwf	display_num@mode& (0+255),b
 15909  002C96  0E00               	movlw	0
 15910  002C98  ECF0  F006         	call	_display_num
 15911                           
 15912                           ;gui.c: 587: menu[3].value = 13;
 15913  002C9C  0E0D               	movlw	13
 15914  002C9E  6E1D               	movwf	_menu+28,c
 15915                           
 15916                           ;gui.c: 589: hg_op.needle_len = 13;
 15917  002CA0  0E0D               	movlw	13
 15918  002CA2  0100               	movlb	0	; () banked
 15919  002CA4  6F97               	movwf	(_hg_op+23)& (0+255),b
 15920                           
 15921                           ; BSR set to: 0
 15922                           ;gui.c: 591: hg_op.cnt_target_posrst = (1);
 15923  002CA6  0E00               	movlw	0
 15924  002CA8  0100               	movlb	0	; () banked
 15925  002CAA  6FB8               	movwf	(_hg_op+56)& (0+255),b
 15926  002CAC  0E01               	movlw	1
 15927  002CAE                     L37:
 15928  002CAE  6FB7               	movwf	(_hg_op+55)& (0+255),b
 15929  002CB0  D7CC               	goto	l13589
 15930  002CB2                     l13615:
 15931                           
 15932                           ;gui.c: 599: }
 15933                           ;gui.c: 601: }
 15934                           ;gui.c: 602: menu[3].cur_mode = menu[3].mode;
 15935  002CB2  C01A  F01B         	movff	_menu+25,_menu+26
 15936                           
 15937                           ;gui.c: 610: }
 15938                           
 15939                           ;gui.c: 605: }
 15940                           ;gui.c: 609: break;
 15941  002CB6  0012               	return	
 15942  002CB8                     l13619:
 15943  002CB8  0101               	movlb	1	; () banked
 15944  002CBA  5138               	movf	menu3_MsgHandlle@key& (0+255),w,b
 15945                           
 15946                           ; Switch size 1, requested type "space"
 15947                           ; Number of cases is 3, Range of values is 241 to 243
 15948                           ; switch strategies available:
 15949                           ; Name         Instructions Cycles
 15950                           ; simple_byte           10     6 (average)
 15951                           ;	Chosen strategy is simple_byte
 15952  002CBC  0AF1               	xorlw	241	; case 241
 15953  002CBE  B4D8               	btfsc	status,2,c
 15954  002CC0  D6F5               	goto	l13501
 15955  002CC2  0A03               	xorlw	3	; case 242
 15956  002CC4  B4D8               	btfsc	status,2,c
 15957  002CC6  D73F               	goto	l13533
 15958  002CC8  0A01               	xorlw	1	; case 243
 15959  002CCA  A4D8               	btfss	status,2,c
 15960  002CCC  0012               	return	
 15961  002CCE  D787               	goto	l13565
 15962  002CD0                     __end_of_menu3_MsgHandlle:
 15963                           	opt stack 0
 15964                           tblptru	equ	0xFF8
 15965                           tblptrh	equ	0xFF7
 15966                           tblptrl	equ	0xFF6
 15967                           tablat	equ	0xFF5
 15968                           prodh	equ	0xFF4
 15969                           prodl	equ	0xFF3
 15970                           intcon	equ	0xFF2
 15971                           intcon3	equ	0xFF0
 15972                           postinc0	equ	0xFEE
 15973                           wreg	equ	0xFE8
 15974                           postdec1	equ	0xFE5
 15975                           fsr1h	equ	0xFE2
 15976                           fsr1l	equ	0xFE1
 15977                           postinc2	equ	0xFDE
 15978                           fsr2h	equ	0xFDA
 15979                           fsr2l	equ	0xFD9
 15980                           status	equ	0xFD8
 15981                           
 15982 ;; *************** function _display_frame_de *****************
 15983 ;; Defined at:
 15984 ;;		line 2580 in file "../Oled.c"
 15985 ;; Parameters:    Size  Location     Type
 15986 ;;  y               1    wreg     unsigned char 
 15987 ;;  x               1    9[BANK1 ] unsigned char 
 15988 ;;  mode            1   10[BANK1 ] unsigned char 
 15989 ;; Auto vars:     Size  Location     Type
 15990 ;;  y               1   12[BANK1 ] unsigned char 
 15991 ;;  temp            1   13[BANK1 ] unsigned char 
 15992 ;;  tori            1   11[BANK1 ] unsigned char 
 15993 ;; Return value:  Size  Location     Type
 15994 ;;                  1    wreg      unsigned char 
 15995 ;; Registers used:
 15996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15997 ;; Tracked objects:
 15998 ;;		On entry : 0/0
 15999 ;;		On exit  : 0/0
 16000 ;;		Unchanged: 0/0
 16001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16002 ;;      Params:         0       0       2       0       0       0       0
 16003 ;;      Locals:         0       0       3       0       0       0       0
 16004 ;;      Temps:          0       0       0       0       0       0       0
 16005 ;;      Totals:         0       0       5       0       0       0       0
 16006 ;;Total ram usage:        5 bytes
 16007 ;; Hardware stack levels used:    1
 16008 ;; Hardware stack levels required when called:    6
 16009 ;; This function calls:
 16010 ;;		_ee_WriteBytes
 16011 ;;		_setYX_LCD
 16012 ;; This function is called by:
 16013 ;;		_initial_ui_setting
 16014 ;;		_menu3_MsgHandlle
 16015 ;;		_menu4_MsgHandlle
 16016 ;;		_check_ui_status
 16017 ;; This function uses a non-reentrant model
 16018 ;;
 16019                           
 16020                           	psect	text35
 16021  000012                     __ptext35:
 16022                           	opt stack 0
 16023  000012                     _display_frame_de:
 16024                           	opt stack 21
 16025                           
 16026                           ;incstack = 0
 16027                           ;display_frame_de@y stored from wreg
 16028  000012  0101               	movlb	1	; () banked
 16029  000014  6F34               	movwf	display_frame_de@y& (0+255),b
 16030                           
 16031                           ;Oled.c: 2582: uint8_t temp =0;
 16032  000016  0E00               	movlw	0
 16033  000018  0101               	movlb	1	; () banked
 16034  00001A  6F35               	movwf	display_frame_de@temp& (0+255),b
 16035                           
 16036                           ;Oled.c: 2583: uint8_t tori =0;
 16037  00001C  0E00               	movlw	0
 16038  00001E  0101               	movlb	1	; () banked
 16039  000020  6F33               	movwf	display_frame_de@tori& (0+255),b
 16040                           
 16041                           ; BSR set to: 1
 16042                           ;Oled.c: 2585: if (y == 1)
 16043  000022  0101               	movlb	1	; () banked
 16044  000024  0534               	decf	display_frame_de@y& (0+255),w,b
 16045  000026  A4D8               	btfss	status,2,c
 16046  000028  D14A               	goto	l12021
 16047                           
 16048                           ; BSR set to: 1
 16049                           ;Oled.c: 2586: {
 16050                           ;Oled.c: 2587: if(mode == 0)
 16051  00002A  0101               	movlb	1	; () banked
 16052  00002C  5132               	movf	display_frame_de@mode& (0+255),w,b
 16053  00002E  0101               	movlb	1	; () banked
 16054  000030  A4D8               	btfss	status,2,c
 16055  000032  D080               	goto	l11931
 16056                           
 16057                           ; BSR set to: 1
 16058                           ;Oled.c: 2588: {
 16059                           ;Oled.c: 2589: setYX_LCD(2,x);
 16060  000034  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16061  000038  0E02               	movlw	2
 16062  00003A  ECB3  F024         	call	_setYX_LCD
 16063                           
 16064                           ;Oled.c: 2590: for(ms=0;ms<48;ms++)
 16065  00003E  0E00               	movlw	0
 16066  000040  6E69               	movwf	_ms,c
 16067  000042                     l11887:
 16068  000042  0E2F               	movlw	47
 16069  000044  6469               	cpfsgt	_ms,c
 16070  000046  D001               	goto	l11891
 16071  000048  D01D               	goto	l11899
 16072  00004A                     l11891:
 16073                           
 16074                           ;Oled.c: 2591: {
 16075                           ;Oled.c: 2592: temp = ptnd_frame[0][ms];
 16076  00004A  5069               	movf	_ms,w,c
 16077  00004C  0D01               	mullw	1
 16078  00004E  0E23               	movlw	low _ptnd_frame
 16079  000050  24F3               	addwf	prodl,w,c
 16080  000052  6EF6               	movwf	tblptrl,c
 16081  000054  0E74               	movlw	high _ptnd_frame
 16082  000056  20F4               	addwfc	prodh,w,c
 16083  000058  6EF7               	movwf	tblptrh,c
 16084  00005A                     	if	0	;There are less than 3 active tblptr bytes
 16085  00005A                     	endif
 16086  00005A  0008               	tblrd		*
 16087  00005C  CFF5 F135          	movff	tablat,display_frame_de@temp
 16088                           
 16089                           ;Oled.c: 2593: ee_WriteBytes(&temp, 0x40, 1);
 16090  000060  0E35               	movlw	low display_frame_de@temp
 16091  000062  0101               	movlb	1	; () banked
 16092  000064  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16093  000066  0E01               	movlw	high display_frame_de@temp
 16094  000068  0101               	movlb	1	; () banked
 16095  00006A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16096  00006C  0E40               	movlw	64
 16097  00006E  0101               	movlb	1	; () banked
 16098  000070  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16099  000072  0E00               	movlw	0
 16100  000074  0101               	movlb	1	; () banked
 16101  000076  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16102  000078  0E01               	movlw	1
 16103  00007A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16104  00007C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16105  000080  2A69               	incf	_ms,f,c
 16106  000082  D7DF               	goto	l11887
 16107  000084                     l11899:
 16108                           
 16109                           ;Oled.c: 2594: }
 16110                           ;Oled.c: 2596: setYX_LCD(3,x);
 16111  000084  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16112  000088  0E03               	movlw	3
 16113  00008A  ECB3  F024         	call	_setYX_LCD
 16114                           
 16115                           ;Oled.c: 2597: for(ms=0;ms<48;ms++)
 16116  00008E  0E00               	movlw	0
 16117  000090  6E69               	movwf	_ms,c
 16118  000092                     l11903:
 16119  000092  0E2F               	movlw	47
 16120  000094  6469               	cpfsgt	_ms,c
 16121  000096  D001               	goto	l11907
 16122  000098  D021               	goto	l11915
 16123  00009A                     l11907:
 16124                           
 16125                           ;Oled.c: 2598: {
 16126                           ;Oled.c: 2599: temp = ptnd_frame[1][ms];
 16127  00009A  5069               	movf	_ms,w,c
 16128  00009C  0D01               	mullw	1
 16129  00009E  0E30               	movlw	48
 16130  0000A0  26F3               	addwf	prodl,f,c
 16131  0000A2  0E00               	movlw	0
 16132  0000A4  22F4               	addwfc	prodh,f,c
 16133  0000A6  0E23               	movlw	low _ptnd_frame
 16134  0000A8  24F3               	addwf	prodl,w,c
 16135  0000AA  6EF6               	movwf	tblptrl,c
 16136  0000AC  0E74               	movlw	high _ptnd_frame
 16137  0000AE  20F4               	addwfc	prodh,w,c
 16138  0000B0  6EF7               	movwf	tblptrh,c
 16139  0000B2                     	if	0	;There are less than 3 active tblptr bytes
 16140  0000B2                     	endif
 16141  0000B2  0008               	tblrd		*
 16142  0000B4  CFF5 F135          	movff	tablat,display_frame_de@temp
 16143                           
 16144                           ;Oled.c: 2600: ee_WriteBytes(&temp, 0x40, 1);
 16145  0000B8  0E35               	movlw	low display_frame_de@temp
 16146  0000BA  0101               	movlb	1	; () banked
 16147  0000BC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16148  0000BE  0E01               	movlw	high display_frame_de@temp
 16149  0000C0  0101               	movlb	1	; () banked
 16150  0000C2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16151  0000C4  0E40               	movlw	64
 16152  0000C6  0101               	movlb	1	; () banked
 16153  0000C8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16154  0000CA  0E00               	movlw	0
 16155  0000CC  0101               	movlb	1	; () banked
 16156  0000CE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16157  0000D0  0E01               	movlw	1
 16158  0000D2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16159  0000D4  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16160  0000D8  2A69               	incf	_ms,f,c
 16161  0000DA  D7DB               	goto	l11903
 16162  0000DC                     l11915:
 16163                           
 16164                           ;Oled.c: 2601: }
 16165                           ;Oled.c: 2603: setYX_LCD(4,x);
 16166  0000DC  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16167  0000E0  0E04               	movlw	4
 16168  0000E2  ECB3  F024         	call	_setYX_LCD
 16169                           
 16170                           ;Oled.c: 2604: for(ms=0;ms<48;ms++)
 16171  0000E6  0E00               	movlw	0
 16172  0000E8  6E69               	movwf	_ms,c
 16173  0000EA                     l11919:
 16174  0000EA  0E2F               	movlw	47
 16175  0000EC  6469               	cpfsgt	_ms,c
 16176  0000EE  D001               	goto	l11923
 16177  0000F0  0012               	return	
 16178  0000F2                     l11923:
 16179                           
 16180                           ;Oled.c: 2605: {
 16181                           ;Oled.c: 2606: temp = ptnd_frame[2][ms];
 16182  0000F2  5069               	movf	_ms,w,c
 16183  0000F4  0D01               	mullw	1
 16184  0000F6  0E60               	movlw	96
 16185  0000F8  26F3               	addwf	prodl,f,c
 16186  0000FA  0E00               	movlw	0
 16187  0000FC  22F4               	addwfc	prodh,f,c
 16188  0000FE  0E23               	movlw	low _ptnd_frame
 16189  000100  24F3               	addwf	prodl,w,c
 16190  000102  6EF6               	movwf	tblptrl,c
 16191  000104  0E74               	movlw	high _ptnd_frame
 16192  000106  20F4               	addwfc	prodh,w,c
 16193  000108  6EF7               	movwf	tblptrh,c
 16194  00010A                     	if	0	;There are less than 3 active tblptr bytes
 16195  00010A                     	endif
 16196  00010A  0008               	tblrd		*
 16197  00010C  CFF5 F135          	movff	tablat,display_frame_de@temp
 16198                           
 16199                           ;Oled.c: 2607: ee_WriteBytes(&temp, 0x40, 1);
 16200  000110  0E35               	movlw	low display_frame_de@temp
 16201  000112  0101               	movlb	1	; () banked
 16202  000114  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16203  000116  0E01               	movlw	high display_frame_de@temp
 16204  000118  0101               	movlb	1	; () banked
 16205  00011A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16206  00011C  0E40               	movlw	64
 16207  00011E  0101               	movlb	1	; () banked
 16208  000120  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16209  000122  0E00               	movlw	0
 16210  000124  0101               	movlb	1	; () banked
 16211  000126  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16212  000128  0E01               	movlw	1
 16213  00012A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16214  00012C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16215  000130  2A69               	incf	_ms,f,c
 16216  000132  D7DB               	goto	l11919
 16217  000134                     l11931:
 16218                           
 16219                           ;Oled.c: 2610: else if(mode == 0x80)
 16220  000134  0E80               	movlw	128
 16221  000136  0101               	movlb	1	; () banked
 16222  000138  1932               	xorwf	display_frame_de@mode& (0+255),w,b
 16223  00013A  A4D8               	btfss	status,2,c
 16224  00013C  0012               	return	
 16225                           
 16226                           ; BSR set to: 1
 16227                           ;Oled.c: 2611: {
 16228                           ;Oled.c: 2613: setYX_LCD(2,x);
 16229  00013E  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16230  000142  0E02               	movlw	2
 16231  000144  ECB3  F024         	call	_setYX_LCD
 16232                           
 16233                           ;Oled.c: 2614: for(ms=0;ms<48;ms++)
 16234  000148  0E00               	movlw	0
 16235  00014A  6E69               	movwf	_ms,c
 16236  00014C                     l11937:
 16237  00014C  0E2F               	movlw	47
 16238  00014E  6469               	cpfsgt	_ms,c
 16239  000150  D001               	goto	l11941
 16240  000152  D036               	goto	l11965
 16241  000154                     l11941:
 16242                           
 16243                           ;Oled.c: 2615: {
 16244                           ;Oled.c: 2616: temp = ptnd_frame[0][ms];
 16245  000154  5069               	movf	_ms,w,c
 16246  000156  0D01               	mullw	1
 16247  000158  0E23               	movlw	low _ptnd_frame
 16248  00015A  24F3               	addwf	prodl,w,c
 16249  00015C  6EF6               	movwf	tblptrl,c
 16250  00015E  0E74               	movlw	high _ptnd_frame
 16251  000160  20F4               	addwfc	prodh,w,c
 16252  000162  6EF7               	movwf	tblptrh,c
 16253  000164                     	if	0	;There are less than 3 active tblptr bytes
 16254  000164                     	endif
 16255  000164  0008               	tblrd		*
 16256  000166  CFF5 F135          	movff	tablat,display_frame_de@temp
 16257                           
 16258                           ;Oled.c: 2617: if(ms ==0 || ms == (48 -1))
 16259  00016A  5069               	movf	_ms,w,c
 16260  00016C  B4D8               	btfsc	status,2,c
 16261  00016E  D004               	goto	l11947
 16262  000170  0E2F               	movlw	47
 16263  000172  1869               	xorwf	_ms,w,c
 16264  000174  A4D8               	btfss	status,2,c
 16265  000176  D002               	goto	l11949
 16266  000178                     l11947:
 16267                           
 16268                           ;Oled.c: 2618: {
 16269                           ;Oled.c: 2619: temp =0x0f;
 16270  000178  0E0F               	movlw	15
 16271  00017A  D008               	goto	L38
 16272  00017C                     l11949:
 16273                           
 16274                           ;Oled.c: 2621: else if(ms ==1 || ms == (48 -2))
 16275  00017C  0469               	decf	_ms,w,c
 16276  00017E  B4D8               	btfsc	status,2,c
 16277  000180  D004               	goto	l11953
 16278  000182  0E2E               	movlw	46
 16279  000184  1869               	xorwf	_ms,w,c
 16280  000186  A4D8               	btfss	status,2,c
 16281  000188  D004               	goto	l11955
 16282  00018A                     l11953:
 16283                           
 16284                           ;Oled.c: 2622: {
 16285                           ;Oled.c: 2623: temp = 0x1f;
 16286  00018A  0E1F               	movlw	31
 16287  00018C                     L38:
 16288  00018C  0101               	movlb	1	; () banked
 16289  00018E  6F35               	movwf	display_frame_de@temp& (0+255),b
 16290                           
 16291                           ;Oled.c: 2624: }
 16292  000190  D005               	goto	l11959
 16293  000192                     l11955:
 16294                           
 16295                           ;Oled.c: 2625: else
 16296                           ;Oled.c: 2626: {
 16297                           ;Oled.c: 2628: temp = ~temp;
 16298  000192  0101               	movlb	1	; () banked
 16299  000194  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16300                           
 16301                           ; BSR set to: 1
 16302                           ;Oled.c: 2629: temp &= 0x3f;
 16303  000196  0E3F               	movlw	63
 16304  000198  0101               	movlb	1	; () banked
 16305  00019A  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16306  00019C                     l11959:
 16307                           
 16308                           ; BSR set to: 1
 16309                           ;Oled.c: 2630: }
 16310                           ;Oled.c: 2631: ee_WriteBytes(&temp, 0x40, 1);
 16311  00019C  0E35               	movlw	low display_frame_de@temp
 16312  00019E  0101               	movlb	1	; () banked
 16313  0001A0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16314  0001A2  0E01               	movlw	high display_frame_de@temp
 16315  0001A4  0101               	movlb	1	; () banked
 16316  0001A6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16317  0001A8  0E40               	movlw	64
 16318  0001AA  0101               	movlb	1	; () banked
 16319  0001AC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16320  0001AE  0E00               	movlw	0
 16321  0001B0  0101               	movlb	1	; () banked
 16322  0001B2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16323  0001B4  0E01               	movlw	1
 16324  0001B6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16325  0001B8  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16326  0001BC  2A69               	incf	_ms,f,c
 16327  0001BE  D7C6               	goto	l11937
 16328  0001C0                     l11965:
 16329                           
 16330                           ;Oled.c: 2632: }
 16331                           ;Oled.c: 2634: setYX_LCD(3,x);
 16332  0001C0  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16333  0001C4  0E03               	movlw	3
 16334  0001C6  ECB3  F024         	call	_setYX_LCD
 16335                           
 16336                           ;Oled.c: 2635: for(ms=0;ms<48;ms++)
 16337  0001CA  0E00               	movlw	0
 16338  0001CC  6E69               	movwf	_ms,c
 16339  0001CE                     l11969:
 16340  0001CE  0E2F               	movlw	47
 16341  0001D0  6469               	cpfsgt	_ms,c
 16342  0001D2  D001               	goto	l11973
 16343  0001D4  D02D               	goto	l11987
 16344  0001D6                     l11973:
 16345                           
 16346                           ;Oled.c: 2636: {
 16347                           ;Oled.c: 2637: temp = ptnd_frame[1][ms];
 16348  0001D6  5069               	movf	_ms,w,c
 16349  0001D8  0D01               	mullw	1
 16350  0001DA  0E30               	movlw	48
 16351  0001DC  26F3               	addwf	prodl,f,c
 16352  0001DE  0E00               	movlw	0
 16353  0001E0  22F4               	addwfc	prodh,f,c
 16354  0001E2  0E23               	movlw	low _ptnd_frame
 16355  0001E4  24F3               	addwf	prodl,w,c
 16356  0001E6  6EF6               	movwf	tblptrl,c
 16357  0001E8  0E74               	movlw	high _ptnd_frame
 16358  0001EA  20F4               	addwfc	prodh,w,c
 16359  0001EC  6EF7               	movwf	tblptrh,c
 16360  0001EE                     	if	0	;There are less than 3 active tblptr bytes
 16361  0001EE                     	endif
 16362  0001EE  0008               	tblrd		*
 16363  0001F0  CFF5 F135          	movff	tablat,display_frame_de@temp
 16364                           
 16365                           ;Oled.c: 2639: if(ms == 0 || ms == (48 - 1))
 16366  0001F4  5069               	movf	_ms,w,c
 16367  0001F6  B4D8               	btfsc	status,2,c
 16368  0001F8  D004               	goto	l1134
 16369  0001FA  0E2F               	movlw	47
 16370  0001FC  1869               	xorwf	_ms,w,c
 16371  0001FE  A4D8               	btfss	status,2,c
 16372  000200  D003               	goto	l11979
 16373  000202                     l1134:
 16374                           
 16375                           ;Oled.c: 2640: {
 16376                           ;Oled.c: 2641: temp = 0xff;
 16377  000202  0101               	movlb	1	; () banked
 16378  000204  6935               	setf	display_frame_de@temp& (0+255),b
 16379                           
 16380                           ;Oled.c: 2642: }
 16381  000206  D002               	goto	l11981
 16382  000208                     l11979:
 16383                           
 16384                           ;Oled.c: 2643: else
 16385                           ;Oled.c: 2644: {
 16386                           ;Oled.c: 2645: temp = ~temp;
 16387  000208  0101               	movlb	1	; () banked
 16388  00020A  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16389  00020C                     l11981:
 16390                           
 16391                           ; BSR set to: 1
 16392                           ;Oled.c: 2646: }
 16393                           ;Oled.c: 2647: ee_WriteBytes(&temp, 0x40, 1);
 16394  00020C  0E35               	movlw	low display_frame_de@temp
 16395  00020E  0101               	movlb	1	; () banked
 16396  000210  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16397  000212  0E01               	movlw	high display_frame_de@temp
 16398  000214  0101               	movlb	1	; () banked
 16399  000216  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16400  000218  0E40               	movlw	64
 16401  00021A  0101               	movlb	1	; () banked
 16402  00021C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16403  00021E  0E00               	movlw	0
 16404  000220  0101               	movlb	1	; () banked
 16405  000222  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16406  000224  0E01               	movlw	1
 16407  000226  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16408  000228  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16409  00022C  2A69               	incf	_ms,f,c
 16410  00022E  D7CF               	goto	l11969
 16411  000230                     l11987:
 16412                           
 16413                           ;Oled.c: 2648: }
 16414                           ;Oled.c: 2650: setYX_LCD(4,x);
 16415  000230  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16416  000234  0E04               	movlw	4
 16417  000236  ECB3  F024         	call	_setYX_LCD
 16418                           
 16419                           ;Oled.c: 2651: for(ms=0;ms<48;ms++)
 16420  00023A  0E00               	movlw	0
 16421  00023C  6E69               	movwf	_ms,c
 16422  00023E                     l11991:
 16423  00023E  0E2F               	movlw	47
 16424  000240  6469               	cpfsgt	_ms,c
 16425  000242  D001               	goto	l11995
 16426  000244  0012               	return	
 16427  000246                     l11995:
 16428                           
 16429                           ;Oled.c: 2652: {
 16430                           ;Oled.c: 2653: temp = ptnd_frame[2][ms];
 16431  000246  5069               	movf	_ms,w,c
 16432  000248  0D01               	mullw	1
 16433  00024A  0E60               	movlw	96
 16434  00024C  26F3               	addwf	prodl,f,c
 16435  00024E  0E00               	movlw	0
 16436  000250  22F4               	addwfc	prodh,f,c
 16437  000252  0E23               	movlw	low _ptnd_frame
 16438  000254  24F3               	addwf	prodl,w,c
 16439  000256  6EF6               	movwf	tblptrl,c
 16440  000258  0E74               	movlw	high _ptnd_frame
 16441  00025A  20F4               	addwfc	prodh,w,c
 16442  00025C  6EF7               	movwf	tblptrh,c
 16443  00025E                     	if	0	;There are less than 3 active tblptr bytes
 16444  00025E                     	endif
 16445  00025E  0008               	tblrd		*
 16446  000260  CFF5 F135          	movff	tablat,display_frame_de@temp
 16447                           
 16448                           ;Oled.c: 2654: if(ms ==0 || ms == (48 -1) )
 16449  000264  5069               	movf	_ms,w,c
 16450  000266  B4D8               	btfsc	status,2,c
 16451  000268  D004               	goto	l12001
 16452  00026A  0E2F               	movlw	47
 16453  00026C  1869               	xorwf	_ms,w,c
 16454  00026E  A4D8               	btfss	status,2,c
 16455  000270  D002               	goto	l12003
 16456  000272                     l12001:
 16457                           
 16458                           ;Oled.c: 2655: {
 16459                           ;Oled.c: 2656: temp =0xe0;
 16460  000272  0EE0               	movlw	224
 16461  000274  D008               	goto	L39
 16462  000276                     l12003:
 16463                           
 16464                           ;Oled.c: 2658: else if(ms ==1 || ms == (48 -2))
 16465  000276  0469               	decf	_ms,w,c
 16466  000278  B4D8               	btfsc	status,2,c
 16467  00027A  D004               	goto	l12007
 16468  00027C  0E2E               	movlw	46
 16469  00027E  1869               	xorwf	_ms,w,c
 16470  000280  A4D8               	btfss	status,2,c
 16471  000282  D004               	goto	l12009
 16472  000284                     l12007:
 16473                           
 16474                           ;Oled.c: 2659: {
 16475                           ;Oled.c: 2660: temp = 0xf0;
 16476  000284  0EF0               	movlw	240
 16477  000286                     L39:
 16478  000286  0101               	movlb	1	; () banked
 16479  000288  6F35               	movwf	display_frame_de@temp& (0+255),b
 16480                           
 16481                           ;Oled.c: 2661: }
 16482  00028A  D007               	goto	l12015
 16483  00028C                     l12009:
 16484                           
 16485                           ;Oled.c: 2662: else
 16486                           ;Oled.c: 2663: {
 16487                           ;Oled.c: 2665: temp = ~temp;
 16488  00028C  0101               	movlb	1	; () banked
 16489  00028E  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16490                           
 16491                           ; BSR set to: 1
 16492                           ;Oled.c: 2666: temp &= 0xf0;
 16493  000290  0EF0               	movlw	240
 16494  000292  0101               	movlb	1	; () banked
 16495  000294  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16496                           
 16497                           ; BSR set to: 1
 16498                           ;Oled.c: 2667: temp |= 0x10;
 16499  000296  0101               	movlb	1	; () banked
 16500  000298  8935               	bsf	display_frame_de@temp& (0+255),4,b
 16501  00029A                     l12015:
 16502                           
 16503                           ; BSR set to: 1
 16504                           ;Oled.c: 2668: }
 16505                           ;Oled.c: 2669: ee_WriteBytes(&temp, 0x40, 1);
 16506  00029A  0E35               	movlw	low display_frame_de@temp
 16507  00029C  0101               	movlb	1	; () banked
 16508  00029E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16509  0002A0  0E01               	movlw	high display_frame_de@temp
 16510  0002A2  0101               	movlb	1	; () banked
 16511  0002A4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16512  0002A6  0E40               	movlw	64
 16513  0002A8  0101               	movlb	1	; () banked
 16514  0002AA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16515  0002AC  0E00               	movlw	0
 16516  0002AE  0101               	movlb	1	; () banked
 16517  0002B0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16518  0002B2  0E01               	movlw	1
 16519  0002B4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16520  0002B6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16521  0002BA  2A69               	incf	_ms,f,c
 16522  0002BC  D7C0               	goto	l11991
 16523  0002BE                     l12021:
 16524                           
 16525                           ;Oled.c: 2674: else if(y == 2)
 16526  0002BE  0E02               	movlw	2
 16527  0002C0  0101               	movlb	1	; () banked
 16528  0002C2  1934               	xorwf	display_frame_de@y& (0+255),w,b
 16529  0002C4  A4D8               	btfss	status,2,c
 16530  0002C6  0012               	return	
 16531                           
 16532                           ; BSR set to: 1
 16533                           ;Oled.c: 2675: {
 16534                           ;Oled.c: 2676: if(mode == 0)
 16535  0002C8  0101               	movlb	1	; () banked
 16536  0002CA  5132               	movf	display_frame_de@mode& (0+255),w,b
 16537  0002CC  0101               	movlb	1	; () banked
 16538  0002CE  A4D8               	btfss	status,2,c
 16539  0002D0  D080               	goto	l12073
 16540                           
 16541                           ; BSR set to: 1
 16542                           ;Oled.c: 2677: {
 16543                           ;Oled.c: 2679: setYX_LCD(2,x);
 16544  0002D2  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16545  0002D6  0E02               	movlw	2
 16546  0002D8  ECB3  F024         	call	_setYX_LCD
 16547                           
 16548                           ;Oled.c: 2680: for(ms=0;ms<48;ms++)
 16549  0002DC  0E00               	movlw	0
 16550  0002DE  6E69               	movwf	_ms,c
 16551  0002E0                     l12029:
 16552  0002E0  0E2F               	movlw	47
 16553  0002E2  6469               	cpfsgt	_ms,c
 16554  0002E4  D001               	goto	l12033
 16555  0002E6  D01D               	goto	l12041
 16556  0002E8                     l12033:
 16557                           
 16558                           ;Oled.c: 2681: {
 16559                           ;Oled.c: 2682: temp = ptne_frame[0][ms];
 16560  0002E8  5069               	movf	_ms,w,c
 16561  0002EA  0D01               	mullw	1
 16562  0002EC  0E93               	movlw	low _ptne_frame
 16563  0002EE  24F3               	addwf	prodl,w,c
 16564  0002F0  6EF6               	movwf	tblptrl,c
 16565  0002F2  0E73               	movlw	high _ptne_frame
 16566  0002F4  20F4               	addwfc	prodh,w,c
 16567  0002F6  6EF7               	movwf	tblptrh,c
 16568  0002F8                     	if	0	;There are less than 3 active tblptr bytes
 16569  0002F8                     	endif
 16570  0002F8  0008               	tblrd		*
 16571  0002FA  CFF5 F135          	movff	tablat,display_frame_de@temp
 16572                           
 16573                           ;Oled.c: 2683: ee_WriteBytes(&temp, 0x40, 1);
 16574  0002FE  0E35               	movlw	low display_frame_de@temp
 16575  000300  0101               	movlb	1	; () banked
 16576  000302  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16577  000304  0E01               	movlw	high display_frame_de@temp
 16578  000306  0101               	movlb	1	; () banked
 16579  000308  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16580  00030A  0E40               	movlw	64
 16581  00030C  0101               	movlb	1	; () banked
 16582  00030E  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16583  000310  0E00               	movlw	0
 16584  000312  0101               	movlb	1	; () banked
 16585  000314  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16586  000316  0E01               	movlw	1
 16587  000318  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16588  00031A  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16589  00031E  2A69               	incf	_ms,f,c
 16590  000320  D7DF               	goto	l12029
 16591  000322                     l12041:
 16592                           
 16593                           ;Oled.c: 2684: }
 16594                           ;Oled.c: 2686: setYX_LCD(3,x);
 16595  000322  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16596  000326  0E03               	movlw	3
 16597  000328  ECB3  F024         	call	_setYX_LCD
 16598                           
 16599                           ;Oled.c: 2687: for(ms=0;ms<48;ms++)
 16600  00032C  0E00               	movlw	0
 16601  00032E  6E69               	movwf	_ms,c
 16602  000330                     l12045:
 16603  000330  0E2F               	movlw	47
 16604  000332  6469               	cpfsgt	_ms,c
 16605  000334  D001               	goto	l12049
 16606  000336  D021               	goto	l12057
 16607  000338                     l12049:
 16608                           
 16609                           ;Oled.c: 2688: {
 16610                           ;Oled.c: 2689: temp = ptne_frame[1][ms];
 16611  000338  5069               	movf	_ms,w,c
 16612  00033A  0D01               	mullw	1
 16613  00033C  0E30               	movlw	48
 16614  00033E  26F3               	addwf	prodl,f,c
 16615  000340  0E00               	movlw	0
 16616  000342  22F4               	addwfc	prodh,f,c
 16617  000344  0E93               	movlw	low _ptne_frame
 16618  000346  24F3               	addwf	prodl,w,c
 16619  000348  6EF6               	movwf	tblptrl,c
 16620  00034A  0E73               	movlw	high _ptne_frame
 16621  00034C  20F4               	addwfc	prodh,w,c
 16622  00034E  6EF7               	movwf	tblptrh,c
 16623  000350                     	if	0	;There are less than 3 active tblptr bytes
 16624  000350                     	endif
 16625  000350  0008               	tblrd		*
 16626  000352  CFF5 F135          	movff	tablat,display_frame_de@temp
 16627                           
 16628                           ;Oled.c: 2690: ee_WriteBytes(&temp, 0x40, 1);
 16629  000356  0E35               	movlw	low display_frame_de@temp
 16630  000358  0101               	movlb	1	; () banked
 16631  00035A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16632  00035C  0E01               	movlw	high display_frame_de@temp
 16633  00035E  0101               	movlb	1	; () banked
 16634  000360  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16635  000362  0E40               	movlw	64
 16636  000364  0101               	movlb	1	; () banked
 16637  000366  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16638  000368  0E00               	movlw	0
 16639  00036A  0101               	movlb	1	; () banked
 16640  00036C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16641  00036E  0E01               	movlw	1
 16642  000370  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16643  000372  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16644  000376  2A69               	incf	_ms,f,c
 16645  000378  D7DB               	goto	l12045
 16646  00037A                     l12057:
 16647                           
 16648                           ;Oled.c: 2691: }
 16649                           ;Oled.c: 2693: setYX_LCD(4,x);
 16650  00037A  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16651  00037E  0E04               	movlw	4
 16652  000380  ECB3  F024         	call	_setYX_LCD
 16653                           
 16654                           ;Oled.c: 2694: for(ms=0;ms<48;ms++)
 16655  000384  0E00               	movlw	0
 16656  000386  6E69               	movwf	_ms,c
 16657  000388                     l12061:
 16658  000388  0E2F               	movlw	47
 16659  00038A  6469               	cpfsgt	_ms,c
 16660  00038C  D001               	goto	l12065
 16661  00038E  0012               	return	
 16662  000390                     l12065:
 16663                           
 16664                           ;Oled.c: 2695: {
 16665                           ;Oled.c: 2696: temp = ptne_frame[2][ms];
 16666  000390  5069               	movf	_ms,w,c
 16667  000392  0D01               	mullw	1
 16668  000394  0E60               	movlw	96
 16669  000396  26F3               	addwf	prodl,f,c
 16670  000398  0E00               	movlw	0
 16671  00039A  22F4               	addwfc	prodh,f,c
 16672  00039C  0E93               	movlw	low _ptne_frame
 16673  00039E  24F3               	addwf	prodl,w,c
 16674  0003A0  6EF6               	movwf	tblptrl,c
 16675  0003A2  0E73               	movlw	high _ptne_frame
 16676  0003A4  20F4               	addwfc	prodh,w,c
 16677  0003A6  6EF7               	movwf	tblptrh,c
 16678  0003A8                     	if	0	;There are less than 3 active tblptr bytes
 16679  0003A8                     	endif
 16680  0003A8  0008               	tblrd		*
 16681  0003AA  CFF5 F135          	movff	tablat,display_frame_de@temp
 16682                           
 16683                           ;Oled.c: 2697: ee_WriteBytes(&temp, 0x40, 1);
 16684  0003AE  0E35               	movlw	low display_frame_de@temp
 16685  0003B0  0101               	movlb	1	; () banked
 16686  0003B2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16687  0003B4  0E01               	movlw	high display_frame_de@temp
 16688  0003B6  0101               	movlb	1	; () banked
 16689  0003B8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16690  0003BA  0E40               	movlw	64
 16691  0003BC  0101               	movlb	1	; () banked
 16692  0003BE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16693  0003C0  0E00               	movlw	0
 16694  0003C2  0101               	movlb	1	; () banked
 16695  0003C4  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16696  0003C6  0E01               	movlw	1
 16697  0003C8  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16698  0003CA  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16699  0003CE  2A69               	incf	_ms,f,c
 16700  0003D0  D7DB               	goto	l12061
 16701  0003D2                     l12073:
 16702                           
 16703                           ;Oled.c: 2700: else if(mode == 0x80)
 16704  0003D2  0E80               	movlw	128
 16705  0003D4  0101               	movlb	1	; () banked
 16706  0003D6  1932               	xorwf	display_frame_de@mode& (0+255),w,b
 16707  0003D8  A4D8               	btfss	status,2,c
 16708  0003DA  0012               	return	
 16709                           
 16710                           ; BSR set to: 1
 16711                           ;Oled.c: 2701: {
 16712                           ;Oled.c: 2702: setYX_LCD(2,x);
 16713  0003DC  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16714  0003E0  0E02               	movlw	2
 16715  0003E2  ECB3  F024         	call	_setYX_LCD
 16716                           
 16717                           ;Oled.c: 2703: for(ms=0;ms<48;ms++)
 16718  0003E6  0E00               	movlw	0
 16719  0003E8  6E69               	movwf	_ms,c
 16720  0003EA                     l12079:
 16721  0003EA  0E2F               	movlw	47
 16722  0003EC  6469               	cpfsgt	_ms,c
 16723  0003EE  D001               	goto	l12083
 16724  0003F0  D036               	goto	l12107
 16725  0003F2                     l12083:
 16726                           
 16727                           ;Oled.c: 2704: {
 16728                           ;Oled.c: 2705: temp = ptne_frame[0][ms];
 16729  0003F2  5069               	movf	_ms,w,c
 16730  0003F4  0D01               	mullw	1
 16731  0003F6  0E93               	movlw	low _ptne_frame
 16732  0003F8  24F3               	addwf	prodl,w,c
 16733  0003FA  6EF6               	movwf	tblptrl,c
 16734  0003FC  0E73               	movlw	high _ptne_frame
 16735  0003FE  20F4               	addwfc	prodh,w,c
 16736  000400  6EF7               	movwf	tblptrh,c
 16737  000402                     	if	0	;There are less than 3 active tblptr bytes
 16738  000402                     	endif
 16739  000402  0008               	tblrd		*
 16740  000404  CFF5 F135          	movff	tablat,display_frame_de@temp
 16741                           
 16742                           ;Oled.c: 2706: if(ms ==0 || ms == (48 -1))
 16743  000408  5069               	movf	_ms,w,c
 16744  00040A  B4D8               	btfsc	status,2,c
 16745  00040C  D004               	goto	l12089
 16746  00040E  0E2F               	movlw	47
 16747  000410  1869               	xorwf	_ms,w,c
 16748  000412  A4D8               	btfss	status,2,c
 16749  000414  D002               	goto	l12091
 16750  000416                     l12089:
 16751                           
 16752                           ;Oled.c: 2707: {
 16753                           ;Oled.c: 2708: temp =0x0f;
 16754  000416  0E0F               	movlw	15
 16755  000418  D008               	goto	L40
 16756  00041A                     l12091:
 16757                           
 16758                           ;Oled.c: 2710: else if(ms ==1 || ms == (48 -2))
 16759  00041A  0469               	decf	_ms,w,c
 16760  00041C  B4D8               	btfsc	status,2,c
 16761  00041E  D004               	goto	l12095
 16762  000420  0E2E               	movlw	46
 16763  000422  1869               	xorwf	_ms,w,c
 16764  000424  A4D8               	btfss	status,2,c
 16765  000426  D004               	goto	l12097
 16766  000428                     l12095:
 16767                           
 16768                           ;Oled.c: 2711: {
 16769                           ;Oled.c: 2712: temp = 0x1f;
 16770  000428  0E1F               	movlw	31
 16771  00042A                     L40:
 16772  00042A  0101               	movlb	1	; () banked
 16773  00042C  6F35               	movwf	display_frame_de@temp& (0+255),b
 16774                           
 16775                           ;Oled.c: 2713: }
 16776  00042E  D005               	goto	l12101
 16777  000430                     l12097:
 16778                           
 16779                           ;Oled.c: 2714: else
 16780                           ;Oled.c: 2715: {
 16781                           ;Oled.c: 2717: temp = ~temp;
 16782  000430  0101               	movlb	1	; () banked
 16783  000432  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16784                           
 16785                           ; BSR set to: 1
 16786                           ;Oled.c: 2718: temp &= 0x3f;
 16787  000434  0E3F               	movlw	63
 16788  000436  0101               	movlb	1	; () banked
 16789  000438  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16790  00043A                     l12101:
 16791                           
 16792                           ; BSR set to: 1
 16793                           ;Oled.c: 2719: }
 16794                           ;Oled.c: 2721: ee_WriteBytes(&temp, 0x40, 1);
 16795  00043A  0E35               	movlw	low display_frame_de@temp
 16796  00043C  0101               	movlb	1	; () banked
 16797  00043E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16798  000440  0E01               	movlw	high display_frame_de@temp
 16799  000442  0101               	movlb	1	; () banked
 16800  000444  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16801  000446  0E40               	movlw	64
 16802  000448  0101               	movlb	1	; () banked
 16803  00044A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16804  00044C  0E00               	movlw	0
 16805  00044E  0101               	movlb	1	; () banked
 16806  000450  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16807  000452  0E01               	movlw	1
 16808  000454  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16809  000456  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16810  00045A  2A69               	incf	_ms,f,c
 16811  00045C  D7C6               	goto	l12079
 16812  00045E                     l12107:
 16813                           
 16814                           ;Oled.c: 2722: }
 16815                           ;Oled.c: 2725: setYX_LCD(3,x);
 16816  00045E  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16817  000462  0E03               	movlw	3
 16818  000464  ECB3  F024         	call	_setYX_LCD
 16819                           
 16820                           ;Oled.c: 2726: for(ms=0;ms<48;ms++)
 16821  000468  0E00               	movlw	0
 16822  00046A  6E69               	movwf	_ms,c
 16823  00046C                     l12111:
 16824  00046C  0E2F               	movlw	47
 16825  00046E  6469               	cpfsgt	_ms,c
 16826  000470  D001               	goto	l12115
 16827  000472  D02D               	goto	l12129
 16828  000474                     l12115:
 16829                           
 16830                           ;Oled.c: 2727: {
 16831                           ;Oled.c: 2728: temp = ptne_frame[1][ms];
 16832  000474  5069               	movf	_ms,w,c
 16833  000476  0D01               	mullw	1
 16834  000478  0E30               	movlw	48
 16835  00047A  26F3               	addwf	prodl,f,c
 16836  00047C  0E00               	movlw	0
 16837  00047E  22F4               	addwfc	prodh,f,c
 16838  000480  0E93               	movlw	low _ptne_frame
 16839  000482  24F3               	addwf	prodl,w,c
 16840  000484  6EF6               	movwf	tblptrl,c
 16841  000486  0E73               	movlw	high _ptne_frame
 16842  000488  20F4               	addwfc	prodh,w,c
 16843  00048A  6EF7               	movwf	tblptrh,c
 16844  00048C                     	if	0	;There are less than 3 active tblptr bytes
 16845  00048C                     	endif
 16846  00048C  0008               	tblrd		*
 16847  00048E  CFF5 F135          	movff	tablat,display_frame_de@temp
 16848                           
 16849                           ;Oled.c: 2730: if(ms == 0 || ms == (48 - 1))
 16850  000492  5069               	movf	_ms,w,c
 16851  000494  B4D8               	btfsc	status,2,c
 16852  000496  D004               	goto	l1171
 16853  000498  0E2F               	movlw	47
 16854  00049A  1869               	xorwf	_ms,w,c
 16855  00049C  A4D8               	btfss	status,2,c
 16856  00049E  D003               	goto	l12121
 16857  0004A0                     l1171:
 16858                           
 16859                           ;Oled.c: 2731: {
 16860                           ;Oled.c: 2732: temp = 0xff;
 16861  0004A0  0101               	movlb	1	; () banked
 16862  0004A2  6935               	setf	display_frame_de@temp& (0+255),b
 16863                           
 16864                           ;Oled.c: 2733: }
 16865  0004A4  D002               	goto	l12123
 16866  0004A6                     l12121:
 16867                           
 16868                           ;Oled.c: 2734: else
 16869                           ;Oled.c: 2735: {
 16870                           ;Oled.c: 2736: temp = ~temp;
 16871  0004A6  0101               	movlb	1	; () banked
 16872  0004A8  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16873  0004AA                     l12123:
 16874                           
 16875                           ; BSR set to: 1
 16876                           ;Oled.c: 2737: }
 16877                           ;Oled.c: 2739: ee_WriteBytes(&temp, 0x40, 1);
 16878  0004AA  0E35               	movlw	low display_frame_de@temp
 16879  0004AC  0101               	movlb	1	; () banked
 16880  0004AE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16881  0004B0  0E01               	movlw	high display_frame_de@temp
 16882  0004B2  0101               	movlb	1	; () banked
 16883  0004B4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16884  0004B6  0E40               	movlw	64
 16885  0004B8  0101               	movlb	1	; () banked
 16886  0004BA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16887  0004BC  0E00               	movlw	0
 16888  0004BE  0101               	movlb	1	; () banked
 16889  0004C0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16890  0004C2  0E01               	movlw	1
 16891  0004C4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16892  0004C6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 16893  0004CA  2A69               	incf	_ms,f,c
 16894  0004CC  D7CF               	goto	l12111
 16895  0004CE                     l12129:
 16896                           
 16897                           ;Oled.c: 2740: }
 16898                           ;Oled.c: 2743: setYX_LCD(4,x);
 16899  0004CE  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16900  0004D2  0E04               	movlw	4
 16901  0004D4  ECB3  F024         	call	_setYX_LCD
 16902                           
 16903                           ;Oled.c: 2744: for(ms=0;ms<48;ms++)
 16904  0004D8  0E00               	movlw	0
 16905  0004DA  6E69               	movwf	_ms,c
 16906  0004DC                     l12133:
 16907  0004DC  0E2F               	movlw	47
 16908  0004DE  6469               	cpfsgt	_ms,c
 16909  0004E0  D001               	goto	l12137
 16910  0004E2  0012               	return	
 16911  0004E4                     l12137:
 16912                           
 16913                           ;Oled.c: 2745: {
 16914                           ;Oled.c: 2746: temp = ptne_frame[2][ms];
 16915  0004E4  5069               	movf	_ms,w,c
 16916  0004E6  0D01               	mullw	1
 16917  0004E8  0E60               	movlw	96
 16918  0004EA  26F3               	addwf	prodl,f,c
 16919  0004EC  0E00               	movlw	0
 16920  0004EE  22F4               	addwfc	prodh,f,c
 16921  0004F0  0E93               	movlw	low _ptne_frame
 16922  0004F2  24F3               	addwf	prodl,w,c
 16923  0004F4  6EF6               	movwf	tblptrl,c
 16924  0004F6  0E73               	movlw	high _ptne_frame
 16925  0004F8  20F4               	addwfc	prodh,w,c
 16926  0004FA  6EF7               	movwf	tblptrh,c
 16927  0004FC                     	if	0	;There are less than 3 active tblptr bytes
 16928  0004FC                     	endif
 16929  0004FC  0008               	tblrd		*
 16930  0004FE  CFF5 F135          	movff	tablat,display_frame_de@temp
 16931                           
 16932                           ;Oled.c: 2747: if(ms ==0 || ms == (48 -1) )
 16933  000502  5069               	movf	_ms,w,c
 16934  000504  B4D8               	btfsc	status,2,c
 16935  000506  D004               	goto	l12143
 16936  000508  0E2F               	movlw	47
 16937  00050A  1869               	xorwf	_ms,w,c
 16938  00050C  A4D8               	btfss	status,2,c
 16939  00050E  D002               	goto	l12145
 16940  000510                     l12143:
 16941                           
 16942                           ;Oled.c: 2748: {
 16943                           ;Oled.c: 2749: temp =0xe0;
 16944  000510  0EE0               	movlw	224
 16945  000512  D008               	goto	L41
 16946  000514                     l12145:
 16947                           
 16948                           ;Oled.c: 2751: else if(ms ==1 || ms == (48 -2))
 16949  000514  0469               	decf	_ms,w,c
 16950  000516  B4D8               	btfsc	status,2,c
 16951  000518  D004               	goto	l12149
 16952  00051A  0E2E               	movlw	46
 16953  00051C  1869               	xorwf	_ms,w,c
 16954  00051E  A4D8               	btfss	status,2,c
 16955  000520  D004               	goto	l12151
 16956  000522                     l12149:
 16957                           
 16958                           ;Oled.c: 2752: {
 16959                           ;Oled.c: 2753: temp = 0xf0;
 16960  000522  0EF0               	movlw	240
 16961  000524                     L41:
 16962  000524  0101               	movlb	1	; () banked
 16963  000526  6F35               	movwf	display_frame_de@temp& (0+255),b
 16964                           
 16965                           ;Oled.c: 2754: }
 16966  000528  D007               	goto	l12157
 16967  00052A                     l12151:
 16968                           
 16969                           ;Oled.c: 2755: else
 16970                           ;Oled.c: 2756: {
 16971                           ;Oled.c: 2758: temp = ~temp;
 16972  00052A  0101               	movlb	1	; () banked
 16973  00052C  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16974                           
 16975                           ; BSR set to: 1
 16976                           ;Oled.c: 2759: temp &= 0xf0;
 16977  00052E  0EF0               	movlw	240
 16978  000530  0101               	movlb	1	; () banked
 16979  000532  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16980                           
 16981                           ; BSR set to: 1
 16982                           ;Oled.c: 2760: temp |= 0x10;
 16983  000534  0101               	movlb	1	; () banked
 16984  000536  8935               	bsf	display_frame_de@temp& (0+255),4,b
 16985  000538                     l12157:
 16986                           
 16987                           ; BSR set to: 1
 16988                           ;Oled.c: 2761: }
 16989                           ;Oled.c: 2763: ee_WriteBytes(&temp, 0x40, 1);
 16990  000538  0E35               	movlw	low display_frame_de@temp
 16991  00053A  0101               	movlb	1	; () banked
 16992  00053C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16993  00053E  0E01               	movlw	high display_frame_de@temp
 16994  000540  0101               	movlb	1	; () banked
 16995  000542  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16996  000544  0E40               	movlw	64
 16997  000546  0101               	movlb	1	; () banked
 16998  000548  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16999  00054A  0E00               	movlw	0
 17000  00054C  0101               	movlb	1	; () banked
 17001  00054E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 17002  000550  0E01               	movlw	1
 17003  000552  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 17004  000554  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 17005  000558  2A69               	incf	_ms,f,c
 17006  00055A  D7C0               	goto	l12133
 17007  00055C                     __end_of_display_frame_de:
 17008                           	opt stack 0
 17009                           tblptru	equ	0xFF8
 17010                           tblptrh	equ	0xFF7
 17011                           tblptrl	equ	0xFF6
 17012                           tablat	equ	0xFF5
 17013                           prodh	equ	0xFF4
 17014                           prodl	equ	0xFF3
 17015                           intcon	equ	0xFF2
 17016                           intcon3	equ	0xFF0
 17017                           postinc0	equ	0xFEE
 17018                           wreg	equ	0xFE8
 17019                           postdec1	equ	0xFE5
 17020                           fsr1h	equ	0xFE2
 17021                           fsr1l	equ	0xFE1
 17022                           postinc2	equ	0xFDE
 17023                           fsr2h	equ	0xFDA
 17024                           fsr2l	equ	0xFD9
 17025                           status	equ	0xFD8
 17026                           
 17027 ;; *************** function _menu2_MsgHandlle *****************
 17028 ;; Defined at:
 17029 ;;		line 373 in file "../gui.c"
 17030 ;; Parameters:    Size  Location     Type
 17031 ;;  key             1    wreg     unsigned char 
 17032 ;; Auto vars:     Size  Location     Type
 17033 ;;  key             1    0[BANK0 ] unsigned char 
 17034 ;; Return value:  Size  Location     Type
 17035 ;;                  1    wreg      void 
 17036 ;; Registers used:
 17037 ;;		wreg, status,2, status,0
 17038 ;; Tracked objects:
 17039 ;;		On entry : 0/0
 17040 ;;		On exit  : 0/0
 17041 ;;		Unchanged: 0/0
 17042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17043 ;;      Params:         0       0       0       0       0       0       0
 17044 ;;      Locals:         0       1       0       0       0       0       0
 17045 ;;      Temps:          0       0       0       0       0       0       0
 17046 ;;      Totals:         0       1       0       0       0       0       0
 17047 ;;Total ram usage:        1 bytes
 17048 ;; Hardware stack levels used:    1
 17049 ;; Hardware stack levels required when called:    2
 17050 ;; This function calls:
 17051 ;;		Nothing
 17052 ;; This function is called by:
 17053 ;;		_init_menu
 17054 ;;		_HG_interface
 17055 ;; This function uses a non-reentrant model
 17056 ;;
 17057                           
 17058                           	psect	text36
 17059  004A18                     __ptext36:
 17060                           	opt stack 0
 17061  004A18                     _menu2_MsgHandlle:
 17062                           	opt stack 27
 17063                           
 17064                           ;incstack = 0
 17065                           ;menu2_MsgHandlle@key stored from wreg
 17066  004A18  0100               	movlb	0	; () banked
 17067  004A1A  6FFD               	movwf	menu2_MsgHandlle@key& (0+255),b
 17068                           
 17069                           ;gui.c: 376: switch(key)
 17070  004A1C  D01C               	goto	l13497
 17071  004A1E                     l13471:
 17072                           
 17073                           ;gui.c: 381: if(menu[2].mode == 3)
 17074  004A1E  0E03               	movlw	3
 17075  004A20  1812               	xorwf	_menu+17,w,c
 17076  004A22  B4D8               	btfsc	status,2,c
 17077  004A24  0012               	return	
 17078                           
 17079                           ;gui.c: 385: else
 17080                           ;gui.c: 386: {
 17081                           ;gui.c: 387: if(focus ==3)
 17082                           
 17083                           ;gui.c: 382: {
 17084                           ;gui.c: 384: }
 17085  004A26  0E03               	movlw	3
 17086  004A28  184F               	xorwf	_focus,w,c
 17087  004A2A  A4D8               	btfss	status,2,c
 17088  004A2C  D003               	goto	l13479
 17089                           
 17090                           ;gui.c: 388: {
 17091                           ;gui.c: 389: menu[2].mode = 0x80;
 17092  004A2E  0E80               	movlw	128
 17093  004A30  6E12               	movwf	_menu+17,c
 17094                           
 17095                           ;gui.c: 390: }
 17096  004A32  0012               	return	
 17097  004A34                     l13479:
 17098                           
 17099                           ;gui.c: 391: else
 17100                           ;gui.c: 392: {
 17101                           ;gui.c: 393: menu[2].mode = 0;
 17102  004A34  0E00               	movlw	0
 17103  004A36  6E12               	movwf	_menu+17,c
 17104                           
 17105                           ;gui.c: 402: }
 17106                           ;gui.c: 403: break;
 17107                           
 17108                           ;gui.c: 398: {
 17109  004A38  0012               	return	
 17110  004A3A                     l13483:
 17111                           
 17112                           ;gui.c: 409: if(menu[2].mode == 3)
 17113  004A3A  0E03               	movlw	3
 17114  004A3C  1812               	xorwf	_menu+17,w,c
 17115  004A3E  B4D8               	btfsc	status,2,c
 17116  004A40  0012               	return	
 17117                           
 17118                           ;gui.c: 413: else
 17119                           ;gui.c: 414: {
 17120                           ;gui.c: 415: if(focus ==3)
 17121                           
 17122                           ;gui.c: 410: {
 17123                           ;gui.c: 412: }
 17124  004A42  0E03               	movlw	3
 17125  004A44  184F               	xorwf	_focus,w,c
 17126  004A46  A4D8               	btfss	status,2,c
 17127  004A48  D003               	goto	l13491
 17128                           
 17129                           ;gui.c: 416: {
 17130                           ;gui.c: 417: menu[2].mode = 0x80;
 17131  004A4A  0E80               	movlw	128
 17132  004A4C  6E12               	movwf	_menu+17,c
 17133                           
 17134                           ;gui.c: 418: }
 17135  004A4E  0012               	return	
 17136  004A50                     l13491:
 17137                           
 17138                           ;gui.c: 419: else
 17139                           ;gui.c: 420: {
 17140                           ;gui.c: 421: menu[2].mode = 0;
 17141  004A50  0E00               	movlw	0
 17142  004A52  6E12               	movwf	_menu+17,c
 17143                           
 17144                           ;gui.c: 440: }
 17145                           
 17146                           ;gui.c: 439: break;
 17147                           
 17148                           ;gui.c: 438: case 0xf3:
 17149                           
 17150                           ;gui.c: 430: }
 17151                           ;gui.c: 436: break;
 17152                           
 17153                           ;gui.c: 426: {
 17154  004A54  0012               	return	
 17155  004A56                     l13497:
 17156  004A56  0100               	movlb	0	; () banked
 17157  004A58  51FD               	movf	menu2_MsgHandlle@key& (0+255),w,b
 17158                           
 17159                           ; Switch size 1, requested type "space"
 17160                           ; Number of cases is 3, Range of values is 241 to 243
 17161                           ; switch strategies available:
 17162                           ; Name         Instructions Cycles
 17163                           ; simple_byte           10     6 (average)
 17164                           ;	Chosen strategy is simple_byte
 17165  004A5A  0AF1               	xorlw	241	; case 241
 17166  004A5C  B4D8               	btfsc	status,2,c
 17167  004A5E  D7DF               	goto	l13471
 17168  004A60  0A03               	xorlw	3	; case 242
 17169  004A62  B4D8               	btfsc	status,2,c
 17170  004A64  D7EA               	goto	l13483
 17171  004A66  0A01               	xorlw	1	; case 243
 17172  004A68  0012               	return	
 17173  004A6A                     __end_of_menu2_MsgHandlle:
 17174                           	opt stack 0
 17175                           tblptru	equ	0xFF8
 17176                           tblptrh	equ	0xFF7
 17177                           tblptrl	equ	0xFF6
 17178                           tablat	equ	0xFF5
 17179                           prodh	equ	0xFF4
 17180                           prodl	equ	0xFF3
 17181                           intcon	equ	0xFF2
 17182                           intcon3	equ	0xFF0
 17183                           postinc0	equ	0xFEE
 17184                           wreg	equ	0xFE8
 17185                           postdec1	equ	0xFE5
 17186                           fsr1h	equ	0xFE2
 17187                           fsr1l	equ	0xFE1
 17188                           postinc2	equ	0xFDE
 17189                           fsr2h	equ	0xFDA
 17190                           fsr2l	equ	0xFD9
 17191                           status	equ	0xFD8
 17192                           
 17193 ;; *************** function _menu1_MsgHandlle *****************
 17194 ;; Defined at:
 17195 ;;		line 302 in file "../gui.c"
 17196 ;; Parameters:    Size  Location     Type
 17197 ;;  key             1    wreg     unsigned char 
 17198 ;; Auto vars:     Size  Location     Type
 17199 ;;  key             1    0[BANK0 ] unsigned char 
 17200 ;; Return value:  Size  Location     Type
 17201 ;;                  1    wreg      void 
 17202 ;; Registers used:
 17203 ;;		wreg, status,2, status,0
 17204 ;; Tracked objects:
 17205 ;;		On entry : 0/0
 17206 ;;		On exit  : 0/0
 17207 ;;		Unchanged: 0/0
 17208 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17209 ;;      Params:         0       0       0       0       0       0       0
 17210 ;;      Locals:         0       1       0       0       0       0       0
 17211 ;;      Temps:          0       0       0       0       0       0       0
 17212 ;;      Totals:         0       1       0       0       0       0       0
 17213 ;;Total ram usage:        1 bytes
 17214 ;; Hardware stack levels used:    1
 17215 ;; Hardware stack levels required when called:    2
 17216 ;; This function calls:
 17217 ;;		Nothing
 17218 ;; This function is called by:
 17219 ;;		_init_menu
 17220 ;;		_HG_interface
 17221 ;; This function uses a non-reentrant model
 17222 ;;
 17223                           
 17224                           	psect	text37
 17225  004A6A                     __ptext37:
 17226                           	opt stack 0
 17227  004A6A                     _menu1_MsgHandlle:
 17228                           	opt stack 27
 17229                           
 17230                           ;incstack = 0
 17231                           ;menu1_MsgHandlle@key stored from wreg
 17232  004A6A  0100               	movlb	0	; () banked
 17233  004A6C  6FFD               	movwf	menu1_MsgHandlle@key& (0+255),b
 17234                           
 17235                           ;gui.c: 304: switch(key)
 17236  004A6E  D01C               	goto	l13467
 17237  004A70                     l13441:
 17238                           
 17239                           ;gui.c: 308: if(menu[1].mode == 3)
 17240  004A70  0E03               	movlw	3
 17241  004A72  180A               	xorwf	_menu+9,w,c
 17242  004A74  B4D8               	btfsc	status,2,c
 17243  004A76  0012               	return	
 17244                           
 17245                           ;gui.c: 312: else
 17246                           ;gui.c: 313: {
 17247                           ;gui.c: 314: if(focus == 2)
 17248                           
 17249                           ;gui.c: 309: {
 17250                           ;gui.c: 311: }
 17251  004A78  0E02               	movlw	2
 17252  004A7A  184F               	xorwf	_focus,w,c
 17253  004A7C  A4D8               	btfss	status,2,c
 17254  004A7E  D003               	goto	l13449
 17255                           
 17256                           ;gui.c: 315: {
 17257                           ;gui.c: 316: menu[1].mode = 0x80;
 17258  004A80  0E80               	movlw	128
 17259  004A82  6E0A               	movwf	_menu+9,c
 17260                           
 17261                           ;gui.c: 317: }
 17262  004A84  0012               	return	
 17263  004A86                     l13449:
 17264                           
 17265                           ;gui.c: 318: else
 17266                           ;gui.c: 319: {
 17267                           ;gui.c: 320: menu[1].mode = 0;
 17268  004A86  0E00               	movlw	0
 17269  004A88  6E0A               	movwf	_menu+9,c
 17270                           
 17271                           ;gui.c: 328: }
 17272                           ;gui.c: 330: }
 17273                           ;gui.c: 332: break;
 17274                           
 17275                           ;gui.c: 324: {
 17276  004A8A  0012               	return	
 17277  004A8C                     l13453:
 17278                           
 17279                           ;gui.c: 337: if(menu[1].mode == 3)
 17280  004A8C  0E03               	movlw	3
 17281  004A8E  180A               	xorwf	_menu+9,w,c
 17282  004A90  B4D8               	btfsc	status,2,c
 17283  004A92  0012               	return	
 17284                           
 17285                           ;gui.c: 341: else
 17286                           ;gui.c: 342: {
 17287                           ;gui.c: 343: if(focus == 2)
 17288                           
 17289                           ;gui.c: 338: {
 17290                           ;gui.c: 340: }
 17291  004A94  0E02               	movlw	2
 17292  004A96  184F               	xorwf	_focus,w,c
 17293  004A98  A4D8               	btfss	status,2,c
 17294  004A9A  D003               	goto	l13461
 17295                           
 17296                           ;gui.c: 344: {
 17297                           ;gui.c: 345: menu[1].mode = 0x80;
 17298  004A9C  0E80               	movlw	128
 17299  004A9E  6E0A               	movwf	_menu+9,c
 17300                           
 17301                           ;gui.c: 346: }
 17302  004AA0  0012               	return	
 17303  004AA2                     l13461:
 17304                           
 17305                           ;gui.c: 347: else
 17306                           ;gui.c: 348: {
 17307                           ;gui.c: 349: menu[1].mode = 0;
 17308  004AA2  0E00               	movlw	0
 17309  004AA4  6E0A               	movwf	_menu+9,c
 17310                           
 17311                           ;gui.c: 365: }
 17312                           
 17313                           ;gui.c: 364: break;
 17314                           
 17315                           ;gui.c: 363: case 0xf3:
 17316                           
 17317                           ;gui.c: 357: }
 17318                           ;gui.c: 359: }
 17319                           ;gui.c: 361: break;
 17320                           
 17321                           ;gui.c: 353: {
 17322  004AA6  0012               	return	
 17323  004AA8                     l13467:
 17324  004AA8  0100               	movlb	0	; () banked
 17325  004AAA  51FD               	movf	menu1_MsgHandlle@key& (0+255),w,b
 17326                           
 17327                           ; Switch size 1, requested type "space"
 17328                           ; Number of cases is 3, Range of values is 241 to 243
 17329                           ; switch strategies available:
 17330                           ; Name         Instructions Cycles
 17331                           ; simple_byte           10     6 (average)
 17332                           ;	Chosen strategy is simple_byte
 17333  004AAC  0AF1               	xorlw	241	; case 241
 17334  004AAE  B4D8               	btfsc	status,2,c
 17335  004AB0  D7DF               	goto	l13441
 17336  004AB2  0A03               	xorlw	3	; case 242
 17337  004AB4  B4D8               	btfsc	status,2,c
 17338  004AB6  D7EA               	goto	l13453
 17339  004AB8  0A01               	xorlw	1	; case 243
 17340  004ABA  0012               	return	
 17341  004ABC                     __end_of_menu1_MsgHandlle:
 17342                           	opt stack 0
 17343                           tblptru	equ	0xFF8
 17344                           tblptrh	equ	0xFF7
 17345                           tblptrl	equ	0xFF6
 17346                           tablat	equ	0xFF5
 17347                           prodh	equ	0xFF4
 17348                           prodl	equ	0xFF3
 17349                           intcon	equ	0xFF2
 17350                           intcon3	equ	0xFF0
 17351                           postinc0	equ	0xFEE
 17352                           wreg	equ	0xFE8
 17353                           postdec1	equ	0xFE5
 17354                           fsr1h	equ	0xFE2
 17355                           fsr1l	equ	0xFE1
 17356                           postinc2	equ	0xFDE
 17357                           fsr2h	equ	0xFDA
 17358                           fsr2l	equ	0xFD9
 17359                           status	equ	0xFD8
 17360                           
 17361 ;; *************** function _menu0_MsgHandlle *****************
 17362 ;; Defined at:
 17363 ;;		line 58 in file "../gui.c"
 17364 ;; Parameters:    Size  Location     Type
 17365 ;;  key             1    wreg     unsigned char 
 17366 ;; Auto vars:     Size  Location     Type
 17367 ;;  key             1   16[BANK1 ] unsigned char 
 17368 ;; Return value:  Size  Location     Type
 17369 ;;                  1    wreg      void 
 17370 ;; Registers used:
 17371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17372 ;; Tracked objects:
 17373 ;;		On entry : 0/0
 17374 ;;		On exit  : 0/0
 17375 ;;		Unchanged: 0/0
 17376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17377 ;;      Params:         0       0       0       0       0       0       0
 17378 ;;      Locals:         0       0       1       0       0       0       0
 17379 ;;      Temps:          0       0       0       0       0       0       0
 17380 ;;      Totals:         0       0       1       0       0       0       0
 17381 ;;Total ram usage:        1 bytes
 17382 ;; Hardware stack levels used:    1
 17383 ;; Hardware stack levels required when called:    7
 17384 ;; This function calls:
 17385 ;;		_display_cmode
 17386 ;;		_display_drop
 17387 ;;		_display_drops
 17388 ;;		_display_frame_abc
 17389 ;;		_display_frame_fghi
 17390 ;;		_display_num
 17391 ;; This function is called by:
 17392 ;;		_init_menu
 17393 ;;		_HG_interface
 17394 ;; This function uses a non-reentrant model
 17395 ;;
 17396                           
 17397                           	psect	text38
 17398  001E7E                     __ptext38:
 17399                           	opt stack 0
 17400  001E7E                     _menu0_MsgHandlle:
 17401                           	opt stack 22
 17402                           
 17403                           ;incstack = 0
 17404                           ;menu0_MsgHandlle@key stored from wreg
 17405  001E7E  0101               	movlb	1	; () banked
 17406  001E80  6F38               	movwf	menu0_MsgHandlle@key& (0+255),b
 17407                           
 17408                           ;gui.c: 60: switch(key)
 17409  001E82  D16F               	goto	l13437
 17410  001E84                     l13287:
 17411                           
 17412                           ;gui.c: 63: if(menu[0].mode == 3)
 17413  001E84  0E03               	movlw	3
 17414  001E86  1802               	xorwf	_menu+1,w,c
 17415  001E88  A4D8               	btfss	status,2,c
 17416  001E8A  D036               	goto	l13311
 17417                           
 17418                           ;gui.c: 64: {
 17419                           ;gui.c: 65: work_mode ++;
 17420  001E8C  2A4D               	incf	_work_mode,f,c
 17421                           
 17422                           ;gui.c: 66: if(work_mode == 3)
 17423  001E8E  0E03               	movlw	3
 17424  001E90  184D               	xorwf	_work_mode,w,c
 17425  001E92  A4D8               	btfss	status,2,c
 17426  001E94  D002               	goto	l13295
 17427                           
 17428                           ;gui.c: 67: {
 17429                           ;gui.c: 68: work_mode = 0x00;
 17430  001E96  0E00               	movlw	0
 17431  001E98  6E4D               	movwf	_work_mode,c
 17432  001E9A                     l13295:
 17433                           
 17434                           ;gui.c: 69: }
 17435                           ;gui.c: 72: display_frame_abc(1,71, menu[0].mode);
 17436  001E9A  0E47               	movlw	71
 17437  001E9C  0101               	movlb	1	; () banked
 17438  001E9E  6F31               	movwf	display_frame_abc@x& (0+255),b
 17439  001EA0  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17440  001EA4  0E01               	movlw	1
 17441  001EA6  EC68  F016         	call	_display_frame_abc
 17442                           
 17443                           ;gui.c: 74: if(work_mode == 0x00)
 17444  001EAA  504D               	movf	_work_mode,w,c
 17445  001EAC  A4D8               	btfss	status,2,c
 17446  001EAE  D009               	goto	l13301
 17447                           
 17448                           ;gui.c: 75: {
 17449                           ;gui.c: 76: display_cmode(1,(71 + 2), menu[0].mode);
 17450  001EB0  0E49               	movlw	73
 17451  001EB2  0101               	movlb	1	; () banked
 17452  001EB4  6F31               	movwf	display_cmode@x& (0+255),b
 17453  001EB6  C002  F132         	movff	_menu+1,display_cmode@mode
 17454  001EBA  0E01               	movlw	1
 17455  001EBC  EC20  F01F         	call	_display_cmode
 17456                           
 17457                           ;gui.c: 77: }
 17458  001EC0  D018               	goto	l13309
 17459  001EC2                     l13301:
 17460                           
 17461                           ;gui.c: 78: else if(work_mode == 0x01)
 17462  001EC2  044D               	decf	_work_mode,w,c
 17463  001EC4  A4D8               	btfss	status,2,c
 17464  001EC6  D009               	goto	l13305
 17465                           
 17466                           ;gui.c: 79: {
 17467                           ;gui.c: 80: display_drops(1,(71 + 2), menu[0].mode);
 17468  001EC8  0E49               	movlw	73
 17469  001ECA  0101               	movlb	1	; () banked
 17470  001ECC  6F31               	movwf	display_drops@x& (0+255),b
 17471  001ECE  C002  F132         	movff	_menu+1,display_drops@mode
 17472  001ED2  0E01               	movlw	1
 17473  001ED4  ECA0  F01D         	call	_display_drops
 17474                           
 17475                           ;gui.c: 81: }
 17476  001ED8  D00C               	goto	l13309
 17477  001EDA                     l13305:
 17478                           
 17479                           ;gui.c: 82: else if(work_mode == 0x02)
 17480  001EDA  0E02               	movlw	2
 17481  001EDC  184D               	xorwf	_work_mode,w,c
 17482  001EDE  A4D8               	btfss	status,2,c
 17483  001EE0  D008               	goto	l13309
 17484                           
 17485                           ;gui.c: 83: {
 17486                           ;gui.c: 84: display_drop(1,(71 + 2), menu[0].mode);
 17487  001EE2  0E49               	movlw	73
 17488  001EE4  0101               	movlb	1	; () banked
 17489  001EE6  6F31               	movwf	display_drop@x& (0+255),b
 17490  001EE8  C002  F132         	movff	_menu+1,display_drop@mode
 17491  001EEC  0E01               	movlw	1
 17492  001EEE  EC60  F01E         	call	_display_drop
 17493  001EF2                     l13309:
 17494                           
 17495                           ;gui.c: 85: }
 17496                           ;gui.c: 88: menu[0].cur_mode = menu[0].mode;
 17497  001EF2  C002  F003         	movff	_menu+1,_menu+2
 17498                           
 17499                           ;gui.c: 89: }
 17500  001EF6  0012               	return	
 17501  001EF8                     l13311:
 17502                           
 17503                           ;gui.c: 90: else
 17504                           ;gui.c: 91: {
 17505                           ;gui.c: 92: if(focus == 1)
 17506  001EF8  044F               	decf	_focus,w,c
 17507  001EFA  A4D8               	btfss	status,2,c
 17508  001EFC  D002               	goto	l13315
 17509                           
 17510                           ;gui.c: 93: {
 17511                           ;gui.c: 94: menu[0].mode = 0x80;
 17512  001EFE  0E80               	movlw	128
 17513  001F00  D001               	goto	L42
 17514  001F02                     l13315:
 17515                           
 17516                           ;gui.c: 96: else
 17517                           ;gui.c: 97: {
 17518                           ;gui.c: 98: menu[0].mode = 0;
 17519  001F02  0E00               	movlw	0
 17520  001F04                     L42:
 17521  001F04  6E02               	movwf	_menu+1,c
 17522                           
 17523                           ;gui.c: 99: }
 17524                           ;gui.c: 102: if(menu[0].cur_mode != menu[0].mode)
 17525  001F06  5002               	movf	_menu+1,w,c
 17526  001F08  1803               	xorwf	_menu+2,w,c
 17527  001F0A  B4D8               	btfsc	status,2,c
 17528  001F0C  0012               	return	
 17529                           
 17530                           ;gui.c: 103: {
 17531                           ;gui.c: 104: display_frame_abc(1,71, menu[0].mode);
 17532  001F0E  0E47               	movlw	71
 17533  001F10  0101               	movlb	1	; () banked
 17534  001F12  6F31               	movwf	display_frame_abc@x& (0+255),b
 17535  001F14  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17536  001F18  0E01               	movlw	1
 17537  001F1A  EC68  F016         	call	_display_frame_abc
 17538                           
 17539                           ;gui.c: 106: if(work_mode == 0x00)
 17540  001F1E  504D               	movf	_work_mode,w,c
 17541  001F20  A4D8               	btfss	status,2,c
 17542  001F22  D009               	goto	l13325
 17543                           
 17544                           ;gui.c: 107: {
 17545                           ;gui.c: 108: display_cmode(1,(71 + 2), menu[0].mode);
 17546  001F24  0E49               	movlw	73
 17547  001F26  0101               	movlb	1	; () banked
 17548  001F28  6F31               	movwf	display_cmode@x& (0+255),b
 17549  001F2A  C002  F132         	movff	_menu+1,display_cmode@mode
 17550  001F2E  0E01               	movlw	1
 17551  001F30  EC20  F01F         	call	_display_cmode
 17552                           
 17553                           ;gui.c: 109: }
 17554  001F34  D018               	goto	l13333
 17555  001F36                     l13325:
 17556                           
 17557                           ;gui.c: 110: else if(work_mode == 0x02)
 17558  001F36  0E02               	movlw	2
 17559  001F38  184D               	xorwf	_work_mode,w,c
 17560  001F3A  A4D8               	btfss	status,2,c
 17561  001F3C  D009               	goto	l13329
 17562                           
 17563                           ;gui.c: 111: {
 17564                           ;gui.c: 112: display_drop(1,(71 + 2), menu[0].mode);
 17565  001F3E  0E49               	movlw	73
 17566  001F40  0101               	movlb	1	; () banked
 17567  001F42  6F31               	movwf	display_drop@x& (0+255),b
 17568  001F44  C002  F132         	movff	_menu+1,display_drop@mode
 17569  001F48  0E01               	movlw	1
 17570  001F4A  EC60  F01E         	call	_display_drop
 17571                           
 17572                           ;gui.c: 113: }
 17573  001F4E  D00B               	goto	l13333
 17574  001F50                     l13329:
 17575                           
 17576                           ;gui.c: 114: else if(work_mode == 0x01)
 17577  001F50  044D               	decf	_work_mode,w,c
 17578  001F52  A4D8               	btfss	status,2,c
 17579  001F54  D008               	goto	l13333
 17580                           
 17581                           ;gui.c: 115: {
 17582                           ;gui.c: 116: display_drops(1,(71 + 2), menu[0].mode);
 17583  001F56  0E49               	movlw	73
 17584  001F58  0101               	movlb	1	; () banked
 17585  001F5A  6F31               	movwf	display_drops@x& (0+255),b
 17586  001F5C  C002  F132         	movff	_menu+1,display_drops@mode
 17587  001F60  0E01               	movlw	1
 17588  001F62  ECA0  F01D         	call	_display_drops
 17589  001F66                     l13333:
 17590                           
 17591                           ;gui.c: 117: }
 17592                           ;gui.c: 121: menu[0].cur_mode = menu[0].mode;
 17593  001F66  C002  F003         	movff	_menu+1,_menu+2
 17594                           
 17595                           ;gui.c: 124: }
 17596                           ;gui.c: 127: }
 17597                           ;gui.c: 129: break;
 17598  001F6A  0012               	return	
 17599  001F6C                     l13335:
 17600                           
 17601                           ;gui.c: 132: if(menu[0].mode == 3)
 17602  001F6C  0E03               	movlw	3
 17603  001F6E  1802               	xorwf	_menu+1,w,c
 17604  001F70  A4D8               	btfss	status,2,c
 17605  001F72  D035               	goto	l13359
 17606                           
 17607                           ;gui.c: 133: {
 17608                           ;gui.c: 135: work_mode --;
 17609  001F74  064D               	decf	_work_mode,f,c
 17610                           
 17611                           ;gui.c: 137: if(work_mode== -1)
 17612  001F76  284D               	incf	_work_mode,w,c
 17613  001F78  A4D8               	btfss	status,2,c
 17614  001F7A  D002               	goto	l13343
 17615                           
 17616                           ;gui.c: 138: {
 17617                           ;gui.c: 139: work_mode = 0x02;
 17618  001F7C  0E02               	movlw	2
 17619  001F7E  6E4D               	movwf	_work_mode,c
 17620  001F80                     l13343:
 17621                           
 17622                           ;gui.c: 140: }
 17623                           ;gui.c: 143: display_frame_abc(1,71, menu[0].mode);
 17624  001F80  0E47               	movlw	71
 17625  001F82  0101               	movlb	1	; () banked
 17626  001F84  6F31               	movwf	display_frame_abc@x& (0+255),b
 17627  001F86  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17628  001F8A  0E01               	movlw	1
 17629  001F8C  EC68  F016         	call	_display_frame_abc
 17630                           
 17631                           ;gui.c: 145: if(work_mode == 0x00)
 17632  001F90  504D               	movf	_work_mode,w,c
 17633  001F92  A4D8               	btfss	status,2,c
 17634  001F94  D009               	goto	l13349
 17635                           
 17636                           ;gui.c: 146: {
 17637                           ;gui.c: 147: display_cmode(1,(71 + 2), menu[0].mode);
 17638  001F96  0E49               	movlw	73
 17639  001F98  0101               	movlb	1	; () banked
 17640  001F9A  6F31               	movwf	display_cmode@x& (0+255),b
 17641  001F9C  C002  F132         	movff	_menu+1,display_cmode@mode
 17642  001FA0  0E01               	movlw	1
 17643  001FA2  EC20  F01F         	call	_display_cmode
 17644                           
 17645                           ;gui.c: 148: }
 17646  001FA6  D018               	goto	l13357
 17647  001FA8                     l13349:
 17648                           
 17649                           ;gui.c: 149: else if(work_mode == 0x01)
 17650  001FA8  044D               	decf	_work_mode,w,c
 17651  001FAA  A4D8               	btfss	status,2,c
 17652  001FAC  D009               	goto	l13353
 17653                           
 17654                           ;gui.c: 150: {
 17655                           ;gui.c: 151: display_drops(1,(71 + 2), menu[0].mode);
 17656  001FAE  0E49               	movlw	73
 17657  001FB0  0101               	movlb	1	; () banked
 17658  001FB2  6F31               	movwf	display_drops@x& (0+255),b
 17659  001FB4  C002  F132         	movff	_menu+1,display_drops@mode
 17660  001FB8  0E01               	movlw	1
 17661  001FBA  ECA0  F01D         	call	_display_drops
 17662                           
 17663                           ;gui.c: 152: }
 17664  001FBE  D00C               	goto	l13357
 17665  001FC0                     l13353:
 17666                           
 17667                           ;gui.c: 153: else if(work_mode == 0x02)
 17668  001FC0  0E02               	movlw	2
 17669  001FC2  184D               	xorwf	_work_mode,w,c
 17670  001FC4  A4D8               	btfss	status,2,c
 17671  001FC6  D008               	goto	l13357
 17672                           
 17673                           ;gui.c: 154: {
 17674                           ;gui.c: 155: display_drop(1,(71 + 2), menu[0].mode);
 17675  001FC8  0E49               	movlw	73
 17676  001FCA  0101               	movlb	1	; () banked
 17677  001FCC  6F31               	movwf	display_drop@x& (0+255),b
 17678  001FCE  C002  F132         	movff	_menu+1,display_drop@mode
 17679  001FD2  0E01               	movlw	1
 17680  001FD4  EC60  F01E         	call	_display_drop
 17681  001FD8                     l13357:
 17682                           
 17683                           ;gui.c: 156: }
 17684                           ;gui.c: 159: menu[0].cur_mode = menu[0].mode;
 17685  001FD8  C002  F003         	movff	_menu+1,_menu+2
 17686                           
 17687                           ;gui.c: 160: }
 17688  001FDC  0012               	return	
 17689  001FDE                     l13359:
 17690                           
 17691                           ;gui.c: 161: else
 17692                           ;gui.c: 162: {
 17693                           ;gui.c: 163: if(focus == 1)
 17694  001FDE  044F               	decf	_focus,w,c
 17695  001FE0  A4D8               	btfss	status,2,c
 17696  001FE2  D002               	goto	l13363
 17697                           
 17698                           ;gui.c: 164: {
 17699                           ;gui.c: 165: menu[0].mode = 0x80;
 17700  001FE4  0E80               	movlw	128
 17701  001FE6  D001               	goto	L43
 17702  001FE8                     l13363:
 17703                           
 17704                           ;gui.c: 167: else
 17705                           ;gui.c: 168: {
 17706                           ;gui.c: 169: menu[0].mode = 0;
 17707  001FE8  0E00               	movlw	0
 17708  001FEA                     L43:
 17709  001FEA  6E02               	movwf	_menu+1,c
 17710                           
 17711                           ;gui.c: 170: }
 17712                           ;gui.c: 173: if(menu[0].cur_mode != menu[0].mode)
 17713  001FEC  5002               	movf	_menu+1,w,c
 17714  001FEE  1803               	xorwf	_menu+2,w,c
 17715  001FF0  B4D8               	btfsc	status,2,c
 17716  001FF2  0012               	return	
 17717                           
 17718                           ;gui.c: 174: {
 17719                           ;gui.c: 175: display_frame_abc(1,71, menu[0].mode);
 17720  001FF4  0E47               	movlw	71
 17721  001FF6  0101               	movlb	1	; () banked
 17722  001FF8  6F31               	movwf	display_frame_abc@x& (0+255),b
 17723  001FFA  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17724  001FFE  0E01               	movlw	1
 17725  002000  EC68  F016         	call	_display_frame_abc
 17726                           
 17727                           ;gui.c: 178: if(work_mode == 0x00)
 17728  002004  504D               	movf	_work_mode,w,c
 17729  002006  A4D8               	btfss	status,2,c
 17730  002008  D009               	goto	l13373
 17731                           
 17732                           ;gui.c: 179: {
 17733                           ;gui.c: 180: display_cmode(1,(71 + 2), menu[0].mode);
 17734  00200A  0E49               	movlw	73
 17735  00200C  0101               	movlb	1	; () banked
 17736  00200E  6F31               	movwf	display_cmode@x& (0+255),b
 17737  002010  C002  F132         	movff	_menu+1,display_cmode@mode
 17738  002014  0E01               	movlw	1
 17739  002016  EC20  F01F         	call	_display_cmode
 17740                           
 17741                           ;gui.c: 181: }
 17742  00201A  D018               	goto	l13381
 17743  00201C                     l13373:
 17744                           
 17745                           ;gui.c: 182: else if(work_mode == 0x02)
 17746  00201C  0E02               	movlw	2
 17747  00201E  184D               	xorwf	_work_mode,w,c
 17748  002020  A4D8               	btfss	status,2,c
 17749  002022  D009               	goto	l13377
 17750                           
 17751                           ;gui.c: 183: {
 17752                           ;gui.c: 184: display_drop(1,(71 + 2), menu[0].mode);
 17753  002024  0E49               	movlw	73
 17754  002026  0101               	movlb	1	; () banked
 17755  002028  6F31               	movwf	display_drop@x& (0+255),b
 17756  00202A  C002  F132         	movff	_menu+1,display_drop@mode
 17757  00202E  0E01               	movlw	1
 17758  002030  EC60  F01E         	call	_display_drop
 17759                           
 17760                           ;gui.c: 185: }
 17761  002034  D00B               	goto	l13381
 17762  002036                     l13377:
 17763                           
 17764                           ;gui.c: 186: else if(work_mode == 0x01)
 17765  002036  044D               	decf	_work_mode,w,c
 17766  002038  A4D8               	btfss	status,2,c
 17767  00203A  D008               	goto	l13381
 17768                           
 17769                           ;gui.c: 187: {
 17770                           ;gui.c: 188: display_drops(1,(71 + 2), menu[0].mode);
 17771  00203C  0E49               	movlw	73
 17772  00203E  0101               	movlb	1	; () banked
 17773  002040  6F31               	movwf	display_drops@x& (0+255),b
 17774  002042  C002  F132         	movff	_menu+1,display_drops@mode
 17775  002046  0E01               	movlw	1
 17776  002048  ECA0  F01D         	call	_display_drops
 17777  00204C                     l13381:
 17778                           
 17779                           ;gui.c: 189: }
 17780                           ;gui.c: 193: menu[0].cur_mode = menu[0].mode;
 17781  00204C  C002  F003         	movff	_menu+1,_menu+2
 17782                           
 17783                           ;gui.c: 196: }
 17784                           ;gui.c: 199: }
 17785                           ;gui.c: 203: break;
 17786  002050  0012               	return	
 17787  002052                     l13383:
 17788                           
 17789                           ;gui.c: 207: if(menu[0].mode == 0x80)
 17790  002052  0E80               	movlw	128
 17791  002054  1802               	xorwf	_menu+1,w,c
 17792  002056  A4D8               	btfss	status,2,c
 17793  002058  D005               	goto	l13387
 17794                           
 17795                           ;gui.c: 208: {
 17796                           ;gui.c: 209: menu[0].mode = 3;
 17797  00205A  0E03               	movlw	3
 17798  00205C  6E02               	movwf	_menu+1,c
 17799                           
 17800                           ;gui.c: 210: flip = 1;
 17801  00205E  0E01               	movlw	1
 17802  002060  6E4E               	movwf	_flip,c
 17803                           
 17804                           ;gui.c: 211: }
 17805  002062  D030               	goto	l13407
 17806  002064                     l13387:
 17807                           
 17808                           ;gui.c: 212: else if(menu[0].mode == 3)
 17809  002064  0E03               	movlw	3
 17810  002066  1802               	xorwf	_menu+1,w,c
 17811  002068  A4D8               	btfss	status,2,c
 17812  00206A  D02C               	goto	l13407
 17813                           
 17814                           ;gui.c: 213: {
 17815                           ;gui.c: 216: if(work_mode == 0x01)
 17816  00206C  044D               	decf	_work_mode,w,c
 17817  00206E  A4D8               	btfss	status,2,c
 17818  002070  D01C               	goto	l13399
 17819                           
 17820                           ;gui.c: 217: {
 17821                           ;gui.c: 218: display_frame_fghi(3,0, 0);
 17822  002072  0E00               	movlw	0
 17823  002074  0101               	movlb	1	; () banked
 17824  002076  6F31               	movwf	display_frame_fghi@x& (0+255),b
 17825  002078  0E00               	movlw	0
 17826  00207A  0101               	movlb	1	; () banked
 17827  00207C  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 17828  00207E  0E03               	movlw	3
 17829  002080  EC7C  F00A         	call	_display_frame_fghi
 17830                           
 17831                           ;gui.c: 220: display_num(3,(0 + 17), 103);
 17832  002084  0E11               	movlw	17
 17833  002086  0101               	movlb	1	; () banked
 17834  002088  6F31               	movwf	display_num@x& (0+255),b
 17835  00208A  0E67               	movlw	103
 17836  00208C  0101               	movlb	1	; () banked
 17837  00208E  6F32               	movwf	display_num@mode& (0+255),b
 17838  002090  0E03               	movlw	3
 17839  002092  ECF0  F006         	call	_display_num
 17840                           
 17841                           ;gui.c: 222: menu[6].value = 103;
 17842  002096  0E67               	movlw	103
 17843  002098  6E35               	movwf	_menu+52,c
 17844                           
 17845                           ;gui.c: 224: menu[0].value = 0x01;
 17846  00209A  0E01               	movlw	1
 17847  00209C  6E05               	movwf	_menu+4,c
 17848                           
 17849                           ;gui.c: 225: hg_op.work_freq = (2*1000);
 17850  00209E  0E07               	movlw	7
 17851  0020A0  0100               	movlb	0	; () banked
 17852  0020A2  6F9C               	movwf	(_hg_op+28)& (0+255),b
 17853  0020A4  0ED0               	movlw	208
 17854  0020A6  6F9B               	movwf	(_hg_op+27)& (0+255),b
 17855                           
 17856                           ;gui.c: 227: }
 17857  0020A8  D00B               	goto	l1556
 17858  0020AA                     l13399:
 17859                           
 17860                           ;gui.c: 228: else if(work_mode == 0x02)
 17861  0020AA  0E02               	movlw	2
 17862  0020AC  184D               	xorwf	_work_mode,w,c
 17863  0020AE  A4D8               	btfss	status,2,c
 17864  0020B0  D002               	goto	l13403
 17865                           
 17866                           ;gui.c: 229: {
 17867                           ;gui.c: 230: menu[0].value = 0x02;
 17868  0020B2  0E02               	movlw	2
 17869  0020B4  D004               	goto	L44
 17870  0020B6                     l13403:
 17871                           
 17872                           ;gui.c: 232: else if(work_mode == 0x00)
 17873  0020B6  504D               	movf	_work_mode,w,c
 17874  0020B8  A4D8               	btfss	status,2,c
 17875  0020BA  D002               	goto	l1556
 17876                           
 17877                           ;gui.c: 233: {
 17878                           ;gui.c: 234: menu[0].value = 0x00;
 17879  0020BC  0E00               	movlw	0
 17880  0020BE                     L44:
 17881  0020BE  6E05               	movwf	_menu+4,c
 17882  0020C0                     l1556:
 17883                           
 17884                           ;gui.c: 235: }
 17885                           ;gui.c: 237: menu[0].mode = 0;
 17886  0020C0  0E00               	movlw	0
 17887  0020C2  6E02               	movwf	_menu+1,c
 17888  0020C4                     l13407:
 17889                           
 17890                           ;gui.c: 239: }
 17891                           ;gui.c: 241: if(menu[0].cur_mode != menu[0].mode)
 17892  0020C4  5002               	movf	_menu+1,w,c
 17893  0020C6  1803               	xorwf	_menu+2,w,c
 17894  0020C8  B4D8               	btfsc	status,2,c
 17895  0020CA  0012               	return	
 17896                           
 17897                           ;gui.c: 243: {
 17898                           ;gui.c: 244: if(menu[0].mode == 0)
 17899  0020CC  5002               	movf	_menu+1,w,c
 17900  0020CE  A4D8               	btfss	status,2,c
 17901  0020D0  D045               	goto	l13433
 17902                           
 17903                           ;gui.c: 245: {
 17904                           ;gui.c: 246: display_frame_abc(1,71, menu[0].mode);
 17905  0020D2  0E47               	movlw	71
 17906  0020D4  0101               	movlb	1	; () banked
 17907  0020D6  6F31               	movwf	display_frame_abc@x& (0+255),b
 17908  0020D8  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17909  0020DC  0E01               	movlw	1
 17910  0020DE  EC68  F016         	call	_display_frame_abc
 17911                           
 17912                           ;gui.c: 247: if(work_mode == 0x00)
 17913  0020E2  504D               	movf	_work_mode,w,c
 17914  0020E4  A4D8               	btfss	status,2,c
 17915  0020E6  D01E               	goto	l13421
 17916                           
 17917                           ;gui.c: 248: {
 17918                           ;gui.c: 249: display_cmode(1,(71 + 2), menu[0].mode);
 17919  0020E8  0E49               	movlw	73
 17920  0020EA  0101               	movlb	1	; () banked
 17921  0020EC  6F31               	movwf	display_cmode@x& (0+255),b
 17922  0020EE  C002  F132         	movff	_menu+1,display_cmode@mode
 17923  0020F2  0E01               	movlw	1
 17924  0020F4  EC20  F01F         	call	_display_cmode
 17925                           
 17926                           ;gui.c: 251: display_frame_fghi(2,0, 0);
 17927  0020F8  0E00               	movlw	0
 17928  0020FA  0101               	movlb	1	; () banked
 17929  0020FC  6F31               	movwf	display_frame_fghi@x& (0+255),b
 17930  0020FE  0E00               	movlw	0
 17931  002100  0101               	movlb	1	; () banked
 17932  002102  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 17933  002104  0E02               	movlw	2
 17934  002106  EC7C  F00A         	call	_display_frame_fghi
 17935                           
 17936                           ;gui.c: 252: display_num(3,(0 + 14), 3);
 17937  00210A  0E0E               	movlw	14
 17938  00210C  0101               	movlb	1	; () banked
 17939  00210E  6F31               	movwf	display_num@x& (0+255),b
 17940  002110  0E03               	movlw	3
 17941  002112  0101               	movlb	1	; () banked
 17942  002114  6F32               	movwf	display_num@mode& (0+255),b
 17943  002116  0E03               	movlw	3
 17944  002118  ECF0  F006         	call	_display_num
 17945                           
 17946                           ;gui.c: 253: menu[6].value = 3;
 17947  00211C  0E03               	movlw	3
 17948  00211E  6E35               	movwf	_menu+52,c
 17949                           
 17950                           ;gui.c: 258: hg_op.cur_working_mode = 0x00;
 17951  002120  0E00               	movlw	0
 17952  002122  D01A               	goto	L46
 17953  002124                     l13421:
 17954                           
 17955                           ;gui.c: 260: else if(work_mode == 0x01)
 17956  002124  044D               	decf	_work_mode,w,c
 17957  002126  A4D8               	btfss	status,2,c
 17958  002128  D00A               	goto	l13427
 17959                           
 17960                           ;gui.c: 261: {
 17961                           ;gui.c: 262: display_drops(1,(71 + 2), menu[0].mode);
 17962  00212A  0E49               	movlw	73
 17963  00212C  0101               	movlb	1	; () banked
 17964  00212E  6F31               	movwf	display_drops@x& (0+255),b
 17965  002130  C002  F132         	movff	_menu+1,display_drops@mode
 17966  002134  0E01               	movlw	1
 17967  002136  ECA0  F01D         	call	_display_drops
 17968                           
 17969                           ;gui.c: 267: hg_op.cur_working_mode = 0x01;
 17970  00213A  0E01               	movlw	1
 17971  00213C  D00D               	goto	L46
 17972  00213E                     l13427:
 17973                           
 17974                           ;gui.c: 269: else if(work_mode == 0x02)
 17975  00213E  0E02               	movlw	2
 17976  002140  184D               	xorwf	_work_mode,w,c
 17977  002142  A4D8               	btfss	status,2,c
 17978  002144  D00B               	goto	l13433
 17979                           
 17980                           ;gui.c: 270: {
 17981                           ;gui.c: 271: display_drop(1,(71 + 2), menu[0].mode);
 17982  002146  0E49               	movlw	73
 17983  002148  0101               	movlb	1	; () banked
 17984  00214A  6F31               	movwf	display_drop@x& (0+255),b
 17985  00214C  C002  F132         	movff	_menu+1,display_drop@mode
 17986  002150  0E01               	movlw	1
 17987  002152  EC60  F01E         	call	_display_drop
 17988                           
 17989                           ;gui.c: 276: hg_op.cur_working_mode = 0x02;
 17990  002156  0E02               	movlw	2
 17991  002158                     L46:
 17992  002158  0100               	movlb	0	; () banked
 17993  00215A  6F81               	movwf	(_hg_op+1)& (0+255),b
 17994  00215C                     l13433:
 17995                           
 17996                           ;gui.c: 277: }
 17997                           ;gui.c: 279: }
 17998                           ;gui.c: 280: menu[0].cur_mode = menu[0].mode;
 17999  00215C  C002  F003         	movff	_menu+1,_menu+2
 18000                           
 18001                           ;gui.c: 292: }
 18002                           
 18003                           ;gui.c: 283: }
 18004                           ;gui.c: 291: break;
 18005  002160  0012               	return	
 18006  002162                     l13437:
 18007  002162  0101               	movlb	1	; () banked
 18008  002164  5138               	movf	menu0_MsgHandlle@key& (0+255),w,b
 18009                           
 18010                           ; Switch size 1, requested type "space"
 18011                           ; Number of cases is 3, Range of values is 241 to 243
 18012                           ; switch strategies available:
 18013                           ; Name         Instructions Cycles
 18014                           ; simple_byte           10     6 (average)
 18015                           ;	Chosen strategy is simple_byte
 18016  002166  0AF1               	xorlw	241	; case 241
 18017  002168  B4D8               	btfsc	status,2,c
 18018  00216A  D68C               	goto	l13287
 18019  00216C  0A03               	xorlw	3	; case 242
 18020  00216E  B4D8               	btfsc	status,2,c
 18021  002170  D6FD               	goto	l13335
 18022  002172  0A01               	xorlw	1	; case 243
 18023  002174  A4D8               	btfss	status,2,c
 18024  002176  0012               	return	
 18025  002178  D76C               	goto	l13383
 18026  00217A                     __end_of_menu0_MsgHandlle:
 18027                           	opt stack 0
 18028                           tblptru	equ	0xFF8
 18029                           tblptrh	equ	0xFF7
 18030                           tblptrl	equ	0xFF6
 18031                           tablat	equ	0xFF5
 18032                           prodh	equ	0xFF4
 18033                           prodl	equ	0xFF3
 18034                           intcon	equ	0xFF2
 18035                           intcon3	equ	0xFF0
 18036                           postinc0	equ	0xFEE
 18037                           wreg	equ	0xFE8
 18038                           postdec1	equ	0xFE5
 18039                           fsr1h	equ	0xFE2
 18040                           fsr1l	equ	0xFE1
 18041                           postinc2	equ	0xFDE
 18042                           fsr2h	equ	0xFDA
 18043                           fsr2l	equ	0xFD9
 18044                           status	equ	0xFD8
 18045                           
 18046 ;; *************** function _display_num *****************
 18047 ;; Defined at:
 18048 ;;		line 1488 in file "../Oled.c"
 18049 ;; Parameters:    Size  Location     Type
 18050 ;;  y               1    wreg     unsigned char 
 18051 ;;  x               1    9[BANK1 ] unsigned char 
 18052 ;;  mode            1   10[BANK1 ] unsigned char 
 18053 ;; Auto vars:     Size  Location     Type
 18054 ;;  y               1   14[BANK1 ] unsigned char 
 18055 ;;  temp            1   15[BANK1 ] unsigned char 
 18056 ;;  tori            1   13[BANK1 ] unsigned char 
 18057 ;; Return value:  Size  Location     Type
 18058 ;;                  1    wreg      unsigned char 
 18059 ;; Registers used:
 18060 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18061 ;; Tracked objects:
 18062 ;;		On entry : 0/0
 18063 ;;		On exit  : 0/0
 18064 ;;		Unchanged: 0/0
 18065 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18066 ;;      Params:         0       0       2       0       0       0       0
 18067 ;;      Locals:         0       0       3       0       0       0       0
 18068 ;;      Temps:          0       0       2       0       0       0       0
 18069 ;;      Totals:         0       0       7       0       0       0       0
 18070 ;;Total ram usage:        7 bytes
 18071 ;; Hardware stack levels used:    1
 18072 ;; Hardware stack levels required when called:    6
 18073 ;; This function calls:
 18074 ;;		_ee_WriteBytes
 18075 ;;		_setYX_LCD
 18076 ;; This function is called by:
 18077 ;;		_initial_ui_setting
 18078 ;;		_menu0_MsgHandlle
 18079 ;;		_menu3_MsgHandlle
 18080 ;;		_menu4_MsgHandlle
 18081 ;;		_menu5_MsgHandlle
 18082 ;;		_menu6_MsgHandlle
 18083 ;;		_check_ui_status
 18084 ;;		_blink_mode
 18085 ;;		_menu7_MsgHandlle
 18086 ;; This function uses a non-reentrant model
 18087 ;;
 18088                           
 18089                           	psect	text39
 18090  000DE0                     __ptext39:
 18091                           	opt stack 0
 18092  000DE0                     _display_num:
 18093                           	opt stack 21
 18094                           
 18095                           ;incstack = 0
 18096                           ;display_num@y stored from wreg
 18097  000DE0  0101               	movlb	1	; () banked
 18098  000DE2  6F36               	movwf	display_num@y& (0+255),b
 18099                           
 18100                           ;Oled.c: 1490: uint8_t temp =0;
 18101  000DE4  0E00               	movlw	0
 18102  000DE6  0101               	movlb	1	; () banked
 18103  000DE8  6F37               	movwf	display_num@temp& (0+255),b
 18104                           
 18105                           ;Oled.c: 1491: uint8_t tori =0;
 18106  000DEA  0E00               	movlw	0
 18107  000DEC  0101               	movlb	1	; () banked
 18108  000DEE  6F35               	movwf	display_num@tori& (0+255),b
 18109                           
 18110                           ;Oled.c: 1493: switch(mode&0x7f)
 18111  000DF0  D041               	goto	l11369
 18112  000DF2                     l11335:
 18113                           
 18114                           ; BSR set to: 1
 18115                           ;Oled.c: 1497: n_x_m = n_0_m;
 18116  000DF2  0EB1               	movlw	low _n_0_m
 18117  000DF4  6E4B               	movwf	_n_x_m,c
 18118  000DF6  0E7E               	movlw	high _n_0_m
 18119  000DF8  D03B               	goto	L61
 18120  000DFA                     l11337:
 18121                           
 18122                           ; BSR set to: 1
 18123                           ;Oled.c: 1501: n_x_m = n_1_m;
 18124  000DFA  0E78               	movlw	low _n_1_m
 18125  000DFC  6E4B               	movwf	_n_x_m,c
 18126  000DFE  0E7E               	movlw	high _n_1_m
 18127  000E00  D037               	goto	L61
 18128  000E02                     l11339:
 18129                           
 18130                           ; BSR set to: 1
 18131                           ;Oled.c: 1505: n_x_m = n_2_m;
 18132  000E02  0ECD               	movlw	low _n_2_m
 18133  000E04  6E4B               	movwf	_n_x_m,c
 18134  000E06  0E7D               	movlw	high _n_2_m
 18135  000E08  D033               	goto	L61
 18136  000E0A                     l11341:
 18137                           
 18138                           ; BSR set to: 1
 18139                           ;Oled.c: 1509: n_x_m = n_3_m;
 18140  000E0A  0E94               	movlw	low _n_3_m
 18141  000E0C  6E4B               	movwf	_n_x_m,c
 18142  000E0E  0E7D               	movlw	high _n_3_m
 18143  000E10  D02F               	goto	L61
 18144  000E12                     l11343:
 18145                           
 18146                           ; BSR set to: 1
 18147                           ;Oled.c: 1513: n_x_m = n_4_m;
 18148  000E12  0E5B               	movlw	low _n_4_m
 18149  000E14  6E4B               	movwf	_n_x_m,c
 18150  000E16  0E7D               	movlw	high _n_4_m
 18151  000E18  D02B               	goto	L61
 18152  000E1A                     l11345:
 18153                           
 18154                           ; BSR set to: 1
 18155                           ;Oled.c: 1517: n_x_m = n_5_m;
 18156  000E1A  0EE9               	movlw	low _n_5_m
 18157  000E1C  6E4B               	movwf	_n_x_m,c
 18158  000E1E  0E7C               	movlw	high _n_5_m
 18159  000E20  D027               	goto	L61
 18160  000E22                     l11347:
 18161                           
 18162                           ; BSR set to: 1
 18163                           ;Oled.c: 1521: n_x_m = n_6_m;
 18164  000E22  0E22               	movlw	low _n_6_m
 18165  000E24  6E4B               	movwf	_n_x_m,c
 18166  000E26  0E7D               	movlw	high _n_6_m
 18167  000E28  D023               	goto	L61
 18168  000E2A                     l11349:
 18169                           
 18170                           ; BSR set to: 1
 18171                           ;Oled.c: 1525: n_x_m = n_10_m;
 18172  000E2A  0EB0               	movlw	low _n_10_m
 18173  000E2C  6E4B               	movwf	_n_x_m,c
 18174  000E2E  0E7C               	movlw	high _n_10_m
 18175  000E30  D01F               	goto	L61
 18176  000E32                     l11351:
 18177                           
 18178                           ; BSR set to: 1
 18179                           ;Oled.c: 1529: n_x_m = n_13_m;
 18180  000E32  0E77               	movlw	low _n_13_m
 18181  000E34  6E4B               	movwf	_n_x_m,c
 18182  000E36  0E7C               	movlw	high _n_13_m
 18183  000E38  D01B               	goto	L61
 18184  000E3A                     l11353:
 18185                           
 18186                           ; BSR set to: 1
 18187                           ;Oled.c: 1533: n_x_m = n_100_m;
 18188  000E3A  0E3E               	movlw	low _n_100_m
 18189  000E3C  6E4B               	movwf	_n_x_m,c
 18190  000E3E  0E7C               	movlw	high _n_100_m
 18191  000E40  D017               	goto	L61
 18192  000E42                     l11355:
 18193                           
 18194                           ; BSR set to: 1
 18195                           ;Oled.c: 1537: n_x_m = n_150_m;
 18196  000E42  0ECC               	movlw	low _n_150_m
 18197  000E44  6E4B               	movwf	_n_x_m,c
 18198  000E46  0E7B               	movlw	high _n_150_m
 18199  000E48  D013               	goto	L61
 18200  000E4A                     l11357:
 18201                           
 18202                           ; BSR set to: 1
 18203                           ;Oled.c: 1541: n_x_m = n_200_m;
 18204  000E4A  0E05               	movlw	low _n_200_m
 18205  000E4C  6E4B               	movwf	_n_x_m,c
 18206  000E4E  0E7C               	movlw	high _n_200_m
 18207  000E50  D00F               	goto	L61
 18208  000E52                     l11359:
 18209                           
 18210                           ; BSR set to: 1
 18211                           ;Oled.c: 1545: n_x_m = n_250_m;
 18212  000E52  0E5A               	movlw	low _n_250_m
 18213  000E54  6E4B               	movwf	_n_x_m,c
 18214  000E56  0E7B               	movlw	high _n_250_m
 18215  000E58  D00B               	goto	L61
 18216  000E5A                     l11361:
 18217                           
 18218                           ; BSR set to: 1
 18219                           ;Oled.c: 1549: n_x_m = n_300_m;
 18220  000E5A  0E93               	movlw	low _n_300_m
 18221  000E5C  6E4B               	movwf	_n_x_m,c
 18222  000E5E  0E7B               	movlw	high _n_300_m
 18223  000E60  D007               	goto	L61
 18224  000E62                     l11363:
 18225                           
 18226                           ; BSR set to: 1
 18227                           ;Oled.c: 1553: n_x_m = n_1P5_m;
 18228  000E62  0E3F               	movlw	low _n_1P5_m
 18229  000E64  6E4B               	movwf	_n_x_m,c
 18230  000E66  0E7E               	movlw	high _n_1P5_m
 18231  000E68  D003               	goto	L61
 18232  000E6A                     l11365:
 18233                           
 18234                           ; BSR set to: 1
 18235                           ;Oled.c: 1557: n_x_m = n_2P5_m;
 18236  000E6A  0E06               	movlw	low _n_2P5_m
 18237  000E6C  6E4B               	movwf	_n_x_m,c
 18238  000E6E  0E7E               	movlw	high _n_2P5_m
 18239  000E70                     L61:
 18240  000E70  6E4C               	movwf	_n_x_m+1,c
 18241                           
 18242                           ; BSR set to: 1
 18243                           ;Oled.c: 1560: }
 18244                           
 18245                           ;Oled.c: 1558: break;
 18246  000E72  D03D               	goto	l901
 18247  000E74                     l11369:
 18248                           
 18249                           ; BSR set to: 1
 18250  000E74  0101               	movlb	1	; () banked
 18251  000E76  5132               	movf	display_num@mode& (0+255),w,b
 18252  000E78  0B7F               	andlw	127
 18253  000E7A  0101               	movlb	1	; () banked
 18254  000E7C  6F33               	movwf	??_display_num& (0+255),b
 18255  000E7E  6B34               	clrf	(??_display_num+1)& (0+255),b
 18256                           
 18257                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18258                           ; Switch size 1, requested type "space"
 18259                           ; Number of cases is 1, Range of values is 0 to 0
 18260                           ; switch strategies available:
 18261                           ; Name         Instructions Cycles
 18262                           ; simple_byte            4     3 (average)
 18263                           ;	Chosen strategy is simple_byte
 18264  000E80  0101               	movlb	1	; () banked
 18265  000E82  5134               	movf	(??_display_num+1)& (0+255),w,b
 18266  000E84  0A00               	xorlw	0	; case 0
 18267  000E86  A4D8               	btfss	status,2,c
 18268  000E88  D032               	goto	l901
 18269                           
 18270                           ; BSR set to: 1
 18271                           ; Switch size 1, requested type "space"
 18272                           ; Number of cases is 16, Range of values is 0 to 106
 18273                           ; switch strategies available:
 18274                           ; Name         Instructions Cycles
 18275                           ; simple_byte           49    25 (average)
 18276                           ;	Chosen strategy is simple_byte
 18277  000E8A  0101               	movlb	1	; () banked
 18278  000E8C  5133               	movf	??_display_num& (0+255),w,b
 18279  000E8E  0A00               	xorlw	0	; case 0
 18280  000E90  B4D8               	btfsc	status,2,c
 18281  000E92  D7AF               	goto	l11335
 18282  000E94  0A01               	xorlw	1	; case 1
 18283  000E96  B4D8               	btfsc	status,2,c
 18284  000E98  D7B0               	goto	l11337
 18285  000E9A  0A03               	xorlw	3	; case 2
 18286  000E9C  B4D8               	btfsc	status,2,c
 18287  000E9E  D7B1               	goto	l11339
 18288  000EA0  0A01               	xorlw	1	; case 3
 18289  000EA2  B4D8               	btfsc	status,2,c
 18290  000EA4  D7B2               	goto	l11341
 18291  000EA6  0A07               	xorlw	7	; case 4
 18292  000EA8  B4D8               	btfsc	status,2,c
 18293  000EAA  D7B3               	goto	l11343
 18294  000EAC  0A01               	xorlw	1	; case 5
 18295  000EAE  B4D8               	btfsc	status,2,c
 18296  000EB0  D7B4               	goto	l11345
 18297  000EB2  0A03               	xorlw	3	; case 6
 18298  000EB4  B4D8               	btfsc	status,2,c
 18299  000EB6  D7B5               	goto	l11347
 18300  000EB8  0A0C               	xorlw	12	; case 10
 18301  000EBA  B4D8               	btfsc	status,2,c
 18302  000EBC  D7B6               	goto	l11349
 18303  000EBE  0A07               	xorlw	7	; case 13
 18304  000EC0  B4D8               	btfsc	status,2,c
 18305  000EC2  D7B7               	goto	l11351
 18306  000EC4  0A69               	xorlw	105	; case 100
 18307  000EC6  B4D8               	btfsc	status,2,c
 18308  000EC8  D7B8               	goto	l11353
 18309  000ECA  0A01               	xorlw	1	; case 101
 18310  000ECC  B4D8               	btfsc	status,2,c
 18311  000ECE  D7B9               	goto	l11355
 18312  000ED0  0A03               	xorlw	3	; case 102
 18313  000ED2  B4D8               	btfsc	status,2,c
 18314  000ED4  D7BA               	goto	l11357
 18315  000ED6  0A01               	xorlw	1	; case 103
 18316  000ED8  B4D8               	btfsc	status,2,c
 18317  000EDA  D7BB               	goto	l11359
 18318  000EDC  0A0F               	xorlw	15	; case 104
 18319  000EDE  B4D8               	btfsc	status,2,c
 18320  000EE0  D7BC               	goto	l11361
 18321  000EE2  0A01               	xorlw	1	; case 105
 18322  000EE4  B4D8               	btfsc	status,2,c
 18323  000EE6  D7BD               	goto	l11363
 18324  000EE8  0A03               	xorlw	3	; case 106
 18325  000EEA  B4D8               	btfsc	status,2,c
 18326  000EEC  D7BE               	goto	l11365
 18327  000EEE                     l901:
 18328                           
 18329                           ; BSR set to: 1
 18330                           ;Oled.c: 1563: if((mode&0x80) == 0)
 18331  000EEE  0101               	movlb	1	; () banked
 18332  000EF0  BF32               	btfsc	display_num@mode& (0+255),7,b
 18333  000EF2  D0A0               	goto	l917
 18334                           
 18335                           ; BSR set to: 1
 18336                           ;Oled.c: 1564: {
 18337                           ;Oled.c: 1567: setYX_LCD(2+y,x);
 18338  000EF4  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18339  000EF8  0101               	movlb	1	; () banked
 18340  000EFA  5136               	movf	display_num@y& (0+255),w,b
 18341  000EFC  0F02               	addlw	2
 18342  000EFE  ECB3  F024         	call	_setYX_LCD
 18343                           
 18344                           ;Oled.c: 1568: for(ms=0;ms<19;ms++)
 18345  000F02  0E00               	movlw	0
 18346  000F04  6E69               	movwf	_ms,c
 18347  000F06                     l11375:
 18348  000F06  0E12               	movlw	18
 18349  000F08  6469               	cpfsgt	_ms,c
 18350  000F0A  D001               	goto	l11379
 18351  000F0C  D025               	goto	l11387
 18352  000F0E                     l11379:
 18353                           
 18354                           ;Oled.c: 1569: {
 18355                           ;Oled.c: 1571: temp = n_x_m[0][ms];
 18356  000F0E  5069               	movf	_ms,w,c
 18357  000F10  0D01               	mullw	1
 18358  000F12  C04B  F133         	movff	_n_x_m,??_display_num
 18359  000F16  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18360  000F1A  50F3               	movf	prodl,w,c
 18361  000F1C  0101               	movlb	1	; () banked
 18362  000F1E  2733               	addwf	??_display_num& (0+255),f,b
 18363  000F20  50F4               	movf	prodh,w,c
 18364  000F22  0101               	movlb	1	; () banked
 18365  000F24  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18366  000F26  C133  FFF6         	movff	??_display_num,tblptrl
 18367  000F2A  C134  FFF7         	movff	??_display_num+1,tblptrh
 18368  000F2E                     	if	0	;tblptru may be non-zero
 18369  000F2E                     	endif
 18370  000F2E                     	if	0	;tblptru may be non-zero
 18371  000F2E                     	endif
 18372  000F2E  0008               	tblrd		*
 18373  000F30  CFF5 F137          	movff	tablat,display_num@temp
 18374                           
 18375                           ; BSR set to: 1
 18376                           ;Oled.c: 1572: ee_WriteBytes(&temp, 0x40, 1);
 18377  000F34  0E37               	movlw	low display_num@temp
 18378  000F36  0101               	movlb	1	; () banked
 18379  000F38  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18380  000F3A  0E01               	movlw	high display_num@temp
 18381  000F3C  0101               	movlb	1	; () banked
 18382  000F3E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18383  000F40  0E40               	movlw	64
 18384  000F42  0101               	movlb	1	; () banked
 18385  000F44  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18386  000F46  0E00               	movlw	0
 18387  000F48  0101               	movlb	1	; () banked
 18388  000F4A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18389  000F4C  0E01               	movlw	1
 18390  000F4E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18391  000F50  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18392  000F54  2A69               	incf	_ms,f,c
 18393  000F56  D7D7               	goto	l11375
 18394  000F58                     l11387:
 18395                           
 18396                           ;Oled.c: 1573: }
 18397                           ;Oled.c: 1576: setYX_LCD(3+y,x);
 18398  000F58  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18399  000F5C  0101               	movlb	1	; () banked
 18400  000F5E  5136               	movf	display_num@y& (0+255),w,b
 18401  000F60  0F03               	addlw	3
 18402  000F62  ECB3  F024         	call	_setYX_LCD
 18403                           
 18404                           ;Oled.c: 1577: for(ms=0;ms<19;ms++)
 18405  000F66  0E00               	movlw	0
 18406  000F68  6E69               	movwf	_ms,c
 18407  000F6A                     l11391:
 18408  000F6A  0E12               	movlw	18
 18409  000F6C  6469               	cpfsgt	_ms,c
 18410  000F6E  D001               	goto	l11395
 18411  000F70  D02A               	goto	l11403
 18412  000F72                     l11395:
 18413                           
 18414                           ;Oled.c: 1578: {
 18415                           ;Oled.c: 1580: temp = n_x_m[1][ms];
 18416  000F72  5069               	movf	_ms,w,c
 18417  000F74  0D01               	mullw	1
 18418  000F76  C04B  F133         	movff	_n_x_m,??_display_num
 18419  000F7A  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18420  000F7E  50F3               	movf	prodl,w,c
 18421  000F80  0101               	movlb	1	; () banked
 18422  000F82  2733               	addwf	??_display_num& (0+255),f,b
 18423  000F84  50F4               	movf	prodh,w,c
 18424  000F86  0101               	movlb	1	; () banked
 18425  000F88  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18426  000F8A  0E13               	movlw	19
 18427  000F8C  0101               	movlb	1	; () banked
 18428  000F8E  2733               	addwf	??_display_num& (0+255),f,b
 18429  000F90  0E00               	movlw	0
 18430  000F92  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18431  000F94  C133  FFF6         	movff	??_display_num,tblptrl
 18432  000F98  C134  FFF7         	movff	??_display_num+1,tblptrh
 18433  000F9C                     	if	0	;tblptru may be non-zero
 18434  000F9C                     	endif
 18435  000F9C                     	if	0	;tblptru may be non-zero
 18436  000F9C                     	endif
 18437  000F9C  0008               	tblrd		*
 18438  000F9E  CFF5 F137          	movff	tablat,display_num@temp
 18439                           
 18440                           ; BSR set to: 1
 18441                           ;Oled.c: 1582: ee_WriteBytes(&temp, 0x40, 1);
 18442  000FA2  0E37               	movlw	low display_num@temp
 18443  000FA4  0101               	movlb	1	; () banked
 18444  000FA6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18445  000FA8  0E01               	movlw	high display_num@temp
 18446  000FAA  0101               	movlb	1	; () banked
 18447  000FAC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18448  000FAE  0E40               	movlw	64
 18449  000FB0  0101               	movlb	1	; () banked
 18450  000FB2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18451  000FB4  0E00               	movlw	0
 18452  000FB6  0101               	movlb	1	; () banked
 18453  000FB8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18454  000FBA  0E01               	movlw	1
 18455  000FBC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18456  000FBE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18457  000FC2  2A69               	incf	_ms,f,c
 18458  000FC4  D7D2               	goto	l11391
 18459  000FC6                     l11403:
 18460                           
 18461                           ;Oled.c: 1583: }
 18462                           ;Oled.c: 1587: setYX_LCD(4+y,x);
 18463  000FC6  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18464  000FCA  0101               	movlb	1	; () banked
 18465  000FCC  5136               	movf	display_num@y& (0+255),w,b
 18466  000FCE  0F04               	addlw	4
 18467  000FD0  ECB3  F024         	call	_setYX_LCD
 18468                           
 18469                           ;Oled.c: 1588: for(ms=0;ms<19;ms++)
 18470  000FD4  0E00               	movlw	0
 18471  000FD6  6E69               	movwf	_ms,c
 18472  000FD8                     l11407:
 18473  000FD8  0E12               	movlw	18
 18474  000FDA  6469               	cpfsgt	_ms,c
 18475  000FDC  D001               	goto	l11411
 18476  000FDE  0012               	return	
 18477  000FE0                     l11411:
 18478                           
 18479                           ;Oled.c: 1589: {
 18480                           ;Oled.c: 1591: temp = n_x_m[2][ms];
 18481  000FE0  5069               	movf	_ms,w,c
 18482  000FE2  0D01               	mullw	1
 18483  000FE4  C04B  F133         	movff	_n_x_m,??_display_num
 18484  000FE8  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18485  000FEC  50F3               	movf	prodl,w,c
 18486  000FEE  0101               	movlb	1	; () banked
 18487  000FF0  2733               	addwf	??_display_num& (0+255),f,b
 18488  000FF2  50F4               	movf	prodh,w,c
 18489  000FF4  0101               	movlb	1	; () banked
 18490  000FF6  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18491  000FF8  0E26               	movlw	38
 18492  000FFA  0101               	movlb	1	; () banked
 18493  000FFC  2733               	addwf	??_display_num& (0+255),f,b
 18494  000FFE  0E00               	movlw	0
 18495  001000  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18496  001002  C133  FFF6         	movff	??_display_num,tblptrl
 18497  001006  C134  FFF7         	movff	??_display_num+1,tblptrh
 18498  00100A                     	if	0	;tblptru may be non-zero
 18499  00100A                     	endif
 18500  00100A                     	if	0	;tblptru may be non-zero
 18501  00100A                     	endif
 18502  00100A  0008               	tblrd		*
 18503  00100C  CFF5 F137          	movff	tablat,display_num@temp
 18504                           
 18505                           ; BSR set to: 1
 18506                           ;Oled.c: 1592: ee_WriteBytes(&temp, 0x40, 1);
 18507  001010  0E37               	movlw	low display_num@temp
 18508  001012  0101               	movlb	1	; () banked
 18509  001014  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18510  001016  0E01               	movlw	high display_num@temp
 18511  001018  0101               	movlb	1	; () banked
 18512  00101A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18513  00101C  0E40               	movlw	64
 18514  00101E  0101               	movlb	1	; () banked
 18515  001020  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18516  001022  0E00               	movlw	0
 18517  001024  0101               	movlb	1	; () banked
 18518  001026  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18519  001028  0E01               	movlw	1
 18520  00102A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18521  00102C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18522  001030  2A69               	incf	_ms,f,c
 18523  001032  D7D2               	goto	l11407
 18524  001034                     l917:
 18525                           
 18526                           ; BSR set to: 1
 18527                           ;Oled.c: 1595: else if((mode&0x80) == 0x80)
 18528  001034  0101               	movlb	1	; () banked
 18529  001036  AF32               	btfss	display_num@mode& (0+255),7,b
 18530  001038  0012               	return	
 18531                           
 18532                           ; BSR set to: 1
 18533                           ;Oled.c: 1596: {
 18534                           ;Oled.c: 1599: setYX_LCD(2+y,x);
 18535  00103A  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18536  00103E  0101               	movlb	1	; () banked
 18537  001040  5136               	movf	display_num@y& (0+255),w,b
 18538  001042  0F02               	addlw	2
 18539  001044  ECB3  F024         	call	_setYX_LCD
 18540                           
 18541                           ;Oled.c: 1600: for(ms=0;ms<19;ms++)
 18542  001048  0E00               	movlw	0
 18543  00104A  6E69               	movwf	_ms,c
 18544  00104C                     l11423:
 18545  00104C  0E12               	movlw	18
 18546  00104E  6469               	cpfsgt	_ms,c
 18547  001050  D001               	goto	l11427
 18548  001052  D02C               	goto	l11441
 18549  001054                     l11427:
 18550                           
 18551                           ;Oled.c: 1601: {
 18552                           ;Oled.c: 1603: temp = n_x_m[0][ms];
 18553  001054  5069               	movf	_ms,w,c
 18554  001056  0D01               	mullw	1
 18555  001058  C04B  F133         	movff	_n_x_m,??_display_num
 18556  00105C  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18557  001060  50F3               	movf	prodl,w,c
 18558  001062  0101               	movlb	1	; () banked
 18559  001064  2733               	addwf	??_display_num& (0+255),f,b
 18560  001066  50F4               	movf	prodh,w,c
 18561  001068  0101               	movlb	1	; () banked
 18562  00106A  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18563  00106C  C133  FFF6         	movff	??_display_num,tblptrl
 18564  001070  C134  FFF7         	movff	??_display_num+1,tblptrh
 18565  001074                     	if	0	;tblptru may be non-zero
 18566  001074                     	endif
 18567  001074                     	if	0	;tblptru may be non-zero
 18568  001074                     	endif
 18569  001074  0008               	tblrd		*
 18570  001076  CFF5 F137          	movff	tablat,display_num@temp
 18571                           
 18572                           ; BSR set to: 1
 18573                           ;Oled.c: 1604: tori = temp;
 18574  00107A  C137  F135         	movff	display_num@temp,display_num@tori
 18575                           
 18576                           ; BSR set to: 1
 18577                           ;Oled.c: 1606: temp = ~temp;
 18578  00107E  0101               	movlb	1	; () banked
 18579  001080  1F37               	comf	display_num@temp& (0+255),f,b
 18580                           
 18581                           ; BSR set to: 1
 18582                           ;Oled.c: 1607: temp &= 0x3f;
 18583  001082  0E3F               	movlw	63
 18584  001084  0101               	movlb	1	; () banked
 18585  001086  1737               	andwf	display_num@temp& (0+255),f,b
 18586                           
 18587                           ; BSR set to: 1
 18588                           ;Oled.c: 1609: ee_WriteBytes(&temp, 0x40, 1);
 18589  001088  0E37               	movlw	low display_num@temp
 18590  00108A  0101               	movlb	1	; () banked
 18591  00108C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18592  00108E  0E01               	movlw	high display_num@temp
 18593  001090  0101               	movlb	1	; () banked
 18594  001092  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18595  001094  0E40               	movlw	64
 18596  001096  0101               	movlb	1	; () banked
 18597  001098  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18598  00109A  0E00               	movlw	0
 18599  00109C  0101               	movlb	1	; () banked
 18600  00109E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18601  0010A0  0E01               	movlw	1
 18602  0010A2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18603  0010A4  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18604  0010A8  2A69               	incf	_ms,f,c
 18605  0010AA  D7D0               	goto	l11423
 18606  0010AC                     l11441:
 18607                           
 18608                           ;Oled.c: 1610: }
 18609                           ;Oled.c: 1613: setYX_LCD(3+y,x);
 18610  0010AC  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18611  0010B0  0101               	movlb	1	; () banked
 18612  0010B2  5136               	movf	display_num@y& (0+255),w,b
 18613  0010B4  0F03               	addlw	3
 18614  0010B6  ECB3  F024         	call	_setYX_LCD
 18615                           
 18616                           ;Oled.c: 1614: for(ms=0;ms<19;ms++)
 18617  0010BA  0E00               	movlw	0
 18618  0010BC  6E69               	movwf	_ms,c
 18619  0010BE                     l11445:
 18620  0010BE  0E12               	movlw	18
 18621  0010C0  6469               	cpfsgt	_ms,c
 18622  0010C2  D001               	goto	l11449
 18623  0010C4  D02E               	goto	l11461
 18624  0010C6                     l11449:
 18625                           
 18626                           ;Oled.c: 1615: {
 18627                           ;Oled.c: 1617: temp = n_x_m[1][ms];
 18628  0010C6  5069               	movf	_ms,w,c
 18629  0010C8  0D01               	mullw	1
 18630  0010CA  C04B  F133         	movff	_n_x_m,??_display_num
 18631  0010CE  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18632  0010D2  50F3               	movf	prodl,w,c
 18633  0010D4  0101               	movlb	1	; () banked
 18634  0010D6  2733               	addwf	??_display_num& (0+255),f,b
 18635  0010D8  50F4               	movf	prodh,w,c
 18636  0010DA  0101               	movlb	1	; () banked
 18637  0010DC  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18638  0010DE  0E13               	movlw	19
 18639  0010E0  0101               	movlb	1	; () banked
 18640  0010E2  2733               	addwf	??_display_num& (0+255),f,b
 18641  0010E4  0E00               	movlw	0
 18642  0010E6  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18643  0010E8  C133  FFF6         	movff	??_display_num,tblptrl
 18644  0010EC  C134  FFF7         	movff	??_display_num+1,tblptrh
 18645  0010F0                     	if	0	;tblptru may be non-zero
 18646  0010F0                     	endif
 18647  0010F0                     	if	0	;tblptru may be non-zero
 18648  0010F0                     	endif
 18649  0010F0  0008               	tblrd		*
 18650  0010F2  CFF5 F137          	movff	tablat,display_num@temp
 18651                           
 18652                           ; BSR set to: 1
 18653                           ;Oled.c: 1618: tori = temp;
 18654  0010F6  C137  F135         	movff	display_num@temp,display_num@tori
 18655                           
 18656                           ; BSR set to: 1
 18657                           ;Oled.c: 1620: temp = ~temp;
 18658  0010FA  0101               	movlb	1	; () banked
 18659  0010FC  1F37               	comf	display_num@temp& (0+255),f,b
 18660                           
 18661                           ; BSR set to: 1
 18662                           ;Oled.c: 1622: ee_WriteBytes(&temp, 0x40, 1);
 18663  0010FE  0E37               	movlw	low display_num@temp
 18664  001100  0101               	movlb	1	; () banked
 18665  001102  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18666  001104  0E01               	movlw	high display_num@temp
 18667  001106  0101               	movlb	1	; () banked
 18668  001108  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18669  00110A  0E40               	movlw	64
 18670  00110C  0101               	movlb	1	; () banked
 18671  00110E  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18672  001110  0E00               	movlw	0
 18673  001112  0101               	movlb	1	; () banked
 18674  001114  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18675  001116  0E01               	movlw	1
 18676  001118  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18677  00111A  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18678  00111E  2A69               	incf	_ms,f,c
 18679  001120  D7CE               	goto	l11445
 18680  001122                     l11461:
 18681                           
 18682                           ;Oled.c: 1623: }
 18683                           ;Oled.c: 1626: setYX_LCD(4+y,x);
 18684  001122  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18685  001126  0101               	movlb	1	; () banked
 18686  001128  5136               	movf	display_num@y& (0+255),w,b
 18687  00112A  0F04               	addlw	4
 18688  00112C  ECB3  F024         	call	_setYX_LCD
 18689                           
 18690                           ;Oled.c: 1627: for(ms=0;ms<19;ms++)
 18691  001130  0E00               	movlw	0
 18692  001132  6E69               	movwf	_ms,c
 18693  001134                     l11465:
 18694  001134  0E12               	movlw	18
 18695  001136  6469               	cpfsgt	_ms,c
 18696  001138  D001               	goto	l11469
 18697  00113A  0012               	return	
 18698  00113C                     l11469:
 18699                           
 18700                           ;Oled.c: 1628: {
 18701                           ;Oled.c: 1630: temp = n_x_m[2][ms];
 18702  00113C  5069               	movf	_ms,w,c
 18703  00113E  0D01               	mullw	1
 18704  001140  C04B  F133         	movff	_n_x_m,??_display_num
 18705  001144  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18706  001148  50F3               	movf	prodl,w,c
 18707  00114A  0101               	movlb	1	; () banked
 18708  00114C  2733               	addwf	??_display_num& (0+255),f,b
 18709  00114E  50F4               	movf	prodh,w,c
 18710  001150  0101               	movlb	1	; () banked
 18711  001152  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18712  001154  0E26               	movlw	38
 18713  001156  0101               	movlb	1	; () banked
 18714  001158  2733               	addwf	??_display_num& (0+255),f,b
 18715  00115A  0E00               	movlw	0
 18716  00115C  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18717  00115E  C133  FFF6         	movff	??_display_num,tblptrl
 18718  001162  C134  FFF7         	movff	??_display_num+1,tblptrh
 18719  001166                     	if	0	;tblptru may be non-zero
 18720  001166                     	endif
 18721  001166                     	if	0	;tblptru may be non-zero
 18722  001166                     	endif
 18723  001166  0008               	tblrd		*
 18724  001168  CFF5 F137          	movff	tablat,display_num@temp
 18725                           
 18726                           ; BSR set to: 1
 18727                           ;Oled.c: 1631: tori = temp;
 18728  00116C  C137  F135         	movff	display_num@temp,display_num@tori
 18729                           
 18730                           ; BSR set to: 1
 18731                           ;Oled.c: 1633: temp = 0xf0;
 18732  001170  0EF0               	movlw	240
 18733  001172  0101               	movlb	1	; () banked
 18734  001174  6F37               	movwf	display_num@temp& (0+255),b
 18735                           
 18736                           ; BSR set to: 1
 18737                           ;Oled.c: 1636: ee_WriteBytes(&temp, 0x40, 1);
 18738  001176  0E37               	movlw	low display_num@temp
 18739  001178  0101               	movlb	1	; () banked
 18740  00117A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18741  00117C  0E01               	movlw	high display_num@temp
 18742  00117E  0101               	movlb	1	; () banked
 18743  001180  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18744  001182  0E40               	movlw	64
 18745  001184  0101               	movlb	1	; () banked
 18746  001186  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18747  001188  0E00               	movlw	0
 18748  00118A  0101               	movlb	1	; () banked
 18749  00118C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18750  00118E  0E01               	movlw	1
 18751  001190  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18752  001192  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18753  001196  2A69               	incf	_ms,f,c
 18754  001198  D7CD               	goto	l11465
 18755  00119A                     __end_of_display_num:
 18756                           	opt stack 0
 18757                           tblptru	equ	0xFF8
 18758                           tblptrh	equ	0xFF7
 18759                           tblptrl	equ	0xFF6
 18760                           tablat	equ	0xFF5
 18761                           prodh	equ	0xFF4
 18762                           prodl	equ	0xFF3
 18763                           intcon	equ	0xFF2
 18764                           intcon3	equ	0xFF0
 18765                           postinc0	equ	0xFEE
 18766                           wreg	equ	0xFE8
 18767                           postdec1	equ	0xFE5
 18768                           fsr1h	equ	0xFE2
 18769                           fsr1l	equ	0xFE1
 18770                           postinc2	equ	0xFDE
 18771                           fsr2h	equ	0xFDA
 18772                           fsr2l	equ	0xFD9
 18773                           status	equ	0xFD8
 18774                           
 18775 ;; *************** function _display_frame_fghi *****************
 18776 ;; Defined at:
 18777 ;;		line 2777 in file "../Oled.c"
 18778 ;; Parameters:    Size  Location     Type
 18779 ;;  y               1    wreg     unsigned char 
 18780 ;;  x               1    9[BANK1 ] unsigned char 
 18781 ;;  mode            1   10[BANK1 ] unsigned char 
 18782 ;; Auto vars:     Size  Location     Type
 18783 ;;  y               1   14[BANK1 ] unsigned char 
 18784 ;;  temp            1   15[BANK1 ] unsigned char 
 18785 ;;  tori            1   13[BANK1 ] unsigned char 
 18786 ;; Return value:  Size  Location     Type
 18787 ;;                  1    wreg      unsigned char 
 18788 ;; Registers used:
 18789 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18790 ;; Tracked objects:
 18791 ;;		On entry : 0/0
 18792 ;;		On exit  : 0/0
 18793 ;;		Unchanged: 0/0
 18794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18795 ;;      Params:         0       0       2       0       0       0       0
 18796 ;;      Locals:         0       0       3       0       0       0       0
 18797 ;;      Temps:          0       0       2       0       0       0       0
 18798 ;;      Totals:         0       0       7       0       0       0       0
 18799 ;;Total ram usage:        7 bytes
 18800 ;; Hardware stack levels used:    1
 18801 ;; Hardware stack levels required when called:    6
 18802 ;; This function calls:
 18803 ;;		_ee_WriteBytes
 18804 ;;		_setYX_LCD
 18805 ;; This function is called by:
 18806 ;;		_initial_ui_setting
 18807 ;;		_menu0_MsgHandlle
 18808 ;;		_menu5_MsgHandlle
 18809 ;;		_menu6_MsgHandlle
 18810 ;;		_check_ui_status
 18811 ;;		_menu7_MsgHandlle
 18812 ;; This function uses a non-reentrant model
 18813 ;;
 18814                           
 18815                           	psect	text40
 18816  0014F8                     __ptext40:
 18817                           	opt stack 0
 18818  0014F8                     _display_frame_fghi:
 18819                           	opt stack 21
 18820                           
 18821                           ;incstack = 0
 18822                           ;display_frame_fghi@y stored from wreg
 18823  0014F8  0101               	movlb	1	; () banked
 18824  0014FA  6F36               	movwf	display_frame_fghi@y& (0+255),b
 18825                           
 18826                           ;Oled.c: 2779: uint8_t temp =0;
 18827  0014FC  0E00               	movlw	0
 18828  0014FE  0101               	movlb	1	; () banked
 18829  001500  6F37               	movwf	display_frame_fghi@temp& (0+255),b
 18830                           
 18831                           ;Oled.c: 2780: uint8_t tori =0;
 18832  001502  0E00               	movlw	0
 18833  001504  0101               	movlb	1	; () banked
 18834  001506  6F35               	movwf	display_frame_fghi@tori& (0+255),b
 18835                           
 18836                           ;Oled.c: 2782: switch(y)
 18837  001508  D011               	goto	l12175
 18838  00150A                     l12165:
 18839                           
 18840                           ; BSR set to: 1
 18841                           ;Oled.c: 2785: ptnx_frame = ptnf_frame;
 18842  00150A  0ECA               	movlw	low _ptnf_frame
 18843  00150C  6E45               	movwf	_ptnx_frame,c
 18844  00150E  0E7A               	movlw	high _ptnf_frame
 18845  001510  D00B               	goto	L64
 18846  001512                     l12167:
 18847                           
 18848                           ; BSR set to: 1
 18849                           ;Oled.c: 2789: ptnx_frame = ptng_frame;
 18850  001512  0E3A               	movlw	low _ptng_frame
 18851  001514  6E45               	movwf	_ptnx_frame,c
 18852  001516  0E7A               	movlw	high _ptng_frame
 18853  001518  D007               	goto	L64
 18854  00151A                     l12169:
 18855                           
 18856                           ; BSR set to: 1
 18857                           ;Oled.c: 2793: ptnx_frame = ptnh_frame;
 18858  00151A  0EAA               	movlw	low _ptnh_frame
 18859  00151C  6E45               	movwf	_ptnx_frame,c
 18860  00151E  0E79               	movlw	high _ptnh_frame
 18861  001520  D003               	goto	L64
 18862  001522                     l12171:
 18863                           
 18864                           ; BSR set to: 1
 18865                           ;Oled.c: 2797: ptnx_frame = ptni_frame;
 18866  001522  0E1A               	movlw	low _ptni_frame
 18867  001524  6E45               	movwf	_ptnx_frame,c
 18868  001526  0E79               	movlw	high _ptni_frame
 18869  001528                     L64:
 18870  001528  6E46               	movwf	_ptnx_frame+1,c
 18871                           
 18872                           ; BSR set to: 1
 18873                           ;Oled.c: 2800: }
 18874                           
 18875                           ;Oled.c: 2798: break;
 18876  00152A  D00E               	goto	l12177
 18877  00152C                     l12175:
 18878                           
 18879                           ; BSR set to: 1
 18880  00152C  0101               	movlb	1	; () banked
 18881  00152E  5136               	movf	display_frame_fghi@y& (0+255),w,b
 18882                           
 18883                           ; Switch size 1, requested type "space"
 18884                           ; Number of cases is 4, Range of values is 1 to 4
 18885                           ; switch strategies available:
 18886                           ; Name         Instructions Cycles
 18887                           ; simple_byte           13     7 (average)
 18888                           ;	Chosen strategy is simple_byte
 18889  001530  0A01               	xorlw	1	; case 1
 18890  001532  B4D8               	btfsc	status,2,c
 18891  001534  D7EA               	goto	l12165
 18892  001536  0A03               	xorlw	3	; case 2
 18893  001538  B4D8               	btfsc	status,2,c
 18894  00153A  D7EB               	goto	l12167
 18895  00153C  0A01               	xorlw	1	; case 3
 18896  00153E  B4D8               	btfsc	status,2,c
 18897  001540  D7EC               	goto	l12169
 18898  001542  0A07               	xorlw	7	; case 4
 18899  001544  B4D8               	btfsc	status,2,c
 18900  001546  D7ED               	goto	l12171
 18901  001548                     l12177:
 18902                           
 18903                           ; BSR set to: 1
 18904                           ;Oled.c: 2802: if(mode == 0)
 18905  001548  0101               	movlb	1	; () banked
 18906  00154A  5132               	movf	display_frame_fghi@mode& (0+255),w,b
 18907  00154C  0101               	movlb	1	; () banked
 18908  00154E  A4D8               	btfss	status,2,c
 18909  001550  D09A               	goto	l12227
 18910                           
 18911                           ; BSR set to: 1
 18912                           ;Oled.c: 2803: {
 18913                           ;Oled.c: 2805: setYX_LCD(5,x);
 18914  001552  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 18915  001556  0E05               	movlw	5
 18916  001558  ECB3  F024         	call	_setYX_LCD
 18917                           
 18918                           ;Oled.c: 2806: for(ms=0;ms<48;ms++)
 18919  00155C  0E00               	movlw	0
 18920  00155E  6E69               	movwf	_ms,c
 18921  001560                     l12183:
 18922  001560  0E2F               	movlw	47
 18923  001562  6469               	cpfsgt	_ms,c
 18924  001564  D001               	goto	l12187
 18925  001566  D025               	goto	l12195
 18926  001568                     l12187:
 18927                           
 18928                           ;Oled.c: 2807: {
 18929                           ;Oled.c: 2808: temp = ptnx_frame[0][ms];
 18930  001568  5069               	movf	_ms,w,c
 18931  00156A  0D01               	mullw	1
 18932  00156C  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 18933  001570  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 18934  001574  50F3               	movf	prodl,w,c
 18935  001576  0101               	movlb	1	; () banked
 18936  001578  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 18937  00157A  50F4               	movf	prodh,w,c
 18938  00157C  0101               	movlb	1	; () banked
 18939  00157E  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 18940  001580  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 18941  001584  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 18942  001588                     	if	0	;tblptru may be non-zero
 18943  001588                     	endif
 18944  001588                     	if	0	;tblptru may be non-zero
 18945  001588                     	endif
 18946  001588  0008               	tblrd		*
 18947  00158A  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 18948                           
 18949                           ; BSR set to: 1
 18950                           ;Oled.c: 2809: ee_WriteBytes(&temp, 0x40, 1);
 18951  00158E  0E37               	movlw	low display_frame_fghi@temp
 18952  001590  0101               	movlb	1	; () banked
 18953  001592  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18954  001594  0E01               	movlw	high display_frame_fghi@temp
 18955  001596  0101               	movlb	1	; () banked
 18956  001598  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18957  00159A  0E40               	movlw	64
 18958  00159C  0101               	movlb	1	; () banked
 18959  00159E  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18960  0015A0  0E00               	movlw	0
 18961  0015A2  0101               	movlb	1	; () banked
 18962  0015A4  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18963  0015A6  0E01               	movlw	1
 18964  0015A8  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18965  0015AA  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 18966  0015AE  2A69               	incf	_ms,f,c
 18967  0015B0  D7D7               	goto	l12183
 18968  0015B2                     l12195:
 18969                           
 18970                           ;Oled.c: 2810: }
 18971                           ;Oled.c: 2813: setYX_LCD(6,x);
 18972  0015B2  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 18973  0015B6  0E06               	movlw	6
 18974  0015B8  ECB3  F024         	call	_setYX_LCD
 18975                           
 18976                           ;Oled.c: 2814: for(ms=0;ms<48;ms++)
 18977  0015BC  0E00               	movlw	0
 18978  0015BE  6E69               	movwf	_ms,c
 18979  0015C0                     l12199:
 18980  0015C0  0E2F               	movlw	47
 18981  0015C2  6469               	cpfsgt	_ms,c
 18982  0015C4  D001               	goto	l12203
 18983  0015C6  D02A               	goto	l12211
 18984  0015C8                     l12203:
 18985                           
 18986                           ;Oled.c: 2815: {
 18987                           ;Oled.c: 2816: temp = ptnx_frame[1][ms];
 18988  0015C8  5069               	movf	_ms,w,c
 18989  0015CA  0D01               	mullw	1
 18990  0015CC  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 18991  0015D0  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 18992  0015D4  50F3               	movf	prodl,w,c
 18993  0015D6  0101               	movlb	1	; () banked
 18994  0015D8  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 18995  0015DA  50F4               	movf	prodh,w,c
 18996  0015DC  0101               	movlb	1	; () banked
 18997  0015DE  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 18998  0015E0  0E30               	movlw	48
 18999  0015E2  0101               	movlb	1	; () banked
 19000  0015E4  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19001  0015E6  0E00               	movlw	0
 19002  0015E8  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19003  0015EA  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19004  0015EE  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19005  0015F2                     	if	0	;tblptru may be non-zero
 19006  0015F2                     	endif
 19007  0015F2                     	if	0	;tblptru may be non-zero
 19008  0015F2                     	endif
 19009  0015F2  0008               	tblrd		*
 19010  0015F4  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19011                           
 19012                           ; BSR set to: 1
 19013                           ;Oled.c: 2818: ee_WriteBytes(&temp, 0x40, 1);
 19014  0015F8  0E37               	movlw	low display_frame_fghi@temp
 19015  0015FA  0101               	movlb	1	; () banked
 19016  0015FC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19017  0015FE  0E01               	movlw	high display_frame_fghi@temp
 19018  001600  0101               	movlb	1	; () banked
 19019  001602  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19020  001604  0E40               	movlw	64
 19021  001606  0101               	movlb	1	; () banked
 19022  001608  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19023  00160A  0E00               	movlw	0
 19024  00160C  0101               	movlb	1	; () banked
 19025  00160E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19026  001610  0E01               	movlw	1
 19027  001612  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19028  001614  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19029  001618  2A69               	incf	_ms,f,c
 19030  00161A  D7D2               	goto	l12199
 19031  00161C                     l12211:
 19032                           
 19033                           ;Oled.c: 2819: }
 19034                           ;Oled.c: 2822: setYX_LCD(7,x);
 19035  00161C  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19036  001620  0E07               	movlw	7
 19037  001622  ECB3  F024         	call	_setYX_LCD
 19038                           
 19039                           ;Oled.c: 2823: for(ms=0;ms<48;ms++)
 19040  001626  0E00               	movlw	0
 19041  001628  6E69               	movwf	_ms,c
 19042  00162A                     l12215:
 19043  00162A  0E2F               	movlw	47
 19044  00162C  6469               	cpfsgt	_ms,c
 19045  00162E  D001               	goto	l12219
 19046  001630  0012               	return	
 19047  001632                     l12219:
 19048                           
 19049                           ;Oled.c: 2824: {
 19050                           ;Oled.c: 2825: temp = ptnx_frame[2][ms];
 19051  001632  5069               	movf	_ms,w,c
 19052  001634  0D01               	mullw	1
 19053  001636  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19054  00163A  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19055  00163E  50F3               	movf	prodl,w,c
 19056  001640  0101               	movlb	1	; () banked
 19057  001642  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19058  001644  50F4               	movf	prodh,w,c
 19059  001646  0101               	movlb	1	; () banked
 19060  001648  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19061  00164A  0E60               	movlw	96
 19062  00164C  0101               	movlb	1	; () banked
 19063  00164E  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19064  001650  0E00               	movlw	0
 19065  001652  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19066  001654  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19067  001658  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19068  00165C                     	if	0	;tblptru may be non-zero
 19069  00165C                     	endif
 19070  00165C                     	if	0	;tblptru may be non-zero
 19071  00165C                     	endif
 19072  00165C  0008               	tblrd		*
 19073  00165E  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19074                           
 19075                           ; BSR set to: 1
 19076                           ;Oled.c: 2827: ee_WriteBytes(&temp, 0x40, 1);
 19077  001662  0E37               	movlw	low display_frame_fghi@temp
 19078  001664  0101               	movlb	1	; () banked
 19079  001666  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19080  001668  0E01               	movlw	high display_frame_fghi@temp
 19081  00166A  0101               	movlb	1	; () banked
 19082  00166C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19083  00166E  0E40               	movlw	64
 19084  001670  0101               	movlb	1	; () banked
 19085  001672  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19086  001674  0E00               	movlw	0
 19087  001676  0101               	movlb	1	; () banked
 19088  001678  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19089  00167A  0E01               	movlw	1
 19090  00167C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19091  00167E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19092  001682  2A69               	incf	_ms,f,c
 19093  001684  D7D2               	goto	l12215
 19094  001686                     l12227:
 19095                           
 19096                           ;Oled.c: 2830: else if(mode == 0x80)
 19097  001686  0E80               	movlw	128
 19098  001688  0101               	movlb	1	; () banked
 19099  00168A  1932               	xorwf	display_frame_fghi@mode& (0+255),w,b
 19100  00168C  A4D8               	btfss	status,2,c
 19101  00168E  0012               	return	
 19102                           
 19103                           ; BSR set to: 1
 19104                           ;Oled.c: 2831: {
 19105                           ;Oled.c: 2834: setYX_LCD(5,x);
 19106  001690  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19107  001694  0E05               	movlw	5
 19108  001696  ECB3  F024         	call	_setYX_LCD
 19109                           
 19110                           ;Oled.c: 2835: for(ms=0;ms<48;ms++)
 19111  00169A  0E00               	movlw	0
 19112  00169C  6E69               	movwf	_ms,c
 19113  00169E                     l12233:
 19114  00169E  0E2F               	movlw	47
 19115  0016A0  6469               	cpfsgt	_ms,c
 19116  0016A2  D001               	goto	l12237
 19117  0016A4  D03E               	goto	l12261
 19118  0016A6                     l12237:
 19119                           
 19120                           ;Oled.c: 2836: {
 19121                           ;Oled.c: 2837: temp = ptnx_frame[0][ms];
 19122  0016A6  5069               	movf	_ms,w,c
 19123  0016A8  0D01               	mullw	1
 19124  0016AA  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19125  0016AE  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19126  0016B2  50F3               	movf	prodl,w,c
 19127  0016B4  0101               	movlb	1	; () banked
 19128  0016B6  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19129  0016B8  50F4               	movf	prodh,w,c
 19130  0016BA  0101               	movlb	1	; () banked
 19131  0016BC  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19132  0016BE  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19133  0016C2  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19134  0016C6                     	if	0	;tblptru may be non-zero
 19135  0016C6                     	endif
 19136  0016C6                     	if	0	;tblptru may be non-zero
 19137  0016C6                     	endif
 19138  0016C6  0008               	tblrd		*
 19139  0016C8  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19140                           
 19141                           ; BSR set to: 1
 19142                           ;Oled.c: 2838: if(ms ==0 || ms == (48 -1))
 19143  0016CC  5069               	movf	_ms,w,c
 19144  0016CE  B4D8               	btfsc	status,2,c
 19145  0016D0  D004               	goto	l12243
 19146                           
 19147                           ; BSR set to: 1
 19148  0016D2  0E2F               	movlw	47
 19149  0016D4  1869               	xorwf	_ms,w,c
 19150  0016D6  A4D8               	btfss	status,2,c
 19151  0016D8  D002               	goto	l12245
 19152  0016DA                     l12243:
 19153                           
 19154                           ; BSR set to: 1
 19155                           ;Oled.c: 2839: {
 19156                           ;Oled.c: 2840: temp =0x0f;
 19157  0016DA  0E0F               	movlw	15
 19158  0016DC  D008               	goto	L65
 19159  0016DE                     l12245:
 19160                           
 19161                           ; BSR set to: 1
 19162                           ;Oled.c: 2842: else if(ms ==1 || ms == (48 -2))
 19163  0016DE  0469               	decf	_ms,w,c
 19164  0016E0  B4D8               	btfsc	status,2,c
 19165  0016E2  D004               	goto	l12249
 19166                           
 19167                           ; BSR set to: 1
 19168  0016E4  0E2E               	movlw	46
 19169  0016E6  1869               	xorwf	_ms,w,c
 19170  0016E8  A4D8               	btfss	status,2,c
 19171  0016EA  D004               	goto	l12251
 19172  0016EC                     l12249:
 19173                           
 19174                           ; BSR set to: 1
 19175                           ;Oled.c: 2843: {
 19176                           ;Oled.c: 2844: temp = 0x1f;
 19177  0016EC  0E1F               	movlw	31
 19178  0016EE                     L65:
 19179  0016EE  0101               	movlb	1	; () banked
 19180  0016F0  6F37               	movwf	display_frame_fghi@temp& (0+255),b
 19181                           
 19182                           ;Oled.c: 2845: }
 19183  0016F2  D005               	goto	l12255
 19184  0016F4                     l12251:
 19185                           
 19186                           ; BSR set to: 1
 19187                           ;Oled.c: 2846: else
 19188                           ;Oled.c: 2847: {
 19189                           ;Oled.c: 2849: temp = ~temp;
 19190  0016F4  0101               	movlb	1	; () banked
 19191  0016F6  1F37               	comf	display_frame_fghi@temp& (0+255),f,b
 19192                           
 19193                           ; BSR set to: 1
 19194                           ;Oled.c: 2850: temp &= 0x3f;
 19195  0016F8  0E3F               	movlw	63
 19196  0016FA  0101               	movlb	1	; () banked
 19197  0016FC  1737               	andwf	display_frame_fghi@temp& (0+255),f,b
 19198  0016FE                     l12255:
 19199                           
 19200                           ; BSR set to: 1
 19201                           ;Oled.c: 2851: }
 19202                           ;Oled.c: 2853: ee_WriteBytes(&temp, 0x40, 1);
 19203  0016FE  0E37               	movlw	low display_frame_fghi@temp
 19204  001700  0101               	movlb	1	; () banked
 19205  001702  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19206  001704  0E01               	movlw	high display_frame_fghi@temp
 19207  001706  0101               	movlb	1	; () banked
 19208  001708  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19209  00170A  0E40               	movlw	64
 19210  00170C  0101               	movlb	1	; () banked
 19211  00170E  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19212  001710  0E00               	movlw	0
 19213  001712  0101               	movlb	1	; () banked
 19214  001714  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19215  001716  0E01               	movlw	1
 19216  001718  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19217  00171A  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19218  00171E  2A69               	incf	_ms,f,c
 19219  001720  D7BE               	goto	l12233
 19220  001722                     l12261:
 19221                           
 19222                           ;Oled.c: 2854: }
 19223                           ;Oled.c: 2857: setYX_LCD(6,x);
 19224  001722  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19225  001726  0E06               	movlw	6
 19226  001728  ECB3  F024         	call	_setYX_LCD
 19227                           
 19228                           ;Oled.c: 2858: for(ms=0;ms<48;ms++)
 19229  00172C  0E00               	movlw	0
 19230  00172E  6E69               	movwf	_ms,c
 19231  001730                     l12265:
 19232  001730  0E2F               	movlw	47
 19233  001732  6469               	cpfsgt	_ms,c
 19234  001734  D001               	goto	l12269
 19235  001736  D036               	goto	l12283
 19236  001738                     l12269:
 19237                           
 19238                           ;Oled.c: 2859: {
 19239                           ;Oled.c: 2860: temp = ptnx_frame[1][ms];
 19240  001738  5069               	movf	_ms,w,c
 19241  00173A  0D01               	mullw	1
 19242  00173C  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19243  001740  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19244  001744  50F3               	movf	prodl,w,c
 19245  001746  0101               	movlb	1	; () banked
 19246  001748  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19247  00174A  50F4               	movf	prodh,w,c
 19248  00174C  0101               	movlb	1	; () banked
 19249  00174E  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19250  001750  0E30               	movlw	48
 19251  001752  0101               	movlb	1	; () banked
 19252  001754  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19253  001756  0E00               	movlw	0
 19254  001758  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19255  00175A  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19256  00175E  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19257  001762                     	if	0	;tblptru may be non-zero
 19258  001762                     	endif
 19259  001762                     	if	0	;tblptru may be non-zero
 19260  001762                     	endif
 19261  001762  0008               	tblrd		*
 19262  001764  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19263                           
 19264                           ; BSR set to: 1
 19265                           ;Oled.c: 2862: if(ms == 0 || ms == (48 - 1))
 19266  001768  5069               	movf	_ms,w,c
 19267  00176A  B4D8               	btfsc	status,2,c
 19268  00176C  D004               	goto	l1217
 19269                           
 19270                           ; BSR set to: 1
 19271  00176E  0E2F               	movlw	47
 19272  001770  1869               	xorwf	_ms,w,c
 19273  001772  A4D8               	btfss	status,2,c
 19274  001774  D003               	goto	l12275
 19275  001776                     l1217:
 19276                           
 19277                           ; BSR set to: 1
 19278                           ;Oled.c: 2863: {
 19279                           ;Oled.c: 2864: temp = 0xff;
 19280  001776  0101               	movlb	1	; () banked
 19281  001778  6937               	setf	display_frame_fghi@temp& (0+255),b
 19282                           
 19283                           ;Oled.c: 2865: }
 19284  00177A  D002               	goto	l12277
 19285  00177C                     l12275:
 19286                           
 19287                           ; BSR set to: 1
 19288                           ;Oled.c: 2866: else
 19289                           ;Oled.c: 2867: {
 19290                           ;Oled.c: 2868: temp = ~temp;
 19291  00177C  0101               	movlb	1	; () banked
 19292  00177E  1F37               	comf	display_frame_fghi@temp& (0+255),f,b
 19293  001780                     l12277:
 19294                           
 19295                           ; BSR set to: 1
 19296                           ;Oled.c: 2869: }
 19297                           ;Oled.c: 2871: ee_WriteBytes(&temp, 0x40, 1);
 19298  001780  0E37               	movlw	low display_frame_fghi@temp
 19299  001782  0101               	movlb	1	; () banked
 19300  001784  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19301  001786  0E01               	movlw	high display_frame_fghi@temp
 19302  001788  0101               	movlb	1	; () banked
 19303  00178A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19304  00178C  0E40               	movlw	64
 19305  00178E  0101               	movlb	1	; () banked
 19306  001790  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19307  001792  0E00               	movlw	0
 19308  001794  0101               	movlb	1	; () banked
 19309  001796  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19310  001798  0E01               	movlw	1
 19311  00179A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19312  00179C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19313  0017A0  2A69               	incf	_ms,f,c
 19314  0017A2  D7C6               	goto	l12265
 19315  0017A4                     l12283:
 19316                           
 19317                           ;Oled.c: 2872: }
 19318                           ;Oled.c: 2875: setYX_LCD(7,x);
 19319  0017A4  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19320  0017A8  0E07               	movlw	7
 19321  0017AA  ECB3  F024         	call	_setYX_LCD
 19322                           
 19323                           ;Oled.c: 2876: for(ms=0;ms<48;ms++)
 19324  0017AE  0E00               	movlw	0
 19325  0017B0  6E69               	movwf	_ms,c
 19326  0017B2                     l12287:
 19327  0017B2  0E2F               	movlw	47
 19328  0017B4  6469               	cpfsgt	_ms,c
 19329  0017B6  D001               	goto	l12291
 19330  0017B8  0012               	return	
 19331  0017BA                     l12291:
 19332                           
 19333                           ;Oled.c: 2877: {
 19334                           ;Oled.c: 2878: temp = ptnx_frame[2][ms];
 19335  0017BA  5069               	movf	_ms,w,c
 19336  0017BC  0D01               	mullw	1
 19337  0017BE  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19338  0017C2  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19339  0017C6  50F3               	movf	prodl,w,c
 19340  0017C8  0101               	movlb	1	; () banked
 19341  0017CA  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19342  0017CC  50F4               	movf	prodh,w,c
 19343  0017CE  0101               	movlb	1	; () banked
 19344  0017D0  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19345  0017D2  0E60               	movlw	96
 19346  0017D4  0101               	movlb	1	; () banked
 19347  0017D6  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19348  0017D8  0E00               	movlw	0
 19349  0017DA  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19350  0017DC  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19351  0017E0  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19352  0017E4                     	if	0	;tblptru may be non-zero
 19353  0017E4                     	endif
 19354  0017E4                     	if	0	;tblptru may be non-zero
 19355  0017E4                     	endif
 19356  0017E4  0008               	tblrd		*
 19357  0017E6  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19358                           
 19359                           ; BSR set to: 1
 19360                           ;Oled.c: 2879: if(ms ==0 || ms == (48 -1) )
 19361  0017EA  5069               	movf	_ms,w,c
 19362  0017EC  B4D8               	btfsc	status,2,c
 19363  0017EE  D004               	goto	l12297
 19364                           
 19365                           ; BSR set to: 1
 19366  0017F0  0E2F               	movlw	47
 19367  0017F2  1869               	xorwf	_ms,w,c
 19368  0017F4  A4D8               	btfss	status,2,c
 19369  0017F6  D002               	goto	l12299
 19370  0017F8                     l12297:
 19371                           
 19372                           ; BSR set to: 1
 19373                           ;Oled.c: 2880: {
 19374                           ;Oled.c: 2881: temp =0xe0;
 19375  0017F8  0EE0               	movlw	224
 19376  0017FA  D008               	goto	L66
 19377  0017FC                     l12299:
 19378                           
 19379                           ; BSR set to: 1
 19380                           ;Oled.c: 2883: else if(ms ==1 || ms == (48 -2))
 19381  0017FC  0469               	decf	_ms,w,c
 19382  0017FE  B4D8               	btfsc	status,2,c
 19383  001800  D004               	goto	l12303
 19384                           
 19385                           ; BSR set to: 1
 19386  001802  0E2E               	movlw	46
 19387  001804  1869               	xorwf	_ms,w,c
 19388  001806  A4D8               	btfss	status,2,c
 19389  001808  D004               	goto	l12305
 19390  00180A                     l12303:
 19391                           
 19392                           ; BSR set to: 1
 19393                           ;Oled.c: 2884: {
 19394                           ;Oled.c: 2885: temp = 0xf0;
 19395  00180A  0EF0               	movlw	240
 19396  00180C                     L66:
 19397  00180C  0101               	movlb	1	; () banked
 19398  00180E  6F37               	movwf	display_frame_fghi@temp& (0+255),b
 19399                           
 19400                           ;Oled.c: 2886: }
 19401  001810  D007               	goto	l12311
 19402  001812                     l12305:
 19403                           
 19404                           ; BSR set to: 1
 19405                           ;Oled.c: 2887: else
 19406                           ;Oled.c: 2888: {
 19407                           ;Oled.c: 2890: temp = ~temp;
 19408  001812  0101               	movlb	1	; () banked
 19409  001814  1F37               	comf	display_frame_fghi@temp& (0+255),f,b
 19410                           
 19411                           ; BSR set to: 1
 19412                           ;Oled.c: 2891: temp &= 0xf0;
 19413  001816  0EF0               	movlw	240
 19414  001818  0101               	movlb	1	; () banked
 19415  00181A  1737               	andwf	display_frame_fghi@temp& (0+255),f,b
 19416                           
 19417                           ; BSR set to: 1
 19418                           ;Oled.c: 2892: temp |= 0x10;
 19419  00181C  0101               	movlb	1	; () banked
 19420  00181E  8937               	bsf	display_frame_fghi@temp& (0+255),4,b
 19421  001820                     l12311:
 19422                           
 19423                           ; BSR set to: 1
 19424                           ;Oled.c: 2893: }
 19425                           ;Oled.c: 2895: ee_WriteBytes(&temp, 0x40, 1);
 19426  001820  0E37               	movlw	low display_frame_fghi@temp
 19427  001822  0101               	movlb	1	; () banked
 19428  001824  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19429  001826  0E01               	movlw	high display_frame_fghi@temp
 19430  001828  0101               	movlb	1	; () banked
 19431  00182A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19432  00182C  0E40               	movlw	64
 19433  00182E  0101               	movlb	1	; () banked
 19434  001830  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19435  001832  0E00               	movlw	0
 19436  001834  0101               	movlb	1	; () banked
 19437  001836  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19438  001838  0E01               	movlw	1
 19439  00183A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19440  00183C  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19441  001840  2A69               	incf	_ms,f,c
 19442  001842  D7B7               	goto	l12287
 19443  001844                     __end_of_display_frame_fghi:
 19444                           	opt stack 0
 19445                           tblptru	equ	0xFF8
 19446                           tblptrh	equ	0xFF7
 19447                           tblptrl	equ	0xFF6
 19448                           tablat	equ	0xFF5
 19449                           prodh	equ	0xFF4
 19450                           prodl	equ	0xFF3
 19451                           intcon	equ	0xFF2
 19452                           intcon3	equ	0xFF0
 19453                           postinc0	equ	0xFEE
 19454                           wreg	equ	0xFE8
 19455                           postdec1	equ	0xFE5
 19456                           fsr1h	equ	0xFE2
 19457                           fsr1l	equ	0xFE1
 19458                           postinc2	equ	0xFDE
 19459                           fsr2h	equ	0xFDA
 19460                           fsr2l	equ	0xFD9
 19461                           status	equ	0xFD8
 19462                           
 19463 ;; *************** function _display_frame_abc *****************
 19464 ;; Defined at:
 19465 ;;		line 2468 in file "../Oled.c"
 19466 ;; Parameters:    Size  Location     Type
 19467 ;;  y               1    wreg     unsigned char 
 19468 ;;  x               1    9[BANK1 ] unsigned char 
 19469 ;;  mode            1   10[BANK1 ] unsigned char 
 19470 ;; Auto vars:     Size  Location     Type
 19471 ;;  y               1    0[COMRAM] unsigned char 
 19472 ;;  temp            1   12[BANK1 ] unsigned char 
 19473 ;;  tori            1   11[BANK1 ] unsigned char 
 19474 ;; Return value:  Size  Location     Type
 19475 ;;                  1    wreg      unsigned char 
 19476 ;; Registers used:
 19477 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19478 ;; Tracked objects:
 19479 ;;		On entry : 0/0
 19480 ;;		On exit  : 0/0
 19481 ;;		Unchanged: 0/0
 19482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19483 ;;      Params:         0       0       2       0       0       0       0
 19484 ;;      Locals:         0       0       2       0       0       0       0
 19485 ;;      Temps:          0       0       0       0       0       0       0
 19486 ;;      Totals:         0       0       4       0       0       0       0
 19487 ;;Total ram usage:        4 bytes
 19488 ;; Hardware stack levels used:    1
 19489 ;; Hardware stack levels required when called:    6
 19490 ;; This function calls:
 19491 ;;		_ee_WriteBytes
 19492 ;;		_setYX_LCD
 19493 ;; This function is called by:
 19494 ;;		_initial_ui_setting
 19495 ;;		_menu0_MsgHandlle
 19496 ;;		_check_ui_status
 19497 ;; This function uses a non-reentrant model
 19498 ;;
 19499                           
 19500                           	psect	text41
 19501  002CD0                     __ptext41:
 19502                           	opt stack 0
 19503  002CD0                     _display_frame_abc:
 19504                           	opt stack 21
 19505                           
 19506                           ;Oled.c: 2471: uint8_t temp =0;
 19507                           
 19508                           ;incstack = 0
 19509  002CD0  0E00               	movlw	0
 19510  002CD2  0101               	movlb	1	; () banked
 19511  002CD4  6F34               	movwf	display_frame_abc@temp& (0+255),b
 19512                           
 19513                           ;Oled.c: 2472: uint8_t tori =0;
 19514  002CD6  0E00               	movlw	0
 19515  002CD8  0101               	movlb	1	; () banked
 19516  002CDA  6F33               	movwf	display_frame_abc@tori& (0+255),b
 19517                           
 19518                           ;Oled.c: 2473: switch(mode)
 19519  002CDC  D0FA               	goto	l11875
 19520  002CDE                     l11757:
 19521                           
 19522                           ; BSR set to: 1
 19523                           ;Oled.c: 2479: setYX_LCD(0,x);
 19524  002CDE  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19525  002CE2  0E00               	movlw	0
 19526  002CE4  ECB3  F024         	call	_setYX_LCD
 19527                           
 19528                           ;Oled.c: 2480: for(ms=0;ms<27;ms++)
 19529  002CE8  0E00               	movlw	0
 19530  002CEA  6E69               	movwf	_ms,c
 19531  002CEC                     l11761:
 19532  002CEC  0E1A               	movlw	26
 19533  002CEE  6469               	cpfsgt	_ms,c
 19534  002CF0  D001               	goto	l11765
 19535  002CF2  D01D               	goto	l11773
 19536  002CF4                     l11765:
 19537                           
 19538                           ;Oled.c: 2481: {
 19539                           ;Oled.c: 2483: temp =ptna_frame[0][ms];
 19540  002CF4  5069               	movf	_ms,w,c
 19541  002CF6  0D01               	mullw	1
 19542  002CF8  0EEC               	movlw	low _ptna_frame
 19543  002CFA  24F3               	addwf	prodl,w,c
 19544  002CFC  6EF6               	movwf	tblptrl,c
 19545  002CFE  0E74               	movlw	high _ptna_frame
 19546  002D00  20F4               	addwfc	prodh,w,c
 19547  002D02  6EF7               	movwf	tblptrh,c
 19548  002D04                     	if	0	;There are less than 3 active tblptr bytes
 19549  002D04                     	endif
 19550  002D04  0008               	tblrd		*
 19551  002D06  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19552                           
 19553                           ;Oled.c: 2485: ee_WriteBytes(&temp, 0x40, 1);
 19554  002D0A  0E34               	movlw	low display_frame_abc@temp
 19555  002D0C  0101               	movlb	1	; () banked
 19556  002D0E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19557  002D10  0E01               	movlw	high display_frame_abc@temp
 19558  002D12  0101               	movlb	1	; () banked
 19559  002D14  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19560  002D16  0E40               	movlw	64
 19561  002D18  0101               	movlb	1	; () banked
 19562  002D1A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19563  002D1C  0E00               	movlw	0
 19564  002D1E  0101               	movlb	1	; () banked
 19565  002D20  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19566  002D22  0E01               	movlw	1
 19567  002D24  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19568  002D26  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19569  002D2A  2A69               	incf	_ms,f,c
 19570  002D2C  D7DF               	goto	l11761
 19571  002D2E                     l11773:
 19572                           
 19573                           ;Oled.c: 2486: }
 19574                           ;Oled.c: 2489: setYX_LCD(1,x);
 19575  002D2E  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19576  002D32  0E01               	movlw	1
 19577  002D34  ECB3  F024         	call	_setYX_LCD
 19578                           
 19579                           ;Oled.c: 2490: for(ms=0;ms<27;ms++)
 19580  002D38  0E00               	movlw	0
 19581  002D3A  6E69               	movwf	_ms,c
 19582  002D3C                     l11777:
 19583  002D3C  0E1A               	movlw	26
 19584  002D3E  6469               	cpfsgt	_ms,c
 19585  002D40  D001               	goto	l11781
 19586  002D42  0012               	return	
 19587  002D44                     l11781:
 19588                           
 19589                           ;Oled.c: 2491: {
 19590                           ;Oled.c: 2492: temp = ptna_frame[1][ms];
 19591  002D44  5069               	movf	_ms,w,c
 19592  002D46  0D01               	mullw	1
 19593  002D48  0E1B               	movlw	27
 19594  002D4A  26F3               	addwf	prodl,f,c
 19595  002D4C  0E00               	movlw	0
 19596  002D4E  22F4               	addwfc	prodh,f,c
 19597  002D50  0EEC               	movlw	low _ptna_frame
 19598  002D52  24F3               	addwf	prodl,w,c
 19599  002D54  6EF6               	movwf	tblptrl,c
 19600  002D56  0E74               	movlw	high _ptna_frame
 19601  002D58  20F4               	addwfc	prodh,w,c
 19602  002D5A  6EF7               	movwf	tblptrh,c
 19603  002D5C                     	if	0	;There are less than 3 active tblptr bytes
 19604  002D5C                     	endif
 19605  002D5C  0008               	tblrd		*
 19606  002D5E  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19607                           
 19608                           ;Oled.c: 2494: ee_WriteBytes(&temp, 0x40, 1);
 19609  002D62  0E34               	movlw	low display_frame_abc@temp
 19610  002D64  0101               	movlb	1	; () banked
 19611  002D66  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19612  002D68  0E01               	movlw	high display_frame_abc@temp
 19613  002D6A  0101               	movlb	1	; () banked
 19614  002D6C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19615  002D6E  0E40               	movlw	64
 19616  002D70  0101               	movlb	1	; () banked
 19617  002D72  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19618  002D74  0E00               	movlw	0
 19619  002D76  0101               	movlb	1	; () banked
 19620  002D78  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19621  002D7A  0E01               	movlw	1
 19622  002D7C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19623  002D7E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19624  002D82  2A69               	incf	_ms,f,c
 19625  002D84  D7DB               	goto	l11777
 19626  002D86                     l11789:
 19627                           
 19628                           ;Oled.c: 2503: setYX_LCD(0,x);
 19629  002D86  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19630  002D8A  0E00               	movlw	0
 19631  002D8C  ECB3  F024         	call	_setYX_LCD
 19632                           
 19633                           ;Oled.c: 2504: for(ms=0;ms<27;ms++)
 19634  002D90  0E00               	movlw	0
 19635  002D92  6E69               	movwf	_ms,c
 19636  002D94                     l11793:
 19637  002D94  0E1A               	movlw	26
 19638  002D96  6469               	cpfsgt	_ms,c
 19639  002D98  D001               	goto	l11797
 19640  002D9A  D046               	goto	l11831
 19641  002D9C                     l11797:
 19642                           
 19643                           ;Oled.c: 2505: {
 19644                           ;Oled.c: 2507: temp = ptna_frame[0][ms];
 19645  002D9C  5069               	movf	_ms,w,c
 19646  002D9E  0D01               	mullw	1
 19647  002DA0  0EEC               	movlw	low _ptna_frame
 19648  002DA2  24F3               	addwf	prodl,w,c
 19649  002DA4  6EF6               	movwf	tblptrl,c
 19650  002DA6  0E74               	movlw	high _ptna_frame
 19651  002DA8  20F4               	addwfc	prodh,w,c
 19652  002DAA  6EF7               	movwf	tblptrh,c
 19653  002DAC                     	if	0	;There are less than 3 active tblptr bytes
 19654  002DAC                     	endif
 19655  002DAC  0008               	tblrd		*
 19656  002DAE  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19657                           
 19658                           ;Oled.c: 2508: tori = temp;
 19659  002DB2  C134  F133         	movff	display_frame_abc@temp,display_frame_abc@tori
 19660                           
 19661                           ;Oled.c: 2510: if(ms ==0 || ms == (27 -1))
 19662  002DB6  5069               	movf	_ms,w,c
 19663  002DB8  B4D8               	btfsc	status,2,c
 19664  002DBA  D004               	goto	l11805
 19665  002DBC  0E1A               	movlw	26
 19666  002DBE  1869               	xorwf	_ms,w,c
 19667  002DC0  A4D8               	btfss	status,2,c
 19668  002DC2  D00A               	goto	l11811
 19669  002DC4                     l11805:
 19670                           
 19671                           ;Oled.c: 2511: {
 19672                           ;Oled.c: 2512: temp = ~temp;
 19673  002DC4  0101               	movlb	1	; () banked
 19674  002DC6  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19675                           
 19676                           ; BSR set to: 1
 19677                           ;Oled.c: 2513: temp |= tori;
 19678  002DC8  0101               	movlb	1	; () banked
 19679  002DCA  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19680  002DCC  0101               	movlb	1	; () banked
 19681  002DCE  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19682                           
 19683                           ; BSR set to: 1
 19684                           ;Oled.c: 2514: temp &= 0x3f;
 19685  002DD0  0E3F               	movlw	63
 19686  002DD2  0101               	movlb	1	; () banked
 19687  002DD4  1734               	andwf	display_frame_abc@temp& (0+255),f,b
 19688                           
 19689                           ;Oled.c: 2516: }
 19690  002DD6  D016               	goto	l11825
 19691  002DD8                     l11811:
 19692                           
 19693                           ;Oled.c: 2517: else if(ms ==1 || ms == (27 -2))
 19694  002DD8  0469               	decf	_ms,w,c
 19695  002DDA  B4D8               	btfsc	status,2,c
 19696  002DDC  D004               	goto	l11815
 19697  002DDE  0E19               	movlw	25
 19698  002DE0  1869               	xorwf	_ms,w,c
 19699  002DE2  A4D8               	btfss	status,2,c
 19700  002DE4  D009               	goto	l11821
 19701  002DE6                     l11815:
 19702                           
 19703                           ;Oled.c: 2518: {
 19704                           ;Oled.c: 2519: temp = ~temp;
 19705  002DE6  0101               	movlb	1	; () banked
 19706  002DE8  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19707                           
 19708                           ; BSR set to: 1
 19709                           ;Oled.c: 2520: temp |= tori;
 19710  002DEA  0101               	movlb	1	; () banked
 19711  002DEC  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19712  002DEE  0101               	movlb	1	; () banked
 19713  002DF0  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19714                           
 19715                           ; BSR set to: 1
 19716                           ;Oled.c: 2521: temp &= 0x7f;;
 19717  002DF2  0101               	movlb	1	; () banked
 19718  002DF4  9F34               	bcf	display_frame_abc@temp& (0+255),7,b
 19719                           
 19720                           ;Oled.c: 2522: }
 19721  002DF6  D006               	goto	l11825
 19722  002DF8                     l11821:
 19723                           
 19724                           ;Oled.c: 2523: else
 19725                           ;Oled.c: 2524: {
 19726                           ;Oled.c: 2526: temp = ~temp;
 19727  002DF8  0101               	movlb	1	; () banked
 19728  002DFA  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19729                           
 19730                           ; BSR set to: 1
 19731                           ;Oled.c: 2527: temp |= tori;
 19732  002DFC  0101               	movlb	1	; () banked
 19733  002DFE  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19734  002E00  0101               	movlb	1	; () banked
 19735  002E02  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19736  002E04                     l11825:
 19737                           
 19738                           ; BSR set to: 1
 19739                           ;Oled.c: 2529: }
 19740                           ;Oled.c: 2531: ee_WriteBytes(&temp, 0x40, 1);
 19741  002E04  0E34               	movlw	low display_frame_abc@temp
 19742  002E06  0101               	movlb	1	; () banked
 19743  002E08  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19744  002E0A  0E01               	movlw	high display_frame_abc@temp
 19745  002E0C  0101               	movlb	1	; () banked
 19746  002E0E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19747  002E10  0E40               	movlw	64
 19748  002E12  0101               	movlb	1	; () banked
 19749  002E14  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19750  002E16  0E00               	movlw	0
 19751  002E18  0101               	movlb	1	; () banked
 19752  002E1A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19753  002E1C  0E01               	movlw	1
 19754  002E1E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19755  002E20  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19756  002E24  2A69               	incf	_ms,f,c
 19757  002E26  D7B6               	goto	l11793
 19758  002E28                     l11831:
 19759                           
 19760                           ;Oled.c: 2532: }
 19761                           ;Oled.c: 2535: setYX_LCD(1,x);
 19762  002E28  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19763  002E2C  0E01               	movlw	1
 19764  002E2E  ECB3  F024         	call	_setYX_LCD
 19765                           
 19766                           ;Oled.c: 2536: for(ms=0;ms<27;ms++)
 19767  002E32  0E00               	movlw	0
 19768  002E34  6E69               	movwf	_ms,c
 19769  002E36                     l11835:
 19770  002E36  0E1A               	movlw	26
 19771  002E38  6469               	cpfsgt	_ms,c
 19772  002E3A  D001               	goto	l11839
 19773  002E3C  0012               	return	
 19774  002E3E                     l11839:
 19775                           
 19776                           ;Oled.c: 2537: {
 19777                           ;Oled.c: 2538: temp = ptna_frame[1][ms];
 19778  002E3E  5069               	movf	_ms,w,c
 19779  002E40  0D01               	mullw	1
 19780  002E42  0E1B               	movlw	27
 19781  002E44  26F3               	addwf	prodl,f,c
 19782  002E46  0E00               	movlw	0
 19783  002E48  22F4               	addwfc	prodh,f,c
 19784  002E4A  0EEC               	movlw	low _ptna_frame
 19785  002E4C  24F3               	addwf	prodl,w,c
 19786  002E4E  6EF6               	movwf	tblptrl,c
 19787  002E50  0E74               	movlw	high _ptna_frame
 19788  002E52  20F4               	addwfc	prodh,w,c
 19789  002E54  6EF7               	movwf	tblptrh,c
 19790  002E56                     	if	0	;There are less than 3 active tblptr bytes
 19791  002E56                     	endif
 19792  002E56  0008               	tblrd		*
 19793  002E58  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19794                           
 19795                           ;Oled.c: 2539: tori =temp;
 19796  002E5C  C134  F133         	movff	display_frame_abc@temp,display_frame_abc@tori
 19797                           
 19798                           ;Oled.c: 2540: if(ms ==0 || ms == (27 -1))
 19799  002E60  5069               	movf	_ms,w,c
 19800  002E62  B4D8               	btfsc	status,2,c
 19801  002E64  D004               	goto	l11847
 19802  002E66  0E1A               	movlw	26
 19803  002E68  1869               	xorwf	_ms,w,c
 19804  002E6A  A4D8               	btfss	status,2,c
 19805  002E6C  D00A               	goto	l11853
 19806  002E6E                     l11847:
 19807                           
 19808                           ;Oled.c: 2541: {
 19809                           ;Oled.c: 2542: temp = ~temp;
 19810  002E6E  0101               	movlb	1	; () banked
 19811  002E70  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19812                           
 19813                           ; BSR set to: 1
 19814                           ;Oled.c: 2543: temp |= tori;
 19815  002E72  0101               	movlb	1	; () banked
 19816  002E74  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19817  002E76  0101               	movlb	1	; () banked
 19818  002E78  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19819                           
 19820                           ; BSR set to: 1
 19821                           ;Oled.c: 2544: temp &= 0xfc;
 19822  002E7A  0EFC               	movlw	252
 19823  002E7C  0101               	movlb	1	; () banked
 19824  002E7E  1734               	andwf	display_frame_abc@temp& (0+255),f,b
 19825                           
 19826                           ;Oled.c: 2545: }
 19827  002E80  D016               	goto	l11867
 19828  002E82                     l11853:
 19829                           
 19830                           ;Oled.c: 2546: else if(ms ==1 || ms == (27 -2))
 19831  002E82  0469               	decf	_ms,w,c
 19832  002E84  B4D8               	btfsc	status,2,c
 19833  002E86  D004               	goto	l11857
 19834  002E88  0E19               	movlw	25
 19835  002E8A  1869               	xorwf	_ms,w,c
 19836  002E8C  A4D8               	btfss	status,2,c
 19837  002E8E  D009               	goto	l11863
 19838  002E90                     l11857:
 19839                           
 19840                           ;Oled.c: 2547: {
 19841                           ;Oled.c: 2549: temp = ~temp;
 19842  002E90  0101               	movlb	1	; () banked
 19843  002E92  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19844                           
 19845                           ; BSR set to: 1
 19846                           ;Oled.c: 2550: temp |= tori;
 19847  002E94  0101               	movlb	1	; () banked
 19848  002E96  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19849  002E98  0101               	movlb	1	; () banked
 19850  002E9A  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19851                           
 19852                           ; BSR set to: 1
 19853                           ;Oled.c: 2551: temp &= 0xfe;
 19854  002E9C  0101               	movlb	1	; () banked
 19855  002E9E  9134               	bcf	display_frame_abc@temp& (0+255),0,b
 19856                           
 19857                           ;Oled.c: 2553: }
 19858  002EA0  D006               	goto	l11867
 19859  002EA2                     l11863:
 19860                           
 19861                           ;Oled.c: 2554: else
 19862                           ;Oled.c: 2555: {
 19863                           ;Oled.c: 2557: temp = ~temp;
 19864  002EA2  0101               	movlb	1	; () banked
 19865  002EA4  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19866                           
 19867                           ; BSR set to: 1
 19868                           ;Oled.c: 2558: temp |= tori;
 19869  002EA6  0101               	movlb	1	; () banked
 19870  002EA8  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19871  002EAA  0101               	movlb	1	; () banked
 19872  002EAC  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19873  002EAE                     l11867:
 19874                           
 19875                           ; BSR set to: 1
 19876                           ;Oled.c: 2559: }
 19877                           ;Oled.c: 2561: ee_WriteBytes(&temp, 0x40, 1);
 19878  002EAE  0E34               	movlw	low display_frame_abc@temp
 19879  002EB0  0101               	movlb	1	; () banked
 19880  002EB2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19881  002EB4  0E01               	movlw	high display_frame_abc@temp
 19882  002EB6  0101               	movlb	1	; () banked
 19883  002EB8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19884  002EBA  0E40               	movlw	64
 19885  002EBC  0101               	movlb	1	; () banked
 19886  002EBE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19887  002EC0  0E00               	movlw	0
 19888  002EC2  0101               	movlb	1	; () banked
 19889  002EC4  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19890  002EC6  0E01               	movlw	1
 19891  002EC8  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19892  002ECA  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 19893  002ECE  2A69               	incf	_ms,f,c
 19894  002ED0  D7B2               	goto	l11835
 19895  002ED2                     l11875:
 19896  002ED2  0101               	movlb	1	; () banked
 19897  002ED4  5132               	movf	display_frame_abc@mode& (0+255),w,b
 19898                           
 19899                           ; Switch size 1, requested type "space"
 19900                           ; Number of cases is 2, Range of values is 0 to 128
 19901                           ; switch strategies available:
 19902                           ; Name         Instructions Cycles
 19903                           ; simple_byte            7     4 (average)
 19904                           ;	Chosen strategy is simple_byte
 19905  002ED6  0A00               	xorlw	0	; case 0
 19906  002ED8  B4D8               	btfsc	status,2,c
 19907  002EDA  D701               	goto	l11757
 19908  002EDC  0A80               	xorlw	128	; case 128
 19909  002EDE  A4D8               	btfss	status,2,c
 19910  002EE0  0012               	return	
 19911  002EE2  D751               	goto	l11789
 19912  002EE4                     __end_of_display_frame_abc:
 19913                           	opt stack 0
 19914                           tblptru	equ	0xFF8
 19915                           tblptrh	equ	0xFF7
 19916                           tblptrl	equ	0xFF6
 19917                           tablat	equ	0xFF5
 19918                           prodh	equ	0xFF4
 19919                           prodl	equ	0xFF3
 19920                           intcon	equ	0xFF2
 19921                           intcon3	equ	0xFF0
 19922                           postinc0	equ	0xFEE
 19923                           wreg	equ	0xFE8
 19924                           postdec1	equ	0xFE5
 19925                           fsr1h	equ	0xFE2
 19926                           fsr1l	equ	0xFE1
 19927                           postinc2	equ	0xFDE
 19928                           fsr2h	equ	0xFDA
 19929                           fsr2l	equ	0xFD9
 19930                           status	equ	0xFD8
 19931                           
 19932 ;; *************** function _display_drops *****************
 19933 ;; Defined at:
 19934 ;;		line 2102 in file "../Oled.c"
 19935 ;; Parameters:    Size  Location     Type
 19936 ;;  y               1    wreg     unsigned char 
 19937 ;;  x               1    9[BANK1 ] unsigned char 
 19938 ;;  mode            1   10[BANK1 ] unsigned char 
 19939 ;; Auto vars:     Size  Location     Type
 19940 ;;  y               1    0[COMRAM] unsigned char 
 19941 ;;  temp            1   12[BANK1 ] unsigned char 
 19942 ;;  tori            1   11[BANK1 ] unsigned char 
 19943 ;; Return value:  Size  Location     Type
 19944 ;;                  1    wreg      void 
 19945 ;; Registers used:
 19946 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19947 ;; Tracked objects:
 19948 ;;		On entry : 0/0
 19949 ;;		On exit  : 0/0
 19950 ;;		Unchanged: 0/0
 19951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19952 ;;      Params:         0       0       2       0       0       0       0
 19953 ;;      Locals:         0       0       2       0       0       0       0
 19954 ;;      Temps:          0       0       0       0       0       0       0
 19955 ;;      Totals:         0       0       4       0       0       0       0
 19956 ;;Total ram usage:        4 bytes
 19957 ;; Hardware stack levels used:    1
 19958 ;; Hardware stack levels required when called:    6
 19959 ;; This function calls:
 19960 ;;		_ee_WriteBytes
 19961 ;;		_setYX_LCD
 19962 ;; This function is called by:
 19963 ;;		_menu0_MsgHandlle
 19964 ;;		_check_ui_status
 19965 ;;		_blink_mode
 19966 ;; This function uses a non-reentrant model
 19967 ;;
 19968                           
 19969                           	psect	text42
 19970  003B40                     __ptext42:
 19971                           	opt stack 0
 19972  003B40                     _display_drops:
 19973                           	opt stack 23
 19974                           
 19975                           ;Oled.c: 2105: uint8_t temp =0;
 19976                           
 19977                           ;incstack = 0
 19978  003B40  0E00               	movlw	0
 19979  003B42  0101               	movlb	1	; () banked
 19980  003B44  6F34               	movwf	display_drops@temp& (0+255),b
 19981                           
 19982                           ;Oled.c: 2106: uint8_t tori =0;
 19983  003B46  0E00               	movlw	0
 19984  003B48  0101               	movlb	1	; () banked
 19985  003B4A  6F33               	movwf	display_drops@tori& (0+255),b
 19986                           
 19987                           ;Oled.c: 2107: switch(mode)
 19988  003B4C  D0B0               	goto	l12785
 19989  003B4E                     l12711:
 19990                           
 19991                           ; BSR set to: 1
 19992                           ;Oled.c: 2113: setYX_LCD(0,x);
 19993  003B4E  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 19994  003B52  0E00               	movlw	0
 19995  003B54  ECB3  F024         	call	_setYX_LCD
 19996                           
 19997                           ;Oled.c: 2114: for(ms=0;ms<23;ms++)
 19998  003B58  0E00               	movlw	0
 19999  003B5A  6E69               	movwf	_ms,c
 20000  003B5C                     l12715:
 20001  003B5C  0E16               	movlw	22
 20002  003B5E  6469               	cpfsgt	_ms,c
 20003  003B60  D001               	goto	l12719
 20004  003B62  D01D               	goto	l12727
 20005  003B64                     l12719:
 20006                           
 20007                           ;Oled.c: 2115: {
 20008                           ;Oled.c: 2117: temp =drops_m[0][ms];
 20009  003B64  5069               	movf	_ms,w,c
 20010  003B66  0D01               	mullw	1
 20011  003B68  0E7E               	movlw	low _drops_m
 20012  003B6A  24F3               	addwf	prodl,w,c
 20013  003B6C  6EF6               	movwf	tblptrl,c
 20014  003B6E  0E75               	movlw	high _drops_m
 20015  003B70  20F4               	addwfc	prodh,w,c
 20016  003B72  6EF7               	movwf	tblptrh,c
 20017  003B74                     	if	0	;There are less than 3 active tblptr bytes
 20018  003B74                     	endif
 20019  003B74  0008               	tblrd		*
 20020  003B76  CFF5 F134          	movff	tablat,display_drops@temp
 20021                           
 20022                           ;Oled.c: 2118: ee_WriteBytes(&temp, 0x40, 1);
 20023  003B7A  0E34               	movlw	low display_drops@temp
 20024  003B7C  0101               	movlb	1	; () banked
 20025  003B7E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20026  003B80  0E01               	movlw	high display_drops@temp
 20027  003B82  0101               	movlb	1	; () banked
 20028  003B84  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20029  003B86  0E40               	movlw	64
 20030  003B88  0101               	movlb	1	; () banked
 20031  003B8A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20032  003B8C  0E00               	movlw	0
 20033  003B8E  0101               	movlb	1	; () banked
 20034  003B90  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20035  003B92  0E01               	movlw	1
 20036  003B94  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20037  003B96  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20038  003B9A  2A69               	incf	_ms,f,c
 20039  003B9C  D7DF               	goto	l12715
 20040  003B9E                     l12727:
 20041                           
 20042                           ;Oled.c: 2119: }
 20043                           ;Oled.c: 2122: setYX_LCD(1,x);
 20044  003B9E  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20045  003BA2  0E01               	movlw	1
 20046  003BA4  ECB3  F024         	call	_setYX_LCD
 20047                           
 20048                           ;Oled.c: 2123: for(ms=0;ms<23;ms++)
 20049  003BA8  0E00               	movlw	0
 20050  003BAA  6E69               	movwf	_ms,c
 20051  003BAC                     l12731:
 20052  003BAC  0E16               	movlw	22
 20053  003BAE  6469               	cpfsgt	_ms,c
 20054  003BB0  D001               	goto	l12735
 20055  003BB2  0012               	return	
 20056  003BB4                     l12735:
 20057                           
 20058                           ;Oled.c: 2124: {
 20059                           ;Oled.c: 2125: temp = drops_m[1][ms];
 20060  003BB4  5069               	movf	_ms,w,c
 20061  003BB6  0D01               	mullw	1
 20062  003BB8  0E17               	movlw	23
 20063  003BBA  26F3               	addwf	prodl,f,c
 20064  003BBC  0E00               	movlw	0
 20065  003BBE  22F4               	addwfc	prodh,f,c
 20066  003BC0  0E7E               	movlw	low _drops_m
 20067  003BC2  24F3               	addwf	prodl,w,c
 20068  003BC4  6EF6               	movwf	tblptrl,c
 20069  003BC6  0E75               	movlw	high _drops_m
 20070  003BC8  20F4               	addwfc	prodh,w,c
 20071  003BCA  6EF7               	movwf	tblptrh,c
 20072  003BCC                     	if	0	;There are less than 3 active tblptr bytes
 20073  003BCC                     	endif
 20074  003BCC  0008               	tblrd		*
 20075  003BCE  CFF5 F134          	movff	tablat,display_drops@temp
 20076                           
 20077                           ;Oled.c: 2126: ee_WriteBytes(&temp, 0x40, 1);
 20078  003BD2  0E34               	movlw	low display_drops@temp
 20079  003BD4  0101               	movlb	1	; () banked
 20080  003BD6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20081  003BD8  0E01               	movlw	high display_drops@temp
 20082  003BDA  0101               	movlb	1	; () banked
 20083  003BDC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20084  003BDE  0E40               	movlw	64
 20085  003BE0  0101               	movlb	1	; () banked
 20086  003BE2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20087  003BE4  0E00               	movlw	0
 20088  003BE6  0101               	movlb	1	; () banked
 20089  003BE8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20090  003BEA  0E01               	movlw	1
 20091  003BEC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20092  003BEE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20093  003BF2  2A69               	incf	_ms,f,c
 20094  003BF4  D7DB               	goto	l12731
 20095  003BF6                     l12743:
 20096                           
 20097                           ;Oled.c: 2135: setYX_LCD(0,x);
 20098  003BF6  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20099  003BFA  0E00               	movlw	0
 20100  003BFC  ECB3  F024         	call	_setYX_LCD
 20101                           
 20102                           ;Oled.c: 2136: for(ms=0;ms<23;ms++)
 20103  003C00  0E00               	movlw	0
 20104  003C02  6E69               	movwf	_ms,c
 20105  003C04                     l12747:
 20106  003C04  0E16               	movlw	22
 20107  003C06  6469               	cpfsgt	_ms,c
 20108  003C08  D001               	goto	l12751
 20109  003C0A  D021               	goto	l12763
 20110  003C0C                     l12751:
 20111                           
 20112                           ;Oled.c: 2137: {
 20113                           ;Oled.c: 2139: temp = drops_m[0][ms];
 20114  003C0C  5069               	movf	_ms,w,c
 20115  003C0E  0D01               	mullw	1
 20116  003C10  0E7E               	movlw	low _drops_m
 20117  003C12  24F3               	addwf	prodl,w,c
 20118  003C14  6EF6               	movwf	tblptrl,c
 20119  003C16  0E75               	movlw	high _drops_m
 20120  003C18  20F4               	addwfc	prodh,w,c
 20121  003C1A  6EF7               	movwf	tblptrh,c
 20122  003C1C                     	if	0	;There are less than 3 active tblptr bytes
 20123  003C1C                     	endif
 20124  003C1C  0008               	tblrd		*
 20125  003C1E  CFF5 F134          	movff	tablat,display_drops@temp
 20126                           
 20127                           ;Oled.c: 2140: tori = temp;
 20128  003C22  C134  F133         	movff	display_drops@temp,display_drops@tori
 20129                           
 20130                           ;Oled.c: 2141: temp = ~temp;
 20131  003C26  0101               	movlb	1	; () banked
 20132  003C28  1F34               	comf	display_drops@temp& (0+255),f,b
 20133                           
 20134                           ; BSR set to: 1
 20135                           ;Oled.c: 2143: ee_WriteBytes(&temp, 0x40, 1);
 20136  003C2A  0E34               	movlw	low display_drops@temp
 20137  003C2C  0101               	movlb	1	; () banked
 20138  003C2E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20139  003C30  0E01               	movlw	high display_drops@temp
 20140  003C32  0101               	movlb	1	; () banked
 20141  003C34  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20142  003C36  0E40               	movlw	64
 20143  003C38  0101               	movlb	1	; () banked
 20144  003C3A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20145  003C3C  0E00               	movlw	0
 20146  003C3E  0101               	movlb	1	; () banked
 20147  003C40  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20148  003C42  0E01               	movlw	1
 20149  003C44  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20150  003C46  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20151  003C4A  2A69               	incf	_ms,f,c
 20152  003C4C  D7DB               	goto	l12747
 20153  003C4E                     l12763:
 20154                           
 20155                           ;Oled.c: 2144: }
 20156                           ;Oled.c: 2147: setYX_LCD(1,x);
 20157  003C4E  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20158  003C52  0E01               	movlw	1
 20159  003C54  ECB3  F024         	call	_setYX_LCD
 20160                           
 20161                           ;Oled.c: 2148: for(ms=0;ms<23;ms++)
 20162  003C58  0E00               	movlw	0
 20163  003C5A  6E69               	movwf	_ms,c
 20164  003C5C                     l12767:
 20165  003C5C  0E16               	movlw	22
 20166  003C5E  6469               	cpfsgt	_ms,c
 20167  003C60  D001               	goto	l12771
 20168  003C62  0012               	return	
 20169  003C64                     l12771:
 20170                           
 20171                           ;Oled.c: 2149: {
 20172                           ;Oled.c: 2150: temp = drops_m[1][ms];
 20173  003C64  5069               	movf	_ms,w,c
 20174  003C66  0D01               	mullw	1
 20175  003C68  0E17               	movlw	23
 20176  003C6A  26F3               	addwf	prodl,f,c
 20177  003C6C  0E00               	movlw	0
 20178  003C6E  22F4               	addwfc	prodh,f,c
 20179  003C70  0E7E               	movlw	low _drops_m
 20180  003C72  24F3               	addwf	prodl,w,c
 20181  003C74  6EF6               	movwf	tblptrl,c
 20182  003C76  0E75               	movlw	high _drops_m
 20183  003C78  20F4               	addwfc	prodh,w,c
 20184  003C7A  6EF7               	movwf	tblptrh,c
 20185  003C7C                     	if	0	;There are less than 3 active tblptr bytes
 20186  003C7C                     	endif
 20187  003C7C  0008               	tblrd		*
 20188  003C7E  CFF5 F134          	movff	tablat,display_drops@temp
 20189                           
 20190                           ;Oled.c: 2151: tori =temp;
 20191  003C82  C134  F133         	movff	display_drops@temp,display_drops@tori
 20192                           
 20193                           ;Oled.c: 2153: temp = ~temp;
 20194  003C86  0101               	movlb	1	; () banked
 20195  003C88  1F34               	comf	display_drops@temp& (0+255),f,b
 20196                           
 20197                           ; BSR set to: 1
 20198                           ;Oled.c: 2157: ee_WriteBytes(&temp, 0x40, 1);
 20199  003C8A  0E34               	movlw	low display_drops@temp
 20200  003C8C  0101               	movlb	1	; () banked
 20201  003C8E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20202  003C90  0E01               	movlw	high display_drops@temp
 20203  003C92  0101               	movlb	1	; () banked
 20204  003C94  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20205  003C96  0E40               	movlw	64
 20206  003C98  0101               	movlb	1	; () banked
 20207  003C9A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20208  003C9C  0E00               	movlw	0
 20209  003C9E  0101               	movlb	1	; () banked
 20210  003CA0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20211  003CA2  0E01               	movlw	1
 20212  003CA4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20213  003CA6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20214  003CAA  2A69               	incf	_ms,f,c
 20215  003CAC  D7D7               	goto	l12767
 20216  003CAE                     l12785:
 20217  003CAE  0101               	movlb	1	; () banked
 20218  003CB0  5132               	movf	display_drops@mode& (0+255),w,b
 20219                           
 20220                           ; Switch size 1, requested type "space"
 20221                           ; Number of cases is 2, Range of values is 0 to 128
 20222                           ; switch strategies available:
 20223                           ; Name         Instructions Cycles
 20224                           ; simple_byte            7     4 (average)
 20225                           ;	Chosen strategy is simple_byte
 20226  003CB2  0A00               	xorlw	0	; case 0
 20227  003CB4  B4D8               	btfsc	status,2,c
 20228  003CB6  D74B               	goto	l12711
 20229  003CB8  0A80               	xorlw	128	; case 128
 20230  003CBA  A4D8               	btfss	status,2,c
 20231  003CBC  0012               	return	
 20232  003CBE  D79B               	goto	l12743
 20233  003CC0                     __end_of_display_drops:
 20234                           	opt stack 0
 20235                           tblptru	equ	0xFF8
 20236                           tblptrh	equ	0xFF7
 20237                           tblptrl	equ	0xFF6
 20238                           tablat	equ	0xFF5
 20239                           prodh	equ	0xFF4
 20240                           prodl	equ	0xFF3
 20241                           intcon	equ	0xFF2
 20242                           intcon3	equ	0xFF0
 20243                           postinc0	equ	0xFEE
 20244                           wreg	equ	0xFE8
 20245                           postdec1	equ	0xFE5
 20246                           fsr1h	equ	0xFE2
 20247                           fsr1l	equ	0xFE1
 20248                           postinc2	equ	0xFDE
 20249                           fsr2h	equ	0xFDA
 20250                           fsr2l	equ	0xFD9
 20251                           status	equ	0xFD8
 20252                           
 20253 ;; *************** function _display_drop *****************
 20254 ;; Defined at:
 20255 ;;		line 2176 in file "../Oled.c"
 20256 ;; Parameters:    Size  Location     Type
 20257 ;;  y               1    wreg     unsigned char 
 20258 ;;  x               1    9[BANK1 ] unsigned char 
 20259 ;;  mode            1   10[BANK1 ] unsigned char 
 20260 ;; Auto vars:     Size  Location     Type
 20261 ;;  y               1    0[COMRAM] unsigned char 
 20262 ;;  temp            1   12[BANK1 ] unsigned char 
 20263 ;;  tori            1   11[BANK1 ] unsigned char 
 20264 ;; Return value:  Size  Location     Type
 20265 ;;                  1    wreg      void 
 20266 ;; Registers used:
 20267 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20268 ;; Tracked objects:
 20269 ;;		On entry : 0/0
 20270 ;;		On exit  : 0/0
 20271 ;;		Unchanged: 0/0
 20272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20273 ;;      Params:         0       0       2       0       0       0       0
 20274 ;;      Locals:         0       0       2       0       0       0       0
 20275 ;;      Temps:          0       0       0       0       0       0       0
 20276 ;;      Totals:         0       0       4       0       0       0       0
 20277 ;;Total ram usage:        4 bytes
 20278 ;; Hardware stack levels used:    1
 20279 ;; Hardware stack levels required when called:    6
 20280 ;; This function calls:
 20281 ;;		_ee_WriteBytes
 20282 ;;		_setYX_LCD
 20283 ;; This function is called by:
 20284 ;;		_menu0_MsgHandlle
 20285 ;;		_check_ui_status
 20286 ;;		_blink_mode
 20287 ;; This function uses a non-reentrant model
 20288 ;;
 20289                           
 20290                           	psect	text43
 20291  003CC0                     __ptext43:
 20292                           	opt stack 0
 20293  003CC0                     _display_drop:
 20294                           	opt stack 23
 20295                           
 20296                           ;Oled.c: 2179: uint8_t temp =0;
 20297                           
 20298                           ;incstack = 0
 20299  003CC0  0E00               	movlw	0
 20300  003CC2  0101               	movlb	1	; () banked
 20301  003CC4  6F34               	movwf	display_drop@temp& (0+255),b
 20302                           
 20303                           ;Oled.c: 2180: uint8_t tori =0;
 20304  003CC6  0E00               	movlw	0
 20305  003CC8  0101               	movlb	1	; () banked
 20306  003CCA  6F33               	movwf	display_drop@tori& (0+255),b
 20307                           
 20308                           ;Oled.c: 2181: switch(mode)
 20309  003CCC  D0B0               	goto	l12863
 20310  003CCE                     l12789:
 20311                           
 20312                           ; BSR set to: 1
 20313                           ;Oled.c: 2187: setYX_LCD(0,x);
 20314  003CCE  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20315  003CD2  0E00               	movlw	0
 20316  003CD4  ECB3  F024         	call	_setYX_LCD
 20317                           
 20318                           ;Oled.c: 2188: for(ms=0;ms<23;ms++)
 20319  003CD8  0E00               	movlw	0
 20320  003CDA  6E69               	movwf	_ms,c
 20321  003CDC                     l12793:
 20322  003CDC  0E16               	movlw	22
 20323  003CDE  6469               	cpfsgt	_ms,c
 20324  003CE0  D001               	goto	l12797
 20325  003CE2  D01D               	goto	l12805
 20326  003CE4                     l12797:
 20327                           
 20328                           ;Oled.c: 2189: {
 20329                           ;Oled.c: 2191: temp =drop_m[0][ms];
 20330  003CE4  5069               	movf	_ms,w,c
 20331  003CE6  0D01               	mullw	1
 20332  003CE8  0E50               	movlw	low _drop_m
 20333  003CEA  24F3               	addwf	prodl,w,c
 20334  003CEC  6EF6               	movwf	tblptrl,c
 20335  003CEE  0E75               	movlw	high _drop_m
 20336  003CF0  20F4               	addwfc	prodh,w,c
 20337  003CF2  6EF7               	movwf	tblptrh,c
 20338  003CF4                     	if	0	;There are less than 3 active tblptr bytes
 20339  003CF4                     	endif
 20340  003CF4  0008               	tblrd		*
 20341  003CF6  CFF5 F134          	movff	tablat,display_drop@temp
 20342                           
 20343                           ;Oled.c: 2192: ee_WriteBytes(&temp, 0x40, 1);
 20344  003CFA  0E34               	movlw	low display_drop@temp
 20345  003CFC  0101               	movlb	1	; () banked
 20346  003CFE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20347  003D00  0E01               	movlw	high display_drop@temp
 20348  003D02  0101               	movlb	1	; () banked
 20349  003D04  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20350  003D06  0E40               	movlw	64
 20351  003D08  0101               	movlb	1	; () banked
 20352  003D0A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20353  003D0C  0E00               	movlw	0
 20354  003D0E  0101               	movlb	1	; () banked
 20355  003D10  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20356  003D12  0E01               	movlw	1
 20357  003D14  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20358  003D16  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20359  003D1A  2A69               	incf	_ms,f,c
 20360  003D1C  D7DF               	goto	l12793
 20361  003D1E                     l12805:
 20362                           
 20363                           ;Oled.c: 2193: }
 20364                           ;Oled.c: 2196: setYX_LCD(1,x);
 20365  003D1E  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20366  003D22  0E01               	movlw	1
 20367  003D24  ECB3  F024         	call	_setYX_LCD
 20368                           
 20369                           ;Oled.c: 2197: for(ms=0;ms<23;ms++)
 20370  003D28  0E00               	movlw	0
 20371  003D2A  6E69               	movwf	_ms,c
 20372  003D2C                     l12809:
 20373  003D2C  0E16               	movlw	22
 20374  003D2E  6469               	cpfsgt	_ms,c
 20375  003D30  D001               	goto	l12813
 20376  003D32  0012               	return	
 20377  003D34                     l12813:
 20378                           
 20379                           ;Oled.c: 2198: {
 20380                           ;Oled.c: 2199: temp = drop_m[1][ms];
 20381  003D34  5069               	movf	_ms,w,c
 20382  003D36  0D01               	mullw	1
 20383  003D38  0E17               	movlw	23
 20384  003D3A  26F3               	addwf	prodl,f,c
 20385  003D3C  0E00               	movlw	0
 20386  003D3E  22F4               	addwfc	prodh,f,c
 20387  003D40  0E50               	movlw	low _drop_m
 20388  003D42  24F3               	addwf	prodl,w,c
 20389  003D44  6EF6               	movwf	tblptrl,c
 20390  003D46  0E75               	movlw	high _drop_m
 20391  003D48  20F4               	addwfc	prodh,w,c
 20392  003D4A  6EF7               	movwf	tblptrh,c
 20393  003D4C                     	if	0	;There are less than 3 active tblptr bytes
 20394  003D4C                     	endif
 20395  003D4C  0008               	tblrd		*
 20396  003D4E  CFF5 F134          	movff	tablat,display_drop@temp
 20397                           
 20398                           ;Oled.c: 2200: ee_WriteBytes(&temp, 0x40, 1);
 20399  003D52  0E34               	movlw	low display_drop@temp
 20400  003D54  0101               	movlb	1	; () banked
 20401  003D56  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20402  003D58  0E01               	movlw	high display_drop@temp
 20403  003D5A  0101               	movlb	1	; () banked
 20404  003D5C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20405  003D5E  0E40               	movlw	64
 20406  003D60  0101               	movlb	1	; () banked
 20407  003D62  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20408  003D64  0E00               	movlw	0
 20409  003D66  0101               	movlb	1	; () banked
 20410  003D68  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20411  003D6A  0E01               	movlw	1
 20412  003D6C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20413  003D6E  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20414  003D72  2A69               	incf	_ms,f,c
 20415  003D74  D7DB               	goto	l12809
 20416  003D76                     l12821:
 20417                           
 20418                           ;Oled.c: 2209: setYX_LCD(0,x);
 20419  003D76  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20420  003D7A  0E00               	movlw	0
 20421  003D7C  ECB3  F024         	call	_setYX_LCD
 20422                           
 20423                           ;Oled.c: 2210: for(ms=0;ms<23;ms++)
 20424  003D80  0E00               	movlw	0
 20425  003D82  6E69               	movwf	_ms,c
 20426  003D84                     l12825:
 20427  003D84  0E16               	movlw	22
 20428  003D86  6469               	cpfsgt	_ms,c
 20429  003D88  D001               	goto	l12829
 20430  003D8A  D021               	goto	l12841
 20431  003D8C                     l12829:
 20432                           
 20433                           ;Oled.c: 2211: {
 20434                           ;Oled.c: 2213: temp = drop_m[0][ms];
 20435  003D8C  5069               	movf	_ms,w,c
 20436  003D8E  0D01               	mullw	1
 20437  003D90  0E50               	movlw	low _drop_m
 20438  003D92  24F3               	addwf	prodl,w,c
 20439  003D94  6EF6               	movwf	tblptrl,c
 20440  003D96  0E75               	movlw	high _drop_m
 20441  003D98  20F4               	addwfc	prodh,w,c
 20442  003D9A  6EF7               	movwf	tblptrh,c
 20443  003D9C                     	if	0	;There are less than 3 active tblptr bytes
 20444  003D9C                     	endif
 20445  003D9C  0008               	tblrd		*
 20446  003D9E  CFF5 F134          	movff	tablat,display_drop@temp
 20447                           
 20448                           ;Oled.c: 2214: tori = temp;
 20449  003DA2  C134  F133         	movff	display_drop@temp,display_drop@tori
 20450                           
 20451                           ;Oled.c: 2218: temp = ~temp;
 20452  003DA6  0101               	movlb	1	; () banked
 20453  003DA8  1F34               	comf	display_drop@temp& (0+255),f,b
 20454                           
 20455                           ; BSR set to: 1
 20456                           ;Oled.c: 2221: ee_WriteBytes(&temp, 0x40, 1);
 20457  003DAA  0E34               	movlw	low display_drop@temp
 20458  003DAC  0101               	movlb	1	; () banked
 20459  003DAE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20460  003DB0  0E01               	movlw	high display_drop@temp
 20461  003DB2  0101               	movlb	1	; () banked
 20462  003DB4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20463  003DB6  0E40               	movlw	64
 20464  003DB8  0101               	movlb	1	; () banked
 20465  003DBA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20466  003DBC  0E00               	movlw	0
 20467  003DBE  0101               	movlb	1	; () banked
 20468  003DC0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20469  003DC2  0E01               	movlw	1
 20470  003DC4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20471  003DC6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20472  003DCA  2A69               	incf	_ms,f,c
 20473  003DCC  D7DB               	goto	l12825
 20474  003DCE                     l12841:
 20475                           
 20476                           ;Oled.c: 2222: }
 20477                           ;Oled.c: 2225: setYX_LCD(1,x);
 20478  003DCE  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20479  003DD2  0E01               	movlw	1
 20480  003DD4  ECB3  F024         	call	_setYX_LCD
 20481                           
 20482                           ;Oled.c: 2226: for(ms=0;ms<23;ms++)
 20483  003DD8  0E00               	movlw	0
 20484  003DDA  6E69               	movwf	_ms,c
 20485  003DDC                     l12845:
 20486  003DDC  0E16               	movlw	22
 20487  003DDE  6469               	cpfsgt	_ms,c
 20488  003DE0  D001               	goto	l12849
 20489  003DE2  0012               	return	
 20490  003DE4                     l12849:
 20491                           
 20492                           ;Oled.c: 2227: {
 20493                           ;Oled.c: 2228: temp = drop_m[1][ms];
 20494  003DE4  5069               	movf	_ms,w,c
 20495  003DE6  0D01               	mullw	1
 20496  003DE8  0E17               	movlw	23
 20497  003DEA  26F3               	addwf	prodl,f,c
 20498  003DEC  0E00               	movlw	0
 20499  003DEE  22F4               	addwfc	prodh,f,c
 20500  003DF0  0E50               	movlw	low _drop_m
 20501  003DF2  24F3               	addwf	prodl,w,c
 20502  003DF4  6EF6               	movwf	tblptrl,c
 20503  003DF6  0E75               	movlw	high _drop_m
 20504  003DF8  20F4               	addwfc	prodh,w,c
 20505  003DFA  6EF7               	movwf	tblptrh,c
 20506  003DFC                     	if	0	;There are less than 3 active tblptr bytes
 20507  003DFC                     	endif
 20508  003DFC  0008               	tblrd		*
 20509  003DFE  CFF5 F134          	movff	tablat,display_drop@temp
 20510                           
 20511                           ;Oled.c: 2229: tori =temp;
 20512  003E02  C134  F133         	movff	display_drop@temp,display_drop@tori
 20513                           
 20514                           ;Oled.c: 2230: temp = ~temp;
 20515  003E06  0101               	movlb	1	; () banked
 20516  003E08  1F34               	comf	display_drop@temp& (0+255),f,b
 20517                           
 20518                           ; BSR set to: 1
 20519                           ;Oled.c: 2232: ee_WriteBytes(&temp, 0x40, 1);
 20520  003E0A  0E34               	movlw	low display_drop@temp
 20521  003E0C  0101               	movlb	1	; () banked
 20522  003E0E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20523  003E10  0E01               	movlw	high display_drop@temp
 20524  003E12  0101               	movlb	1	; () banked
 20525  003E14  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20526  003E16  0E40               	movlw	64
 20527  003E18  0101               	movlb	1	; () banked
 20528  003E1A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20529  003E1C  0E00               	movlw	0
 20530  003E1E  0101               	movlb	1	; () banked
 20531  003E20  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20532  003E22  0E01               	movlw	1
 20533  003E24  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20534  003E26  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20535  003E2A  2A69               	incf	_ms,f,c
 20536  003E2C  D7D7               	goto	l12845
 20537  003E2E                     l12863:
 20538  003E2E  0101               	movlb	1	; () banked
 20539  003E30  5132               	movf	display_drop@mode& (0+255),w,b
 20540                           
 20541                           ; Switch size 1, requested type "space"
 20542                           ; Number of cases is 2, Range of values is 0 to 128
 20543                           ; switch strategies available:
 20544                           ; Name         Instructions Cycles
 20545                           ; simple_byte            7     4 (average)
 20546                           ;	Chosen strategy is simple_byte
 20547  003E32  0A00               	xorlw	0	; case 0
 20548  003E34  B4D8               	btfsc	status,2,c
 20549  003E36  D74B               	goto	l12789
 20550  003E38  0A80               	xorlw	128	; case 128
 20551  003E3A  A4D8               	btfss	status,2,c
 20552  003E3C  0012               	return	
 20553  003E3E  D79B               	goto	l12821
 20554  003E40                     __end_of_display_drop:
 20555                           	opt stack 0
 20556                           tblptru	equ	0xFF8
 20557                           tblptrh	equ	0xFF7
 20558                           tblptrl	equ	0xFF6
 20559                           tablat	equ	0xFF5
 20560                           prodh	equ	0xFF4
 20561                           prodl	equ	0xFF3
 20562                           intcon	equ	0xFF2
 20563                           intcon3	equ	0xFF0
 20564                           postinc0	equ	0xFEE
 20565                           wreg	equ	0xFE8
 20566                           postdec1	equ	0xFE5
 20567                           fsr1h	equ	0xFE2
 20568                           fsr1l	equ	0xFE1
 20569                           postinc2	equ	0xFDE
 20570                           fsr2h	equ	0xFDA
 20571                           fsr2l	equ	0xFD9
 20572                           status	equ	0xFD8
 20573                           
 20574 ;; *************** function _display_cmode *****************
 20575 ;; Defined at:
 20576 ;;		line 2026 in file "../Oled.c"
 20577 ;; Parameters:    Size  Location     Type
 20578 ;;  y               1    wreg     unsigned char 
 20579 ;;  x               1    9[BANK1 ] unsigned char 
 20580 ;;  mode            1   10[BANK1 ] unsigned char 
 20581 ;; Auto vars:     Size  Location     Type
 20582 ;;  y               1    0[COMRAM] unsigned char 
 20583 ;;  temp            1   12[BANK1 ] unsigned char 
 20584 ;;  tori            1   11[BANK1 ] unsigned char 
 20585 ;; Return value:  Size  Location     Type
 20586 ;;                  1    wreg      void 
 20587 ;; Registers used:
 20588 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20589 ;; Tracked objects:
 20590 ;;		On entry : 0/0
 20591 ;;		On exit  : 0/0
 20592 ;;		Unchanged: 0/0
 20593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20594 ;;      Params:         0       0       2       0       0       0       0
 20595 ;;      Locals:         0       0       2       0       0       0       0
 20596 ;;      Temps:          0       0       0       0       0       0       0
 20597 ;;      Totals:         0       0       4       0       0       0       0
 20598 ;;Total ram usage:        4 bytes
 20599 ;; Hardware stack levels used:    1
 20600 ;; Hardware stack levels required when called:    6
 20601 ;; This function calls:
 20602 ;;		_ee_WriteBytes
 20603 ;;		_setYX_LCD
 20604 ;; This function is called by:
 20605 ;;		_initial_ui_setting
 20606 ;;		_menu0_MsgHandlle
 20607 ;;		_check_ui_status
 20608 ;;		_blink_mode
 20609 ;; This function uses a non-reentrant model
 20610 ;;
 20611                           
 20612                           	psect	text44
 20613  003E40                     __ptext44:
 20614                           	opt stack 0
 20615  003E40                     _display_cmode:
 20616                           	opt stack 21
 20617                           
 20618                           ;Oled.c: 2029: uint8_t temp =0;
 20619                           
 20620                           ;incstack = 0
 20621  003E40  0E00               	movlw	0
 20622  003E42  0101               	movlb	1	; () banked
 20623  003E44  6F34               	movwf	display_cmode@temp& (0+255),b
 20624                           
 20625                           ;Oled.c: 2030: uint8_t tori =0;
 20626  003E46  0E00               	movlw	0
 20627  003E48  0101               	movlb	1	; () banked
 20628  003E4A  6F33               	movwf	display_cmode@tori& (0+255),b
 20629                           
 20630                           ;Oled.c: 2031: switch(mode)
 20631  003E4C  D0B0               	goto	l11753
 20632  003E4E                     l11679:
 20633                           
 20634                           ; BSR set to: 1
 20635                           ;Oled.c: 2037: setYX_LCD(0,x);
 20636  003E4E  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20637  003E52  0E00               	movlw	0
 20638  003E54  ECB3  F024         	call	_setYX_LCD
 20639                           
 20640                           ;Oled.c: 2038: for(ms=0;ms<23;ms++)
 20641  003E58  0E00               	movlw	0
 20642  003E5A  6E69               	movwf	_ms,c
 20643  003E5C                     l11683:
 20644  003E5C  0E16               	movlw	22
 20645  003E5E  6469               	cpfsgt	_ms,c
 20646  003E60  D001               	goto	l11687
 20647  003E62  D01D               	goto	l11695
 20648  003E64                     l11687:
 20649                           
 20650                           ;Oled.c: 2039: {
 20651                           ;Oled.c: 2041: temp =c_m[0][ms];
 20652  003E64  5069               	movf	_ms,w,c
 20653  003E66  0D01               	mullw	1
 20654  003E68  0EAC               	movlw	low _c_m
 20655  003E6A  24F3               	addwf	prodl,w,c
 20656  003E6C  6EF6               	movwf	tblptrl,c
 20657  003E6E  0E75               	movlw	high _c_m
 20658  003E70  20F4               	addwfc	prodh,w,c
 20659  003E72  6EF7               	movwf	tblptrh,c
 20660  003E74                     	if	0	;There are less than 3 active tblptr bytes
 20661  003E74                     	endif
 20662  003E74  0008               	tblrd		*
 20663  003E76  CFF5 F134          	movff	tablat,display_cmode@temp
 20664                           
 20665                           ;Oled.c: 2043: ee_WriteBytes(&temp, 0x40, 1);
 20666  003E7A  0E34               	movlw	low display_cmode@temp
 20667  003E7C  0101               	movlb	1	; () banked
 20668  003E7E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20669  003E80  0E01               	movlw	high display_cmode@temp
 20670  003E82  0101               	movlb	1	; () banked
 20671  003E84  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20672  003E86  0E40               	movlw	64
 20673  003E88  0101               	movlb	1	; () banked
 20674  003E8A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20675  003E8C  0E00               	movlw	0
 20676  003E8E  0101               	movlb	1	; () banked
 20677  003E90  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20678  003E92  0E01               	movlw	1
 20679  003E94  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20680  003E96  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20681  003E9A  2A69               	incf	_ms,f,c
 20682  003E9C  D7DF               	goto	l11683
 20683  003E9E                     l11695:
 20684                           
 20685                           ;Oled.c: 2044: }
 20686                           ;Oled.c: 2047: setYX_LCD(1,x);
 20687  003E9E  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20688  003EA2  0E01               	movlw	1
 20689  003EA4  ECB3  F024         	call	_setYX_LCD
 20690                           
 20691                           ;Oled.c: 2048: for(ms=0;ms<23;ms++)
 20692  003EA8  0E00               	movlw	0
 20693  003EAA  6E69               	movwf	_ms,c
 20694  003EAC                     l11699:
 20695  003EAC  0E16               	movlw	22
 20696  003EAE  6469               	cpfsgt	_ms,c
 20697  003EB0  D001               	goto	l11703
 20698  003EB2  0012               	return	
 20699  003EB4                     l11703:
 20700                           
 20701                           ;Oled.c: 2049: {
 20702                           ;Oled.c: 2050: temp = c_m[1][ms];
 20703  003EB4  5069               	movf	_ms,w,c
 20704  003EB6  0D01               	mullw	1
 20705  003EB8  0E17               	movlw	23
 20706  003EBA  26F3               	addwf	prodl,f,c
 20707  003EBC  0E00               	movlw	0
 20708  003EBE  22F4               	addwfc	prodh,f,c
 20709  003EC0  0EAC               	movlw	low _c_m
 20710  003EC2  24F3               	addwf	prodl,w,c
 20711  003EC4  6EF6               	movwf	tblptrl,c
 20712  003EC6  0E75               	movlw	high _c_m
 20713  003EC8  20F4               	addwfc	prodh,w,c
 20714  003ECA  6EF7               	movwf	tblptrh,c
 20715  003ECC                     	if	0	;There are less than 3 active tblptr bytes
 20716  003ECC                     	endif
 20717  003ECC  0008               	tblrd		*
 20718  003ECE  CFF5 F134          	movff	tablat,display_cmode@temp
 20719                           
 20720                           ;Oled.c: 2052: ee_WriteBytes(&temp, 0x40, 1);
 20721  003ED2  0E34               	movlw	low display_cmode@temp
 20722  003ED4  0101               	movlb	1	; () banked
 20723  003ED6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20724  003ED8  0E01               	movlw	high display_cmode@temp
 20725  003EDA  0101               	movlb	1	; () banked
 20726  003EDC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20727  003EDE  0E40               	movlw	64
 20728  003EE0  0101               	movlb	1	; () banked
 20729  003EE2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20730  003EE4  0E00               	movlw	0
 20731  003EE6  0101               	movlb	1	; () banked
 20732  003EE8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20733  003EEA  0E01               	movlw	1
 20734  003EEC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20735  003EEE  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20736  003EF2  2A69               	incf	_ms,f,c
 20737  003EF4  D7DB               	goto	l11699
 20738  003EF6                     l11711:
 20739                           
 20740                           ;Oled.c: 2061: setYX_LCD(0,x);
 20741  003EF6  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20742  003EFA  0E00               	movlw	0
 20743  003EFC  ECB3  F024         	call	_setYX_LCD
 20744                           
 20745                           ;Oled.c: 2062: for(ms=0;ms<23;ms++)
 20746  003F00  0E00               	movlw	0
 20747  003F02  6E69               	movwf	_ms,c
 20748  003F04                     l11715:
 20749  003F04  0E16               	movlw	22
 20750  003F06  6469               	cpfsgt	_ms,c
 20751  003F08  D001               	goto	l11719
 20752  003F0A  D021               	goto	l11731
 20753  003F0C                     l11719:
 20754                           
 20755                           ;Oled.c: 2063: {
 20756                           ;Oled.c: 2065: temp = c_m[0][ms];
 20757  003F0C  5069               	movf	_ms,w,c
 20758  003F0E  0D01               	mullw	1
 20759  003F10  0EAC               	movlw	low _c_m
 20760  003F12  24F3               	addwf	prodl,w,c
 20761  003F14  6EF6               	movwf	tblptrl,c
 20762  003F16  0E75               	movlw	high _c_m
 20763  003F18  20F4               	addwfc	prodh,w,c
 20764  003F1A  6EF7               	movwf	tblptrh,c
 20765  003F1C                     	if	0	;There are less than 3 active tblptr bytes
 20766  003F1C                     	endif
 20767  003F1C  0008               	tblrd		*
 20768  003F1E  CFF5 F134          	movff	tablat,display_cmode@temp
 20769                           
 20770                           ;Oled.c: 2066: tori = temp;
 20771  003F22  C134  F133         	movff	display_cmode@temp,display_cmode@tori
 20772                           
 20773                           ;Oled.c: 2068: temp = ~temp;
 20774  003F26  0101               	movlb	1	; () banked
 20775  003F28  1F34               	comf	display_cmode@temp& (0+255),f,b
 20776                           
 20777                           ; BSR set to: 1
 20778                           ;Oled.c: 2071: ee_WriteBytes(&temp, 0x40, 1);
 20779  003F2A  0E34               	movlw	low display_cmode@temp
 20780  003F2C  0101               	movlb	1	; () banked
 20781  003F2E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20782  003F30  0E01               	movlw	high display_cmode@temp
 20783  003F32  0101               	movlb	1	; () banked
 20784  003F34  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20785  003F36  0E40               	movlw	64
 20786  003F38  0101               	movlb	1	; () banked
 20787  003F3A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20788  003F3C  0E00               	movlw	0
 20789  003F3E  0101               	movlb	1	; () banked
 20790  003F40  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20791  003F42  0E01               	movlw	1
 20792  003F44  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20793  003F46  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20794  003F4A  2A69               	incf	_ms,f,c
 20795  003F4C  D7DB               	goto	l11715
 20796  003F4E                     l11731:
 20797                           
 20798                           ;Oled.c: 2072: }
 20799                           ;Oled.c: 2075: setYX_LCD(1,x);
 20800  003F4E  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20801  003F52  0E01               	movlw	1
 20802  003F54  ECB3  F024         	call	_setYX_LCD
 20803                           
 20804                           ;Oled.c: 2076: for(ms=0;ms<23;ms++)
 20805  003F58  0E00               	movlw	0
 20806  003F5A  6E69               	movwf	_ms,c
 20807  003F5C                     l11735:
 20808  003F5C  0E16               	movlw	22
 20809  003F5E  6469               	cpfsgt	_ms,c
 20810  003F60  D001               	goto	l11739
 20811  003F62  0012               	return	
 20812  003F64                     l11739:
 20813                           
 20814                           ;Oled.c: 2077: {
 20815                           ;Oled.c: 2078: temp = c_m[1][ms];
 20816  003F64  5069               	movf	_ms,w,c
 20817  003F66  0D01               	mullw	1
 20818  003F68  0E17               	movlw	23
 20819  003F6A  26F3               	addwf	prodl,f,c
 20820  003F6C  0E00               	movlw	0
 20821  003F6E  22F4               	addwfc	prodh,f,c
 20822  003F70  0EAC               	movlw	low _c_m
 20823  003F72  24F3               	addwf	prodl,w,c
 20824  003F74  6EF6               	movwf	tblptrl,c
 20825  003F76  0E75               	movlw	high _c_m
 20826  003F78  20F4               	addwfc	prodh,w,c
 20827  003F7A  6EF7               	movwf	tblptrh,c
 20828  003F7C                     	if	0	;There are less than 3 active tblptr bytes
 20829  003F7C                     	endif
 20830  003F7C  0008               	tblrd		*
 20831  003F7E  CFF5 F134          	movff	tablat,display_cmode@temp
 20832                           
 20833                           ;Oled.c: 2079: tori =temp;
 20834  003F82  C134  F133         	movff	display_cmode@temp,display_cmode@tori
 20835                           
 20836                           ;Oled.c: 2081: temp = ~temp;
 20837  003F86  0101               	movlb	1	; () banked
 20838  003F88  1F34               	comf	display_cmode@temp& (0+255),f,b
 20839                           
 20840                           ; BSR set to: 1
 20841                           ;Oled.c: 2083: ee_WriteBytes(&temp, 0x40, 1);
 20842  003F8A  0E34               	movlw	low display_cmode@temp
 20843  003F8C  0101               	movlb	1	; () banked
 20844  003F8E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20845  003F90  0E01               	movlw	high display_cmode@temp
 20846  003F92  0101               	movlb	1	; () banked
 20847  003F94  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20848  003F96  0E40               	movlw	64
 20849  003F98  0101               	movlb	1	; () banked
 20850  003F9A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20851  003F9C  0E00               	movlw	0
 20852  003F9E  0101               	movlb	1	; () banked
 20853  003FA0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20854  003FA2  0E01               	movlw	1
 20855  003FA4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20856  003FA6  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20857  003FAA  2A69               	incf	_ms,f,c
 20858  003FAC  D7D7               	goto	l11735
 20859  003FAE                     l11753:
 20860  003FAE  0101               	movlb	1	; () banked
 20861  003FB0  5132               	movf	display_cmode@mode& (0+255),w,b
 20862                           
 20863                           ; Switch size 1, requested type "space"
 20864                           ; Number of cases is 2, Range of values is 0 to 128
 20865                           ; switch strategies available:
 20866                           ; Name         Instructions Cycles
 20867                           ; simple_byte            7     4 (average)
 20868                           ;	Chosen strategy is simple_byte
 20869  003FB2  0A00               	xorlw	0	; case 0
 20870  003FB4  B4D8               	btfsc	status,2,c
 20871  003FB6  D74B               	goto	l11679
 20872  003FB8  0A80               	xorlw	128	; case 128
 20873  003FBA  A4D8               	btfss	status,2,c
 20874  003FBC  0012               	return	
 20875  003FBE  D79B               	goto	l11711
 20876  003FC0                     __end_of_display_cmode:
 20877                           	opt stack 0
 20878                           tblptru	equ	0xFF8
 20879                           tblptrh	equ	0xFF7
 20880                           tblptrl	equ	0xFF6
 20881                           tablat	equ	0xFF5
 20882                           prodh	equ	0xFF4
 20883                           prodl	equ	0xFF3
 20884                           intcon	equ	0xFF2
 20885                           intcon3	equ	0xFF0
 20886                           postinc0	equ	0xFEE
 20887                           wreg	equ	0xFE8
 20888                           postdec1	equ	0xFE5
 20889                           fsr1h	equ	0xFE2
 20890                           fsr1l	equ	0xFE1
 20891                           postinc2	equ	0xFDE
 20892                           fsr2h	equ	0xFDA
 20893                           fsr2l	equ	0xFD9
 20894                           status	equ	0xFD8
 20895                           
 20896 ;; *************** function _setYX_LCD *****************
 20897 ;; Defined at:
 20898 ;;		line 599 in file "../Oled.c"
 20899 ;; Parameters:    Size  Location     Type
 20900 ;;  py              1    wreg     unsigned char 
 20901 ;;  px              1    2[BANK0 ] unsigned char 
 20902 ;; Auto vars:     Size  Location     Type
 20903 ;;  py              1    8[BANK1 ] unsigned char 
 20904 ;; Return value:  Size  Location     Type
 20905 ;;                  1    wreg      unsigned char 
 20906 ;; Registers used:
 20907 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20908 ;; Tracked objects:
 20909 ;;		On entry : 0/0
 20910 ;;		On exit  : 0/0
 20911 ;;		Unchanged: 0/0
 20912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20913 ;;      Params:         0       1       0       0       0       0       0
 20914 ;;      Locals:         0       0       1       0       0       0       0
 20915 ;;      Temps:          0       0       0       0       0       0       0
 20916 ;;      Totals:         0       1       1       0       0       0       0
 20917 ;;Total ram usage:        2 bytes
 20918 ;; Hardware stack levels used:    1
 20919 ;; Hardware stack levels required when called:    5
 20920 ;; This function calls:
 20921 ;;		_ee_WriteBytes
 20922 ;; This function is called by:
 20923 ;;		_display_n_blank
 20924 ;;		_display_num
 20925 ;;		_display_bat_blank
 20926 ;;		_display_bat
 20927 ;;		_display_mem
 20928 ;;		_display_blank_mode_pa
 20929 ;;		_display_cmode
 20930 ;;		_display_drops
 20931 ;;		_display_drop
 20932 ;;		_display_frame_abc
 20933 ;;		_display_frame_de
 20934 ;;		_display_frame_fghi
 20935 ;;		_display_logo
 20936 ;;		_clear_screen
 20937 ;; This function uses a non-reentrant model
 20938 ;;
 20939                           
 20940                           	psect	text45
 20941  004966                     __ptext45:
 20942                           	opt stack 0
 20943  004966                     _setYX_LCD:
 20944                           	opt stack 21
 20945                           
 20946                           ;incstack = 0
 20947                           ;setYX_LCD@py stored from wreg
 20948  004966  0101               	movlb	1	; () banked
 20949  004968  6F30               	movwf	setYX_LCD@py& (0+255),b
 20950                           
 20951                           ;Oled.c: 603: write_buf[0]=0x80 + px;
 20952  00496A  0100               	movlb	0	; () banked
 20953  00496C  51FF               	movf	setYX_LCD@px& (0+255),w,b
 20954  00496E  0F80               	addlw	128
 20955  004970  0102               	movlb	2	; () banked
 20956  004972  6F00               	movwf	_write_buf& (0+255),b
 20957                           
 20958                           ; BSR set to: 2
 20959                           ;Oled.c: 604: ee_WriteBytes(write_buf, 0x00, 1);
 20960  004974  0E00               	movlw	low _write_buf
 20961  004976  0101               	movlb	1	; () banked
 20962  004978  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20963  00497A  0E02               	movlw	high _write_buf
 20964  00497C  0101               	movlb	1	; () banked
 20965  00497E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20966  004980  0E00               	movlw	0
 20967  004982  0101               	movlb	1	; () banked
 20968  004984  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20969  004986  0E00               	movlw	0
 20970  004988  0101               	movlb	1	; () banked
 20971  00498A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20972  00498C  0E01               	movlw	1
 20973  00498E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20974  004990  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20975                           
 20976                           ;Oled.c: 607: write_buf[0]=0x40 + py;
 20977  004994  0101               	movlb	1	; () banked
 20978  004996  5130               	movf	setYX_LCD@py& (0+255),w,b
 20979  004998  0F40               	addlw	64
 20980  00499A  0102               	movlb	2	; () banked
 20981  00499C  6F00               	movwf	_write_buf& (0+255),b
 20982                           
 20983                           ;Oled.c: 608: ee_WriteBytes(write_buf, 0x00, 1);
 20984  00499E  0E00               	movlw	low _write_buf
 20985  0049A0  0101               	movlb	1	; () banked
 20986  0049A2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20987  0049A4  0E02               	movlw	high _write_buf
 20988  0049A6  0101               	movlb	1	; () banked
 20989  0049A8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20990  0049AA  0E00               	movlw	0
 20991  0049AC  0101               	movlb	1	; () banked
 20992  0049AE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20993  0049B0  0E00               	movlw	0
 20994  0049B2  0101               	movlb	1	; () banked
 20995  0049B4  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20996  0049B6  0E01               	movlw	1
 20997  0049B8  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20998  0049BA  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 20999  0049BE  0012               	return	
 21000  0049C0                     __end_of_setYX_LCD:
 21001                           	opt stack 0
 21002                           tblptru	equ	0xFF8
 21003                           tblptrh	equ	0xFF7
 21004                           tblptrl	equ	0xFF6
 21005                           tablat	equ	0xFF5
 21006                           prodh	equ	0xFF4
 21007                           prodl	equ	0xFF3
 21008                           intcon	equ	0xFF2
 21009                           intcon3	equ	0xFF0
 21010                           postinc0	equ	0xFEE
 21011                           wreg	equ	0xFE8
 21012                           postdec1	equ	0xFE5
 21013                           fsr1h	equ	0xFE2
 21014                           fsr1l	equ	0xFE1
 21015                           postinc2	equ	0xFDE
 21016                           fsr2h	equ	0xFDA
 21017                           fsr2l	equ	0xFD9
 21018                           status	equ	0xFD8
 21019                           
 21020 ;; *************** function _KEY_Scan *****************
 21021 ;; Defined at:
 21022 ;;		line 57 in file "../Key.c"
 21023 ;; Parameters:    Size  Location     Type
 21024 ;;		None
 21025 ;; Auto vars:     Size  Location     Type
 21026 ;;  tm_cnt          2    4[BANK1 ] unsigned int 
 21027 ;; Return value:  Size  Location     Type
 21028 ;;                  1    wreg      unsigned char 
 21029 ;; Registers used:
 21030 ;;		wreg, status,2, status,0, cstack
 21031 ;; Tracked objects:
 21032 ;;		On entry : 0/0
 21033 ;;		On exit  : 0/0
 21034 ;;		Unchanged: 0/0
 21035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21036 ;;      Params:         0       0       0       0       0       0       0
 21037 ;;      Locals:         0       0       2       0       0       0       0
 21038 ;;      Temps:          0       0       0       0       0       0       0
 21039 ;;      Totals:         0       0       2       0       0       0       0
 21040 ;;Total ram usage:        2 bytes
 21041 ;; Hardware stack levels used:    1
 21042 ;; Hardware stack levels required when called:    4
 21043 ;; This function calls:
 21044 ;;		_buzz
 21045 ;;		_delay_nms
 21046 ;;		_delaynus
 21047 ;; This function is called by:
 21048 ;;		_HG_interface
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052                           	psect	text46
 21053  0041DA                     __ptext46:
 21054                           	opt stack 0
 21055  0041DA                     _KEY_Scan:
 21056                           	opt stack 25
 21057                           
 21058                           ;Key.c: 60: uint16_t tm_cnt=0;
 21059                           
 21060                           ;incstack = 0
 21061  0041DA  0E00               	movlw	0
 21062  0041DC  0101               	movlb	1	; () banked
 21063  0041DE  6F2D               	movwf	(KEY_Scan@tm_cnt+1)& (0+255),b
 21064  0041E0  0E00               	movlw	0
 21065  0041E2  6F2C               	movwf	KEY_Scan@tm_cnt& (0+255),b
 21066                           
 21067                           ; BSR set to: 1
 21068                           ;Key.c: 61: if(PORTDbits.RD6 == 0)
 21069  0041E4  BC83               	btfsc	3971,6,c	;volatile
 21070  0041E6  D030               	goto	l88
 21071                           
 21072                           ; BSR set to: 1
 21073                           ;Key.c: 62: {
 21074                           ;Key.c: 63: delay_nms(5);
 21075  0041E8  0E05               	movlw	5
 21076  0041EA  0101               	movlb	1	; () banked
 21077  0041EC  6F28               	movwf	delay_nms@n& (0+255),b
 21078  0041EE  0E00               	movlw	0
 21079  0041F0  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21080  0041F2  0E00               	movlw	0
 21081  0041F4  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21082  0041F6  0E00               	movlw	0
 21083  0041F8  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21084  0041FA  EC5E  F025         	call	_delay_nms	;wreg free
 21085                           
 21086                           ;Key.c: 65: if(PORTDbits.RD6 == 0)
 21087  0041FE  AC83               	btfss	3971,6,c	;volatile
 21088  004200  D00B               	goto	l13029
 21089  004202  D022               	goto	l88
 21090  004204                     l13025:
 21091                           
 21092                           ;Key.c: 70: {
 21093                           ;Key.c: 71: tm_cnt ++;
 21094  004204  0101               	movlb	1	; () banked
 21095  004206  4B2C               	infsnz	KEY_Scan@tm_cnt& (0+255),f,b
 21096  004208  2B2D               	incf	(KEY_Scan@tm_cnt+1)& (0+255),f,b
 21097                           
 21098                           ; BSR set to: 1
 21099                           ;Key.c: 73: delaynus(50 * 1000);
 21100  00420A  0EC3               	movlw	195
 21101  00420C  0100               	movlb	0	; () banked
 21102  00420E  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 21103  004210  0E50               	movlw	80
 21104  004212  6FFD               	movwf	delaynus@n& (0+255),b
 21105  004214  ECEB  F026         	call	_delaynus	;wreg free
 21106  004218                     l13029:
 21107  004218  AC83               	btfss	3971,6,c	;volatile
 21108  00421A  D7F4               	goto	l13025
 21109                           
 21110                           ;Key.c: 74: }
 21111                           ;Key.c: 75: buzz();
 21112  00421C  EC09  F027         	call	_buzz	;wreg free
 21113                           
 21114                           ;Key.c: 77: if(tm_cnt > 100)
 21115  004220  0101               	movlb	1	; () banked
 21116  004222  512D               	movf	(KEY_Scan@tm_cnt+1)& (0+255),w,b
 21117  004224  E105               	bnz	u15680
 21118  004226  0E65               	movlw	101
 21119  004228  0101               	movlb	1	; () banked
 21120  00422A  5D2C               	subwf	KEY_Scan@tm_cnt& (0+255),w,b
 21121  00422C  A0D8               	btfss	status,0,c
 21122  00422E  D00A               	goto	l13045
 21123  004230                     u15680:
 21124                           
 21125                           ; BSR set to: 1
 21126                           ;Key.c: 78: {
 21127                           ;Key.c: 79: test_mode =1;
 21128  004230  0E01               	movlw	1
 21129  004232  0100               	movlb	0	; () banked
 21130  004234  6FF2               	movwf	_test_mode& (0+255),b
 21131                           
 21132                           ;Key.c: 82: hg_op.cur_working_mode = 0x04;
 21133  004236  0E04               	movlw	4
 21134  004238  0100               	movlb	0	; () banked
 21135  00423A  6F81               	movwf	(_hg_op+1)& (0+255),b
 21136                           
 21137                           ; BSR set to: 0
 21138                           ;Key.c: 85: T0IE=0;
 21139  00423C  9AF2               	bcf	intcon,5,c	;volatile
 21140                           
 21141                           ; BSR set to: 0
 21142                           ;Key.c: 86: T0CONbits.TMR0ON =0;
 21143  00423E  9ED5               	bcf	4053,7,c	;volatile
 21144                           
 21145                           ; BSR set to: 0
 21146                           ;Key.c: 90: return 0x00;
 21147  004240  0E00               	movlw	0
 21148                           
 21149                           ; BSR set to: 0
 21150  004242  0012               	return	
 21151  004244                     l13045:
 21152                           
 21153                           ;Key.c: 92: }
 21154                           ;Key.c: 95: return 0xf1;
 21155  004244  0EF1               	movlw	241
 21156  004246  0012               	return	
 21157  004248                     l88:
 21158                           
 21159                           ;Key.c: 96: }
 21160                           ;Key.c: 97: }
 21161                           ;Key.c: 98: if(PORTDbits.RD7 == 0)
 21162  004248  BE83               	btfsc	3971,7,c	;volatile
 21163  00424A  D013               	goto	l95
 21164                           
 21165                           ;Key.c: 99: {
 21166                           ;Key.c: 100: delay_nms(5);
 21167  00424C  0E05               	movlw	5
 21168  00424E  0101               	movlb	1	; () banked
 21169  004250  6F28               	movwf	delay_nms@n& (0+255),b
 21170  004252  0E00               	movlw	0
 21171  004254  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21172  004256  0E00               	movlw	0
 21173  004258  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21174  00425A  0E00               	movlw	0
 21175  00425C  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21176  00425E  EC5E  F025         	call	_delay_nms	;wreg free
 21177                           
 21178                           ;Key.c: 101: if(PORTDbits.RD7 == 0)
 21179  004262  BE83               	btfsc	3971,7,c	;volatile
 21180  004264  D006               	goto	l95
 21181  004266                     l97:
 21182  004266  AE83               	btfss	3971,7,c	;volatile
 21183  004268  D7FE               	goto	l97
 21184                           
 21185                           ;Key.c: 104: buzz();
 21186  00426A  EC09  F027         	call	_buzz	;wreg free
 21187                           
 21188                           ;Key.c: 106: return 0xf2;
 21189  00426E  0EF2               	movlw	242
 21190  004270  0012               	return	
 21191  004272                     l95:
 21192                           
 21193                           ;Key.c: 107: }
 21194                           ;Key.c: 108: }
 21195                           ;Key.c: 109: if(PORTBbits.RB3 == 0)
 21196  004272  B681               	btfsc	3969,3,c	;volatile
 21197  004274  D013               	goto	l13073
 21198                           
 21199                           ;Key.c: 110: {
 21200                           ;Key.c: 111: delay_nms(5);
 21201  004276  0E05               	movlw	5
 21202  004278  0101               	movlb	1	; () banked
 21203  00427A  6F28               	movwf	delay_nms@n& (0+255),b
 21204  00427C  0E00               	movlw	0
 21205  00427E  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21206  004280  0E00               	movlw	0
 21207  004282  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21208  004284  0E00               	movlw	0
 21209  004286  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21210  004288  EC5E  F025         	call	_delay_nms	;wreg free
 21211                           
 21212                           ;Key.c: 112: if(PORTBbits.RB3 == 0)
 21213  00428C  B681               	btfsc	3969,3,c	;volatile
 21214  00428E  D006               	goto	l13073
 21215  004290                     l102:
 21216  004290  A681               	btfss	3969,3,c	;volatile
 21217  004292  D7FE               	goto	l102
 21218                           
 21219                           ;Key.c: 115: buzz();
 21220  004294  EC09  F027         	call	_buzz	;wreg free
 21221                           
 21222                           ;Key.c: 117: return 0xf3;
 21223  004298  0EF3               	movlw	243
 21224  00429A  0012               	return	
 21225  00429C                     l13073:
 21226                           
 21227                           ;Key.c: 118: }
 21228                           ;Key.c: 119: }
 21229                           ;Key.c: 123: return 0x00;
 21230  00429C  0E00               	movlw	0
 21231  00429E  0012               	return	
 21232  0042A0                     __end_of_KEY_Scan:
 21233                           	opt stack 0
 21234                           tblptru	equ	0xFF8
 21235                           tblptrh	equ	0xFF7
 21236                           tblptrl	equ	0xFF6
 21237                           tablat	equ	0xFF5
 21238                           prodh	equ	0xFF4
 21239                           prodl	equ	0xFF3
 21240                           intcon	equ	0xFF2
 21241                           intcon3	equ	0xFF0
 21242                           postinc0	equ	0xFEE
 21243                           wreg	equ	0xFE8
 21244                           postdec1	equ	0xFE5
 21245                           fsr1h	equ	0xFE2
 21246                           fsr1l	equ	0xFE1
 21247                           postinc2	equ	0xFDE
 21248                           fsr2h	equ	0xFDA
 21249                           fsr2l	equ	0xFD9
 21250                           status	equ	0xFD8
 21251                           
 21252 ;; *************** function _delaynus *****************
 21253 ;; Defined at:
 21254 ;;		line 687 in file "../Timer.c"
 21255 ;; Parameters:    Size  Location     Type
 21256 ;;  n               2    0[BANK0 ] unsigned int 
 21257 ;; Auto vars:     Size  Location     Type
 21258 ;;		None
 21259 ;; Return value:  Size  Location     Type
 21260 ;;                  1    wreg      void 
 21261 ;; Registers used:
 21262 ;;		wreg, status,2, status,0
 21263 ;; Tracked objects:
 21264 ;;		On entry : 0/0
 21265 ;;		On exit  : 0/0
 21266 ;;		Unchanged: 0/0
 21267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21268 ;;      Params:         0       2       0       0       0       0       0
 21269 ;;      Locals:         0       0       0       0       0       0       0
 21270 ;;      Temps:          0       0       0       0       0       0       0
 21271 ;;      Totals:         0       2       0       0       0       0       0
 21272 ;;Total ram usage:        2 bytes
 21273 ;; Hardware stack levels used:    1
 21274 ;; Hardware stack levels required when called:    2
 21275 ;; This function calls:
 21276 ;;		Nothing
 21277 ;; This function is called by:
 21278 ;;		_KEY_Scan
 21279 ;;		_hg_reset
 21280 ;;		_drops_routine
 21281 ;;		_c_routine
 21282 ;;		_check_acting
 21283 ;;		_initial_ui_setting
 21284 ;;		_enter_sleep
 21285 ;; This function uses a non-reentrant model
 21286 ;;
 21287                           
 21288                           	psect	text47
 21289  004DD6                     __ptext47:
 21290                           	opt stack 0
 21291  004DD6                     _delaynus:
 21292                           	opt stack 27
 21293                           
 21294                           ;Timer.c: 690: TMR1 =0;
 21295                           
 21296                           ;incstack = 0
 21297  004DD6  0E00               	movlw	0
 21298  004DD8  6ECF               	movwf	4047,c	;volatile
 21299  004DDA  0E00               	movlw	0
 21300  004DDC  6ECE               	movwf	4046,c	;volatile
 21301                           
 21302                           ;Timer.c: 691: T1CONbits.TMR1ON =1;
 21303  004DDE  80CD               	bsf	4045,0,c	;volatile
 21304  004DE0                     l11331:
 21305  004DE0  0100               	movlb	0	; () banked
 21306  004DE2  51FD               	movf	delaynus@n& (0+255),w,b
 21307  004DE4  5CCE               	subwf	4046,w,c	;volatile
 21308  004DE6  0100               	movlb	0	; () banked
 21309  004DE8  51FE               	movf	(delaynus@n+1)& (0+255),w,b
 21310  004DEA  58CF               	subwfb	4047,w,c	;volatile
 21311  004DEC  A0D8               	btfss	status,0,c
 21312  004DEE  D7F8               	goto	l11331
 21313                           
 21314                           ; BSR set to: 0
 21315                           ;Timer.c: 695: T1CONbits.TMR1ON =0;
 21316  004DF0  90CD               	bcf	4045,0,c	;volatile
 21317                           
 21318                           ; BSR set to: 0
 21319  004DF2  0012               	return		;funcret
 21320  004DF4                     __end_of_delaynus:
 21321                           	opt stack 0
 21322                           tblptru	equ	0xFF8
 21323                           tblptrh	equ	0xFF7
 21324                           tblptrl	equ	0xFF6
 21325                           tablat	equ	0xFF5
 21326                           prodh	equ	0xFF4
 21327                           prodl	equ	0xFF3
 21328                           intcon	equ	0xFF2
 21329                           intcon3	equ	0xFF0
 21330                           postinc0	equ	0xFEE
 21331                           wreg	equ	0xFE8
 21332                           postdec1	equ	0xFE5
 21333                           fsr1h	equ	0xFE2
 21334                           fsr1l	equ	0xFE1
 21335                           postinc2	equ	0xFDE
 21336                           fsr2h	equ	0xFDA
 21337                           fsr2l	equ	0xFD9
 21338                           status	equ	0xFD8
 21339                           
 21340 ;; *************** function _buzz *****************
 21341 ;; Defined at:
 21342 ;;		line 77 in file "../Beep.c"
 21343 ;; Parameters:    Size  Location     Type
 21344 ;;		None
 21345 ;; Auto vars:     Size  Location     Type
 21346 ;;		None
 21347 ;; Return value:  Size  Location     Type
 21348 ;;                  1    wreg      void 
 21349 ;; Registers used:
 21350 ;;		wreg, status,2, status,0, cstack
 21351 ;; Tracked objects:
 21352 ;;		On entry : 0/0
 21353 ;;		On exit  : 0/0
 21354 ;;		Unchanged: 0/0
 21355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21356 ;;      Params:         0       0       0       0       0       0       0
 21357 ;;      Locals:         0       0       0       0       0       0       0
 21358 ;;      Temps:          0       0       0       0       0       0       0
 21359 ;;      Totals:         0       0       0       0       0       0       0
 21360 ;;Total ram usage:        0 bytes
 21361 ;; Hardware stack levels used:    1
 21362 ;; Hardware stack levels required when called:    3
 21363 ;; This function calls:
 21364 ;;		_delay_nms
 21365 ;; This function is called by:
 21366 ;;		_KEY_Scan
 21367 ;;		_drops_routine
 21368 ;;		_check_acting
 21369 ;;		_check_wake_button
 21370 ;; This function uses a non-reentrant model
 21371 ;;
 21372                           
 21373                           	psect	text48
 21374  004E12                     __ptext48:
 21375                           	opt stack 0
 21376  004E12                     _buzz:
 21377                           	opt stack 25
 21378                           
 21379                           ;Beep.c: 83: LATEbits.LE2 =1;
 21380                           
 21381                           ; BSR set to: 0
 21382                           ;incstack = 0
 21383  004E12  848D               	bsf	3981,2,c	;volatile
 21384                           
 21385                           ;Beep.c: 89: delay_nms(1);
 21386  004E14  0E01               	movlw	1
 21387  004E16  0101               	movlb	1	; () banked
 21388  004E18  6F28               	movwf	delay_nms@n& (0+255),b
 21389  004E1A  0E00               	movlw	0
 21390  004E1C  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21391  004E1E  0E00               	movlw	0
 21392  004E20  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21393  004E22  0E00               	movlw	0
 21394  004E24  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21395  004E26  EC5E  F025         	call	_delay_nms	;wreg free
 21396                           
 21397                           ;Beep.c: 92: LATEbits.LE2 =0;
 21398  004E2A  948D               	bcf	3981,2,c	;volatile
 21399  004E2C  0012               	return		;funcret
 21400  004E2E                     __end_of_buzz:
 21401                           	opt stack 0
 21402                           tblptru	equ	0xFF8
 21403                           tblptrh	equ	0xFF7
 21404                           tblptrl	equ	0xFF6
 21405                           tablat	equ	0xFF5
 21406                           prodh	equ	0xFF4
 21407                           prodl	equ	0xFF3
 21408                           intcon	equ	0xFF2
 21409                           intcon3	equ	0xFF0
 21410                           postinc0	equ	0xFEE
 21411                           wreg	equ	0xFE8
 21412                           postdec1	equ	0xFE5
 21413                           fsr1h	equ	0xFE2
 21414                           fsr1l	equ	0xFE1
 21415                           postinc2	equ	0xFDE
 21416                           fsr2h	equ	0xFDA
 21417                           fsr2l	equ	0xFD9
 21418                           status	equ	0xFD8
 21419                           
 21420 ;; *************** function _delay_nms *****************
 21421 ;; Defined at:
 21422 ;;		line 10 in file "../Oled.c"
 21423 ;; Parameters:    Size  Location     Type
 21424 ;;  n               4    0[BANK1 ] unsigned long 
 21425 ;; Auto vars:     Size  Location     Type
 21426 ;;  i               2    0[BANK0 ] unsigned int 
 21427 ;; Return value:  Size  Location     Type
 21428 ;;                  1    wreg      void 
 21429 ;; Registers used:
 21430 ;;		wreg, status,2, status,0
 21431 ;; Tracked objects:
 21432 ;;		On entry : 0/0
 21433 ;;		On exit  : 0/0
 21434 ;;		Unchanged: 0/0
 21435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21436 ;;      Params:         0       0       4       0       0       0       0
 21437 ;;      Locals:         0       2       0       0       0       0       0
 21438 ;;      Temps:          0       0       0       0       0       0       0
 21439 ;;      Totals:         0       2       4       0       0       0       0
 21440 ;;Total ram usage:        6 bytes
 21441 ;; Hardware stack levels used:    1
 21442 ;; Hardware stack levels required when called:    2
 21443 ;; This function calls:
 21444 ;;		Nothing
 21445 ;; This function is called by:
 21446 ;;		_buzz
 21447 ;;		_KEY_Scan
 21448 ;;		_check_device_idle
 21449 ;;		_check_shut_device
 21450 ;;		_check_wake_button
 21451 ;; This function uses a non-reentrant model
 21452 ;;
 21453                           
 21454                           	psect	text49
 21455  004ABC                     __ptext49:
 21456                           	opt stack 0
 21457  004ABC                     _delay_nms:
 21458                           	opt stack 26
 21459                           
 21460                           ;Oled.c: 12: uint16_t i=0;
 21461                           
 21462                           ;incstack = 0
 21463  004ABC  0E00               	movlw	0
 21464  004ABE  0100               	movlb	0	; () banked
 21465  004AC0  6FFE               	movwf	(delay_nms@i+1)& (0+255),b
 21466  004AC2  0E00               	movlw	0
 21467  004AC4  6FFD               	movwf	delay_nms@i& (0+255),b
 21468                           
 21469                           ;Oled.c: 13: while(n)
 21470  004AC6  D018               	goto	l659
 21471  004AC8                     l11315:
 21472                           
 21473                           ;Oled.c: 14: {
 21474                           ;Oled.c: 16: for(i=0;i<5000;i++)
 21475  004AC8  0E00               	movlw	0
 21476  004ACA  0100               	movlb	0	; () banked
 21477  004ACC  6FFE               	movwf	(delay_nms@i+1)& (0+255),b
 21478  004ACE  0E00               	movlw	0
 21479  004AD0  6FFD               	movwf	delay_nms@i& (0+255),b
 21480  004AD2                     l11317:
 21481                           
 21482                           ; BSR set to: 0
 21483  004AD2  0E88               	movlw	136
 21484  004AD4  0100               	movlb	0	; () banked
 21485  004AD6  5DFD               	subwf	delay_nms@i& (0+255),w,b
 21486  004AD8  0E13               	movlw	19
 21487  004ADA  0100               	movlb	0	; () banked
 21488  004ADC  59FE               	subwfb	(delay_nms@i+1)& (0+255),w,b
 21489  004ADE  B0D8               	btfsc	status,0,c
 21490  004AE0  D005               	goto	l11325
 21491                           
 21492                           ; BSR set to: 0
 21493                           ;Oled.c: 17: __nop();
 21494                           
 21495                           ; BSR set to: 0
 21496  004AE2  F000               	nop	
 21497  004AE4  0100               	movlb	0	; () banked
 21498  004AE6  4BFD               	infsnz	delay_nms@i& (0+255),f,b
 21499  004AE8  2BFE               	incf	(delay_nms@i+1)& (0+255),f,b
 21500  004AEA  D7F3               	goto	l11317
 21501  004AEC                     l11325:
 21502                           
 21503                           ; BSR set to: 0
 21504                           ;Oled.c: 19: n--;
 21505  004AEC  0101               	movlb	1	; () banked
 21506  004AEE  0728               	decf	delay_nms@n& (0+255),f,b
 21507  004AF0  0E00               	movlw	0
 21508  004AF2  5B29               	subwfb	(delay_nms@n+1)& (0+255),f,b
 21509  004AF4  5B2A               	subwfb	(delay_nms@n+2)& (0+255),f,b
 21510  004AF6  5B2B               	subwfb	(delay_nms@n+3)& (0+255),f,b
 21511  004AF8                     l659:
 21512  004AF8  0101               	movlb	1	; () banked
 21513  004AFA  5128               	movf	delay_nms@n& (0+255),w,b
 21514  004AFC  0101               	movlb	1	; () banked
 21515  004AFE  1129               	iorwf	(delay_nms@n+1)& (0+255),w,b
 21516  004B00  0101               	movlb	1	; () banked
 21517  004B02  112A               	iorwf	(delay_nms@n+2)& (0+255),w,b
 21518  004B04  0101               	movlb	1	; () banked
 21519  004B06  112B               	iorwf	(delay_nms@n+3)& (0+255),w,b
 21520  004B08  B4D8               	btfsc	status,2,c
 21521  004B0A  0012               	return	
 21522  004B0C  D7DD               	goto	l11315
 21523  004B0E                     __end_of_delay_nms:
 21524                           	opt stack 0
 21525                           tblptru	equ	0xFF8
 21526                           tblptrh	equ	0xFF7
 21527                           tblptrl	equ	0xFF6
 21528                           tablat	equ	0xFF5
 21529                           prodh	equ	0xFF4
 21530                           prodl	equ	0xFF3
 21531                           intcon	equ	0xFF2
 21532                           intcon3	equ	0xFF0
 21533                           postinc0	equ	0xFEE
 21534                           wreg	equ	0xFE8
 21535                           postdec1	equ	0xFE5
 21536                           fsr1h	equ	0xFE2
 21537                           fsr1l	equ	0xFE1
 21538                           postinc2	equ	0xFDE
 21539                           fsr2h	equ	0xFDA
 21540                           fsr2l	equ	0xFD9
 21541                           status	equ	0xFD8
 21542                           
 21543 ;; *************** function _HG_device_init *****************
 21544 ;; Defined at:
 21545 ;;		line 30 in file "../gui.c"
 21546 ;; Parameters:    Size  Location     Type
 21547 ;;		None
 21548 ;; Auto vars:     Size  Location     Type
 21549 ;;		None
 21550 ;; Return value:  Size  Location     Type
 21551 ;;                  1    wreg      void 
 21552 ;; Registers used:
 21553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21554 ;; Tracked objects:
 21555 ;;		On entry : 0/0
 21556 ;;		On exit  : 0/0
 21557 ;;		Unchanged: 0/0
 21558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21559 ;;      Params:         0       0       0       0       0       0       0
 21560 ;;      Locals:         0       0       0       0       0       0       0
 21561 ;;      Temps:          0       0       0       0       0       0       0
 21562 ;;      Totals:         0       0       0       0       0       0       0
 21563 ;;Total ram usage:        0 bytes
 21564 ;; Hardware stack levels used:    1
 21565 ;; Hardware stack levels required when called:    6
 21566 ;; This function calls:
 21567 ;;		_AD_init
 21568 ;;		_BeepInit
 21569 ;;		_Initial_LY096BG30
 21570 ;;		_KEY_Init
 21571 ;;		_LCD_Off
 21572 ;;		_LCD_backlight_init
 21573 ;;		_MotorDriveInit
 21574 ;;		_Timer1Init
 21575 ;;		_TimerInit
 21576 ;;		_init_menu
 21577 ;;		_uart_init
 21578 ;; This function is called by:
 21579 ;;		_main
 21580 ;; This function uses a non-reentrant model
 21581 ;;
 21582                           
 21583                           	psect	text50
 21584  004D5E                     __ptext50:
 21585                           	opt stack 0
 21586  004D5E                     _HG_device_init:
 21587                           	opt stack 24
 21588                           
 21589                           ;gui.c: 34: uart_init();
 21590                           
 21591                           ; BSR set to: 1
 21592                           ;incstack = 0
 21593  004D5E  EC33  F027         	call	_uart_init	;wreg free
 21594                           
 21595                           ;gui.c: 35: AD_init();
 21596  004D62  EC22  F027         	call	_AD_init	;wreg free
 21597                           
 21598                           ;gui.c: 36: MotorDriveInit();
 21599  004D66  EC97  F026         	call	_MotorDriveInit	;wreg free
 21600                           
 21601                           ;gui.c: 37: Timer1Init();
 21602  004D6A  EC3A  F027         	call	_Timer1Init	;wreg free
 21603                           
 21604                           ;gui.c: 42: BeepInit();
 21605  004D6E  EC53  F027         	call	_BeepInit	;wreg free
 21606                           
 21607                           ;gui.c: 43: LCD_backlight_init();
 21608  004D72  EC5A  F027         	call	_LCD_backlight_init	;wreg free
 21609                           
 21610                           ;gui.c: 45: LCD_Off();
 21611  004D76  EC5C  F027         	call	_LCD_Off	;wreg free
 21612                           
 21613                           ;gui.c: 47: Initial_LY096BG30();
 21614  004D7A  EC87  F025         	call	_Initial_LY096BG30	;wreg free
 21615                           
 21616                           ;gui.c: 48: init_menu();
 21617  004D7E  ECE0  F01F         	call	_init_menu	;wreg free
 21618                           
 21619                           ;gui.c: 49: KEY_Init();
 21620  004D82  ECDB  F026         	call	_KEY_Init	;wreg free
 21621                           
 21622                           ;gui.c: 51: TimerInit();
 21623  004D86  ECFA  F026         	call	_TimerInit	;wreg free
 21624  004D8A  0012               	return		;funcret
 21625  004D8C                     __end_of_HG_device_init:
 21626                           	opt stack 0
 21627                           tblptru	equ	0xFF8
 21628                           tblptrh	equ	0xFF7
 21629                           tblptrl	equ	0xFF6
 21630                           tablat	equ	0xFF5
 21631                           prodh	equ	0xFF4
 21632                           prodl	equ	0xFF3
 21633                           intcon	equ	0xFF2
 21634                           intcon3	equ	0xFF0
 21635                           postinc0	equ	0xFEE
 21636                           wreg	equ	0xFE8
 21637                           postdec1	equ	0xFE5
 21638                           fsr1h	equ	0xFE2
 21639                           fsr1l	equ	0xFE1
 21640                           postinc2	equ	0xFDE
 21641                           fsr2h	equ	0xFDA
 21642                           fsr2l	equ	0xFD9
 21643                           status	equ	0xFD8
 21644                           
 21645 ;; *************** function _uart_init *****************
 21646 ;; Defined at:
 21647 ;;		line 6 in file "../Beep.c"
 21648 ;; Parameters:    Size  Location     Type
 21649 ;;		None
 21650 ;; Auto vars:     Size  Location     Type
 21651 ;;		None
 21652 ;; Return value:  Size  Location     Type
 21653 ;;                  1    wreg      void 
 21654 ;; Registers used:
 21655 ;;		wreg, status,2
 21656 ;; Tracked objects:
 21657 ;;		On entry : 0/0
 21658 ;;		On exit  : 0/0
 21659 ;;		Unchanged: 0/0
 21660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21661 ;;      Params:         0       0       0       0       0       0       0
 21662 ;;      Locals:         0       0       0       0       0       0       0
 21663 ;;      Temps:          0       0       0       0       0       0       0
 21664 ;;      Totals:         0       0       0       0       0       0       0
 21665 ;;Total ram usage:        0 bytes
 21666 ;; Hardware stack levels used:    1
 21667 ;; Hardware stack levels required when called:    2
 21668 ;; This function calls:
 21669 ;;		Nothing
 21670 ;; This function is called by:
 21671 ;;		_HG_device_init
 21672 ;; This function uses a non-reentrant model
 21673 ;;
 21674                           
 21675                           	psect	text51
 21676  004E66                     __ptext51:
 21677                           	opt stack 0
 21678  004E66                     _uart_init:
 21679                           	opt stack 27
 21680                           
 21681                           ;Beep.c: 9: TRISCbits.RC7 =1;
 21682                           
 21683                           ;incstack = 0
 21684  004E66  8E94               	bsf	3988,7,c	;volatile
 21685                           
 21686                           ;Beep.c: 10: TRISCbits.RC6 =0;
 21687  004E68  9C94               	bcf	3988,6,c	;volatile
 21688                           
 21689                           ;Beep.c: 13: SPBRG = 12;
 21690  004E6A  0E0C               	movlw	12
 21691  004E6C  6EAF               	movwf	4015,c	;volatile
 21692                           
 21693                           ;Beep.c: 14: RCSTAbits.SPEN =1;
 21694  004E6E  8EAB               	bsf	4011,7,c	;volatile
 21695                           
 21696                           ;Beep.c: 19: TXSTAbits.TXEN =1;
 21697  004E70  8AAC               	bsf	4012,5,c	;volatile
 21698  004E72  0012               	return		;funcret
 21699  004E74                     __end_of_uart_init:
 21700                           	opt stack 0
 21701                           tblptru	equ	0xFF8
 21702                           tblptrh	equ	0xFF7
 21703                           tblptrl	equ	0xFF6
 21704                           tablat	equ	0xFF5
 21705                           prodh	equ	0xFF4
 21706                           prodl	equ	0xFF3
 21707                           intcon	equ	0xFF2
 21708                           intcon3	equ	0xFF0
 21709                           postinc0	equ	0xFEE
 21710                           wreg	equ	0xFE8
 21711                           postdec1	equ	0xFE5
 21712                           fsr1h	equ	0xFE2
 21713                           fsr1l	equ	0xFE1
 21714                           postinc2	equ	0xFDE
 21715                           fsr2h	equ	0xFDA
 21716                           fsr2l	equ	0xFD9
 21717                           status	equ	0xFD8
 21718                           
 21719 ;; *************** function _init_menu *****************
 21720 ;; Defined at:
 21721 ;;		line 1382 in file "../gui.c"
 21722 ;; Parameters:    Size  Location     Type
 21723 ;;		None
 21724 ;; Auto vars:     Size  Location     Type
 21725 ;;		None
 21726 ;; Return value:  Size  Location     Type
 21727 ;;                  1    wreg      void 
 21728 ;; Registers used:
 21729 ;;		wreg, status,2, status,0
 21730 ;; Tracked objects:
 21731 ;;		On entry : 0/0
 21732 ;;		On exit  : 0/0
 21733 ;;		Unchanged: 0/0
 21734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21735 ;;      Params:         0       0       0       0       0       0       0
 21736 ;;      Locals:         0       0       0       0       0       0       0
 21737 ;;      Temps:          0       0       0       0       0       0       0
 21738 ;;      Totals:         0       0       0       0       0       0       0
 21739 ;;Total ram usage:        0 bytes
 21740 ;; Hardware stack levels used:    1
 21741 ;; Hardware stack levels required when called:    2
 21742 ;; This function calls:
 21743 ;;		Nothing
 21744 ;; This function is called by:
 21745 ;;		_HG_device_init
 21746 ;; This function uses a non-reentrant model
 21747 ;;
 21748                           
 21749                           	psect	text52
 21750  003FC0                     __ptext52:
 21751                           	opt stack 0
 21752  003FC0                     _init_menu:
 21753                           	opt stack 27
 21754                           
 21755                           ;gui.c: 1386: menu[0].menu_no=0;
 21756                           
 21757                           ;incstack = 0
 21758  003FC0  0E00               	movlw	0
 21759  003FC2  6E01               	movwf	_menu,c
 21760                           
 21761                           ;gui.c: 1387: menu[0].frame=0;
 21762  003FC4  0E00               	movlw	0
 21763  003FC6  6E04               	movwf	_menu+3,c
 21764                           
 21765                           ;gui.c: 1388: menu[0].mode = 0;
 21766  003FC8  0E00               	movlw	0
 21767  003FCA  6E02               	movwf	_menu+1,c
 21768                           
 21769                           ;gui.c: 1389: menu[0].cur_mode =menu[0].mode;
 21770  003FCC  C002  F003         	movff	_menu+1,_menu+2
 21771                           
 21772                           ;gui.c: 1390: menu[0].value = 0;
 21773  003FD0  0E00               	movlw	0
 21774  003FD2  6E05               	movwf	_menu+4,c
 21775                           
 21776                           ;gui.c: 1391: menu[0].parameter =0;
 21777  003FD4  0E00               	movlw	0
 21778  003FD6  6E06               	movwf	_menu+5,c
 21779                           
 21780                           ;gui.c: 1392: menu[0].MsgHandlle = menu0_MsgHandlle;
 21781  003FD8  0E7E               	movlw	low _menu0_MsgHandlle
 21782  003FDA  6E07               	movwf	_menu+6,c
 21783  003FDC  0E1E               	movlw	high _menu0_MsgHandlle
 21784  003FDE  6E08               	movwf	_menu+7,c
 21785                           
 21786                           ;gui.c: 1395: menu[1].menu_no=0;
 21787  003FE0  0E00               	movlw	0
 21788  003FE2  6E09               	movwf	_menu+8,c
 21789                           
 21790                           ;gui.c: 1396: menu[1].frame=0;
 21791  003FE4  0E00               	movlw	0
 21792  003FE6  6E0C               	movwf	_menu+11,c
 21793                           
 21794                           ;gui.c: 1397: menu[1].mode = 0;
 21795  003FE8  0E00               	movlw	0
 21796  003FEA  6E0A               	movwf	_menu+9,c
 21797                           
 21798                           ;gui.c: 1398: menu[1].cur_mode =menu[1].mode;
 21799  003FEC  C00A  F00B         	movff	_menu+9,_menu+10
 21800                           
 21801                           ;gui.c: 1399: menu[1].value = 0;
 21802  003FF0  0E00               	movlw	0
 21803  003FF2  6E0D               	movwf	_menu+12,c
 21804                           
 21805                           ;gui.c: 1400: menu[1].parameter =0;
 21806  003FF4  0E00               	movlw	0
 21807  003FF6  6E0E               	movwf	_menu+13,c
 21808                           
 21809                           ;gui.c: 1401: menu[1].MsgHandlle = menu1_MsgHandlle;
 21810  003FF8  0E6A               	movlw	low _menu1_MsgHandlle
 21811  003FFA  6E0F               	movwf	_menu+14,c
 21812  003FFC  0E4A               	movlw	high _menu1_MsgHandlle
 21813  003FFE  6E10               	movwf	_menu+15,c
 21814                           
 21815                           ;gui.c: 1403: menu[2].menu_no=0;
 21816  004000  0E00               	movlw	0
 21817  004002  6E11               	movwf	_menu+16,c
 21818                           
 21819                           ;gui.c: 1404: menu[2].frame=0;
 21820  004004  0E00               	movlw	0
 21821  004006  6E14               	movwf	_menu+19,c
 21822                           
 21823                           ;gui.c: 1405: menu[2].mode = 0;
 21824  004008  0E00               	movlw	0
 21825  00400A  6E12               	movwf	_menu+17,c
 21826                           
 21827                           ;gui.c: 1406: menu[2].cur_mode =menu[2].mode;
 21828  00400C  C012  F013         	movff	_menu+17,_menu+18
 21829                           
 21830                           ;gui.c: 1407: menu[2].value = 0;
 21831  004010  0E00               	movlw	0
 21832  004012  6E15               	movwf	_menu+20,c
 21833                           
 21834                           ;gui.c: 1408: menu[2].parameter =0;
 21835  004014  0E00               	movlw	0
 21836  004016  6E16               	movwf	_menu+21,c
 21837                           
 21838                           ;gui.c: 1409: menu[2].MsgHandlle = menu2_MsgHandlle;
 21839  004018  0E18               	movlw	low _menu2_MsgHandlle
 21840  00401A  6E17               	movwf	_menu+22,c
 21841  00401C  0E4A               	movlw	high _menu2_MsgHandlle
 21842  00401E  6E18               	movwf	_menu+23,c
 21843                           
 21844                           ;gui.c: 1412: menu[3].menu_no=0;
 21845  004020  0E00               	movlw	0
 21846  004022  6E19               	movwf	_menu+24,c
 21847                           
 21848                           ;gui.c: 1413: menu[3].frame=0;
 21849  004024  0E00               	movlw	0
 21850  004026  6E1C               	movwf	_menu+27,c
 21851                           
 21852                           ;gui.c: 1414: menu[3].mode = 0;
 21853  004028  0E00               	movlw	0
 21854  00402A  6E1A               	movwf	_menu+25,c
 21855                           
 21856                           ;gui.c: 1415: menu[3].cur_mode =menu[3].mode;
 21857  00402C  C01A  F01B         	movff	_menu+25,_menu+26
 21858                           
 21859                           ;gui.c: 1416: menu[3].value = 0;
 21860  004030  0E00               	movlw	0
 21861  004032  6E1D               	movwf	_menu+28,c
 21862                           
 21863                           ;gui.c: 1417: menu[3].parameter =0;
 21864  004034  0E00               	movlw	0
 21865  004036  6E1E               	movwf	_menu+29,c
 21866                           
 21867                           ;gui.c: 1418: menu[3].MsgHandlle = menu3_MsgHandlle;
 21868  004038  0EA6               	movlw	low _menu3_MsgHandlle
 21869  00403A  6E1F               	movwf	_menu+30,c
 21870  00403C  0E2A               	movlw	high _menu3_MsgHandlle
 21871  00403E  6E20               	movwf	_menu+31,c
 21872                           
 21873                           ;gui.c: 1421: menu[4].menu_no=0;
 21874  004040  0E00               	movlw	0
 21875  004042  6E21               	movwf	_menu+32,c
 21876                           
 21877                           ;gui.c: 1422: menu[4].frame=0;
 21878  004044  0E00               	movlw	0
 21879  004046  6E24               	movwf	_menu+35,c
 21880                           
 21881                           ;gui.c: 1423: menu[4].mode = 0;
 21882  004048  0E00               	movlw	0
 21883  00404A  6E22               	movwf	_menu+33,c
 21884                           
 21885                           ;gui.c: 1424: menu[4].cur_mode =menu[4].mode;
 21886  00404C  C022  F023         	movff	_menu+33,_menu+34
 21887                           
 21888                           ;gui.c: 1425: menu[4].value = 0;
 21889  004050  0E00               	movlw	0
 21890  004052  6E25               	movwf	_menu+36,c
 21891                           
 21892                           ;gui.c: 1426: menu[4].parameter =0;
 21893  004054  0E00               	movlw	0
 21894  004056  6E26               	movwf	_menu+37,c
 21895                           
 21896                           ;gui.c: 1427: menu[4].MsgHandlle = menu4_MsgHandlle;
 21897  004058  0E3C               	movlw	low _menu4_MsgHandlle
 21898  00405A  6E27               	movwf	_menu+38,c
 21899  00405C  0E26               	movlw	high _menu4_MsgHandlle
 21900  00405E  6E28               	movwf	_menu+39,c
 21901                           
 21902                           ;gui.c: 1429: menu[5].menu_no=0;
 21903  004060  0E00               	movlw	0
 21904  004062  6E29               	movwf	_menu+40,c
 21905                           
 21906                           ;gui.c: 1430: menu[5].frame=0;
 21907  004064  0E00               	movlw	0
 21908  004066  6E2C               	movwf	_menu+43,c
 21909                           
 21910                           ;gui.c: 1431: menu[5].mode = 0;
 21911  004068  0E00               	movlw	0
 21912  00406A  6E2A               	movwf	_menu+41,c
 21913                           
 21914                           ;gui.c: 1432: menu[5].cur_mode =menu[5].mode;
 21915  00406C  C02A  F02B         	movff	_menu+41,_menu+42
 21916                           
 21917                           ;gui.c: 1433: menu[5].value = 0;
 21918  004070  0E00               	movlw	0
 21919  004072  6E2D               	movwf	_menu+44,c
 21920                           
 21921                           ;gui.c: 1434: menu[5].parameter =0;
 21922  004074  0E00               	movlw	0
 21923  004076  6E2E               	movwf	_menu+45,c
 21924                           
 21925                           ;gui.c: 1435: menu[5].MsgHandlle = menu5_MsgHandlle;
 21926  004078  0EE0               	movlw	low _menu5_MsgHandlle
 21927  00407A  6E2F               	movwf	_menu+46,c
 21928  00407C  0E30               	movlw	high _menu5_MsgHandlle
 21929  00407E  6E30               	movwf	_menu+47,c
 21930                           
 21931                           ;gui.c: 1438: menu[6].menu_no=0;
 21932  004080  0E00               	movlw	0
 21933  004082  6E31               	movwf	_menu+48,c
 21934                           
 21935                           ;gui.c: 1439: menu[6].frame=0;
 21936  004084  0E00               	movlw	0
 21937  004086  6E34               	movwf	_menu+51,c
 21938                           
 21939                           ;gui.c: 1440: menu[6].mode = 0;
 21940  004088  0E00               	movlw	0
 21941  00408A  6E32               	movwf	_menu+49,c
 21942                           
 21943                           ;gui.c: 1441: menu[6].cur_mode =menu[6].mode;
 21944  00408C  C032  F033         	movff	_menu+49,_menu+50
 21945                           
 21946                           ;gui.c: 1442: menu[6].value = 0;
 21947  004090  0E00               	movlw	0
 21948  004092  6E35               	movwf	_menu+52,c
 21949                           
 21950                           ;gui.c: 1443: menu[6].parameter =0;
 21951  004094  0E00               	movlw	0
 21952  004096  6E36               	movwf	_menu+53,c
 21953                           
 21954                           ;gui.c: 1444: menu[6].MsgHandlle = menu6_MsgHandlle;
 21955  004098  0EE6               	movlw	low _menu6_MsgHandlle
 21956  00409A  6E37               	movwf	_menu+54,c
 21957  00409C  0E09               	movlw	high _menu6_MsgHandlle
 21958  00409E  6E38               	movwf	_menu+55,c
 21959                           
 21960                           ;gui.c: 1446: menu[7].menu_no=0;
 21961  0040A0  0E00               	movlw	0
 21962  0040A2  6E39               	movwf	_menu+56,c
 21963                           
 21964                           ;gui.c: 1447: menu[7].frame=0;
 21965  0040A4  0E00               	movlw	0
 21966  0040A6  6E3C               	movwf	_menu+59,c
 21967                           
 21968                           ;gui.c: 1448: menu[7].mode = 0;
 21969  0040A8  0E00               	movlw	0
 21970  0040AA  6E3A               	movwf	_menu+57,c
 21971                           
 21972                           ;gui.c: 1449: menu[7].cur_mode =menu[0].mode;
 21973  0040AC  C002  F03B         	movff	_menu+1,_menu+58
 21974                           
 21975                           ;gui.c: 1450: menu[7].value = 0;
 21976  0040B0  0E00               	movlw	0
 21977  0040B2  6E3D               	movwf	_menu+60,c
 21978                           
 21979                           ;gui.c: 1451: menu[7].parameter =0;
 21980  0040B4  0E00               	movlw	0
 21981  0040B6  6E3E               	movwf	_menu+61,c
 21982                           
 21983                           ;gui.c: 1452: menu[7].MsgHandlle = menu7_MsgHandlle;
 21984  0040B8  0E00               	movlw	0
 21985  0040BA  6E3F               	movwf	_menu+62,c
 21986  0040BC  0E00               	movlw	0
 21987  0040BE  6E40               	movwf	_menu+63,c
 21988                           
 21989                           ;gui.c: 1454: focus =0;
 21990  0040C0  0E00               	movlw	0
 21991  0040C2  6E4F               	movwf	_focus,c
 21992                           
 21993                           ;gui.c: 1455: flip =0;
 21994  0040C4  0E00               	movlw	0
 21995  0040C6  6E4E               	movwf	_flip,c
 21996                           
 21997                           ;gui.c: 1456: work_mode = 0x00;
 21998  0040C8  0E00               	movlw	0
 21999  0040CA  6E4D               	movwf	_work_mode,c
 22000  0040CC  0012               	return		;funcret
 22001  0040CE                     __end_of_init_menu:
 22002                           	opt stack 0
 22003                           tblptru	equ	0xFF8
 22004                           tblptrh	equ	0xFF7
 22005                           tblptrl	equ	0xFF6
 22006                           tablat	equ	0xFF5
 22007                           prodh	equ	0xFF4
 22008                           prodl	equ	0xFF3
 22009                           intcon	equ	0xFF2
 22010                           intcon3	equ	0xFF0
 22011                           postinc0	equ	0xFEE
 22012                           wreg	equ	0xFE8
 22013                           postdec1	equ	0xFE5
 22014                           fsr1h	equ	0xFE2
 22015                           fsr1l	equ	0xFE1
 22016                           postinc2	equ	0xFDE
 22017                           fsr2h	equ	0xFDA
 22018                           fsr2l	equ	0xFD9
 22019                           status	equ	0xFD8
 22020                           
 22021 ;; *************** function _TimerInit *****************
 22022 ;; Defined at:
 22023 ;;		line 619 in file "../Timer.c"
 22024 ;; Parameters:    Size  Location     Type
 22025 ;;		None
 22026 ;; Auto vars:     Size  Location     Type
 22027 ;;		None
 22028 ;; Return value:  Size  Location     Type
 22029 ;;                  1    wreg      void 
 22030 ;; Registers used:
 22031 ;;		wreg, status,2
 22032 ;; Tracked objects:
 22033 ;;		On entry : 0/0
 22034 ;;		On exit  : 0/0
 22035 ;;		Unchanged: 0/0
 22036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22037 ;;      Params:         0       0       0       0       0       0       0
 22038 ;;      Locals:         0       0       0       0       0       0       0
 22039 ;;      Temps:          0       0       0       0       0       0       0
 22040 ;;      Totals:         0       0       0       0       0       0       0
 22041 ;;Total ram usage:        0 bytes
 22042 ;; Hardware stack levels used:    1
 22043 ;; Hardware stack levels required when called:    2
 22044 ;; This function calls:
 22045 ;;		Nothing
 22046 ;; This function is called by:
 22047 ;;		_HG_device_init
 22048 ;; This function uses a non-reentrant model
 22049 ;;
 22050                           
 22051                           	psect	text53
 22052  004DF4                     __ptext53:
 22053                           	opt stack 0
 22054  004DF4                     _TimerInit:
 22055                           	opt stack 27
 22056                           
 22057                           ;Timer.c: 621: T0CS=0;
 22058                           
 22059                           ;incstack = 0
 22060  004DF4  9AD5               	bcf	4053,5,c	;volatile
 22061                           
 22062                           ;Timer.c: 622: PSA=0;
 22063  004DF6  96D5               	bcf	4053,3,c	;volatile
 22064                           
 22065                           ;Timer.c: 625: T0PS2=1;
 22066  004DF8  84D5               	bsf	4053,2,c	;volatile
 22067                           
 22068                           ;Timer.c: 626: T0PS1=0;
 22069  004DFA  92D5               	bcf	4053,1,c	;volatile
 22070                           
 22071                           ;Timer.c: 627: T0PS0=1;
 22072  004DFC  80D5               	bsf	4053,0,c	;volatile
 22073                           
 22074                           ;Timer.c: 637: T08BIT =1;
 22075  004DFE  8CD5               	bsf	4053,6,c	;volatile
 22076                           
 22077                           ;Timer.c: 638: T0IF=0;
 22078  004E00  94F2               	bcf	intcon,2,c	;volatile
 22079                           
 22080                           ;Timer.c: 639: TMR0=0;
 22081  004E02  0E00               	movlw	0
 22082  004E04  6ED7               	movwf	4055,c	;volatile
 22083  004E06  0E00               	movlw	0
 22084  004E08  6ED6               	movwf	4054,c	;volatile
 22085                           
 22086                           ;Timer.c: 642: T0IE=0;
 22087  004E0A  9AF2               	bcf	intcon,5,c	;volatile
 22088                           
 22089                           ;Timer.c: 643: T0CONbits.TMR0ON =0;
 22090  004E0C  9ED5               	bcf	4053,7,c	;volatile
 22091                           
 22092                           ;Timer.c: 644: GIE=1;
 22093  004E0E  8EF2               	bsf	intcon,7,c	;volatile
 22094  004E10  0012               	return		;funcret
 22095  004E12                     __end_of_TimerInit:
 22096                           	opt stack 0
 22097                           tblptru	equ	0xFF8
 22098                           tblptrh	equ	0xFF7
 22099                           tblptrl	equ	0xFF6
 22100                           tablat	equ	0xFF5
 22101                           prodh	equ	0xFF4
 22102                           prodl	equ	0xFF3
 22103                           intcon	equ	0xFF2
 22104                           intcon3	equ	0xFF0
 22105                           postinc0	equ	0xFEE
 22106                           wreg	equ	0xFE8
 22107                           postdec1	equ	0xFE5
 22108                           fsr1h	equ	0xFE2
 22109                           fsr1l	equ	0xFE1
 22110                           postinc2	equ	0xFDE
 22111                           fsr2h	equ	0xFDA
 22112                           fsr2l	equ	0xFD9
 22113                           status	equ	0xFD8
 22114                           
 22115 ;; *************** function _Timer1Init *****************
 22116 ;; Defined at:
 22117 ;;		line 649 in file "../Timer.c"
 22118 ;; Parameters:    Size  Location     Type
 22119 ;;		None
 22120 ;; Auto vars:     Size  Location     Type
 22121 ;;		None
 22122 ;; Return value:  Size  Location     Type
 22123 ;;                  1    wreg      void 
 22124 ;; Registers used:
 22125 ;;		wreg, status,2
 22126 ;; Tracked objects:
 22127 ;;		On entry : 0/0
 22128 ;;		On exit  : 0/0
 22129 ;;		Unchanged: 0/0
 22130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22131 ;;      Params:         0       0       0       0       0       0       0
 22132 ;;      Locals:         0       0       0       0       0       0       0
 22133 ;;      Temps:          0       0       0       0       0       0       0
 22134 ;;      Totals:         0       0       0       0       0       0       0
 22135 ;;Total ram usage:        0 bytes
 22136 ;; Hardware stack levels used:    1
 22137 ;; Hardware stack levels required when called:    2
 22138 ;; This function calls:
 22139 ;;		Nothing
 22140 ;; This function is called by:
 22141 ;;		_HG_device_init
 22142 ;; This function uses a non-reentrant model
 22143 ;;
 22144                           
 22145                           	psect	text54
 22146  004E74                     __ptext54:
 22147                           	opt stack 0
 22148  004E74                     _Timer1Init:
 22149                           	opt stack 27
 22150                           
 22151                           ;Timer.c: 653: T1CONbits.T1CKPS = 2;
 22152                           
 22153                           ;incstack = 0
 22154  004E74  50CD               	movf	4045,w,c	;volatile
 22155  004E76  0BCF               	andlw	-49
 22156  004E78  0920               	iorlw	32
 22157  004E7A  6ECD               	movwf	4045,c	;volatile
 22158                           
 22159                           ;Timer.c: 654: T1CONbits.RD16 =1;
 22160  004E7C  8ECD               	bsf	4045,7,c	;volatile
 22161                           
 22162                           ;Timer.c: 655: T1CONbits.TMR1ON =0;
 22163  004E7E  90CD               	bcf	4045,0,c	;volatile
 22164  004E80  0012               	return		;funcret
 22165  004E82                     __end_of_Timer1Init:
 22166                           	opt stack 0
 22167                           tblptru	equ	0xFF8
 22168                           tblptrh	equ	0xFF7
 22169                           tblptrl	equ	0xFF6
 22170                           tablat	equ	0xFF5
 22171                           prodh	equ	0xFF4
 22172                           prodl	equ	0xFF3
 22173                           intcon	equ	0xFF2
 22174                           intcon3	equ	0xFF0
 22175                           postinc0	equ	0xFEE
 22176                           wreg	equ	0xFE8
 22177                           postdec1	equ	0xFE5
 22178                           fsr1h	equ	0xFE2
 22179                           fsr1l	equ	0xFE1
 22180                           postinc2	equ	0xFDE
 22181                           fsr2h	equ	0xFDA
 22182                           fsr2l	equ	0xFD9
 22183                           status	equ	0xFD8
 22184                           
 22185 ;; *************** function _MotorDriveInit *****************
 22186 ;; Defined at:
 22187 ;;		line 50 in file "../MotorDrive.c"
 22188 ;; Parameters:    Size  Location     Type
 22189 ;;		None
 22190 ;; Auto vars:     Size  Location     Type
 22191 ;;		None
 22192 ;; Return value:  Size  Location     Type
 22193 ;;                  1    wreg      void 
 22194 ;; Registers used:
 22195 ;;		None
 22196 ;; Tracked objects:
 22197 ;;		On entry : 0/0
 22198 ;;		On exit  : 0/0
 22199 ;;		Unchanged: 0/0
 22200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22201 ;;      Params:         0       0       0       0       0       0       0
 22202 ;;      Locals:         0       0       0       0       0       0       0
 22203 ;;      Temps:          0       0       0       0       0       0       0
 22204 ;;      Totals:         0       0       0       0       0       0       0
 22205 ;;Total ram usage:        0 bytes
 22206 ;; Hardware stack levels used:    1
 22207 ;; Hardware stack levels required when called:    2
 22208 ;; This function calls:
 22209 ;;		Nothing
 22210 ;; This function is called by:
 22211 ;;		_HG_device_init
 22212 ;; This function uses a non-reentrant model
 22213 ;;
 22214                           
 22215                           	psect	text55
 22216  004D2E                     __ptext55:
 22217                           	opt stack 0
 22218  004D2E                     _MotorDriveInit:
 22219                           	opt stack 27
 22220                           
 22221                           ;MotorDrive.c: 67: TRISAbits.RA5 =0;
 22222                           
 22223                           ;incstack = 0
 22224  004D2E  9A92               	bcf	3986,5,c	;volatile
 22225                           
 22226                           ;MotorDrive.c: 70: TRISCbits.RC2 =0;
 22227  004D30  9494               	bcf	3988,2,c	;volatile
 22228                           
 22229                           ;MotorDrive.c: 71: TRISDbits.RD0 =0;
 22230  004D32  9095               	bcf	3989,0,c	;volatile
 22231                           
 22232                           ;MotorDrive.c: 72: TRISDbits.RD1 =0;
 22233  004D34  9295               	bcf	3989,1,c	;volatile
 22234                           
 22235                           ;MotorDrive.c: 74: TRISCbits.RC1 =1;
 22236  004D36  8294               	bsf	3988,1,c	;volatile
 22237                           
 22238                           ;MotorDrive.c: 75: TRISAbits.RA4 =1;
 22239  004D38  8892               	bsf	3986,4,c	;volatile
 22240                           
 22241                           ;MotorDrive.c: 78: TRISCbits.RC0 =1;
 22242  004D3A  8094               	bsf	3988,0,c	;volatile
 22243                           
 22244                           ;MotorDrive.c: 79: TRISBbits.RB2 =1;
 22245  004D3C  8493               	bsf	3987,2,c	;volatile
 22246                           
 22247                           ;MotorDrive.c: 83: TRISDbits.RD4 =0;
 22248  004D3E  9895               	bcf	3989,4,c	;volatile
 22249                           
 22250                           ;MotorDrive.c: 84: TRISDbits.RD2 =0;
 22251  004D40  9495               	bcf	3989,2,c	;volatile
 22252                           
 22253                           ;MotorDrive.c: 85: TRISDbits.RD3 =0;
 22254  004D42  9695               	bcf	3989,3,c	;volatile
 22255                           
 22256                           ;MotorDrive.c: 90: LATAbits.LA5 =1;
 22257  004D44  8A89               	bsf	3977,5,c	;volatile
 22258                           
 22259                           ;MotorDrive.c: 91: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 22260  004D46  848B               	bsf	3979,2,c	;volatile
 22261  004D48  908C               	bcf	3980,0,c	;volatile
 22262  004D4A  928C               	bcf	3980,1,c	;volatile
 22263                           
 22264                           ;MotorDrive.c: 92: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 22265  004D4C  888C               	bsf	3980,4,c	;volatile
 22266  004D4E  948C               	bcf	3980,2,c	;volatile
 22267  004D50  968C               	bcf	3980,3,c	;volatile
 22268                           
 22269                           ;MotorDrive.c: 93: LATCbits.LC2 =1;
 22270  004D52  848B               	bsf	3979,2,c	;volatile
 22271                           
 22272                           ;MotorDrive.c: 94: LATDbits.LD4 =1;
 22273  004D54  888C               	bsf	3980,4,c	;volatile
 22274                           
 22275                           ;MotorDrive.c: 100: INTCON2bits.INTEDG2 = 0;
 22276  004D56  98F1               	bcf	intcon2,4,c	;volatile
 22277                           
 22278                           ;MotorDrive.c: 102: INTCON3bits.INT2IF =0;
 22279  004D58  92F0               	bcf	intcon3,1,c	;volatile
 22280                           
 22281                           ;MotorDrive.c: 103: INTCON3bits.INT2E = 0;
 22282  004D5A  98F0               	bcf	intcon3,4,c	;volatile
 22283  004D5C  0012               	return		;funcret
 22284  004D5E                     __end_of_MotorDriveInit:
 22285                           	opt stack 0
 22286                           tblptru	equ	0xFF8
 22287                           tblptrh	equ	0xFF7
 22288                           tblptrl	equ	0xFF6
 22289                           tablat	equ	0xFF5
 22290                           prodh	equ	0xFF4
 22291                           prodl	equ	0xFF3
 22292                           intcon	equ	0xFF2
 22293                           intcon2	equ	0xFF1
 22294                           intcon3	equ	0xFF0
 22295                           postinc0	equ	0xFEE
 22296                           wreg	equ	0xFE8
 22297                           postdec1	equ	0xFE5
 22298                           fsr1h	equ	0xFE2
 22299                           fsr1l	equ	0xFE1
 22300                           postinc2	equ	0xFDE
 22301                           fsr2h	equ	0xFDA
 22302                           fsr2l	equ	0xFD9
 22303                           status	equ	0xFD8
 22304                           
 22305 ;; *************** function _LCD_backlight_init *****************
 22306 ;; Defined at:
 22307 ;;		line 568 in file "../Oled.c"
 22308 ;; Parameters:    Size  Location     Type
 22309 ;;		None
 22310 ;; Auto vars:     Size  Location     Type
 22311 ;;		None
 22312 ;; Return value:  Size  Location     Type
 22313 ;;                  1    wreg      void 
 22314 ;; Registers used:
 22315 ;;		None
 22316 ;; Tracked objects:
 22317 ;;		On entry : 0/0
 22318 ;;		On exit  : 0/0
 22319 ;;		Unchanged: 0/0
 22320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22321 ;;      Params:         0       0       0       0       0       0       0
 22322 ;;      Locals:         0       0       0       0       0       0       0
 22323 ;;      Temps:          0       0       0       0       0       0       0
 22324 ;;      Totals:         0       0       0       0       0       0       0
 22325 ;;Total ram usage:        0 bytes
 22326 ;; Hardware stack levels used:    1
 22327 ;; Hardware stack levels required when called:    2
 22328 ;; This function calls:
 22329 ;;		Nothing
 22330 ;; This function is called by:
 22331 ;;		_HG_device_init
 22332 ;; This function uses a non-reentrant model
 22333 ;;
 22334                           
 22335                           	psect	text56
 22336  004EB4                     __ptext56:
 22337                           	opt stack 0
 22338  004EB4                     _LCD_backlight_init:
 22339                           	opt stack 27
 22340                           
 22341                           ;Oled.c: 570: TRISEbits.RE0 =0;
 22342                           
 22343                           ;incstack = 0
 22344  004EB4  9096               	bcf	3990,0,c	;volatile
 22345  004EB6  0012               	return		;funcret
 22346  004EB8                     __end_of_LCD_backlight_init:
 22347                           	opt stack 0
 22348                           tblptru	equ	0xFF8
 22349                           tblptrh	equ	0xFF7
 22350                           tblptrl	equ	0xFF6
 22351                           tablat	equ	0xFF5
 22352                           prodh	equ	0xFF4
 22353                           prodl	equ	0xFF3
 22354                           intcon	equ	0xFF2
 22355                           intcon2	equ	0xFF1
 22356                           intcon3	equ	0xFF0
 22357                           postinc0	equ	0xFEE
 22358                           wreg	equ	0xFE8
 22359                           postdec1	equ	0xFE5
 22360                           fsr1h	equ	0xFE2
 22361                           fsr1l	equ	0xFE1
 22362                           postinc2	equ	0xFDE
 22363                           fsr2h	equ	0xFDA
 22364                           fsr2l	equ	0xFD9
 22365                           status	equ	0xFD8
 22366                           
 22367 ;; *************** function _LCD_Off *****************
 22368 ;; Defined at:
 22369 ;;		line 582 in file "../Oled.c"
 22370 ;; Parameters:    Size  Location     Type
 22371 ;;		None
 22372 ;; Auto vars:     Size  Location     Type
 22373 ;;		None
 22374 ;; Return value:  Size  Location     Type
 22375 ;;                  1    wreg      void 
 22376 ;; Registers used:
 22377 ;;		None
 22378 ;; Tracked objects:
 22379 ;;		On entry : 0/0
 22380 ;;		On exit  : 0/0
 22381 ;;		Unchanged: 0/0
 22382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22383 ;;      Params:         0       0       0       0       0       0       0
 22384 ;;      Locals:         0       0       0       0       0       0       0
 22385 ;;      Temps:          0       0       0       0       0       0       0
 22386 ;;      Totals:         0       0       0       0       0       0       0
 22387 ;;Total ram usage:        0 bytes
 22388 ;; Hardware stack levels used:    1
 22389 ;; Hardware stack levels required when called:    2
 22390 ;; This function calls:
 22391 ;;		Nothing
 22392 ;; This function is called by:
 22393 ;;		_HG_device_init
 22394 ;;		_shut_device
 22395 ;; This function uses a non-reentrant model
 22396 ;;
 22397                           
 22398                           	psect	text57
 22399  004EB8                     __ptext57:
 22400                           	opt stack 0
 22401  004EB8                     _LCD_Off:
 22402                           	opt stack 26
 22403                           
 22404                           ;Oled.c: 585: LATEbits.LE0 =0;
 22405                           
 22406                           ;incstack = 0
 22407  004EB8  908D               	bcf	3981,0,c	;volatile
 22408  004EBA  0012               	return		;funcret
 22409  004EBC                     __end_of_LCD_Off:
 22410                           	opt stack 0
 22411                           tblptru	equ	0xFF8
 22412                           tblptrh	equ	0xFF7
 22413                           tblptrl	equ	0xFF6
 22414                           tablat	equ	0xFF5
 22415                           prodh	equ	0xFF4
 22416                           prodl	equ	0xFF3
 22417                           intcon	equ	0xFF2
 22418                           intcon2	equ	0xFF1
 22419                           intcon3	equ	0xFF0
 22420                           postinc0	equ	0xFEE
 22421                           wreg	equ	0xFE8
 22422                           postdec1	equ	0xFE5
 22423                           fsr1h	equ	0xFE2
 22424                           fsr1l	equ	0xFE1
 22425                           postinc2	equ	0xFDE
 22426                           fsr2h	equ	0xFDA
 22427                           fsr2l	equ	0xFD9
 22428                           status	equ	0xFD8
 22429                           
 22430 ;; *************** function _KEY_Init *****************
 22431 ;; Defined at:
 22432 ;;		line 10 in file "../Key.c"
 22433 ;; Parameters:    Size  Location     Type
 22434 ;;		None
 22435 ;; Auto vars:     Size  Location     Type
 22436 ;;		None
 22437 ;; Return value:  Size  Location     Type
 22438 ;;                  1    wreg      void 
 22439 ;; Registers used:
 22440 ;;		wreg, status,2
 22441 ;; Tracked objects:
 22442 ;;		On entry : 0/0
 22443 ;;		On exit  : 0/0
 22444 ;;		Unchanged: 0/0
 22445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22446 ;;      Params:         0       0       0       0       0       0       0
 22447 ;;      Locals:         0       0       0       0       0       0       0
 22448 ;;      Temps:          0       0       0       0       0       0       0
 22449 ;;      Totals:         0       0       0       0       0       0       0
 22450 ;;Total ram usage:        0 bytes
 22451 ;; Hardware stack levels used:    1
 22452 ;; Hardware stack levels required when called:    2
 22453 ;; This function calls:
 22454 ;;		Nothing
 22455 ;; This function is called by:
 22456 ;;		_HG_device_init
 22457 ;; This function uses a non-reentrant model
 22458 ;;
 22459                           
 22460                           	psect	text58
 22461  004DB6                     __ptext58:
 22462                           	opt stack 0
 22463  004DB6                     _KEY_Init:
 22464                           	opt stack 27
 22465                           
 22466                           ;Key.c: 19: ADCON1 = 0x0C;
 22467                           
 22468                           ;incstack = 0
 22469  004DB6  0E0C               	movlw	12
 22470  004DB8  6EC1               	movwf	4033,c	;volatile
 22471                           
 22472                           ;Key.c: 21: TRISBbits.RB3 =1;
 22473  004DBA  8693               	bsf	3987,3,c	;volatile
 22474                           
 22475                           ;Key.c: 22: TRISBbits.RB4 =1;
 22476  004DBC  8893               	bsf	3987,4,c	;volatile
 22477                           
 22478                           ;Key.c: 24: TRISDbits.RD6 =1;
 22479  004DBE  8C95               	bsf	3989,6,c	;volatile
 22480                           
 22481                           ;Key.c: 25: TRISDbits.RD7 =1;
 22482  004DC0  8E95               	bsf	3989,7,c	;volatile
 22483                           
 22484                           ;Key.c: 27: TRISBbits.RB5 =1;
 22485  004DC2  8A93               	bsf	3987,5,c	;volatile
 22486                           
 22487                           ;Key.c: 31: TRISBbits.RB0 =1;
 22488  004DC4  8093               	bsf	3987,0,c	;volatile
 22489                           
 22490                           ;Key.c: 34: TRISAbits.RA3 =1;
 22491  004DC6  8692               	bsf	3986,3,c	;volatile
 22492                           
 22493                           ;Key.c: 43: INTCON2bits.INTEDG0 =0;
 22494  004DC8  9CF1               	bcf	intcon2,6,c	;volatile
 22495                           
 22496                           ;Key.c: 44: INTCONbits.INT0IF = 0;
 22497  004DCA  92F2               	bcf	intcon,1,c	;volatile
 22498                           
 22499                           ;Key.c: 45: INTCONbits.INT0E = 1;
 22500  004DCC  88F2               	bsf	intcon,4,c	;volatile
 22501                           
 22502                           ;Key.c: 49: INTCONbits.RBIE =1;
 22503  004DCE  86F2               	bsf	intcon,3,c	;volatile
 22504                           
 22505                           ;Key.c: 50: INTCONbits.PEIE =1;
 22506  004DD0  8CF2               	bsf	intcon,6,c	;volatile
 22507                           
 22508                           ;Key.c: 51: INTCONbits.GIE =1;
 22509  004DD2  8EF2               	bsf	intcon,7,c	;volatile
 22510  004DD4  0012               	return		;funcret
 22511  004DD6                     __end_of_KEY_Init:
 22512                           	opt stack 0
 22513                           tblptru	equ	0xFF8
 22514                           tblptrh	equ	0xFF7
 22515                           tblptrl	equ	0xFF6
 22516                           tablat	equ	0xFF5
 22517                           prodh	equ	0xFF4
 22518                           prodl	equ	0xFF3
 22519                           intcon	equ	0xFF2
 22520                           intcon2	equ	0xFF1
 22521                           intcon3	equ	0xFF0
 22522                           postinc0	equ	0xFEE
 22523                           wreg	equ	0xFE8
 22524                           postdec1	equ	0xFE5
 22525                           fsr1h	equ	0xFE2
 22526                           fsr1l	equ	0xFE1
 22527                           postinc2	equ	0xFDE
 22528                           fsr2h	equ	0xFDA
 22529                           fsr2l	equ	0xFD9
 22530                           status	equ	0xFD8
 22531                           
 22532 ;; *************** function _Initial_LY096BG30 *****************
 22533 ;; Defined at:
 22534 ;;		line 3345 in file "../Oled.c"
 22535 ;; Parameters:    Size  Location     Type
 22536 ;;		None
 22537 ;; Auto vars:     Size  Location     Type
 22538 ;;		None
 22539 ;; Return value:  Size  Location     Type
 22540 ;;                  1    wreg      void 
 22541 ;; Registers used:
 22542 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22543 ;; Tracked objects:
 22544 ;;		On entry : 0/0
 22545 ;;		On exit  : 0/0
 22546 ;;		Unchanged: 0/0
 22547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22548 ;;      Params:         0       0       0       0       0       0       0
 22549 ;;      Locals:         0       0       0       0       0       0       0
 22550 ;;      Temps:          0       0       0       0       0       0       0
 22551 ;;      Totals:         0       0       0       0       0       0       0
 22552 ;;Total ram usage:        0 bytes
 22553 ;; Hardware stack levels used:    1
 22554 ;; Hardware stack levels required when called:    5
 22555 ;; This function calls:
 22556 ;;		_delay
 22557 ;;		_ee_WriteBytes
 22558 ;;		_i2c_CfgGpio
 22559 ;; This function is called by:
 22560 ;;		_HG_device_init
 22561 ;; This function uses a non-reentrant model
 22562 ;;
 22563                           
 22564                           	psect	text59
 22565  004B0E                     __ptext59:
 22566                           	opt stack 0
 22567  004B0E                     _Initial_LY096BG30:
 22568                           	opt stack 24
 22569                           
 22570                           ;Oled.c: 3348: i2c_CfgGpio();
 22571                           
 22572                           ;incstack = 0
 22573  004B0E  EC41  F027         	call	_i2c_CfgGpio	;wreg free
 22574                           
 22575                           ;Oled.c: 3353: LATEbits.LATE1=0;
 22576  004B12  928D               	bcf	3981,1,c	;volatile
 22577                           
 22578                           ;Oled.c: 3354: delay(1);
 22579  004B14  0E00               	movlw	0
 22580  004B16  0100               	movlb	0	; () banked
 22581  004B18  6FFE               	movwf	(delay@x+1)& (0+255),b
 22582  004B1A  0E01               	movlw	1
 22583  004B1C  6FFD               	movwf	delay@x& (0+255),b
 22584  004B1E  ECF8  F025         	call	_delay	;wreg free
 22585                           
 22586                           ;Oled.c: 3356: LATEbits.LATE1=1;
 22587  004B22  828D               	bsf	3981,1,c	;volatile
 22588                           
 22589                           ;Oled.c: 3357: delay(1);
 22590  004B24  0E00               	movlw	0
 22591  004B26  0100               	movlb	0	; () banked
 22592  004B28  6FFE               	movwf	(delay@x+1)& (0+255),b
 22593  004B2A  0E01               	movlw	1
 22594  004B2C  6FFD               	movwf	delay@x& (0+255),b
 22595  004B2E  ECF8  F025         	call	_delay	;wreg free
 22596                           
 22597                           ;Oled.c: 3398: write_buf[0]=0x25;
 22598  004B32  0E25               	movlw	37
 22599  004B34  0102               	movlb	2	; () banked
 22600  004B36  6F00               	movwf	_write_buf& (0+255),b
 22601                           
 22602                           ; BSR set to: 2
 22603                           ;Oled.c: 3399: ee_WriteBytes(write_buf, 0x00, 1);
 22604  004B38  0E00               	movlw	low _write_buf
 22605  004B3A  0101               	movlb	1	; () banked
 22606  004B3C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 22607  004B3E  0E02               	movlw	high _write_buf
 22608  004B40  0101               	movlb	1	; () banked
 22609  004B42  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 22610  004B44  0E00               	movlw	0
 22611  004B46  0101               	movlb	1	; () banked
 22612  004B48  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 22613  004B4A  0E00               	movlw	0
 22614  004B4C  0101               	movlb	1	; () banked
 22615  004B4E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 22616  004B50  0E01               	movlw	1
 22617  004B52  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 22618  004B54  ECAD  F025         	call	_ee_WriteBytes	;wreg free
 22619  004B58  0012               	return		;funcret
 22620  004B5A                     __end_of_Initial_LY096BG30:
 22621                           	opt stack 0
 22622                           tblptru	equ	0xFF8
 22623                           tblptrh	equ	0xFF7
 22624                           tblptrl	equ	0xFF6
 22625                           tablat	equ	0xFF5
 22626                           prodh	equ	0xFF4
 22627                           prodl	equ	0xFF3
 22628                           intcon	equ	0xFF2
 22629                           intcon2	equ	0xFF1
 22630                           intcon3	equ	0xFF0
 22631                           postinc0	equ	0xFEE
 22632                           wreg	equ	0xFE8
 22633                           postdec1	equ	0xFE5
 22634                           fsr1h	equ	0xFE2
 22635                           fsr1l	equ	0xFE1
 22636                           postinc2	equ	0xFDE
 22637                           fsr2h	equ	0xFDA
 22638                           fsr2l	equ	0xFD9
 22639                           status	equ	0xFD8
 22640                           
 22641 ;; *************** function _i2c_CfgGpio *****************
 22642 ;; Defined at:
 22643 ;;		line 222 in file "../Oled.c"
 22644 ;; Parameters:    Size  Location     Type
 22645 ;;		None
 22646 ;; Auto vars:     Size  Location     Type
 22647 ;;		None
 22648 ;; Return value:  Size  Location     Type
 22649 ;;                  1    wreg      void 
 22650 ;; Registers used:
 22651 ;;		None
 22652 ;; Tracked objects:
 22653 ;;		On entry : 0/0
 22654 ;;		On exit  : 0/0
 22655 ;;		Unchanged: 0/0
 22656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22657 ;;      Params:         0       0       0       0       0       0       0
 22658 ;;      Locals:         0       0       0       0       0       0       0
 22659 ;;      Temps:          0       0       0       0       0       0       0
 22660 ;;      Totals:         0       0       0       0       0       0       0
 22661 ;;Total ram usage:        0 bytes
 22662 ;; Hardware stack levels used:    1
 22663 ;; Hardware stack levels required when called:    2
 22664 ;; This function calls:
 22665 ;;		Nothing
 22666 ;; This function is called by:
 22667 ;;		_Initial_LY096BG30
 22668 ;; This function uses a non-reentrant model
 22669 ;;
 22670                           
 22671                           	psect	text60
 22672  004E82                     __ptext60:
 22673                           	opt stack 0
 22674  004E82                     _i2c_CfgGpio:
 22675                           	opt stack 26
 22676                           
 22677                           ;Oled.c: 227: TRISCbits.RC3 =0;
 22678                           
 22679                           ;incstack = 0
 22680  004E82  9694               	bcf	3988,3,c	;volatile
 22681                           
 22682                           ;Oled.c: 228: LATCbits.LC3 =0;
 22683  004E84  968B               	bcf	3979,3,c	;volatile
 22684                           
 22685                           ;Oled.c: 233: TRISCbits.RC4 =0;
 22686  004E86  9894               	bcf	3988,4,c	;volatile
 22687                           
 22688                           ;Oled.c: 234: LATCbits.LC4 =0;
 22689  004E88  988B               	bcf	3979,4,c	;volatile
 22690                           
 22691                           ;Oled.c: 241: TRISEbits.RE1 =0;
 22692  004E8A  9296               	bcf	3990,1,c	;volatile
 22693                           
 22694                           ;Oled.c: 245: LATEbits.LATE1=0;
 22695  004E8C  928D               	bcf	3981,1,c	;volatile
 22696  004E8E  0012               	return		;funcret
 22697  004E90                     __end_of_i2c_CfgGpio:
 22698                           	opt stack 0
 22699                           tblptru	equ	0xFF8
 22700                           tblptrh	equ	0xFF7
 22701                           tblptrl	equ	0xFF6
 22702                           tablat	equ	0xFF5
 22703                           prodh	equ	0xFF4
 22704                           prodl	equ	0xFF3
 22705                           intcon	equ	0xFF2
 22706                           intcon2	equ	0xFF1
 22707                           intcon3	equ	0xFF0
 22708                           postinc0	equ	0xFEE
 22709                           wreg	equ	0xFE8
 22710                           postdec1	equ	0xFE5
 22711                           fsr1h	equ	0xFE2
 22712                           fsr1l	equ	0xFE1
 22713                           postinc2	equ	0xFDE
 22714                           fsr2h	equ	0xFDA
 22715                           fsr2l	equ	0xFD9
 22716                           status	equ	0xFD8
 22717                           
 22718 ;; *************** function _ee_WriteBytes *****************
 22719 ;; Defined at:
 22720 ;;		line 481 in file "../Oled.c"
 22721 ;; Parameters:    Size  Location     Type
 22722 ;;  _pWriteBuf      2    0[BANK1 ] PTR unsigned char 
 22723 ;;		 -> logo_eme(784), display_frame_fghi@temp(1), display_frame_de@temp(1), display_frame_abc@temp(1), 
 22724 ;;		 -> display_drop@temp(1), display_drops@temp(1), display_cmode@temp(1), display_blank_mode_pa@temp(1), 
 22725 ;;		 -> display_mem@temp(1), display_bat@temp(1), display_bat_blank@temp(1), display_num@temp(1), 
 22726 ;;		 -> display_n_blank@temp(1), write_buf(256), 
 22727 ;;  _usAddress      1    2[BANK1 ] unsigned char 
 22728 ;;  _usSize         2    3[BANK1 ] unsigned int 
 22729 ;; Auto vars:     Size  Location     Type
 22730 ;;  m               2    5[BANK1 ] unsigned int 
 22731 ;;  i               2    0        unsigned int 
 22732 ;;  usAddr          1    7[BANK1 ] unsigned char 
 22733 ;; Return value:  Size  Location     Type
 22734 ;;                  1    wreg      unsigned char 
 22735 ;; Registers used:
 22736 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22737 ;; Tracked objects:
 22738 ;;		On entry : 0/0
 22739 ;;		On exit  : 0/0
 22740 ;;		Unchanged: 0/0
 22741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22742 ;;      Params:         0       0       5       0       0       0       0
 22743 ;;      Locals:         0       0       3       0       0       0       0
 22744 ;;      Temps:          0       0       0       0       0       0       0
 22745 ;;      Totals:         0       0       8       0       0       0       0
 22746 ;;Total ram usage:        8 bytes
 22747 ;; Hardware stack levels used:    1
 22748 ;; Hardware stack levels required when called:    4
 22749 ;; This function calls:
 22750 ;;		_i2c_SendByte
 22751 ;;		_i2c_Start
 22752 ;;		_i2c_Stop
 22753 ;;		_i2c_WaitAck
 22754 ;; This function is called by:
 22755 ;;		_setYX_LCD
 22756 ;;		_display_n_blank
 22757 ;;		_display_num
 22758 ;;		_display_bat_blank
 22759 ;;		_display_bat
 22760 ;;		_display_mem
 22761 ;;		_display_blank_mode_pa
 22762 ;;		_display_cmode
 22763 ;;		_display_drops
 22764 ;;		_display_drop
 22765 ;;		_display_frame_abc
 22766 ;;		_display_frame_de
 22767 ;;		_display_frame_fghi
 22768 ;;		_display_logo
 22769 ;;		_clear_screen
 22770 ;;		_config_LCD
 22771 ;;		_Initial_LY096BG30
 22772 ;;		_shut_device
 22773 ;; This function uses a non-reentrant model
 22774 ;;
 22775                           
 22776                           	psect	text61
 22777  004B5A                     __ptext61:
 22778                           	opt stack 0
 22779  004B5A                     _ee_WriteBytes:
 22780                           	opt stack 21
 22781                           
 22782                           ;Oled.c: 483: uint16_t i,m;
 22783                           ;Oled.c: 485: uint8_t usAddr;
 22784                           ;Oled.c: 487: usAddr = _usAddress;
 22785                           
 22786                           ;incstack = 0
 22787  004B5A  C12A  F12F         	movff	ee_WriteBytes@_usAddress,ee_WriteBytes@usAddr
 22788                           
 22789                           ;Oled.c: 489: {
 22790                           ;Oled.c: 491: {
 22791                           ;Oled.c: 496: {
 22792                           ;Oled.c: 497: i2c_Start();
 22793  004B5E  EC17  F027         	call	_i2c_Start	;wreg free
 22794                           
 22795                           ;Oled.c: 499: i2c_SendByte(0x78 | 0);
 22796  004B62  0E78               	movlw	120
 22797  004B64  EC40  F026         	call	_i2c_SendByte
 22798                           
 22799                           ;Oled.c: 501: if (i2c_WaitAck() == 0)
 22800  004B68  ECC6  F026         	call	_i2c_WaitAck	;wreg free
 22801                           
 22802                           ;Oled.c: 515: }
 22803                           ;Oled.c: 517: i2c_SendByte(usAddr);
 22804                           
 22805                           ;Oled.c: 513: {
 22806                           
 22807                           ;Oled.c: 507: else
 22808                           ;Oled.c: 508: {
 22809                           
 22810                           ;Oled.c: 502: {
 22811                           ;Oled.c: 506: }
 22812  004B6C  0101               	movlb	1	; () banked
 22813  004B6E  512F               	movf	ee_WriteBytes@usAddr& (0+255),w,b
 22814  004B70  EC40  F026         	call	_i2c_SendByte
 22815                           
 22816                           ;Oled.c: 519: if (i2c_WaitAck() != 0)
 22817  004B74  ECC6  F026         	call	_i2c_WaitAck	;wreg free
 22818                           
 22819                           ;Oled.c: 523: }
 22820                           ;Oled.c: 524: }
 22821                           ;Oled.c: 527: i2c_SendByte(_pWriteBuf[0]);
 22822                           
 22823                           ;Oled.c: 520: {
 22824  004B78  C128  FFF6         	movff	ee_WriteBytes@_pWriteBuf,tblptrl
 22825  004B7C  C129  FFF7         	movff	ee_WriteBytes@_pWriteBuf+1,tblptrh
 22826  004B80  6AF8               	clrf	tblptru,c
 22827  004B82  0E05               	movlw	(high __ramtop+-1)
 22828  004B84  64F7               	cpfsgt	tblptrh,c
 22829  004B86  D003               	bra	u13537
 22830  004B88  0008               	tblrd		*
 22831  004B8A  50F5               	movf	tablat,w,c
 22832  004B8C  D005               	bra	u13530
 22833  004B8E                     u13537:
 22834  004B8E  CFF6 FFE9          	movff	tblptrl,fsr0l
 22835  004B92  CFF7 FFEA          	movff	tblptrh,fsr0h
 22836  004B96  50EF               	movf	indf0,w,c
 22837  004B98                     u13530:
 22838  004B98  EC40  F026         	call	_i2c_SendByte
 22839                           
 22840                           ;Oled.c: 528: if (i2c_WaitAck() != 0)
 22841  004B9C  ECC6  F026         	call	_i2c_WaitAck	;wreg free
 22842                           
 22843                           ;Oled.c: 532: }
 22844                           ;Oled.c: 535: }
 22845                           ;Oled.c: 537: i2c_Stop();
 22846                           
 22847                           ;Oled.c: 529: {
 22848  004BA0  EC48  F027         	call	_i2c_Stop	;wreg free
 22849                           
 22850                           ;Oled.c: 542: return 1;
 22851                           ;	Return value of _ee_WriteBytes is never used
 22852  004BA4  0012               	return	
 22853  004BA6                     __end_of_ee_WriteBytes:
 22854                           	opt stack 0
 22855                           tblptru	equ	0xFF8
 22856                           tblptrh	equ	0xFF7
 22857                           tblptrl	equ	0xFF6
 22858                           tablat	equ	0xFF5
 22859                           prodh	equ	0xFF4
 22860                           prodl	equ	0xFF3
 22861                           intcon	equ	0xFF2
 22862                           intcon2	equ	0xFF1
 22863                           intcon3	equ	0xFF0
 22864                           indf0	equ	0xFEF
 22865                           postinc0	equ	0xFEE
 22866                           fsr0h	equ	0xFEA
 22867                           fsr0l	equ	0xFE9
 22868                           wreg	equ	0xFE8
 22869                           postdec1	equ	0xFE5
 22870                           fsr1h	equ	0xFE2
 22871                           fsr1l	equ	0xFE1
 22872                           postinc2	equ	0xFDE
 22873                           fsr2h	equ	0xFDA
 22874                           fsr2l	equ	0xFD9
 22875                           status	equ	0xFD8
 22876                           
 22877 ;; *************** function _i2c_WaitAck *****************
 22878 ;; Defined at:
 22879 ;;		line 155 in file "../Oled.c"
 22880 ;; Parameters:    Size  Location     Type
 22881 ;;		None
 22882 ;; Auto vars:     Size  Location     Type
 22883 ;;  re              1    0[BANK0 ] unsigned char 
 22884 ;; Return value:  Size  Location     Type
 22885 ;;                  1    wreg      unsigned char 
 22886 ;; Registers used:
 22887 ;;		wreg, status,2, cstack
 22888 ;; Tracked objects:
 22889 ;;		On entry : 0/0
 22890 ;;		On exit  : 0/0
 22891 ;;		Unchanged: 0/0
 22892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22893 ;;      Params:         0       0       0       0       0       0       0
 22894 ;;      Locals:         0       1       0       0       0       0       0
 22895 ;;      Temps:          0       0       0       0       0       0       0
 22896 ;;      Totals:         0       1       0       0       0       0       0
 22897 ;;Total ram usage:        1 bytes
 22898 ;; Hardware stack levels used:    1
 22899 ;; Hardware stack levels required when called:    3
 22900 ;; This function calls:
 22901 ;;		_i2c_Delay
 22902 ;; This function is called by:
 22903 ;;		_ee_WriteBytes
 22904 ;;		_ee_CheckDevice
 22905 ;; This function uses a non-reentrant model
 22906 ;;
 22907                           
 22908                           	psect	text62
 22909  004D8C                     __ptext62:
 22910                           	opt stack 0
 22911  004D8C                     _i2c_WaitAck:
 22912                           	opt stack 21
 22913                           
 22914                           ;Oled.c: 157: uint8_t re;
 22915                           ;Oled.c: 159: LATCbits.LC4 =1;
 22916                           
 22917                           ;incstack = 0
 22918  004D8C  888B               	bsf	3979,4,c	;volatile
 22919                           
 22920                           ;Oled.c: 160: i2c_Delay();
 22921  004D8E  EC5F  F027         	call	_i2c_Delay	;wreg free
 22922                           
 22923                           ;Oled.c: 161: LATCbits.LC3 =1;
 22924  004D92  868B               	bsf	3979,3,c	;volatile
 22925                           
 22926                           ;Oled.c: 165: TRISCbits.RC4 =1;
 22927  004D94  8894               	bsf	3988,4,c	;volatile
 22928                           
 22929                           ;Oled.c: 171: i2c_Delay();
 22930  004D96  EC5F  F027         	call	_i2c_Delay	;wreg free
 22931                           
 22932                           ;Oled.c: 172: if ((PORTC & 0x10))
 22933  004D9A  A882               	btfss	3970,4,c	;volatile
 22934  004D9C  D002               	goto	l11253
 22935                           
 22936                           ;Oled.c: 173: {
 22937                           ;Oled.c: 174: re = 1;
 22938  004D9E  0E01               	movlw	1
 22939  004DA0  D001               	goto	L67
 22940  004DA2                     l11253:
 22941                           
 22942                           ;Oled.c: 176: else
 22943                           ;Oled.c: 177: {
 22944                           ;Oled.c: 178: re = 0;
 22945  004DA2  0E00               	movlw	0
 22946  004DA4                     L67:
 22947  004DA4  0100               	movlb	0	; () banked
 22948  004DA6  6FFD               	movwf	i2c_WaitAck@re& (0+255),b
 22949                           
 22950                           ; BSR set to: 0
 22951                           ;Oled.c: 179: }
 22952                           ;Oled.c: 181: LATCbits.LC3 =0;
 22953                           
 22954                           ; BSR set to: 0
 22955  004DA8  968B               	bcf	3979,3,c	;volatile
 22956                           
 22957                           ; BSR set to: 0
 22958                           ;Oled.c: 185: TRISCbits.RC4 =0;
 22959  004DAA  9894               	bcf	3988,4,c	;volatile
 22960                           
 22961                           ; BSR set to: 0
 22962                           ;Oled.c: 193: i2c_Delay();
 22963  004DAC  EC5F  F027         	call	_i2c_Delay	;wreg free
 22964                           
 22965                           ;Oled.c: 195: return re;
 22966  004DB0  0100               	movlb	0	; () banked
 22967  004DB2  51FD               	movf	i2c_WaitAck@re& (0+255),w,b
 22968  004DB4  0012               	return	
 22969  004DB6                     __end_of_i2c_WaitAck:
 22970                           	opt stack 0
 22971                           tblptru	equ	0xFF8
 22972                           tblptrh	equ	0xFF7
 22973                           tblptrl	equ	0xFF6
 22974                           tablat	equ	0xFF5
 22975                           prodh	equ	0xFF4
 22976                           prodl	equ	0xFF3
 22977                           intcon	equ	0xFF2
 22978                           intcon2	equ	0xFF1
 22979                           intcon3	equ	0xFF0
 22980                           indf0	equ	0xFEF
 22981                           postinc0	equ	0xFEE
 22982                           fsr0h	equ	0xFEA
 22983                           fsr0l	equ	0xFE9
 22984                           wreg	equ	0xFE8
 22985                           postdec1	equ	0xFE5
 22986                           fsr1h	equ	0xFE2
 22987                           fsr1l	equ	0xFE1
 22988                           postinc2	equ	0xFDE
 22989                           fsr2h	equ	0xFDA
 22990                           fsr2l	equ	0xFD9
 22991                           status	equ	0xFD8
 22992                           
 22993 ;; *************** function _i2c_Stop *****************
 22994 ;; Defined at:
 22995 ;;		line 87 in file "../Oled.c"
 22996 ;; Parameters:    Size  Location     Type
 22997 ;;		None
 22998 ;; Auto vars:     Size  Location     Type
 22999 ;;		None
 23000 ;; Return value:  Size  Location     Type
 23001 ;;                  1    wreg      void 
 23002 ;; Registers used:
 23003 ;;		cstack
 23004 ;; Tracked objects:
 23005 ;;		On entry : 0/0
 23006 ;;		On exit  : 0/0
 23007 ;;		Unchanged: 0/0
 23008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23009 ;;      Params:         0       0       0       0       0       0       0
 23010 ;;      Locals:         0       0       0       0       0       0       0
 23011 ;;      Temps:          0       0       0       0       0       0       0
 23012 ;;      Totals:         0       0       0       0       0       0       0
 23013 ;;Total ram usage:        0 bytes
 23014 ;; Hardware stack levels used:    1
 23015 ;; Hardware stack levels required when called:    3
 23016 ;; This function calls:
 23017 ;;		_i2c_Delay
 23018 ;; This function is called by:
 23019 ;;		_ee_WriteBytes
 23020 ;;		_ee_CheckDevice
 23021 ;; This function uses a non-reentrant model
 23022 ;;
 23023                           
 23024                           	psect	text63
 23025  004E90                     __ptext63:
 23026                           	opt stack 0
 23027  004E90                     _i2c_Stop:
 23028                           	opt stack 21
 23029                           
 23030                           ;Oled.c: 90: LATCbits.LC4 =0;
 23031                           
 23032                           ; BSR set to: 0
 23033                           ;incstack = 0
 23034  004E90  988B               	bcf	3979,4,c	;volatile
 23035                           
 23036                           ;Oled.c: 91: LATCbits.LC3 =1;
 23037  004E92  868B               	bsf	3979,3,c	;volatile
 23038                           
 23039                           ;Oled.c: 92: i2c_Delay();
 23040  004E94  EC5F  F027         	call	_i2c_Delay	;wreg free
 23041                           
 23042                           ;Oled.c: 93: LATCbits.LC4 =1;
 23043  004E98  888B               	bsf	3979,4,c	;volatile
 23044  004E9A  0012               	return		;funcret
 23045  004E9C                     __end_of_i2c_Stop:
 23046                           	opt stack 0
 23047                           tblptru	equ	0xFF8
 23048                           tblptrh	equ	0xFF7
 23049                           tblptrl	equ	0xFF6
 23050                           tablat	equ	0xFF5
 23051                           prodh	equ	0xFF4
 23052                           prodl	equ	0xFF3
 23053                           intcon	equ	0xFF2
 23054                           intcon2	equ	0xFF1
 23055                           intcon3	equ	0xFF0
 23056                           indf0	equ	0xFEF
 23057                           postinc0	equ	0xFEE
 23058                           fsr0h	equ	0xFEA
 23059                           fsr0l	equ	0xFE9
 23060                           wreg	equ	0xFE8
 23061                           postdec1	equ	0xFE5
 23062                           fsr1h	equ	0xFE2
 23063                           fsr1l	equ	0xFE1
 23064                           postinc2	equ	0xFDE
 23065                           fsr2h	equ	0xFDA
 23066                           fsr2l	equ	0xFD9
 23067                           status	equ	0xFD8
 23068                           
 23069 ;; *************** function _i2c_Start *****************
 23070 ;; Defined at:
 23071 ;;		line 74 in file "../Oled.c"
 23072 ;; Parameters:    Size  Location     Type
 23073 ;;		None
 23074 ;; Auto vars:     Size  Location     Type
 23075 ;;		None
 23076 ;; Return value:  Size  Location     Type
 23077 ;;                  1    wreg      void 
 23078 ;; Registers used:
 23079 ;;		cstack
 23080 ;; Tracked objects:
 23081 ;;		On entry : 0/0
 23082 ;;		On exit  : 0/0
 23083 ;;		Unchanged: 0/0
 23084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23085 ;;      Params:         0       0       0       0       0       0       0
 23086 ;;      Locals:         0       0       0       0       0       0       0
 23087 ;;      Temps:          0       0       0       0       0       0       0
 23088 ;;      Totals:         0       0       0       0       0       0       0
 23089 ;;Total ram usage:        0 bytes
 23090 ;; Hardware stack levels used:    1
 23091 ;; Hardware stack levels required when called:    3
 23092 ;; This function calls:
 23093 ;;		_i2c_Delay
 23094 ;; This function is called by:
 23095 ;;		_ee_WriteBytes
 23096 ;;		_ee_CheckDevice
 23097 ;; This function uses a non-reentrant model
 23098 ;;
 23099                           
 23100                           	psect	text64
 23101  004E2E                     __ptext64:
 23102                           	opt stack 0
 23103  004E2E                     _i2c_Start:
 23104                           	opt stack 21
 23105                           
 23106                           ;Oled.c: 77: LATCbits.LC4 =1;
 23107                           
 23108                           ;incstack = 0
 23109  004E2E  888B               	bsf	3979,4,c	;volatile
 23110                           
 23111                           ;Oled.c: 78: LATCbits.LC3 =1;
 23112  004E30  868B               	bsf	3979,3,c	;volatile
 23113                           
 23114                           ;Oled.c: 79: i2c_Delay();
 23115  004E32  EC5F  F027         	call	_i2c_Delay	;wreg free
 23116                           
 23117                           ;Oled.c: 80: LATCbits.LC4 =0;
 23118  004E36  988B               	bcf	3979,4,c	;volatile
 23119                           
 23120                           ;Oled.c: 81: i2c_Delay();
 23121  004E38  EC5F  F027         	call	_i2c_Delay	;wreg free
 23122                           
 23123                           ;Oled.c: 82: LATCbits.LC3 =0;
 23124  004E3C  968B               	bcf	3979,3,c	;volatile
 23125                           
 23126                           ;Oled.c: 83: i2c_Delay();
 23127  004E3E  EC5F  F027         	call	_i2c_Delay	;wreg free
 23128  004E42  0012               	return		;funcret
 23129  004E44                     __end_of_i2c_Start:
 23130                           	opt stack 0
 23131                           tblptru	equ	0xFF8
 23132                           tblptrh	equ	0xFF7
 23133                           tblptrl	equ	0xFF6
 23134                           tablat	equ	0xFF5
 23135                           prodh	equ	0xFF4
 23136                           prodl	equ	0xFF3
 23137                           intcon	equ	0xFF2
 23138                           intcon2	equ	0xFF1
 23139                           intcon3	equ	0xFF0
 23140                           indf0	equ	0xFEF
 23141                           postinc0	equ	0xFEE
 23142                           fsr0h	equ	0xFEA
 23143                           fsr0l	equ	0xFE9
 23144                           wreg	equ	0xFE8
 23145                           postdec1	equ	0xFE5
 23146                           fsr1h	equ	0xFE2
 23147                           fsr1l	equ	0xFE1
 23148                           postinc2	equ	0xFDE
 23149                           fsr2h	equ	0xFDA
 23150                           fsr2l	equ	0xFD9
 23151                           status	equ	0xFD8
 23152                           
 23153 ;; *************** function _i2c_SendByte *****************
 23154 ;; Defined at:
 23155 ;;		line 97 in file "../Oled.c"
 23156 ;; Parameters:    Size  Location     Type
 23157 ;;  _ucByte         1    wreg     unsigned char 
 23158 ;; Auto vars:     Size  Location     Type
 23159 ;;  _ucByte         1    0[BANK0 ] unsigned char 
 23160 ;;  i               1    1[BANK0 ] unsigned char 
 23161 ;; Return value:  Size  Location     Type
 23162 ;;                  1    wreg      void 
 23163 ;; Registers used:
 23164 ;;		wreg, status,2, status,0, cstack
 23165 ;; Tracked objects:
 23166 ;;		On entry : 0/0
 23167 ;;		On exit  : 0/0
 23168 ;;		Unchanged: 0/0
 23169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23170 ;;      Params:         0       0       0       0       0       0       0
 23171 ;;      Locals:         0       2       0       0       0       0       0
 23172 ;;      Temps:          0       0       0       0       0       0       0
 23173 ;;      Totals:         0       2       0       0       0       0       0
 23174 ;;Total ram usage:        2 bytes
 23175 ;; Hardware stack levels used:    1
 23176 ;; Hardware stack levels required when called:    3
 23177 ;; This function calls:
 23178 ;;		_i2c_Delay
 23179 ;; This function is called by:
 23180 ;;		_ee_WriteBytes
 23181 ;;		_ee_CheckDevice
 23182 ;; This function uses a non-reentrant model
 23183 ;;
 23184                           
 23185                           	psect	text65
 23186  004C80                     __ptext65:
 23187                           	opt stack 0
 23188  004C80                     _i2c_SendByte:
 23189                           	opt stack 21
 23190                           
 23191                           ;incstack = 0
 23192                           ;i2c_SendByte@_ucByte stored from wreg
 23193  004C80  0100               	movlb	0	; () banked
 23194  004C82  6FFD               	movwf	i2c_SendByte@_ucByte& (0+255),b
 23195                           
 23196                           ;Oled.c: 99: uint8_t i;
 23197                           ;Oled.c: 101: for (i = 0; i < 8; i++)
 23198  004C84  0E00               	movlw	0
 23199  004C86  0100               	movlb	0	; () banked
 23200  004C88  6FFE               	movwf	i2c_SendByte@i& (0+255),b
 23201  004C8A                     l11217:
 23202                           
 23203                           ; BSR set to: 0
 23204  004C8A  0E07               	movlw	7
 23205  004C8C  0100               	movlb	0	; () banked
 23206  004C8E  65FE               	cpfsgt	i2c_SendByte@i& (0+255),b
 23207  004C90  D001               	goto	l698
 23208  004C92  0012               	return	
 23209  004C94                     l698:
 23210                           
 23211                           ; BSR set to: 0
 23212                           ;Oled.c: 102: {
 23213                           ;Oled.c: 103: if (_ucByte & 0x80)
 23214  004C94  0100               	movlb	0	; () banked
 23215  004C96  AFFD               	btfss	i2c_SendByte@_ucByte& (0+255),7,b
 23216  004C98  D002               	goto	l700
 23217                           
 23218                           ; BSR set to: 0
 23219                           ;Oled.c: 104: {
 23220                           ;Oled.c: 105: LATCbits.LC4 =1;
 23221  004C9A  888B               	bsf	3979,4,c	;volatile
 23222                           
 23223                           ;Oled.c: 106: }
 23224  004C9C  D001               	goto	l11223
 23225  004C9E                     l700:
 23226                           
 23227                           ; BSR set to: 0
 23228                           ;Oled.c: 107: else
 23229                           ;Oled.c: 108: {
 23230                           ;Oled.c: 109: LATCbits.LC4 =0;
 23231  004C9E  988B               	bcf	3979,4,c	;volatile
 23232  004CA0                     l11223:
 23233                           
 23234                           ; BSR set to: 0
 23235                           ;Oled.c: 110: }
 23236                           ;Oled.c: 111: i2c_Delay();
 23237  004CA0  EC5F  F027         	call	_i2c_Delay	;wreg free
 23238                           
 23239                           ;Oled.c: 112: LATCbits.LC3 =1;
 23240  004CA4  868B               	bsf	3979,3,c	;volatile
 23241                           
 23242                           ;Oled.c: 113: i2c_Delay();
 23243  004CA6  EC5F  F027         	call	_i2c_Delay	;wreg free
 23244                           
 23245                           ;Oled.c: 114: LATCbits.LC3 =0;
 23246  004CAA  968B               	bcf	3979,3,c	;volatile
 23247                           
 23248                           ;Oled.c: 115: if (i == 7)
 23249  004CAC  0E07               	movlw	7
 23250  004CAE  0100               	movlb	0	; () banked
 23251  004CB0  19FE               	xorwf	i2c_SendByte@i& (0+255),w,b
 23252  004CB2  B4D8               	btfsc	status,2,c
 23253                           
 23254                           ; BSR set to: 0
 23255                           ;Oled.c: 116: {
 23256                           ;Oled.c: 117: LATCbits.LC4 =1;
 23257  004CB4  888B               	bsf	3979,4,c	;volatile
 23258                           
 23259                           ; BSR set to: 0
 23260                           ;Oled.c: 118: }
 23261                           ;Oled.c: 119: _ucByte <<= 1;
 23262                           
 23263                           ; BSR set to: 0
 23264  004CB6  0100               	movlb	0	; () banked
 23265  004CB8  90D8               	bcf	status,0,c
 23266  004CBA  37FD               	rlcf	i2c_SendByte@_ucByte& (0+255),f,b
 23267                           
 23268                           ; BSR set to: 0
 23269                           ;Oled.c: 120: i2c_Delay();
 23270  004CBC  EC5F  F027         	call	_i2c_Delay	;wreg free
 23271  004CC0  0100               	movlb	0	; () banked
 23272  004CC2  2BFE               	incf	i2c_SendByte@i& (0+255),f,b
 23273  004CC4  D7E2               	goto	l11217
 23274  004CC6                     __end_of_i2c_SendByte:
 23275                           	opt stack 0
 23276                           tblptru	equ	0xFF8
 23277                           tblptrh	equ	0xFF7
 23278                           tblptrl	equ	0xFF6
 23279                           tablat	equ	0xFF5
 23280                           prodh	equ	0xFF4
 23281                           prodl	equ	0xFF3
 23282                           intcon	equ	0xFF2
 23283                           intcon2	equ	0xFF1
 23284                           intcon3	equ	0xFF0
 23285                           indf0	equ	0xFEF
 23286                           postinc0	equ	0xFEE
 23287                           fsr0h	equ	0xFEA
 23288                           fsr0l	equ	0xFE9
 23289                           wreg	equ	0xFE8
 23290                           postdec1	equ	0xFE5
 23291                           fsr1h	equ	0xFE2
 23292                           fsr1l	equ	0xFE1
 23293                           postinc2	equ	0xFDE
 23294                           fsr2h	equ	0xFDA
 23295                           fsr2l	equ	0xFD9
 23296                           status	equ	0xFD8
 23297                           
 23298 ;; *************** function _i2c_Delay *****************
 23299 ;; Defined at:
 23300 ;;		line 62 in file "../Oled.c"
 23301 ;; Parameters:    Size  Location     Type
 23302 ;;		None
 23303 ;; Auto vars:     Size  Location     Type
 23304 ;;  i               4    0        unsigned long 
 23305 ;; Return value:  Size  Location     Type
 23306 ;;                  1    wreg      void 
 23307 ;; Registers used:
 23308 ;;		None
 23309 ;; Tracked objects:
 23310 ;;		On entry : 0/0
 23311 ;;		On exit  : 0/0
 23312 ;;		Unchanged: 0/0
 23313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23314 ;;      Params:         0       0       0       0       0       0       0
 23315 ;;      Locals:         0       0       0       0       0       0       0
 23316 ;;      Temps:          0       0       0       0       0       0       0
 23317 ;;      Totals:         0       0       0       0       0       0       0
 23318 ;;Total ram usage:        0 bytes
 23319 ;; Hardware stack levels used:    1
 23320 ;; Hardware stack levels required when called:    2
 23321 ;; This function calls:
 23322 ;;		Nothing
 23323 ;; This function is called by:
 23324 ;;		_i2c_Start
 23325 ;;		_i2c_Stop
 23326 ;;		_i2c_SendByte
 23327 ;;		_i2c_WaitAck
 23328 ;;		_i2c_Ack
 23329 ;;		_i2c_NAck
 23330 ;; This function uses a non-reentrant model
 23331 ;;
 23332                           
 23333                           	psect	text66
 23334  004EBE                     __ptext66:
 23335                           	opt stack 0
 23336  004EBE                     _i2c_Delay:
 23337                           	opt stack 21
 23338                           
 23339                           ; BSR set to: 0
 23340                           ;incstack = 0
 23341  004EBE  0012               	return		;funcret
 23342  004EC0                     __end_of_i2c_Delay:
 23343                           	opt stack 0
 23344                           tblptru	equ	0xFF8
 23345                           tblptrh	equ	0xFF7
 23346                           tblptrl	equ	0xFF6
 23347                           tablat	equ	0xFF5
 23348                           prodh	equ	0xFF4
 23349                           prodl	equ	0xFF3
 23350                           intcon	equ	0xFF2
 23351                           intcon2	equ	0xFF1
 23352                           intcon3	equ	0xFF0
 23353                           indf0	equ	0xFEF
 23354                           postinc0	equ	0xFEE
 23355                           fsr0h	equ	0xFEA
 23356                           fsr0l	equ	0xFE9
 23357                           wreg	equ	0xFE8
 23358                           postdec1	equ	0xFE5
 23359                           fsr1h	equ	0xFE2
 23360                           fsr1l	equ	0xFE1
 23361                           postinc2	equ	0xFDE
 23362                           fsr2h	equ	0xFDA
 23363                           fsr2l	equ	0xFD9
 23364                           status	equ	0xFD8
 23365                           
 23366 ;; *************** function _delay *****************
 23367 ;; Defined at:
 23368 ;;		line 55 in file "../Oled.c"
 23369 ;; Parameters:    Size  Location     Type
 23370 ;;  x               2    0[BANK0 ] unsigned int 
 23371 ;; Auto vars:     Size  Location     Type
 23372 ;;  j               2    2[BANK1 ] unsigned int 
 23373 ;;  i               2    0[BANK1 ] unsigned int 
 23374 ;; Return value:  Size  Location     Type
 23375 ;;                  1    wreg      void 
 23376 ;; Registers used:
 23377 ;;		wreg, status,2, status,0
 23378 ;; Tracked objects:
 23379 ;;		On entry : 0/0
 23380 ;;		On exit  : 0/0
 23381 ;;		Unchanged: 0/0
 23382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23383 ;;      Params:         0       2       0       0       0       0       0
 23384 ;;      Locals:         0       0       4       0       0       0       0
 23385 ;;      Temps:          0       0       0       0       0       0       0
 23386 ;;      Totals:         0       2       4       0       0       0       0
 23387 ;;Total ram usage:        6 bytes
 23388 ;; Hardware stack levels used:    1
 23389 ;; Hardware stack levels required when called:    2
 23390 ;; This function calls:
 23391 ;;		Nothing
 23392 ;; This function is called by:
 23393 ;;		_Initial_LY096BG30
 23394 ;;		_LCD_Blink
 23395 ;; This function uses a non-reentrant model
 23396 ;;
 23397                           
 23398                           	psect	text67
 23399  004BF0                     __ptext67:
 23400                           	opt stack 0
 23401  004BF0                     _delay:
 23402                           	opt stack 26
 23403                           
 23404                           ;Oled.c: 57: unsigned int i,j;
 23405                           ;Oled.c: 58: for(i=0;i<x;i++)
 23406                           
 23407                           ;incstack = 0
 23408  004BF0  0E00               	movlw	0
 23409  004BF2  0101               	movlb	1	; () banked
 23410  004BF4  6F29               	movwf	(delay@i+1)& (0+255),b
 23411  004BF6  0E00               	movlw	0
 23412  004BF8  6F28               	movwf	delay@i& (0+255),b
 23413  004BFA  D014               	goto	l12389
 23414  004BFC                     l12377:
 23415                           
 23416                           ; BSR set to: 1
 23417                           ;Oled.c: 59: for(j=0;j<10000;j++);
 23418  004BFC  0E00               	movlw	0
 23419  004BFE  0101               	movlb	1	; () banked
 23420  004C00  6F2B               	movwf	(delay@j+1)& (0+255),b
 23421  004C02  0E00               	movlw	0
 23422  004C04  6F2A               	movwf	delay@j& (0+255),b
 23423  004C06                     l12379:
 23424                           
 23425                           ; BSR set to: 1
 23426  004C06  0E10               	movlw	16
 23427  004C08  0101               	movlb	1	; () banked
 23428  004C0A  5D2A               	subwf	delay@j& (0+255),w,b
 23429  004C0C  0E27               	movlw	39
 23430  004C0E  0101               	movlb	1	; () banked
 23431  004C10  592B               	subwfb	(delay@j+1)& (0+255),w,b
 23432  004C12  B0D8               	btfsc	status,0,c
 23433  004C14  D004               	goto	l12387
 23434                           
 23435                           ; BSR set to: 1
 23436                           
 23437                           ; BSR set to: 1
 23438                           
 23439                           ; BSR set to: 1
 23440  004C16  0101               	movlb	1	; () banked
 23441  004C18  4B2A               	infsnz	delay@j& (0+255),f,b
 23442  004C1A  2B2B               	incf	(delay@j+1)& (0+255),f,b
 23443  004C1C  D7F4               	goto	l12379
 23444  004C1E                     l12387:
 23445                           
 23446                           ; BSR set to: 1
 23447  004C1E  0101               	movlb	1	; () banked
 23448  004C20  4B28               	infsnz	delay@i& (0+255),f,b
 23449  004C22  2B29               	incf	(delay@i+1)& (0+255),f,b
 23450  004C24                     l12389:
 23451                           
 23452                           ; BSR set to: 1
 23453  004C24  0100               	movlb	0	; () banked
 23454  004C26  51FD               	movf	delay@x& (0+255),w,b
 23455  004C28  0101               	movlb	1	; () banked
 23456  004C2A  5D28               	subwf	delay@i& (0+255),w,b
 23457  004C2C  0100               	movlb	0	; () banked
 23458  004C2E  51FE               	movf	(delay@x+1)& (0+255),w,b
 23459  004C30  0101               	movlb	1	; () banked
 23460  004C32  5929               	subwfb	(delay@i+1)& (0+255),w,b
 23461  004C34  B0D8               	btfsc	status,0,c
 23462  004C36  0012               	return	
 23463  004C38  D7E1               	goto	l12377
 23464  004C3A                     __end_of_delay:
 23465                           	opt stack 0
 23466                           tblptru	equ	0xFF8
 23467                           tblptrh	equ	0xFF7
 23468                           tblptrl	equ	0xFF6
 23469                           tablat	equ	0xFF5
 23470                           prodh	equ	0xFF4
 23471                           prodl	equ	0xFF3
 23472                           intcon	equ	0xFF2
 23473                           intcon2	equ	0xFF1
 23474                           intcon3	equ	0xFF0
 23475                           indf0	equ	0xFEF
 23476                           postinc0	equ	0xFEE
 23477                           fsr0h	equ	0xFEA
 23478                           fsr0l	equ	0xFE9
 23479                           wreg	equ	0xFE8
 23480                           postdec1	equ	0xFE5
 23481                           fsr1h	equ	0xFE2
 23482                           fsr1l	equ	0xFE1
 23483                           postinc2	equ	0xFDE
 23484                           fsr2h	equ	0xFDA
 23485                           fsr2l	equ	0xFD9
 23486                           status	equ	0xFD8
 23487                           
 23488 ;; *************** function _BeepInit *****************
 23489 ;; Defined at:
 23490 ;;		line 57 in file "../Beep.c"
 23491 ;; Parameters:    Size  Location     Type
 23492 ;;		None
 23493 ;; Auto vars:     Size  Location     Type
 23494 ;;		None
 23495 ;; Return value:  Size  Location     Type
 23496 ;;                  1    wreg      void 
 23497 ;; Registers used:
 23498 ;;		None
 23499 ;; Tracked objects:
 23500 ;;		On entry : 0/0
 23501 ;;		On exit  : 0/0
 23502 ;;		Unchanged: 0/0
 23503 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23504 ;;      Params:         0       0       0       0       0       0       0
 23505 ;;      Locals:         0       0       0       0       0       0       0
 23506 ;;      Temps:          0       0       0       0       0       0       0
 23507 ;;      Totals:         0       0       0       0       0       0       0
 23508 ;;Total ram usage:        0 bytes
 23509 ;; Hardware stack levels used:    1
 23510 ;; Hardware stack levels required when called:    2
 23511 ;; This function calls:
 23512 ;;		Nothing
 23513 ;; This function is called by:
 23514 ;;		_HG_device_init
 23515 ;; This function uses a non-reentrant model
 23516 ;;
 23517                           
 23518                           	psect	text68
 23519  004EA6                     __ptext68:
 23520                           	opt stack 0
 23521  004EA6                     _BeepInit:
 23522                           	opt stack 27
 23523                           
 23524                           ;Beep.c: 66: TRISEbits.RE2 =0;
 23525                           
 23526                           ; BSR set to: 1
 23527                           ;incstack = 0
 23528  004EA6  9496               	bcf	3990,2,c	;volatile
 23529                           
 23530                           ;Beep.c: 67: LATEbits.LE2 =0;
 23531  004EA8  948D               	bcf	3981,2,c	;volatile
 23532                           
 23533                           ;Beep.c: 70: TRISDbits.RD5 =0;
 23534  004EAA  9A95               	bcf	3989,5,c	;volatile
 23535                           
 23536                           ;Beep.c: 71: LATDbits.LD5 =1;
 23537  004EAC  8A8C               	bsf	3980,5,c	;volatile
 23538  004EAE  0012               	return		;funcret
 23539  004EB0                     __end_of_BeepInit:
 23540                           	opt stack 0
 23541                           tblptru	equ	0xFF8
 23542                           tblptrh	equ	0xFF7
 23543                           tblptrl	equ	0xFF6
 23544                           tablat	equ	0xFF5
 23545                           prodh	equ	0xFF4
 23546                           prodl	equ	0xFF3
 23547                           intcon	equ	0xFF2
 23548                           intcon2	equ	0xFF1
 23549                           intcon3	equ	0xFF0
 23550                           indf0	equ	0xFEF
 23551                           postinc0	equ	0xFEE
 23552                           fsr0h	equ	0xFEA
 23553                           fsr0l	equ	0xFE9
 23554                           wreg	equ	0xFE8
 23555                           postdec1	equ	0xFE5
 23556                           fsr1h	equ	0xFE2
 23557                           fsr1l	equ	0xFE1
 23558                           postinc2	equ	0xFDE
 23559                           fsr2h	equ	0xFDA
 23560                           fsr2l	equ	0xFD9
 23561                           status	equ	0xFD8
 23562                           
 23563 ;; *************** function _AD_init *****************
 23564 ;; Defined at:
 23565 ;;		line 272 in file "../Oled.c"
 23566 ;; Parameters:    Size  Location     Type
 23567 ;;		None
 23568 ;; Auto vars:     Size  Location     Type
 23569 ;;		None
 23570 ;; Return value:  Size  Location     Type
 23571 ;;                  1    wreg      unsigned char 
 23572 ;; Registers used:
 23573 ;;		wreg, status,2
 23574 ;; Tracked objects:
 23575 ;;		On entry : 0/0
 23576 ;;		On exit  : 0/0
 23577 ;;		Unchanged: 0/0
 23578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23579 ;;      Params:         0       0       0       0       0       0       0
 23580 ;;      Locals:         0       0       0       0       0       0       0
 23581 ;;      Temps:          0       0       0       0       0       0       0
 23582 ;;      Totals:         0       0       0       0       0       0       0
 23583 ;;Total ram usage:        0 bytes
 23584 ;; Hardware stack levels used:    1
 23585 ;; Hardware stack levels required when called:    2
 23586 ;; This function calls:
 23587 ;;		Nothing
 23588 ;; This function is called by:
 23589 ;;		_HG_device_init
 23590 ;; This function uses a non-reentrant model
 23591 ;;
 23592                           
 23593                           	psect	text69
 23594  004E44                     __ptext69:
 23595                           	opt stack 0
 23596  004E44                     _AD_init:
 23597                           	opt stack 27
 23598                           
 23599                           ;Oled.c: 275: TRISAbits.RA0 =1;
 23600                           
 23601                           ;incstack = 0
 23602  004E44  8092               	bsf	3986,0,c	;volatile
 23603                           
 23604                           ;Oled.c: 276: TRISAbits.RA1 =1;
 23605  004E46  8292               	bsf	3986,1,c	;volatile
 23606                           
 23607                           ;Oled.c: 277: TRISAbits.RA2 =1;
 23608  004E48  8492               	bsf	3986,2,c	;volatile
 23609                           
 23610                           ;Oled.c: 281: ADCON2bits.ACQT = 4;
 23611  004E4A  50C0               	movf	4032,w,c	;volatile
 23612  004E4C  0BC7               	andlw	-57
 23613  004E4E  0920               	iorlw	32
 23614  004E50  6EC0               	movwf	4032,c	;volatile
 23615                           
 23616                           ;Oled.c: 283: ADCON0bits.ADON = 1;
 23617  004E52  80C2               	bsf	4034,0,c	;volatile
 23618  004E54  0012               	return	
 23619  004E56                     __end_of_AD_init:
 23620                           	opt stack 0
 23621                           tblptru	equ	0xFF8
 23622                           tblptrh	equ	0xFF7
 23623                           tblptrl	equ	0xFF6
 23624                           tablat	equ	0xFF5
 23625                           prodh	equ	0xFF4
 23626                           prodl	equ	0xFF3
 23627                           intcon	equ	0xFF2
 23628                           intcon2	equ	0xFF1
 23629                           intcon3	equ	0xFF0
 23630                           indf0	equ	0xFEF
 23631                           postinc0	equ	0xFEE
 23632                           fsr0h	equ	0xFEA
 23633                           fsr0l	equ	0xFE9
 23634                           wreg	equ	0xFE8
 23635                           postdec1	equ	0xFE5
 23636                           fsr1h	equ	0xFE2
 23637                           fsr1l	equ	0xFE1
 23638                           postinc2	equ	0xFDE
 23639                           fsr2h	equ	0xFDA
 23640                           fsr2l	equ	0xFD9
 23641                           status	equ	0xFD8
 23642                           
 23643 ;; *************** function _ISR *****************
 23644 ;; Defined at:
 23645 ;;		line 45 in file "../Timer.c"
 23646 ;; Parameters:    Size  Location     Type
 23647 ;;		None
 23648 ;; Auto vars:     Size  Location     Type
 23649 ;;  temp            1    0        unsigned char 
 23650 ;; Return value:  Size  Location     Type
 23651 ;;                  1    wreg      void 
 23652 ;; Registers used:
 23653 ;;		wreg, status,2, status,0, cstack
 23654 ;; Tracked objects:
 23655 ;;		On entry : 0/0
 23656 ;;		On exit  : 0/0
 23657 ;;		Unchanged: 0/0
 23658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23659 ;;      Params:         0       0       0       0       0       0       0
 23660 ;;      Locals:         0       0       0       0       0       0       0
 23661 ;;      Temps:         14       0       0       0       0       0       0
 23662 ;;      Totals:        14       0       0       0       0       0       0
 23663 ;;Total ram usage:       14 bytes
 23664 ;; Hardware stack levels used:    1
 23665 ;; Hardware stack levels required when called:    1
 23666 ;; This function calls:
 23667 ;;		_get_SenseA_AD_vaule
 23668 ;; This function is called by:
 23669 ;;		Interrupt level 2
 23670 ;; This function uses a non-reentrant model
 23671 ;;
 23672                           
 23673                           	psect	intcode
 23674  000008                     __pintcode:
 23675                           	opt stack 0
 23676  000008                     _ISR:
 23677                           	opt stack 21
 23678                           
 23679                           ;incstack = 0
 23680  000008  826A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23681  00000A  ED3D  F014         	call	int_func,f	;refresh shadow registers
 23682                           tblptru	equ	0xFF8
 23683                           tblptrh	equ	0xFF7
 23684                           tblptrl	equ	0xFF6
 23685                           tablat	equ	0xFF5
 23686                           prodh	equ	0xFF4
 23687                           prodl	equ	0xFF3
 23688                           intcon	equ	0xFF2
 23689                           intcon2	equ	0xFF1
 23690                           intcon3	equ	0xFF0
 23691                           indf0	equ	0xFEF
 23692                           postinc0	equ	0xFEE
 23693                           fsr0h	equ	0xFEA
 23694                           fsr0l	equ	0xFE9
 23695                           wreg	equ	0xFE8
 23696                           postdec1	equ	0xFE5
 23697                           fsr1h	equ	0xFE2
 23698                           fsr1l	equ	0xFE1
 23699                           postinc2	equ	0xFDE
 23700                           fsr2h	equ	0xFDA
 23701                           fsr2l	equ	0xFD9
 23702                           status	equ	0xFD8
 23703                           
 23704                           	psect	intcode_body
 23705  00287A                     __pintcode_body:
 23706                           	opt stack 21
 23707  00287A                     int_func:
 23708                           	opt stack 21
 23709  00287A  0006               	pop		; remove dummy address from shadow register refresh
 23710  00287C  CFFA F05A          	movff	pclath,??_ISR
 23711  002880  CFFB F05B          	movff	pclatu,??_ISR+1
 23712  002884  CFE9 F05C          	movff	fsr0l,??_ISR+2
 23713  002888  CFEA F05D          	movff	fsr0h,??_ISR+3
 23714  00288C  CFE1 F05E          	movff	fsr1l,??_ISR+4
 23715  002890  CFE2 F05F          	movff	fsr1h,??_ISR+5
 23716  002894  CFD9 F060          	movff	fsr2l,??_ISR+6
 23717  002898  CFDA F061          	movff	fsr2h,??_ISR+7
 23718  00289C  CFF3 F062          	movff	prodl,??_ISR+8
 23719  0028A0  CFF4 F063          	movff	prodh,??_ISR+9
 23720  0028A4  CFF6 F064          	movff	tblptrl,??_ISR+10
 23721  0028A8  CFF7 F065          	movff	tblptrh,??_ISR+11
 23722  0028AC  CFF8 F066          	movff	tblptru,??_ISR+12
 23723  0028B0  CFF5 F067          	movff	tablat,??_ISR+13
 23724                           
 23725                           ;Timer.c: 48: uint8_t temp;
 23726                           ;Timer.c: 49: static uint8_t tcnt=0;
 23727                           ;Timer.c: 50: static uint8_t cnt_action_btn = 0;
 23728                           ;Timer.c: 51: static uint16_t tcnt_bat = 0;
 23729                           ;Timer.c: 52: static uint16_t tcnt_overload_ma;
 23730                           ;Timer.c: 58: if(INTCON3bits.INT2IF)
 23731  0028B4  A2F0               	btfss	intcon3,1,c	;volatile
 23732  0028B6  D082               	goto	i2l1337
 23733                           
 23734                           ;Timer.c: 59: {
 23735                           ;Timer.c: 60: INTCON3bits.INT2IF = 0;
 23736  0028B8  92F0               	bcf	intcon3,1,c	;volatile
 23737                           
 23738                           ;Timer.c: 62: if(INTCON2bits.INTEDG2 == 0)
 23739  0028BA  B8F1               	btfsc	intcon2,4,c	;volatile
 23740  0028BC  D002               	goto	i2l1338
 23741                           
 23742                           ;Timer.c: 63: {
 23743                           ;Timer.c: 64: INTCON2bits.INTEDG2 = 1;
 23744  0028BE  88F1               	bsf	intcon2,4,c	;volatile
 23745                           
 23746                           ;Timer.c: 65: }
 23747  0028C0  D002               	goto	i2l11003
 23748  0028C2                     i2l1338:
 23749                           
 23750                           ;Timer.c: 66: else if(INTCON2bits.INTEDG2 == 1)
 23751  0028C2  B8F1               	btfsc	intcon2,4,c	;volatile
 23752                           
 23753                           ;Timer.c: 67: {
 23754                           ;Timer.c: 68: INTCON2bits.INTEDG2 = 0;
 23755  0028C4  98F1               	bcf	intcon2,4,c	;volatile
 23756  0028C6                     i2l11003:
 23757                           
 23758                           ;Timer.c: 75: {
 23759                           ;Timer.c: 78: if(1)
 23760  0028C6  0100               	movlb	0	; () banked
 23761  0028C8  5185               	movf	(_hg_op+5)& (0+255),w,b
 23762  0028CA  B4D8               	btfsc	status,2,c
 23763  0028CC  D01A               	goto	i2l11023
 23764                           
 23765                           ; BSR set to: 0
 23766                           ;Timer.c: 79: {
 23767                           ;Timer.c: 83: if(hg_op.in_reset == 1)
 23768  0028CE  0100               	movlb	0	; () banked
 23769  0028D0  0590               	decf	(_hg_op+16)& (0+255),w,b
 23770  0028D2  A4D8               	btfss	status,2,c
 23771  0028D4  D073               	goto	i2l1337
 23772                           
 23773                           ; BSR set to: 0
 23774                           ;Timer.c: 84: {
 23775                           ;Timer.c: 90: if( INTCON2bits.INTEDG2 == 1)
 23776  0028D6  A8F1               	btfss	intcon2,4,c	;volatile
 23777  0028D8  D005               	goto	i2l1344
 23778                           
 23779                           ; BSR set to: 0
 23780                           ;Timer.c: 91: {
 23781                           ;Timer.c: 92: if(PORTCbits.RC0 == 0)
 23782  0028DA  A082               	btfss	3970,0,c	;volatile
 23783  0028DC  D00E               	goto	i2l11019
 23784                           
 23785                           ; BSR set to: 0
 23786                           ;Timer.c: 97: else if(PORTCbits.RC0 == 1)
 23787                           
 23788                           ;Timer.c: 96: }
 23789                           
 23790                           ; BSR set to: 0
 23791                           ;Timer.c: 93: {
 23792                           ;Timer.c: 94: hg_op.cnt_posrst ++;
 23793  0028DE  A082               	btfss	3970,0,c	;volatile
 23794  0028E0  D06D               	goto	i2l1337
 23795  0028E2  D004               	goto	i2l11017
 23796  0028E4                     i2l1344:
 23797                           
 23798                           ; BSR set to: 0
 23799                           ;Timer.c: 106: else if( INTCON2bits.INTEDG2 == 0)
 23800  0028E4  B8F1               	btfsc	intcon2,4,c	;volatile
 23801  0028E6  D06A               	goto	i2l1337
 23802                           
 23803                           ; BSR set to: 0
 23804                           ;Timer.c: 107: {
 23805                           ;Timer.c: 109: if(PORTCbits.RC0 == 0)
 23806  0028E8  B082               	btfsc	3970,0,c	;volatile
 23807  0028EA  D005               	goto	i2l1350
 23808  0028EC                     i2l11017:
 23809                           
 23810                           ; BSR set to: 0
 23811                           ;Timer.c: 110: {
 23812                           ;Timer.c: 111: hg_op.cnt_posrst --;
 23813  0028EC  0100               	movlb	0	; () banked
 23814  0028EE  07B5               	decf	(_hg_op+53)& (0+255),f,b
 23815  0028F0  A0D8               	btfss	status,0,c
 23816  0028F2  07B6               	decf	(_hg_op+54)& (0+255),f,b
 23817                           
 23818                           ;Timer.c: 113: }
 23819  0028F4  D063               	goto	i2l1337
 23820  0028F6                     i2l1350:
 23821                           
 23822                           ; BSR set to: 0
 23823                           ;Timer.c: 114: else if(PORTCbits.RC0 == 1)
 23824  0028F6  A082               	btfss	3970,0,c	;volatile
 23825  0028F8  D061               	goto	i2l1337
 23826  0028FA                     i2l11019:
 23827                           
 23828                           ; BSR set to: 0
 23829                           ;Timer.c: 115: {
 23830                           ;Timer.c: 116: hg_op.cnt_posrst ++;
 23831  0028FA  0100               	movlb	0	; () banked
 23832  0028FC  4BB5               	infsnz	(_hg_op+53)& (0+255),f,b
 23833  0028FE  2BB6               	incf	(_hg_op+54)& (0+255),f,b
 23834                           
 23835                           ; BSR set to: 0
 23836                           ;Timer.c: 134: }
 23837                           ;Timer.c: 172: }
 23838                           ;Timer.c: 173: }
 23839                           
 23840                           ; BSR set to: 0
 23841                           
 23842                           ;Timer.c: 129: {
 23843                           
 23844                           ; BSR set to: 0
 23845                           
 23846                           ; BSR set to: 0
 23847                           
 23848                           ; BSR set to: 0
 23849                           
 23850                           ; BSR set to: 0
 23851                           
 23852                           ; BSR set to: 0
 23853                           
 23854                           ; BSR set to: 0
 23855  002900  D05D               	goto	i2l1337
 23856  002902                     i2l11023:
 23857                           
 23858                           ; BSR set to: 0
 23859                           ;Timer.c: 174: else
 23860                           ;Timer.c: 175: {
 23861                           ;Timer.c: 176: if(hg_op.working_mode == 0x01)
 23862  002902  0100               	movlb	0	; () banked
 23863  002904  0580               	decf	_hg_op& (0+255),w,b
 23864  002906  A4D8               	btfss	status,2,c
 23865  002908  D038               	goto	i2l11057
 23866                           
 23867                           ; BSR set to: 0
 23868                           ;Timer.c: 177: {
 23869                           ;Timer.c: 178: if(hg_op.drops_sa == 1)
 23870  00290A  0100               	movlb	0	; () banked
 23871  00290C  059F               	decf	(_hg_op+31)& (0+255),w,b
 23872  00290E  A4D8               	btfss	status,2,c
 23873  002910  D01A               	goto	i2l11041
 23874                           
 23875                           ; BSR set to: 0
 23876                           ;Timer.c: 179: {
 23877                           ;Timer.c: 206: if( INTCON2bits.INTEDG2 == 1)
 23878  002912  A8F1               	btfss	intcon2,4,c	;volatile
 23879  002914  D005               	goto	i2l1357
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;Timer.c: 207: {
 23883                           ;Timer.c: 208: if(PORTCbits.RC0 == 0)
 23884  002916  A082               	btfss	3970,0,c	;volatile
 23885  002918  D012               	goto	i2l11039
 23886                           
 23887                           ; BSR set to: 0
 23888                           ;Timer.c: 216: else if(PORTCbits.RC0 == 1)
 23889                           
 23890                           ;Timer.c: 215: }
 23891                           
 23892                           ;Timer.c: 214: hg_op.cnt_posa ++;
 23893                           
 23894                           ; BSR set to: 0
 23895                           ;Timer.c: 209: {
 23896                           ;Timer.c: 213: hg_op.cnt_pos_nmm ++;
 23897  00291A  A082               	btfss	3970,0,c	;volatile
 23898  00291C  D04F               	goto	i2l1337
 23899  00291E  D004               	goto	i2l11037
 23900  002920                     i2l1357:
 23901                           
 23902                           ; BSR set to: 0
 23903                           ;Timer.c: 225: else if( INTCON2bits.INTEDG2 == 0)
 23904  002920  B8F1               	btfsc	intcon2,4,c	;volatile
 23905  002922  D04C               	goto	i2l1337
 23906                           
 23907                           ; BSR set to: 0
 23908                           ;Timer.c: 226: {
 23909                           ;Timer.c: 228: if(PORTCbits.RC0 == 0)
 23910  002924  B082               	btfsc	3970,0,c	;volatile
 23911  002926  D009               	goto	i2l1363
 23912  002928                     i2l11037:
 23913                           
 23914                           ; BSR set to: 0
 23915                           ;Timer.c: 229: {
 23916                           ;Timer.c: 231: hg_op.cnt_pos_nmm --;
 23917  002928  0100               	movlb	0	; () banked
 23918  00292A  07AD               	decf	(_hg_op+45)& (0+255),f,b
 23919  00292C  A0D8               	btfss	status,0,c
 23920  00292E  07AE               	decf	(_hg_op+46)& (0+255),f,b
 23921                           
 23922                           ;Timer.c: 232: hg_op.cnt_posa --;
 23923  002930  0100               	movlb	0	; () banked
 23924  002932  07A5               	decf	(_hg_op+37)& (0+255),f,b
 23925  002934  A0D8               	btfss	status,0,c
 23926  002936  07A6               	decf	(_hg_op+38)& (0+255),f,b
 23927                           
 23928                           ;Timer.c: 233: }
 23929  002938  D041               	goto	i2l1337
 23930  00293A                     i2l1363:
 23931                           
 23932                           ; BSR set to: 0
 23933                           ;Timer.c: 234: else if(PORTCbits.RC0 == 1)
 23934  00293A  A082               	btfss	3970,0,c	;volatile
 23935  00293C  D03F               	goto	i2l1337
 23936  00293E                     i2l11039:
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;Timer.c: 235: {
 23940                           ;Timer.c: 237: hg_op.cnt_pos_nmm ++;
 23941  00293E  0100               	movlb	0	; () banked
 23942  002940  4BAD               	infsnz	(_hg_op+45)& (0+255),f,b
 23943  002942  2BAE               	incf	(_hg_op+46)& (0+255),f,b
 23944  002944  D038               	goto	i2l11075
 23945  002946                     i2l11041:
 23946                           
 23947                           ; BSR set to: 0
 23948                           ;Timer.c: 271: else if(hg_op.drops_sb == 1)
 23949  002946  0100               	movlb	0	; () banked
 23950  002948  05A0               	decf	(_hg_op+32)& (0+255),w,b
 23951  00294A  A4D8               	btfss	status,2,c
 23952  00294C  D037               	goto	i2l1337
 23953                           
 23954                           ; BSR set to: 0
 23955                           ;Timer.c: 272: {
 23956                           ;Timer.c: 306: if( INTCON2bits.INTEDG2 == 1)
 23957  00294E  A8F1               	btfss	intcon2,4,c	;volatile
 23958  002950  D005               	goto	i2l1369
 23959                           
 23960                           ; BSR set to: 0
 23961                           ;Timer.c: 307: {
 23962                           ;Timer.c: 308: if(PORTCbits.RC0 == 0)
 23963  002952  A082               	btfss	3970,0,c	;volatile
 23964  002954  D00E               	goto	i2l11055
 23965                           
 23966                           ; BSR set to: 0
 23967                           ;Timer.c: 315: else if(PORTCbits.RC0 == 1)
 23968                           
 23969                           ;Timer.c: 314: }
 23970                           
 23971                           ; BSR set to: 0
 23972                           ;Timer.c: 309: {
 23973                           ;Timer.c: 313: hg_op.cnt_pos_nmm ++;
 23974  002956  A082               	btfss	3970,0,c	;volatile
 23975  002958  D031               	goto	i2l1337
 23976  00295A  D004               	goto	i2l11053
 23977  00295C                     i2l1369:
 23978                           
 23979                           ; BSR set to: 0
 23980                           ;Timer.c: 325: else if( INTCON2bits.INTEDG2 == 0)
 23981  00295C  B8F1               	btfsc	intcon2,4,c	;volatile
 23982  00295E  D02E               	goto	i2l1337
 23983                           
 23984                           ; BSR set to: 0
 23985                           ;Timer.c: 326: {
 23986                           ;Timer.c: 328: if(PORTCbits.RC0 == 0)
 23987  002960  B082               	btfsc	3970,0,c	;volatile
 23988  002962  D005               	goto	i2l1375
 23989  002964                     i2l11053:
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;Timer.c: 329: {
 23993                           ;Timer.c: 331: hg_op.cnt_pos_nmm --;
 23994  002964  0100               	movlb	0	; () banked
 23995  002966  07AD               	decf	(_hg_op+45)& (0+255),f,b
 23996  002968  A0D8               	btfss	status,0,c
 23997  00296A  07AE               	decf	(_hg_op+46)& (0+255),f,b
 23998                           
 23999                           ;Timer.c: 332: }
 24000  00296C  D027               	goto	i2l1337
 24001  00296E                     i2l1375:
 24002                           
 24003                           ; BSR set to: 0
 24004                           ;Timer.c: 333: else if(PORTCbits.RC0 == 1)
 24005  00296E  A082               	btfss	3970,0,c	;volatile
 24006  002970  D025               	goto	i2l1337
 24007  002972                     i2l11055:
 24008                           
 24009                           ; BSR set to: 0
 24010                           ;Timer.c: 334: {
 24011                           ;Timer.c: 337: hg_op.cnt_pos_nmm ++;
 24012  002972  0100               	movlb	0	; () banked
 24013  002974  4BAD               	infsnz	(_hg_op+45)& (0+255),f,b
 24014  002976  2BAE               	incf	(_hg_op+46)& (0+255),f,b
 24015                           
 24016                           ; BSR set to: 0
 24017                           ;Timer.c: 367: }
 24018                           ;Timer.c: 370: }
 24019                           ;Timer.c: 372: }
 24020                           
 24021                           ; BSR set to: 0
 24022                           
 24023                           ; BSR set to: 0
 24024                           
 24025                           ;Timer.c: 352: {
 24026                           
 24027                           ; BSR set to: 0
 24028                           ;Timer.c: 338: }
 24029                           ;Timer.c: 341: }
 24030                           ;Timer.c: 351: if(0)
 24031                           
 24032                           ; BSR set to: 0
 24033                           
 24034                           ; BSR set to: 0
 24035                           
 24036                           ; BSR set to: 0
 24037  002978  D021               	goto	i2l1337
 24038  00297A                     i2l11057:
 24039                           
 24040                           ; BSR set to: 0
 24041                           ;Timer.c: 373: else if(hg_op.working_mode == 0x02)
 24042  00297A  0E02               	movlw	2
 24043  00297C  0100               	movlb	0	; () banked
 24044  00297E  1980               	xorwf	_hg_op& (0+255),w,b
 24045  002980  B4D8               	btfsc	status,2,c
 24046  002982  D01C               	goto	i2l1337
 24047                           
 24048                           ; BSR set to: 0
 24049                           ;Timer.c: 377: else if(hg_op.working_mode == 0x00)
 24050                           
 24051                           ; BSR set to: 0
 24052                           
 24053                           ; BSR set to: 0
 24054                           ;Timer.c: 374: {
 24055                           ;Timer.c: 376: }
 24056  002984  0100               	movlb	0	; () banked
 24057  002986  5180               	movf	_hg_op& (0+255),w,b
 24058  002988  A4D8               	btfss	status,2,c
 24059  00298A  D00C               	goto	i2l11071
 24060                           
 24061                           ; BSR set to: 0
 24062                           ;Timer.c: 378: {
 24063                           ;Timer.c: 379: if(hg_op.drops_sa == 1)
 24064  00298C  0100               	movlb	0	; () banked
 24065  00298E  059F               	decf	(_hg_op+31)& (0+255),w,b
 24066  002990  B4D8               	btfsc	status,2,c
 24067  002992  D011               	goto	i2l11075
 24068  002994                     i2l11067:
 24069                           
 24070                           ; BSR set to: 0
 24071                           ;Timer.c: 383: else if(hg_op.drops_sb == 1)
 24072  002994  0100               	movlb	0	; () banked
 24073  002996  05A0               	decf	(_hg_op+32)& (0+255),w,b
 24074  002998  A4D8               	btfss	status,2,c
 24075  00299A  D010               	goto	i2l1337
 24076                           
 24077                           ; BSR set to: 0
 24078                           ;Timer.c: 384: {
 24079                           ;Timer.c: 385: hg_op.cnt_posb ++;
 24080  00299C  0100               	movlb	0	; () banked
 24081  00299E  4BA7               	infsnz	(_hg_op+39)& (0+255),f,b
 24082  0029A0  2BA8               	incf	(_hg_op+40)& (0+255),f,b
 24083                           
 24084                           ; BSR set to: 0
 24085                           ;Timer.c: 386: }
 24086                           ;Timer.c: 387: }
 24087                           
 24088                           ; BSR set to: 0
 24089  0029A2  D00C               	goto	i2l1337
 24090  0029A4                     i2l11071:
 24091                           
 24092                           ; BSR set to: 0
 24093                           ;Timer.c: 388: else if(hg_op.working_mode == 0x04)
 24094  0029A4  0E04               	movlw	4
 24095  0029A6  0100               	movlb	0	; () banked
 24096  0029A8  1980               	xorwf	_hg_op& (0+255),w,b
 24097  0029AA  A4D8               	btfss	status,2,c
 24098  0029AC  D007               	goto	i2l1337
 24099                           
 24100                           ; BSR set to: 0
 24101                           ;Timer.c: 389: {
 24102                           ;Timer.c: 390: if(hg_op.drops_sa == 1)
 24103  0029AE  0100               	movlb	0	; () banked
 24104  0029B0  059F               	decf	(_hg_op+31)& (0+255),w,b
 24105  0029B2  A4D8               	btfss	status,2,c
 24106  0029B4  D7EF               	goto	i2l11067
 24107  0029B6                     i2l11075:
 24108                           
 24109                           ; BSR set to: 0
 24110                           ;Timer.c: 391: {
 24111                           ;Timer.c: 392: hg_op.cnt_posa ++;
 24112  0029B6  0100               	movlb	0	; () banked
 24113  0029B8  4BA5               	infsnz	(_hg_op+37)& (0+255),f,b
 24114  0029BA  2BA6               	incf	(_hg_op+38)& (0+255),f,b
 24115  0029BC                     i2l1337:
 24116                           
 24117                           ;Timer.c: 402: }
 24118                           ;Timer.c: 405: }
 24119                           ;Timer.c: 412: }
 24120                           ;Timer.c: 430: if(T0IF)
 24121  0029BC  A4F2               	btfss	intcon,2,c	;volatile
 24122  0029BE  D039               	goto	i2l11101
 24123                           
 24124                           ;Timer.c: 431: {
 24125                           ;Timer.c: 433: tcnt ++;
 24126  0029C0  0100               	movlb	0	; () banked
 24127  0029C2  2BDC               	incf	ISR@tcnt& (0+255),f,b
 24128                           
 24129                           ;Timer.c: 434: tcnt_bat ++;
 24130  0029C4  0100               	movlb	0	; () banked
 24131  0029C6  4BC7               	infsnz	ISR@tcnt_bat& (0+255),f,b
 24132  0029C8  2BC8               	incf	(ISR@tcnt_bat+1)& (0+255),f,b
 24133                           
 24134                           ; BSR set to: 0
 24135                           ;Timer.c: 436: if( hg_op.drops_push == 1)
 24136  0029CA  0100               	movlb	0	; () banked
 24137  0029CC  05A1               	decf	(_hg_op+33)& (0+255),w,b
 24138  0029CE  A4D8               	btfss	status,2,c
 24139  0029D0  D016               	goto	i2l11091
 24140                           
 24141                           ; BSR set to: 0
 24142                           ;Timer.c: 437: {
 24143                           ;Timer.c: 438: tva = get_SenseA_AD_vaule();
 24144  0029D2  EC57  F024         	call	_get_SenseA_AD_vaule	;wreg free
 24145  0029D6  C051  F0CD         	movff	?_get_SenseA_AD_vaule,_tva
 24146  0029DA  C052  F0CE         	movff	?_get_SenseA_AD_vaule+1,_tva+1
 24147                           
 24148                           ;Timer.c: 439: if(tva >600)
 24149  0029DE  0E59               	movlw	89
 24150  0029E0  0100               	movlb	0	; () banked
 24151  0029E2  5DCD               	subwf	_tva& (0+255),w,b
 24152  0029E4  0E02               	movlw	2
 24153  0029E6  0100               	movlb	0	; () banked
 24154  0029E8  59CE               	subwfb	(_tva+1)& (0+255),w,b
 24155  0029EA  A0D8               	btfss	status,0,c
 24156  0029EC  D008               	goto	i2l11091
 24157                           
 24158                           ; BSR set to: 0
 24159                           ;Timer.c: 440: {
 24160                           ;Timer.c: 445: {
 24161                           ;Timer.c: 446: hg_op.tcnt_overload_ma =0;
 24162  0029EE  0E00               	movlw	0
 24163  0029F0  0100               	movlb	0	; () banked
 24164  0029F2  6F8D               	movwf	(_hg_op+13)& (0+255),b
 24165  0029F4  0E00               	movlw	0
 24166  0029F6  6F8C               	movwf	(_hg_op+12)& (0+255),b
 24167                           
 24168                           ;Timer.c: 447: hg_op.flag_warning_ma = 1;
 24169  0029F8  0E01               	movlw	1
 24170  0029FA  0100               	movlb	0	; () banked
 24171  0029FC  6F8E               	movwf	(_hg_op+14)& (0+255),b
 24172  0029FE                     i2l11091:
 24173                           
 24174                           ; BSR set to: 0
 24175                           ;Timer.c: 455: }
 24176                           ;Timer.c: 459: if(tcnt_bat > (125))
 24177  0029FE  0100               	movlb	0	; () banked
 24178  002A00  51C8               	movf	(ISR@tcnt_bat+1)& (0+255),w,b
 24179  002A02  E105               	bnz	i2u1329_40
 24180  002A04  0E7E               	movlw	126
 24181  002A06  0100               	movlb	0	; () banked
 24182  002A08  5DC7               	subwf	ISR@tcnt_bat& (0+255),w,b
 24183  002A0A  A0D8               	btfss	status,0,c
 24184  002A0C  D008               	goto	i2l11095
 24185  002A0E                     i2u1329_40:
 24186                           
 24187                           ; BSR set to: 0
 24188                           ;Timer.c: 460: {
 24189                           ;Timer.c: 461: hg_op.bat_volume =1;
 24190  002A0E  0E01               	movlw	1
 24191  002A10  0100               	movlb	0	; () banked
 24192  002A12  6F87               	movwf	(_hg_op+7)& (0+255),b
 24193                           
 24194                           ;Timer.c: 462: tcnt_bat =0;
 24195  002A14  0E00               	movlw	0
 24196  002A16  0100               	movlb	0	; () banked
 24197  002A18  6FC8               	movwf	(ISR@tcnt_bat+1)& (0+255),b
 24198  002A1A  0E00               	movlw	0
 24199  002A1C  6FC7               	movwf	ISR@tcnt_bat& (0+255),b
 24200  002A1E                     i2l11095:
 24201                           
 24202                           ; BSR set to: 0
 24203                           ;Timer.c: 463: }
 24204                           ;Timer.c: 470: if(tcnt > 125)
 24205  002A1E  0E7D               	movlw	125
 24206  002A20  0100               	movlb	0	; () banked
 24207  002A22  65DC               	cpfsgt	ISR@tcnt& (0+255),b
 24208  002A24  D005               	goto	i2l11099
 24209                           
 24210                           ; BSR set to: 0
 24211                           ;Timer.c: 472: {
 24212                           ;Timer.c: 473: flag_blink =1;
 24213  002A26  0E01               	movlw	1
 24214  002A28  6E50               	movwf	_flag_blink,c
 24215                           
 24216                           ;Timer.c: 474: tcnt = 0;
 24217  002A2A  0E00               	movlw	0
 24218  002A2C  0100               	movlb	0	; () banked
 24219  002A2E  6FDC               	movwf	ISR@tcnt& (0+255),b
 24220  002A30                     i2l11099:
 24221                           
 24222                           ; BSR set to: 0
 24223                           ;Timer.c: 475: }
 24224                           ;Timer.c: 477: T0IF = 0;
 24225  002A30  94F2               	bcf	intcon,2,c	;volatile
 24226  002A32                     i2l11101:
 24227                           
 24228                           ;Timer.c: 479: }
 24229                           ;Timer.c: 489: if(INTCONbits.RBIF)
 24230  002A32  A0F2               	btfss	intcon,0,c	;volatile
 24231  002A34  D014               	goto	i2l11117
 24232                           
 24233                           ;Timer.c: 490: {
 24234                           ;Timer.c: 491: if(hg_op.status_powerup == 0x00)
 24235  002A36  0100               	movlb	0	; () banked
 24236  002A38  5183               	movf	(_hg_op+3)& (0+255),w,b
 24237  002A3A  A4D8               	btfss	status,2,c
 24238  002A3C  D003               	goto	i2l11107
 24239                           
 24240                           ; BSR set to: 0
 24241                           ;Timer.c: 492: {
 24242                           ;Timer.c: 493: hg_op.flag_wake_device =1;
 24243  002A3E  0E01               	movlw	1
 24244  002A40  0100               	movlb	0	; () banked
 24245  002A42  6F91               	movwf	(_hg_op+17)& (0+255),b
 24246  002A44                     i2l11107:
 24247                           
 24248                           ; BSR set to: 0
 24249                           ;Timer.c: 494: }
 24250                           ;Timer.c: 495: if(hg_op.status_powerup == 0x01)
 24251  002A44  0100               	movlb	0	; () banked
 24252  002A46  0583               	decf	(_hg_op+3)& (0+255),w,b
 24253  002A48  A4D8               	btfss	status,2,c
 24254  002A4A  D003               	goto	i2l11111
 24255                           
 24256                           ; BSR set to: 0
 24257                           ;Timer.c: 496: {
 24258                           ;Timer.c: 497: hg_op.flag_shut_device =1;
 24259  002A4C  0E01               	movlw	1
 24260  002A4E  0100               	movlb	0	; () banked
 24261  002A50  6F92               	movwf	(_hg_op+18)& (0+255),b
 24262  002A52                     i2l11111:
 24263                           
 24264                           ; BSR set to: 0
 24265                           ;Timer.c: 498: }
 24266                           ;Timer.c: 579: if(PORTBbits.RB5 == 0)
 24267  002A52  BA81               	btfsc	3969,5,c	;volatile
 24268  002A54  D003               	goto	i2l11115
 24269                           
 24270                           ; BSR set to: 0
 24271                           ;Timer.c: 580: {
 24272                           ;Timer.c: 583: hg_op.acting_flag = 1;
 24273  002A56  0E01               	movlw	1
 24274  002A58  0100               	movlb	0	; () banked
 24275  002A5A  6F9E               	movwf	(_hg_op+30)& (0+255),b
 24276  002A5C                     i2l11115:
 24277                           
 24278                           ; BSR set to: 0
 24279                           ;Timer.c: 585: }
 24280                           ;Timer.c: 590: INTCONbits.RBIF=0;
 24281  002A5C  90F2               	bcf	intcon,0,c	;volatile
 24282  002A5E                     i2l11117:
 24283                           
 24284                           ;Timer.c: 593: }
 24285                           ;Timer.c: 596: if(INTCONbits.INT0IF)
 24286  002A5E  A2F2               	btfss	intcon,1,c	;volatile
 24287  002A60  D004               	goto	i2l1403
 24288                           
 24289                           ;Timer.c: 597: {
 24290                           ;Timer.c: 601: hg_op.status_hit_lp =1;
 24291  002A62  0E01               	movlw	1
 24292  002A64  0100               	movlb	0	; () banked
 24293  002A66  6F86               	movwf	(_hg_op+6)& (0+255),b
 24294                           
 24295                           ; BSR set to: 0
 24296                           ;Timer.c: 605: INTCONbits.INT0IF = 0;
 24297  002A68  92F2               	bcf	intcon,1,c	;volatile
 24298  002A6A                     i2l1403:
 24299  002A6A  C067  FFF5         	movff	??_ISR+13,tablat
 24300  002A6E  C066  FFF8         	movff	??_ISR+12,tblptru
 24301  002A72  C065  FFF7         	movff	??_ISR+11,tblptrh
 24302  002A76  C064  FFF6         	movff	??_ISR+10,tblptrl
 24303  002A7A  C063  FFF4         	movff	??_ISR+9,prodh
 24304  002A7E  C062  FFF3         	movff	??_ISR+8,prodl
 24305  002A82  C061  FFDA         	movff	??_ISR+7,fsr2h
 24306  002A86  C060  FFD9         	movff	??_ISR+6,fsr2l
 24307  002A8A  C05F  FFE2         	movff	??_ISR+5,fsr1h
 24308  002A8E  C05E  FFE1         	movff	??_ISR+4,fsr1l
 24309  002A92  C05D  FFEA         	movff	??_ISR+3,fsr0h
 24310  002A96  C05C  FFE9         	movff	??_ISR+2,fsr0l
 24311  002A9A  C05B  FFFB         	movff	??_ISR+1,pclatu
 24312  002A9E  C05A  FFFA         	movff	??_ISR,pclath
 24313  002AA2  926A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24314  002AA4  0011               	retfie		f
 24315  002AA6                     __end_of_ISR:
 24316                           	opt stack 0
 24317                           pclatu	equ	0xFFB
 24318                           pclath	equ	0xFFA
 24319                           tblptru	equ	0xFF8
 24320                           tblptrh	equ	0xFF7
 24321                           tblptrl	equ	0xFF6
 24322                           tablat	equ	0xFF5
 24323                           prodh	equ	0xFF4
 24324                           prodl	equ	0xFF3
 24325                           intcon	equ	0xFF2
 24326                           intcon2	equ	0xFF1
 24327                           intcon3	equ	0xFF0
 24328                           indf0	equ	0xFEF
 24329                           postinc0	equ	0xFEE
 24330                           fsr0h	equ	0xFEA
 24331                           fsr0l	equ	0xFE9
 24332                           wreg	equ	0xFE8
 24333                           postdec1	equ	0xFE5
 24334                           fsr1h	equ	0xFE2
 24335                           fsr1l	equ	0xFE1
 24336                           postinc2	equ	0xFDE
 24337                           fsr2h	equ	0xFDA
 24338                           fsr2l	equ	0xFD9
 24339                           status	equ	0xFD8
 24340                           
 24341 ;; *************** function _get_SenseA_AD_vaule *****************
 24342 ;; Defined at:
 24343 ;;		line 322 in file "../Oled.c"
 24344 ;; Parameters:    Size  Location     Type
 24345 ;;		None
 24346 ;; Auto vars:     Size  Location     Type
 24347 ;;  rv              2    5[COMRAM] unsigned int 
 24348 ;;  lv              1    8[COMRAM] unsigned char 
 24349 ;;  hv              1    7[COMRAM] unsigned char 
 24350 ;; Return value:  Size  Location     Type
 24351 ;;                  2    0[COMRAM] unsigned int 
 24352 ;; Registers used:
 24353 ;;		wreg, status,2, status,0
 24354 ;; Tracked objects:
 24355 ;;		On entry : 0/0
 24356 ;;		On exit  : 0/0
 24357 ;;		Unchanged: 0/0
 24358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24359 ;;      Params:         2       0       0       0       0       0       0
 24360 ;;      Locals:         4       0       0       0       0       0       0
 24361 ;;      Temps:          3       0       0       0       0       0       0
 24362 ;;      Totals:         9       0       0       0       0       0       0
 24363 ;;Total ram usage:        9 bytes
 24364 ;; Hardware stack levels used:    1
 24365 ;; This function calls:
 24366 ;;		Nothing
 24367 ;; This function is called by:
 24368 ;;		_ISR
 24369 ;; This function uses a non-reentrant model
 24370 ;;
 24371                           
 24372                           	psect	text71
 24373  0048AE                     __ptext71:
 24374                           	opt stack 0
 24375  0048AE                     _get_SenseA_AD_vaule:
 24376                           	opt stack 21
 24377                           
 24378                           ;Oled.c: 325: uint8_t hv=0;
 24379                           
 24380                           ;incstack = 0
 24381  0048AE  0E00               	movlw	0
 24382  0048B0  6E58               	movwf	get_SenseA_AD_vaule@hv,c
 24383                           
 24384                           ;Oled.c: 326: uint8_t lv=0;
 24385  0048B2  0E00               	movlw	0
 24386  0048B4  6E59               	movwf	get_SenseA_AD_vaule@lv,c
 24387                           
 24388                           ;Oled.c: 328: uint16_t rv=0;
 24389  0048B6  0E00               	movlw	0
 24390  0048B8  6E57               	movwf	get_SenseA_AD_vaule@rv+1,c
 24391  0048BA  0E00               	movlw	0
 24392  0048BC  6E56               	movwf	get_SenseA_AD_vaule@rv,c
 24393                           
 24394                           ;Oled.c: 329: ADCON0bits.CHS = 1;
 24395  0048BE  50C2               	movf	4034,w,c	;volatile
 24396  0048C0  0BC3               	andlw	-61
 24397  0048C2  0904               	iorlw	4
 24398  0048C4  6EC2               	movwf	4034,c	;volatile
 24399                           
 24400                           ;Oled.c: 330: ADCON0bits.GO =1;
 24401  0048C6  82C2               	bsf	4034,1,c	;volatile
 24402  0048C8                     i2l741:
 24403  0048C8  B2C2               	btfsc	4034,1,c	;volatile
 24404  0048CA  D7FE               	goto	i2l741
 24405                           
 24406                           ;Oled.c: 334: hv = ADRESH;
 24407  0048CC  CFC4 F058          	movff	4036,get_SenseA_AD_vaule@hv	;volatile
 24408                           
 24409                           ;Oled.c: 335: lv = ADRESL;
 24410  0048D0  CFC3 F059          	movff	4035,get_SenseA_AD_vaule@lv	;volatile
 24411                           
 24412                           ;Oled.c: 337: rv = ((uint16_t)(hv<<8 | lv) >>6)& 0x03ff;
 24413  0048D4  5059               	movf	get_SenseA_AD_vaule@lv,w,c
 24414  0048D6  C058  F053         	movff	get_SenseA_AD_vaule@hv,??_get_SenseA_AD_vaule
 24415  0048DA  6A54               	clrf	(??_get_SenseA_AD_vaule+1)& (0+255),c
 24416  0048DC  C053  F054         	movff	??_get_SenseA_AD_vaule,??_get_SenseA_AD_vaule+1
 24417  0048E0  6A53               	clrf	??_get_SenseA_AD_vaule,c
 24418  0048E2  1253               	iorwf	??_get_SenseA_AD_vaule,f,c
 24419  0048E4  0E00               	movlw	0
 24420  0048E6  1254               	iorwf	??_get_SenseA_AD_vaule+1,f,c
 24421  0048E8  0E06               	movlw	6
 24422  0048EA  6E55               	movwf	(??_get_SenseA_AD_vaule+2)& (0+255),c
 24423  0048EC                     i2u1284_45:
 24424  0048EC  90D8               	bcf	status,0,c
 24425  0048EE  3254               	rrcf	??_get_SenseA_AD_vaule+1,f,c
 24426  0048F0  3253               	rrcf	??_get_SenseA_AD_vaule,f,c
 24427  0048F2  2E55               	decfsz	(??_get_SenseA_AD_vaule+2)& (0+255),f,c
 24428  0048F4  D7FB               	goto	i2u1284_45
 24429  0048F6  0EFF               	movlw	255
 24430  0048F8  1453               	andwf	??_get_SenseA_AD_vaule,w,c
 24431  0048FA  6E56               	movwf	get_SenseA_AD_vaule@rv,c
 24432  0048FC  0E03               	movlw	3
 24433  0048FE  1454               	andwf	??_get_SenseA_AD_vaule+1,w,c
 24434  004900  6E57               	movwf	get_SenseA_AD_vaule@rv+1,c
 24435                           
 24436                           ;Oled.c: 339: return rv;
 24437  004902  C056  F051         	movff	get_SenseA_AD_vaule@rv,?_get_SenseA_AD_vaule
 24438  004906  C057  F052         	movff	get_SenseA_AD_vaule@rv+1,?_get_SenseA_AD_vaule+1
 24439  00490A  0012               	return	
 24440  00490C                     __end_of_get_SenseA_AD_vaule:
 24441                           	opt stack 0
 24442                           pclatu	equ	0xFFB
 24443                           pclath	equ	0xFFA
 24444                           tblptru	equ	0xFF8
 24445                           tblptrh	equ	0xFF7
 24446                           tblptrl	equ	0xFF6
 24447                           tablat	equ	0xFF5
 24448                           prodh	equ	0xFF4
 24449                           prodl	equ	0xFF3
 24450                           intcon	equ	0xFF2
 24451                           intcon2	equ	0xFF1
 24452                           intcon3	equ	0xFF0
 24453                           indf0	equ	0xFEF
 24454                           postinc0	equ	0xFEE
 24455                           fsr0h	equ	0xFEA
 24456                           fsr0l	equ	0xFE9
 24457                           wreg	equ	0xFE8
 24458                           postdec1	equ	0xFE5
 24459                           fsr1h	equ	0xFE2
 24460                           fsr1l	equ	0xFE1
 24461                           postinc2	equ	0xFDE
 24462                           fsr2h	equ	0xFDA
 24463                           fsr2l	equ	0xFD9
 24464                           status	equ	0xFD8
 24465                           pclatu	equ	0xFFB
 24466                           pclath	equ	0xFFA
 24467                           tblptru	equ	0xFF8
 24468                           tblptrh	equ	0xFF7
 24469                           tblptrl	equ	0xFF6
 24470                           tablat	equ	0xFF5
 24471                           prodh	equ	0xFF4
 24472                           prodl	equ	0xFF3
 24473                           intcon	equ	0xFF2
 24474                           intcon2	equ	0xFF1
 24475                           intcon3	equ	0xFF0
 24476                           indf0	equ	0xFEF
 24477                           postinc0	equ	0xFEE
 24478                           fsr0h	equ	0xFEA
 24479                           fsr0l	equ	0xFE9
 24480                           wreg	equ	0xFE8
 24481                           postdec1	equ	0xFE5
 24482                           fsr1h	equ	0xFE2
 24483                           fsr1l	equ	0xFE1
 24484                           postinc2	equ	0xFDE
 24485                           fsr2h	equ	0xFDA
 24486                           fsr2l	equ	0xFD9
 24487                           status	equ	0xFD8
 24488                           
 24489                           	psect	text72
 24490  000000                     __ptext72:
 24491                           	opt stack 0
 24492                           pclatu	equ	0xFFB
 24493                           pclath	equ	0xFFA
 24494                           tblptru	equ	0xFF8
 24495                           tblptrh	equ	0xFF7
 24496                           tblptrl	equ	0xFF6
 24497                           tablat	equ	0xFF5
 24498                           prodh	equ	0xFF4
 24499                           prodl	equ	0xFF3
 24500                           intcon	equ	0xFF2
 24501                           intcon2	equ	0xFF1
 24502                           intcon3	equ	0xFF0
 24503                           indf0	equ	0xFEF
 24504                           postinc0	equ	0xFEE
 24505                           fsr0h	equ	0xFEA
 24506                           fsr0l	equ	0xFE9
 24507                           wreg	equ	0xFE8
 24508                           postdec1	equ	0xFE5
 24509                           fsr1h	equ	0xFE2
 24510                           fsr1l	equ	0xFE1
 24511                           postinc2	equ	0xFDE
 24512                           fsr2h	equ	0xFDA
 24513                           fsr2l	equ	0xFD9
 24514                           status	equ	0xFD8
 24515                           
 24516                           	psect	rparam
 24517  0000                     pclatu	equ	0xFFB
 24518                           pclath	equ	0xFFA
 24519                           tblptru	equ	0xFF8
 24520                           tblptrh	equ	0xFF7
 24521                           tblptrl	equ	0xFF6
 24522                           tablat	equ	0xFF5
 24523                           prodh	equ	0xFF4
 24524                           prodl	equ	0xFF3
 24525                           intcon	equ	0xFF2
 24526                           intcon2	equ	0xFF1
 24527                           intcon3	equ	0xFF0
 24528                           indf0	equ	0xFEF
 24529                           postinc0	equ	0xFEE
 24530                           fsr0h	equ	0xFEA
 24531                           fsr0l	equ	0xFE9
 24532                           wreg	equ	0xFE8
 24533                           postdec1	equ	0xFE5
 24534                           fsr1h	equ	0xFE2
 24535                           fsr1l	equ	0xFE1
 24536                           postinc2	equ	0xFDE
 24537                           fsr2h	equ	0xFDA
 24538                           fsr2l	equ	0xFD9
 24539                           status	equ	0xFD8
 24540                           
 24541                           	psect	temp
 24542  00006A                     btemp:
 24543                           	opt stack 0
 24544  00006A                     	ds	1
 24545  0000                     int$flags	set	btemp
 24546                           pclatu	equ	0xFFB
 24547                           pclath	equ	0xFFA
 24548                           tblptru	equ	0xFF8
 24549                           tblptrh	equ	0xFF7
 24550                           tblptrl	equ	0xFF6
 24551                           tablat	equ	0xFF5
 24552                           prodh	equ	0xFF4
 24553                           prodl	equ	0xFF3
 24554                           intcon	equ	0xFF2
 24555                           intcon2	equ	0xFF1
 24556                           intcon3	equ	0xFF0
 24557                           indf0	equ	0xFEF
 24558                           postinc0	equ	0xFEE
 24559                           fsr0h	equ	0xFEA
 24560                           fsr0l	equ	0xFE9
 24561                           wreg	equ	0xFE8
 24562                           postdec1	equ	0xFE5
 24563                           fsr1h	equ	0xFE2
 24564                           fsr1l	equ	0xFE1
 24565                           postinc2	equ	0xFDE
 24566                           fsr2h	equ	0xFDA
 24567                           fsr2l	equ	0xFD9
 24568                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    3179
    Data        12
    BSS         747
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     23     105
    BANK0           128      3     128
    BANK1           256     18      58
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    S1950xmenu$MsgHandlle	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> menu7_MsgHandlle(), menu6_MsgHandlle(), menu5_MsgHandlle(), menu4_MsgHandlle(), 
		 -> menu3_MsgHandlle(), menu2_MsgHandlle(), menu1_MsgHandlle(), menu0_MsgHandlle(), 

    menu.MsgHandlle	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> menu7_MsgHandlle(), menu6_MsgHandlle(), menu5_MsgHandlle(), menu4_MsgHandlle(), 
		 -> menu3_MsgHandlle(), menu2_MsgHandlle(), menu1_MsgHandlle(), menu0_MsgHandlle(), 

    ptnx_frame	PTR unsigned char [48] size(2) Largest target is 144
		 -> ptni_frame(CODE[144]), ptnh_frame(CODE[144]), ptng_frame(CODE[144]), ptnf_frame(CODE[144]), 
		 -> NULL(NULL[0]), 

    bat_x_m	PTR unsigned char [23] size(2) Largest target is 46
		 -> bat20_m(CODE[46]), bat40_m(CODE[46]), bat60_m(CODE[46]), bat80_m(CODE[46]), 
		 -> bat100_m(CODE[46]), bat00_m(CODE[46]), NULL(NULL[0]), 

    n_x_m	PTR unsigned char [19] size(2) Largest target is 57
		 -> n_2P5_m(CODE[57]), n_1P5_m(CODE[57]), n_300_m(CODE[57]), n_250_m(CODE[57]), 
		 -> n_200_m(CODE[57]), n_150_m(CODE[57]), n_100_m(CODE[57]), n_13_m(CODE[57]), 
		 -> n_10_m(CODE[57]), n_6_m(CODE[57]), n_5_m(CODE[57]), n_4_m(CODE[57]), 
		 -> n_3_m(CODE[57]), n_2_m(CODE[57]), n_1_m(CODE[57]), n_0_m(CODE[57]), 
		 -> NULL(NULL[0]), 

    ee_WriteBytes@_pWriteBuf	PTR unsigned char  size(2) Largest target is 784
		 -> logo_eme(CODE[784]), display_frame_fghi@temp(BANK1[1]), display_frame_de@temp(BANK1[1]), display_frame_abc@temp(BANK1[1]), 
		 -> display_drop@temp(BANK1[1]), display_drops@temp(BANK1[1]), display_cmode@temp(BANK1[1]), display_blank_mode_pa@temp(BANK1[1]), 
		 -> display_mem@temp(BANK1[1]), display_bat@temp(BANK1[1]), display_bat_blank@temp(BANK1[1]), display_num@temp(BANK1[1]), 
		 -> display_n_blank@temp(BANK1[1]), write_buf(BANK2[256]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_get_SenseA_AD_vaule

Critical Paths under _main in BANK0

    _test_routine->___wmul
    _hg_reset->_delaynus
    _display_mem->_setYX_LCD
    _display_logo->_setYX_LCD
    _clear_screen->_setYX_LCD
    _drops_routine->_delaynus
    _display_n_blank->_setYX_LCD
    _display_blank_mode_pa->_setYX_LCD
    _check_shut_device->_delay_nms
    _check_device_idle->_delay_nms
    _display_bat_blank->_setYX_LCD
    _display_bat->_setYX_LCD
    _check_acting->_delaynus
    _c_routine->___wmul
    _c_routine->_delaynus
    _delay_pwm->___wmul
    _HG_interface->_update_focus
    _display_frame_de->_setYX_LCD
    _display_num->_setYX_LCD
    _display_frame_fghi->_setYX_LCD
    _display_frame_abc->_setYX_LCD
    _display_drops->_setYX_LCD
    _display_drop->_setYX_LCD
    _display_cmode->_setYX_LCD
    _KEY_Scan->_delay_nms
    _KEY_Scan->_delaynus
    _buzz->_delay_nms
    _Initial_LY096BG30->_delay
    _ee_WriteBytes->_i2c_SendByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_HG_interface
    _main->_enter_sleep
    _test_routine->_delay_pwm
    _check_wake_button->_initial_ui_setting
    _initial_ui_setting->_display_frame_fghi
    _initial_ui_setting->_display_num
    _display_mem->_setYX_LCD
    _display_logo->_setYX_LCD
    _clear_screen->_setYX_LCD
    _config_LCD->_ee_WriteBytes
    _check_ui_status->_display_frame_fghi
    _check_ui_status->_display_num
    _blink_mode->_display_num
    _display_n_blank->_setYX_LCD
    _display_blank_mode_pa->_setYX_LCD
    _check_shut_device->_delay_pwm
    _shut_device->_ee_WriteBytes
    _check_bat->_display_bat
    _check_bat->_display_bat_blank
    _display_bat_blank->_setYX_LCD
    _display_bat->_setYX_LCD
    _c_routine->_delay_pwm
    _delay_pwm->___wmul
    _HG_interface->_menu0_MsgHandlle
    _HG_interface->_menu3_MsgHandlle
    _HG_interface->_menu4_MsgHandlle
    _HG_interface->_menu5_MsgHandlle
    _HG_interface->_menu6_MsgHandlle
    _menu6_MsgHandlle->_display_frame_fghi
    _menu6_MsgHandlle->_display_num
    _menu5_MsgHandlle->_display_frame_fghi
    _menu5_MsgHandlle->_display_num
    _menu4_MsgHandlle->_display_num
    _menu3_MsgHandlle->_display_num
    _display_frame_de->_setYX_LCD
    _menu0_MsgHandlle->_display_frame_fghi
    _menu0_MsgHandlle->_display_num
    _display_num->_setYX_LCD
    _display_frame_fghi->_setYX_LCD
    _display_frame_abc->_setYX_LCD
    _display_drops->_setYX_LCD
    _display_drop->_setYX_LCD
    _display_cmode->_setYX_LCD
    _setYX_LCD->_ee_WriteBytes
    _KEY_Scan->_delay_nms
    _buzz->_delay_nms
    _Initial_LY096BG30->_ee_WriteBytes

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1913175
                     _HG_device_init
                       _HG_interface
                          _c_routine
                       _check_acting
                          _check_bat
                  _check_device_idle
                  _check_shut_device
                     _check_ui_blink
                    _check_ui_status
                      _drops_routine
                        _enter_sleep
                           _hg_reset
               _initial_para_setting
                       _test_routine
 ---------------------------------------------------------------------------------
 (1) _test_routine                                         4     4      0    1424
                                              8 BANK1      4     4      0
                             ___wmul
                          _delay_pwm
 ---------------------------------------------------------------------------------
 (1) _initial_para_setting                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hg_reset                                             0     0      0    2880
                           _delaynus
 ---------------------------------------------------------------------------------
 (1) _enter_sleep                                          1     1      0  441626
                                             17 BANK1      1     1      0
                  _check_wake_button
                           _delaynus
 ---------------------------------------------------------------------------------
 (2) _check_wake_button                                    0     0      0  438703
                             _LCD_On
                               _buzz
                         _config_LCD
                          _delay_nms
                 _initial_ui_setting
 ---------------------------------------------------------------------------------
 (3) _initial_ui_setting                                   1     1      0  418407
                                             16 BANK1      1     1      0
                       _clear_screen
                           _delaynus
                        _display_bat
                      _display_cmode
                  _display_frame_abc
                   _display_frame_de
                 _display_frame_fghi
                       _display_logo
                        _display_mem
                        _display_num
 ---------------------------------------------------------------------------------
 (4) _display_mem                                          5     3      2   44058
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_logo                                         4     4      0   43697
                                              9 BANK1      4     4      0
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _clear_screen                                         2     2      0   43635
                                              9 BANK1      2     2      0
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (3) _config_LCD                                           0     0      0   19008
                      _ee_WriteBytes
 ---------------------------------------------------------------------------------
 (3) _LCD_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drops_routine                                        4     4      0    3564
                                              4 BANK1      4     4      0
                               _buzz
                           _delaynus
 ---------------------------------------------------------------------------------
 (1) _check_ui_status                                      0     0      0  329707
                      _display_cmode
                       _display_drop
                      _display_drops
                  _display_frame_abc
                   _display_frame_de
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (1) _check_ui_blink                                       0     0      0  280595
                         _blink_mode
 ---------------------------------------------------------------------------------
 (2) _blink_mode                                           0     0      0  280595
              _display_blank_mode_pa
                      _display_cmode
                       _display_drop
                      _display_drops
                    _display_n_blank
                        _display_num
 ---------------------------------------------------------------------------------
 (3) _display_n_blank                                      5     3      2   45565
                                              9 BANK1      5     3      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (3) _display_blank_mode_pa                                5     3      2   44058
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (1) _check_shut_device                                    0     0      0   20148
                          _delay_nms
                          _delay_pwm
                        _shut_device
 ---------------------------------------------------------------------------------
 (1) _check_device_idle                                    0     0      0   19652
                          _delay_nms
                        _shut_device
 ---------------------------------------------------------------------------------
 (2) _shut_device                                          0     0      0   19008
                            _LCD_Off
                      _ee_WriteBytes
 ---------------------------------------------------------------------------------
 (1) _check_bat                                            0     0      0   88384
                        _display_bat
                  _display_bat_blank
 ---------------------------------------------------------------------------------
 (2) _display_bat_blank                                    7     5      2   44058
                                              9 BANK1      6     4      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_bat                                          7     5      2   44326
                                              9 BANK1      6     4      2
                      _ee_WriteBytes
                       _get_AD_vaule
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (5) _get_AD_vaule                                        10     8      2     114
                                              0 BANK0      2     0      2
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (1) _check_acting                                         0     0      0    3524
                               _buzz
                           _delaynus
 ---------------------------------------------------------------------------------
 (1) _c_routine                                            2     2      0    4307
                                              8 BANK1      2     2      0
                             ___wmul
                          _delay_pwm
                           _delaynus
 ---------------------------------------------------------------------------------
 (2) _delay_pwm                                            4     0      4     496
                                              4 BANK1      4     0      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                              0 BANK0      2     2      0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _HG_interface                                         1     1      0  697989
                                             17 BANK1      1     1      0
                           _KEY_Scan
                   _menu0_MsgHandlle
                   _menu1_MsgHandlle
                   _menu2_MsgHandlle
                   _menu3_MsgHandlle
                   _menu4_MsgHandlle
                   _menu5_MsgHandlle
                   _menu6_MsgHandlle
                       _update_focus
 ---------------------------------------------------------------------------------
 (2) _update_focus                                         3     3      0     136
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _menu6_MsgHandlle                                     1     1      0  102761
                                             16 BANK1      1     1      0
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (2) _menu5_MsgHandlle                                     1     1      0  102761
                                             16 BANK1      1     1      0
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (2) _menu4_MsgHandlle                                     1     1      0  102138
                                             16 BANK1      1     1      0
                   _display_frame_de
                        _display_num
 ---------------------------------------------------------------------------------
 (2) _menu3_MsgHandlle                                     1     1      0  102138
                                             16 BANK1      1     1      0
                   _display_frame_de
                        _display_num
 ---------------------------------------------------------------------------------
 (4) _display_frame_de                                     5     3      2   46235
                                              9 BANK1      5     3      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (2) _menu2_MsgHandlle                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _menu1_MsgHandlle                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _menu0_MsgHandlle                                     1     1      0  283503
                                             16 BANK1      1     1      0
                      _display_cmode
                       _display_drop
                      _display_drops
                  _display_frame_abc
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (4) _display_num                                          7     5      2   55872
                                              9 BANK1      7     5      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_frame_fghi                                   7     5      2   46858
                                              9 BANK1      7     5      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_frame_abc                                    5     3      2   45642
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (2) _display_drops                                        5     3      2   44982
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (2) _display_drop                                         5     3      2   44982
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_cmode                                        5     3      2   45136
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (5) _setYX_LCD                                            2     1      1   24460
                                              2 BANK0      1     0      1
                                              8 BANK1      1     1      0
                      _ee_WriteBytes
 ---------------------------------------------------------------------------------
 (2) _KEY_Scan                                             2     2      0    4205
                                              4 BANK1      2     2      0
                               _buzz
                          _delay_nms
                           _delaynus
 ---------------------------------------------------------------------------------
 (2) _delaynus                                             2     0      2    2880
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _buzz                                                 0     0      0     644
                          _delay_nms
 ---------------------------------------------------------------------------------
 (3) _delay_nms                                            6     2      4     644
                                              0 BANK0      2     2      0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _HG_device_init                                       0     0      0   19375
                            _AD_init
                           _BeepInit
                  _Initial_LY096BG30
                           _KEY_Init
                            _LCD_Off
                 _LCD_backlight_init
                     _MotorDriveInit
                         _Timer1Init
                          _TimerInit
                          _init_menu
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_menu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TimerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer1Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorDriveInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight_init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KEY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Initial_LY096BG30                                    0     0      0   19375
                              _delay
                      _ee_WriteBytes
                        _i2c_CfgGpio
 ---------------------------------------------------------------------------------
 (3) _i2c_CfgGpio                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ee_WriteBytes                                       10     5      5   19008
                                              0 BANK1      8     3      5
                       _i2c_SendByte
                          _i2c_Start
                           _i2c_Stop
                        _i2c_WaitAck
 ---------------------------------------------------------------------------------
 (7) _i2c_WaitAck                                          1     1      0      37
                                              0 BANK0      1     1      0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (7) _i2c_Stop                                             0     0      0       0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (7) _i2c_Start                                            0     0      0       0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (7) _i2c_SendByte                                         2     2      0     133
                                              0 BANK0      2     2      0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (8) _i2c_Delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     367
                                              0 BANK0      2     0      2
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _BeepInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 15    15      0      72
                                              9 COMRAM    14    14      0
                _get_SenseA_AD_vaule
 ---------------------------------------------------------------------------------
 (10) _get_SenseA_AD_vaule                                 9     7      2      72
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HG_device_init
     _AD_init
     _BeepInit
     _Initial_LY096BG30
       _delay
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _i2c_CfgGpio
     _KEY_Init
     _LCD_Off
     _LCD_backlight_init
     _MotorDriveInit
     _Timer1Init
     _TimerInit
     _init_menu
     _uart_init
   _HG_interface
     _KEY_Scan
       _buzz
         _delay_nms
       _delay_nms
       _delaynus
     _menu0_MsgHandlle
       _display_cmode
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drop
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drops
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_frame_abc
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_frame_fghi
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu1_MsgHandlle
     _menu2_MsgHandlle
     _menu3_MsgHandlle
       _display_frame_de
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu4_MsgHandlle
       _display_frame_de
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu5_MsgHandlle
       _display_frame_fghi
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu6_MsgHandlle
       _display_frame_fghi
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _update_focus
   _c_routine
     ___wmul
     _delay_pwm
       ___wmul (ARG)
     _delaynus
   _check_acting
     _buzz
       _delay_nms
     _delaynus
   _check_bat
     _display_bat
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _get_AD_vaule
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_bat_blank
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
   _check_device_idle
     _delay_nms
     _shut_device
       _LCD_Off
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
   _check_shut_device
     _delay_nms
     _delay_pwm
       ___wmul (ARG)
     _shut_device
       _LCD_Off
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
   _check_ui_blink
     _blink_mode
       _display_blank_mode_pa
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_cmode
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drop
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drops
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_n_blank
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
   _check_ui_status
     _display_cmode
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_drop
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_drops
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_frame_abc
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_frame_de
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_frame_fghi
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_num
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
   _drops_routine
     _buzz
       _delay_nms
     _delaynus
   _enter_sleep
     _check_wake_button
       _LCD_On
       _buzz
         _delay_nms
       _config_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
       _delay_nms
       _initial_ui_setting
         _clear_screen
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _delaynus
         _display_bat
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _get_AD_vaule
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_cmode
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_frame_abc
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_frame_de
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_frame_fghi
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_logo
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_mem
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_num
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
     _delaynus
   _hg_reset
     _delaynus
   _initial_para_setting
   _test_routine
     ___wmul
     _delay_pwm
       ___wmul (ARG)

 _ISR (ROOT)
   _get_SenseA_AD_vaule

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      3A       7       22.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      3      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     17      69       1       83.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     323      15        0.0%
DATA                 0      0     323       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 16 22:38:44 2020

           menu4_MsgHandlle@key 0138                    _update_focus 4538                   ??_i2c_CfgGpio 00FD  
    __end_of_LCD_backlight_init 4EB8                    ?_display_bat 0131                    ?_display_mem 0131  
              _menu3_MsgHandlle 2AA6                              l95 4272                              l88 4248  
                            l97 4266                    ?_display_num 0131                              _bv 00D7  
                            _cv 00F5                              _dv 00F3                              _ms 0069  
                            _ss 00E4             ___wmul@multiplicand 012A                     __CFG_BORV$0 000000  
          __end_of_check_acting 46E2                    __CFG_CP0$OFF 000000     _flag_do_reset_in_drops_mode 00E5  
                  __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000  
                   __CFG_OSC$HS 000000                             l102 4290                             l300 3372  
                           l303 33D2                             l401 1348                             l412 142A  
                           l316 3432                             l308 33DE                             l510 3082  
                           l182 43EE                             l415 140C                             l319 344E  
                           l432 14E0                             l513 308C                             l441 1482  
                           l427 1444                             l363 123C                             l700 4C9E  
                           l444 148C                             l380 12B4                             l540 2434  
                           l517 30A6                             l621 46D6                             l533 242E  
                           l358 1220                             l543 243E                             l480 2F82  
                           l393 130E                             l466 2F20                             l298 330A  
                           l483 2F8C                             l555 24B8                             l547 2458  
                           l396 1318                             l580 2580                             l901 0EEE  
                           l493 300A                             l573 255C                             l494 3004  
                           l566 2556                             l558 24C2                             l487 2FA6  
                           l735 4708                             l591 25CC                             l567 2550  
                           l576 2566                             l594 25D6                             l659 4AF8  
                           l675 4D18                             l676 4CFE                             l917 1034  
                           l598 25F0                             l698 4C94                             l938 4C5E  
                 ?_display_drop 0131                             _GIE 007F97                    __CFG_CPB$OFF 000000  
                 ?_display_logo 0051                    __CFG_CPD$OFF 000000                             _ISR 0008  
                           _PSA 007EAB                             _c_m 75AC                             _css 00E3  
                           _tva 00CD                             _tvb 00CB                             _tss 7608  
                           _xtt 00CF                             wreg 000FE8                   ??_i2c_WaitAck 00FD  
                  __CFG_LVP$OFF 000000                 __end_of_AD_init 4E56                 __end_of_LCD_Off 4EBC  
                          ?_ISR 0051         __end_of_display_n_blank 09E6                    __CFG_WDT$OFF 000000  
                          l1134 0202                            l1217 1776                            l1171 04A0  
                          l1556 20C0                            l1921 1C88          __end_of_HG_device_init 4D8C  
                          l1880 4436                            l1945 1E56                            l1937 1D86  
                          l1929 1D06                            l1883 443E                            l1981 47CC  
                          l1896 4486                  ?_display_cmode 0131                  _check_ui_blink 4E56  
                          _T0IE 007F95                            _T0IF 007F92                            _T0CS 007EAD  
                ?_display_drops 0131                _menu4_MsgHandlle 263C                            _TMR0 000FD6  
                          _TMR1 000FCE            _initial_para_setting 49C0                            _flag 00E0  
                          _flip 004E                            _main 435C                            _page 00E1  
                          _menu 0001                            _buzz 4E12                            _rcnt 00E2  
                          fsr0h 000FEA                            fsr1h 000FE2                            indf0 000FEF  
                          fsr2h 000FDA                            fsr0l 000FE9                            fsr1l 000FE1  
                          fsr2l 000FD9                            _tv_s 0100                            btemp 006A  
                          _ttte 00DD                    ?_enter_sleep 0051                            prodh 000FF4  
                          prodl 000FF3                  ??_i2c_SendByte 00FD                            start 000E  
                 __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000                    ___param_bank 000000  
                         ??_ISR 005A             _test_mode_break_cnt 0114                 __end_of_n_100_m 7C77  
               __end_of_n_200_m 7C3E                 __end_of_n_300_m 7BCC                 __end_of_n_150_m 7C05  
               __end_of_n_250_m 7B93                _menu5_MsgHandlle 30E0                 __end_of_n_1P5_m 7E78  
               __end_of_n_2P5_m 7E3F                 __end_of_bat00_m 7FFE                 __end_of_bat20_m 7FD0  
               __end_of_bat40_m 7FA2                 __end_of_bat60_m 7F74                           l12001 0272  
                         l12003 0276                           l12101 043A                           l12021 02BE  
               __end_of_bat80_m 7F46                           l11223 4CA0                           l12111 046C  
                         l12007 0284                           l12015 029A                           l11217 4C8A  
                         l12121 04A6                           l12041 0322                           l12033 02E8  
                         l12009 028C                           l11315 4AC8                           l11331 4DE0  
                         l12211 161C                           l12203 15C8                           l11411 0FE0  
                         l11403 0FC6                           l12123 04AA                           l12115 0474  
                         l12107 045E                           l11253 4DA2                           l11325 4AEC  
                         l11317 4AD2                           l11341 0E0A                           l12133 04DC  
                         l12061 0388                           l12045 0330                           l12029 02E0  
                         l11501 21C6                           l12303 180A                           l12311 1820  
                         l12215 162A                           l11423 104C                           l11407 0FD8  
                         l11351 0E32                           l11343 0E12                           l11335 0DF2  
                         l12151 052A                           l12143 0510                           l13111 353A  
                         l13103 34F0                           l13025 4204                           l12305 1812  
                         l12233 169E                           l11441 10AC                           l11361 0E5A  
                         l11353 0E3A                           l11345 0E1A                           l11337 0DFA  
                         l12145 0514                           l12137 04E4                           l12129 04CE  
                         l12065 0390                           l12057 037A                           l12049 0338  
                         l12073 03D2                           l14001 0CB4                           l11513 2206  
                         l11601 384E                           l12251 16F4                           l12243 16DA  
                         l12219 1632                           l12227 1686                           l12171 1522  
                         l11427 1054                           l11363 0E62                           l11355 0E42  
                         l11347 0E22                           l11339 0E02                           l12091 041A  
                         l12083 03F2                           l14011 0CE0                           l11531 2252  
                         l11523 223C                           l11507 21E6                           l13131 35B2  
                         l13115 3548                           l12411 0594                           l12323 45DA  
                         l13045 4244                           l13029 4218                           l12245 16DE  
                         l12261 1722                           l12237 16A6                           l12165 150A  
                         l11461 1122                           l11445 10BE                           l11365 0E6A  
                         l11357 0E4A                           l11349 0E2A                           l13301 1EC2  
                         l12149 0522                           l12157 0538                           l14005 0CCC  
                         l14101 45B8                           l12333 45FE                           l11621 38AC  
                         l11605 385C                           l11711 3EF6                           l11703 3EB4  
                         l12255 16FE                           l12183 1560                           l12167 1512  
                         l12175 152C                           l11391 0F6A                           l11375 0F06  
                         l11359 0E52                           l13311 1EF8                           l12095 0428  
                         l12079 03EA                           l14015 0CF4                           l14023 0D1C  
                         l11543 22AA                           l11527 224A                           l11519 2226  
                         l13151 361A                           l13135 35BA                           l13127 35A4  
                         l13119 3550                           l12503 075C                           l12423 05DC  
                         l12407 058C                           l12319 45D0                           l13073 429C  
                         l12265 1730                           l12249 16EC                           l12169 151A  
                         l12177 1548                           l11465 1134                           l11449 10C6  
                         l11369 0E74                           l13305 1EDA                           l12097 0430  
                         l12089 0416                           l14033 0D44                           l14041 0D6C  
                         l15001 1E2C                           l12345 4854                           l12329 45F4  
                         l11641 390C                           l11633 38F6                           l11625 38B4  
                         l11617 389E                           l11609 3864                           l11731 3F4E  
                         l11715 3F04                           l11811 2DD8                           l12291 17BA  
                         l12275 177C                           l12283 17A4                           l12195 15B2  
                         l12187 1568                           l11395 0F72                           l11387 0F58  
                         l11379 0F0E                           l13403 20B6                           l13315 1F02  
                         l14051 0D9A                           l11563 231C                           l11555 2306  
                         l11547 22B2                           l11539 229C                           l13155 3622  
                         l13147 360C                           l12611 0984                           l12523 07CA  
                         l12443 063C                           l12435 0626                           l12427 05E4  
                         l12419 05CE                           l12451 067E                           l12515 07A8  
                         l12355 4878                           l12339 4650                           l11821 2DF8  
                         l11805 2DC4                           l12277 1780                           l12269 1738  
                         l11469 113C                           l13421 2124                           l13333 1F66  
                         l13325 1F36                           l13309 1EF2                           l13501 2AAC  
                         l14029 0D30                           l12461 069E                           l15021 1E6C  
                         l12365 48A8                           l12349 485E                           l11661 3964  
                         l11653 394E                           l11637 3904                           l11735 3F5C  
                         l11719 3F0C                           l12711 3B4E                           l11815 2DE6  
                         l11831 2E28                           l12287 17B2                           l12199 15C0  
                         l13407 20C4                           l13343 1F80                           l13335 1F6C  
                         l11903 0092                           l14047 0D82                           l14063 0DC8  
                         l14071 4552                           l15103 46DA                           l11583 2384  
                         l11575 236E                           l11559 2314                           l11495 21A6  
                         l13095 34DA                           l12615 0992                           l12551 0864  
                         l12543 0822                           l12535 080C                           l12527 07D2  
                         l12439 0634                           l15007 1E30                           l12359 4882  
                         l12377 4BFC                           l11753 3FAE                           l11825 2E04  
                         l11761 2CEC                           l12297 17F8                           l13433 215C  
                         l13353 1FC0                           l13329 1F50                           l13441 4A70  
                         l13513 2AD0                           l14049 0D94                           l13169 367E  
                         l12641 39E4                           l12633 39CE                           l12457 0696  
                         l14313 1A8C                           l14241 18EA                           l14225 188E  
                         l14233 18C4                           l15017 1E4A                           l11657 395C  
                         l12387 4C1E                           l12379 4C06                           l11739 3F64  
                         l11683 3E5C                           l12731 3BAC                           l12715 3B5C  
                         l11835 2E36                           l12299 17FC                           l13427 213E  
                         l13363 1FE8                           l11923 00F2                           l11915 00DC  
                         l11907 009A                           l11931 0134                           l13603 2C80  
                         l13531 2B40                           l13523 2B08                           l14059 0DC2  
                         l14083 458C                           l14075 457A                           l14067 4548  
                         l11579 237C                           l13099 34E8                           l15123 483A  
                         l12707 3B2E                           l12619 099A                           l12555 0872  
                         l12539 081A                           l12483 06FC                           l12475 06E6  
                         l14323 1AB0                           l14307 1A60                           l14315 1A92  
                         l14251 1928                           l14219 186A                           l11675 39AE  
                         l12389 4C24                           l12821 3D76                           l12813 3D34  
                         l12805 3D1E                           l11853 2E82                           l11781 2D44  
                         l11773 2D2E                           l11765 2CF4                           l11757 2CDE  
                         l13381 204C                           l13373 201C                           l13357 1FD8  
                         l13349 1FA8                           l13437 2162                           l13461 4AA2  
                         l13453 4A8C                           l11941 0154                           l13541 2B5C  
                         l13533 2B46                           l13509 2AC4                           l14093 45AA  
                         l11597 23E0                           l12653 3A2C                           l12637 39DC  
                         l12573 08D4                           l14341 1B20                           l14325 1AC4  
                         l14309 1A74                           l14229 18A8                           l14421 449C  
                         l11695 3E9E                           l11687 3E64                           l11679 3E4E  
                         l12751 3C0C                           l12743 3BF6                           l12735 3BB4  
                         l12727 3B9E                           l12719 3B64                           l11863 2EA2  
                         l11847 2E6E                           l11839 2E3E                           l13383 2052  
                         l13359 1FDE                           l13295 1E9A                           l13287 1E84  
                         l13471 4A1E                           l11919 00EA                           l13615 2CB2  
                         l13527 2B24                           l13631 265A                           l13623 2642  
                         l14079 4580                           l12591 0924                           l12559 087A  
                         l12567 08BC                           l12495 0746                           l12479 06F4  
                         l14335 1AF2                           l14263 196A                           l14247 190E  
                         l14255 1944                           l12841 3DCE                           l12825 3D84  
                         l12809 3D2C                           l11857 2E90                           l11793 2D94  
                         l11777 2D3C                           l13377 2036                           l13449 4A86  
                         l11953 018A                           l11937 014C                           l13545 2B68  
                         l13713 27E6                           l14089 459C                           l15073 467E  
                         l12673 3A8C                           l12665 3A76                           l12657 3A34  
                         l12649 3A1E                           l12577 08DC                           l14337 1B06  
                         l14329 1ADE                           l14273 19A8                           l14185 4354  
                         l15161 43DC                           l15153 43C2                           l15145 43A6  
                         l11699 3EAC                           l12771 3C64                           l12763 3C4E  
                         l12747 3C04                           l11867 2EAE                           l11875 2ED2  
                         l13387 2064                           l13467 4AA8                           l13491 4A50  
                         l13483 4A3A                           l11955 0192                           l11947 0178  
                         l11891 004A                           l13563 2BD8                           l13555 2BA0  
                         l13619 2CB8                           l13635 2666                           l13803 31F6  
                         l15083 46A4                           l15059 47D0                           l12595 0932  
                         l12499 0754                           l14347 1B36                           l14291 1A0E  
                         l14531 11D2                           l14451 33AA                           l14427 32E2  
                         l15139 4394                           l12845 3DDC                           l12829 3D8C  
                         l11797 2D9C                           l11789 2D86                           l11981 020C  
                         l11973 01D6                           l11949 017C                           l11965 01C0  
      __end_of_display_frame_de 055C                           l13573 2BFC                           l13565 2BDE  
                         l13725 2822                           l13653 26D2                           l13645 269E  
                         l13741 2862                           l13813 322A                           l13901 0AC2  
                         l14701 2F66                           l15085 46AA                           l15069 4676  
                         l12693 3AE4                           l12685 3ACE                           l12669 3A84  
                         l14349 1B4A                           l14285 19EA                           l14269 198E  
                         l14277 19C4                           l14613 1370                           l14621 13F4  
                         l14533 11E4                           l15149 43B4                           l12863 3E2E  
                         l12767 3C5C                           l13399 20AA                           l13479 4A34  
                         l11991 023E                           l11959 019C                           l11887 0042  
                         l13591 2C52                           l13559 2BBC                           l13663 26EE  
                         l13655 26D8                           l13831 327A                           l13807 3212  
                         l13911 0AF4                           l15095 46C2                           l12599 093A  
                         l14295 1A28                           l14615 13C8                           l14607 132A  
                         l14543 1210                           l12871 369E                           l14455 33BE  
                         l14439 3362                           l14447 3396                           l15167 43F2  
                         l15175 4402                           l12849 3DE4                           l12793 3CDC  
                         l12785 3CAE                           l13497 4A56                           l11969 01CE  
                         l13569 2BF0                           l13737 285C                           l13681 274E  
                         l13649 26BA                           l13817 3236                           l13809 3218  
                         l13753 30FE                           l13745 30E6                           l13913 0B0A  
                         l13905 0ADE                           l14705 2F70                           l14721 2FBA  
                         l12689 3ADC                           l14641 145C                           l14633 1430  
                         l14537 11F2                           l12881 36BC                           l14385 4446  
                         l14801 2448                           l11995 0246                           l11979 0208  
                         l11987 0230                           l11899 0084                           l13691 277E  
                         l13667 26FA                           l13771 315E                           l13851 32BC  
                         l13931 0B4C                           l14731 2FE4                           l14299 1A44  
                         l14619 13E0                           l14563 127A                           l14539 1204  
                         l12875 36A8                           l14467 33FE                           l14811 249E  
                         l12797 3CE4                           l12789 3CCE                           l13589 2C4A  
                         l13685 2766                           l13677 2732                           l13829 3272  
                         l13757 310A                           l13941 0B78                           l13917 0B24  
                         l14741 301C                           l14717 2F96                           l14637 1458  
                         l14629 1426                           l14565 1292                           l14557 1254  
                         l14389 4462                           l13695 278A                           l13687 276C  
                         l13839 3296                           l13847 32B6                           l13775 317A  
                         l13767 3142                           l13951 0BA2                           l13927 0B40  
                         l13919 0B2A                           l13863 0A04                           l13855 09EC  
                         l14911 1BD2                           l14559 126C                           l14487 346E  
                         l13785 3196                           l13777 3180                           l13953 0BB8  
                         l13945 0B8E                           l13881 0A52                           l14761 3096  
                         l14921 1C04                           l14657 14D2                           l14649 1496  
                         l14569 129E                           l14585 12F0                           l14825 24CC  
                         l13963 0BE8                           l13939 0B66                           l13875 0A2A  
                         l13867 0A10                           l14915 1BEA                           l14907 1BB6  
                         l14579 12DC                           l14835 2530                           l13789 31A2  
                         l13965 0BFE                           l13981 0C60                           l13957 0BD4  
                         l13893 0A98                           l13877 0A3C                           l14685 2F0E  
                         l14925 1C10                           l13799 31DA                           l13991 0C84  
                         l13983 0C66                           l13975 0C30                           l13887 0A66  
                         l14943 1C7C                           l14847 2570                           l13977 0C46  
                         l13969 0C1A                           l13889 0A7C                           l14769 30D2  
                         l14689 2F32                           l14961 1CFC                           l14929 1C1C  
                         l14865 2620                           l14857 25E0                           l13987 0C78  
                         l13899 0AAC                           l14939 1C70                           l14947 1C9E  
                         l14867 2628                           l14795 241C                           l14893 4C74  
                         l14957 1CF0                           l14965 1D1C                           l13999 0CA0  
                         l14991 1DEE                           l14975 1D6E                           l14983 1D9C  
                         l14979 1D7A                           l14997 1E20                           l14999 1E24  
                ??_display_drop 0100                  ??_display_logo 0131                           ?_main 0051  
                         ?_buzz 0051             menu6_MsgHandlle@key 0138                           u13530 4B98  
                         _T0PS0 007EA8                           _T0PS1 007EA9                           _T0PS2 007EAA  
                         u13537 4B8E                           u13555 4736                           u19020 1CC4  
                         u15680 4230                           u19120 1DC2                           u19070 1D42  
                         u18900 1B8A                           u19470 4822                __end_of_KEY_Init 4DD6  
                         u18970 1C42                __end_of_KEY_Scan 42A0                           i2l741 48C8  
                         _SPBRG 000FAF                           _PORTC 000F82                   __CFG_WDTPS$64 000000  
                         _TXREG 000FAD             __end_of_i2c_CfgGpio 4E90                   __CFG_PWRT$OFF 000000  
               __end_of_blank_m 7608            __end_of_get_AD_vaule 4762                   __CFG_WRT0$OFF 000000  
                 __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000  
                __CFG_EBTR0$OFF 000000                  __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000  
                __CFG_EBTR2$OFF 000000            __end_of_clear_screen 48AE                  __CFG_EBTR3$OFF 000000  
               _check_ui_status 1B64                  _action_btn_cnt 00D1                   __CFG_WRTB$OFF 000000  
                         _n_0_m 7EB1                   __CFG_WRTC$OFF 000000                           _n_1_m 7E78  
                         _n_2_m 7DCD                           _n_3_m 7D94                           _n_4_m 7D5B  
                 __CFG_WRTD$OFF 000000                           _n_5_m 7CE9                           _n_6_m 7D22  
        __end_of_check_ui_blink 4E66                  __CFG_EBTRB$OFF 000000                           _delay 4BF0  
                         _hg_op 0080                 __end_of_drops_m 75AC                           _mbcnt 00C9  
                         _focus 004F                           _mem_m 7522                           _n_x_m 004B  
                         _old_c 00DE                           _tflag 00F8                           _tmcnt 011C  
    __end_of_display_frame_fghi 1844                 ?_HG_device_init 0051                  __CFG_BOREN$OFF 000000  
              _menu6_MsgHandlle 09E6                    display_bat@x 0131                    display_bat@y 0051  
                         pclath 000FFA                           tablat 000FF5           ?_initial_para_setting 0051  
              __end_of_BeepInit 4EB0                    display_mem@x 0131                    display_mem@y 0051  
           __end_of_i2c_WaitAck 4DB6                    display_num@x 0131                    display_num@y 0136  
                         status 000FD8                  ee_WriteBytes@m 012D                   i2c_SendByte@i 00FE  
             _check_device_idle 47D8                 __initialization 44A6                    __end_of_main 4410  
            ?_check_device_idle 0051                    __end_of_buzz 4E2E                __end_of_i2c_Stop 4E9C  
                 i2c_WaitAck@re 00FD        __end_of_menu0_MsgHandlle 217A                _menu7_MsgHandlle 000000  
           i2c_SendByte@_ucByte 00FD                 update_focus@key 00FE          __size_of_drops_routine 035E  
     display_blank_mode_pa@mode 0132             _get_SenseA_AD_vaule 48AE                          ??_main 0100  
     display_blank_mode_pa@temp 0134                          ??_buzz 00FF       display_blank_mode_pa@tori 0133  
           ??_check_device_idle 00FF                   __activetblptr 000002          display_frame_fghi@mode 0132  
                     ??_AD_init 00FD                       ??_LCD_Off 00FD          display_frame_fghi@temp 0137  
        display_frame_fghi@tori 0135                __end_of_bat100_m 7F18                 ??_display_cmode 0100  
               ?_check_ui_blink 0051                          ?_delay 00FD                 ??_display_drops 0100  
                        _ADCON1 000FC1              __size_of_i2c_Delay 0002                          _ADRESH 000FC4  
                        _ADRESL 000FC3         ??_display_blank_mode_pa 0100                          _T08BIT 007EAE  
              ?_display_n_blank 0131        __end_of_menu1_MsgHandlle 4ABC              __size_of_i2c_Start 0016  
                        _LCD_On 4EB0                          i2l1403 2A6A                          i2l1350 28F6  
                        i2l1344 28E4                          i2l1337 29BC                          i2l1338 28C2  
                        i2l1363 293A                          i2l1357 2920                          i2l1375 296E  
                        i2l1369 295C            ?_get_SenseA_AD_vaule 0051       __end_of_check_device_idle 484E  
                get_AD_vaule@hv 012E                  get_AD_vaule@lv 012F                  get_AD_vaule@rv 012C  
                get_AD_vaule@ts 012B            test_routine@cnt_push 0132                __end_of_delaynus 4DF4  
                _MotorDriveInit 4D2E                  __CFG_XINST$OFF 000000                      _Timer1Init 4E74  
              __end_of_hg_reset 34C4                          _n_10_m 7CB0                          _n_13_m 7C77  
   check_ui_status@cnt_ui_check 0041           __size_of_check_acting 008C            _flag_test_mode_break 00D9  
                        ___wmul 4CC6                          _cnt_ma 00C1                          _cnt_mb 00BD  
      __end_of_menu2_MsgHandlle 4A6A                          _drop_m 7550                     _i2c_CfgGpio 4E82  
                        delay@i 0128                          delay@j 012A                          delay@x 00FD  
                        clear_0 44E6                          clear_1 44FA                          clear_2 450C  
                        clear_3 4518                          clear_4 4524                          _msleep 00B9  
       __end_of_check_ui_status 1E7E                __end_of_logo_eme 791A                          _tv_cnt 00DF  
          __size_of_display_bat 0278            __size_of_display_mem 0180            __size_of_display_num 03BA  
            __size_of_TimerInit 001E                    __pdataCOMRAM 0068            __end_of_i2c_SendByte 4CC6  
                  __mediumconst 7392                          tblptrh 000FF7                          tblptrl 000FF6  
                 display_drop@x 0131                   display_drop@y 0051                          tblptru 000FF8  
                   _i2c_WaitAck 4D8C          ??_initial_para_setting 00FD        __end_of_menu3_MsgHandlle 2CD0  
         ??_get_SenseA_AD_vaule 0053                   _drops_routine 119A                      __accesstop 0080  
       __end_of__initialization 452A                    _check_acting 4656                 __CFG_PBADEN$OFF 000000  
          __end_of_display_drop 3E40          __end_of_MotorDriveInit 4D5E            __end_of_display_logo 4656  
                 ___rparam_used 000001               check_bat@bat_flip 0068                    ?_shut_device 0051  
                     ?_KEY_Init 0051                       ?_KEY_Scan 0051            __size_of_enter_sleep 0096  
                __pcstackCOMRAM 0051                   __end_of_n_0_m 7EEA                   __end_of_n_1_m 7EB1  
                 __end_of_n_2_m 7E06                   __end_of_n_3_m 7DCD                    __pidataBANK0 4E9C  
                 __end_of_n_4_m 7D94                   __end_of_n_5_m 7D22                   __end_of_n_6_m 7D5B  
                 __end_of_delay 4C3A               __end_of_i2c_Delay 4EC0              __size_of_check_bat 0046  
                 __end_of_mem_m 7550      __end_of_initial_ui_setting 3840        __end_of_menu4_MsgHandlle 287A  
             __end_of_i2c_Start 4E44           __size_of_get_AD_vaule 0080              __size_of_c_routine 01FC  
            __size_of_delay_nms 0052              __size_of_delay_pwm 0032           __size_of_clear_screen 0060  
                 update_focus@i 00FF                       ?_BeepInit 0051              display_bat_blank@x 0131  
            display_bat_blank@y 0051               _prev_state_phb_ma 00F0          __size_of_ee_WriteBytes 004C  
            _LCD_backlight_init 4EB4                         ??_delay 00FF                _flag_go_to_sleep 00FB  
             _Initial_LY096BG30 4B0E                     ISR@tcnt_bat 00C7                      __pbssBANK0 0080  
                    __pbssBANK1 0100                      __pbssBANK2 0200                      __pbssBANK3 0300  
                ?_drops_routine 0051                         ?_LCD_On 0051        __end_of_menu5_MsgHandlle 32D4  
                     ?_i2c_Stop 0051              ?_Initial_LY096BG30 0051           display_bat_blank@mode 0132  
         display_bat_blank@temp 0136           display_bat_blank@tori 0135                   ?_HG_interface 0051  
           ?_LCD_backlight_init 0051      __size_of_check_device_idle 0076                 ?_MotorDriveInit 0051  
             __end_of_TimerInit 4E12              __size_of_init_menu 010E                     setYX_LCD@px 00FF  
                   setYX_LCD@py 0130                      ??_KEY_Init 00FD             ??_Initial_LY096BG30 00FF  
                    ??_KEY_Scan 00FF                     ?_Timer1Init 0051                    _get_AD_vaule 46E2  
                       ISR@tcnt 00DC                    _clear_screen 484E              __size_of_setYX_LCD 005A  
                       ?___wmul 0128                      _blink_mode 1844        __end_of_menu6_MsgHandlle 0DE0  
                    _flag_blink 0050            ??_LCD_backlight_init 00FD                ?_check_ui_status 0051  
             ?_display_frame_de 0131                      ??_BeepInit 00FD              __size_of_uart_init 000E  
                       i2l11003 28C6                         i2l11101 2A32                         i2l11111 2A52  
                       i2l11023 2902                         i2l11041 2946                         i2l11017 28EC  
                       i2l11115 2A5C                         i2l11107 2A44                         i2l11019 28FA  
                       i2l11117 2A5E                         i2l11053 2964                         i2l11037 2928  
                       _AD_init 4E44                         i2l11071 29A4                         i2l11055 2972  
                       i2l11039 293E                         i2l11057 297A                         i2l11091 29FE  
                       i2l11075 29B6                         i2l11067 2994                         i2l11095 2A1E  
                       i2l11099 2A30                         _LCD_Off 4EB8           get_SenseA_AD_vaule@hv 0058  
         get_SenseA_AD_vaule@lv 0059           get_SenseA_AD_vaule@rv 0056                      _config_LCD 40CE  
            ??_display_frame_de 0100                ??_HG_device_init 00FF       __end_of_Initial_LY096BG30 4B5A  
             _check_wake_button 42A0                       ?_delaynus 00FD                       ?_hg_reset 0051  
            ?_check_wake_button 0051                 enter_sleep@temp 0139               __end_of_check_bat 4C80  
           menu1_MsgHandlle@key 00FD                      ??_i2c_Stop 00FD                  ??_HG_interface 0100  
               __size_of_LCD_On 0004               __end_of_c_routine 30E0               __end_of_delay_nms 4B0E  
             __end_of_delay_pwm 4D2E             ??_check_wake_button 0100                         __Hparam 0000  
                 _ee_WriteBytes 4B5A                      _needle_len 00F7                         _n_100_m 7C3E  
                       _n_200_m 7C05                         _n_300_m 7B93                         _n_150_m 7BCC  
                       _n_250_m 7B5A                         __Lparam 0000                         _n_1P5_m 7E3F  
                       _n_2P5_m 7E06              _display_frame_fghi 14F8                         _bat00_m 7FD0  
                       _bat20_m 7FA2                         _bat40_m 7F74                         _bat60_m 7F46  
                       _bat80_m 7F18                    _flag_wake_up 00FA               __end_of_n_blank_m 74EC  
               __size_of___wmul 0036                 __CFG_STVREN$OFF 000000               ?_menu0_MsgHandlle 0051  
                       _bat_x_m 0049                         _bat_vol 0047                         __pcinit 44A6  
         __size_of_i2c_SendByte 0046                         _blank_m 75DA                         __ramtop 0600  
           ?_display_frame_fghi 0131                         __ptext0 435C                         __ptext1 23F2  
                       __ptext2 49C0                         _flag_tv 00F9                         __ptext3 32D4  
                       __ptext4 4410                         __ptext5 42A0                         __ptext6 3690  
                       __ptext7 3840                         __ptext8 45CA                         __ptext9 484E  
                       _cnta_mb 00D5                         _cntb_mb 00D3                       _T0CONbits 000FD5  
            ??_menu0_MsgHandlle 0100                ??_check_ui_blink 0100                    __size_of_ISR 2A9E  
                     _T1CONbits 000FCD       __end_of_check_wake_button 435C                         _drops_m 757E  
             _check_shut_device 4762               __end_of_init_menu 40CE                      ??_delaynus 00FF  
            ?_check_shut_device 0051                 clear_screen@col 0131             __size_of_Timer1Init 000E  
               ??_drops_routine 012C                      ??_hg_reset 00FF               __end_of_setYX_LCD 49C0  
         __size_of_display_drop 0180           __size_of_display_logo 008C                  __pintcode_body 287A  
          end_of_initialization 452A              display_frame_abc@x 0131              display_frame_abc@y 0051  
                    delay_nms@i 00FD                      delay_nms@n 0128          display_blank_mode_pa@x 0131  
        display_blank_mode_pa@y 0051                      delay_pwm@n 012C  __size_of_display_blank_mode_pa 0180  
             ?_menu1_MsgHandlle 0051   __end_of_display_blank_mode_pa 3B40            ??_display_frame_fghi 0133  
           ??_check_shut_device 00FF                   __Lmediumconst 7392                         int_func 287A  
            ??_menu1_MsgHandlle 00FD                       i2u1329_40 2A0E                       i2u1284_45 48EC  
                ?_ee_WriteBytes 0128               __end_of_uart_init 4E74                  display_cmode@x 0131  
                display_cmode@y 0051             menu3_MsgHandlle@key 0138                    _i2c_SendByte 4C80  
                display_drops@x 0131                  display_drops@y 0051            __size_of_shut_device 004A  
                     _RCSTAbits 000FAB                         postdec1 000FE5                         postinc0 000FEE  
                       postinc2 000FDE                     ?_blink_mode 0051                    ?_i2c_CfgGpio 0051  
             ?_menu2_MsgHandlle 0051                       _PORTAbits 000F80       __end_of_check_shut_device 47D8  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _PORTDbits 000F83  
                    _ptna_frame 74EC              ??_menu2_MsgHandlle 00FD                    _display_drop 3CC0  
                    _ptnd_frame 7423                    _display_logo 45CA                      _ptne_frame 7393  
                    _ptnf_frame 7ACA                      _ptng_frame 7A3A                     ?_config_LCD 0051  
                    _ptnh_frame 79AA                      _ptni_frame 791A      __size_of_Initial_LY096BG30 004C  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95                       _TRISEbits 000F96                    ?_i2c_WaitAck 0051  
                 ?_test_routine 0051           __end_of_display_cmode 3FC0           __end_of_display_drops 3CC0  
                    _ptnx_frame 0045               ?_menu3_MsgHandlle 0051                  __end_of_LCD_On 4EB4  
                     _TXSTAbits 000FAC              ??_menu3_MsgHandlle 0100        __size_of_display_n_blank 048A  
                 ?_update_focus 0051               __size_of_KEY_Init 0020               __size_of_KEY_Scan 00C6  
                __end_of_n_10_m 7CE9                  __end_of_n_13_m 7CB0                   ??_display_bat 0133  
                 ??_display_mem 0100                   ??_display_num 0133             menu5_MsgHandlle@key 0138  
                __end_of___wmul 4CFC                   __pidataCOMRAM 4EBC               ?_menu4_MsgHandlle 0051  
          __end_of_HG_interface 4966                  __end_of_drop_m 757E                       _i2c_Delay 4EBE  
         display_frame_abc@mode 0132           display_frame_abc@temp 0134              ??_menu4_MsgHandlle 0100  
         display_frame_abc@tori 0133      __size_of_check_wake_button 00BC                       _i2c_Start 4E2E  
           start_initialization 44A6               __size_of_BeepInit 000A                     __end_of_ISR 2AA6  
   __end_of_get_SenseA_AD_vaule 490C                     __end_of_c_m 75DA                  ??_test_routine 0130  
                   __end_of_tss 760A              _initial_ui_setting 3690             initial_ui_setting@i 0138  
              ??_MotorDriveInit 00FD                        ??_LCD_On 00FD             __size_of_blink_mode 0320  
             ?_menu5_MsgHandlle 0051   __size_of_initial_para_setting 0058                  _flag_inject_sa 00EA  
                _flag_inject_sb 00E9                 ??_ee_WriteBytes 00FF                   ??_enter_sleep 0100  
           ?_initial_ui_setting 0051               __size_of_i2c_Stop 000C              ??_menu5_MsgHandlle 0100  
                  ??_Timer1Init 00FD                  ??_update_focus 00FD             __size_of_config_LCD 010C  
                     _TimerInit 4DF4                        ??___wmul 00FD                     __pdataBANK0 00F3  
              __CFG_LPT1OSC$OFF 000000               ?_menu6_MsgHandlle 0051      __size_of_check_shut_device 0076  
          ??_initial_ui_setting 0100                      ?_i2c_Delay 0051              ??_menu6_MsgHandlle 0100  
                      ?_AD_init 0051                        ?_LCD_Off 0051                      ?_i2c_Start 0051  
           __end_of_display_bat 23F2             __end_of_display_mem 39C0             __end_of_display_num 119A  
                   __pbssCOMRAM 0001         ee_WriteBytes@_pWriteBuf 0128                   __pcstackBANK0 00FD  
                 __pcstackBANK1 0128              __end_of_Timer1Init 4E82               __size_of_delaynus 001E  
             __size_of_hg_reset 01F0       __size_of_display_frame_de 054A                       _check_bat 4C3A  
       ee_WriteBytes@_usAddress 012A               _display_bat_blank 34C4                       _c_routine 2EE4  
                     _delay_nms 4ABC                       _delay_pwm 4CFC               __CFG_CCP2MX$PORTC 000000  
            ?_display_bat_blank 0131                       __pintcode 0008                      ?_TimerInit 0051  
                 __pmediumconst 7392             __end_of_enter_sleep 44A6                       _flag_push 00E8  
             ??_display_n_blank 0100              _flag_action_button 00E6                       _cnt_mb_sa 0124  
                     _cnt_mb_sb 0120                       _n_blank_m 74B3             ??_display_bat_blank 0133  
   __size_of_LCD_backlight_init 0004            __size_of_i2c_CfgGpio 000E               display_cmode@mode 0132  
             display_cmode@temp 0134               display_cmode@tori 0133                     _flag_action 00E7  
                   _flag_inject 00EB               _display_frame_abc 2CD0                _cur_state_phb_ma 00F1  
                   _flag_mreset 00FC        __size_of_check_ui_status 031A                  __size_of_delay 004A  
                     _init_menu 3FC0              ?_display_frame_abc 0131            __size_of_i2c_WaitAck 002A  
     __size_of_menu0_MsgHandlle 02FC                  ___wmul@product 00FD                       _setYX_LCD 4966  
     __end_of_display_bat_blank 3690                        _LATAbits 000F89                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATEbits 000F8D               display_frame_de@x 0131  
             display_frame_de@y 0134                      ?_check_bat 0051             ??_display_frame_abc 0100  
                     delaynus@n 00FD                        _KEY_Init 4DB6                      ?_c_routine 0051  
                      _KEY_Scan 41DA                      ?_delay_nms 0128                        _PIR1bits 000F9E  
                    ?_delay_pwm 012C           __size_of_HG_interface 005A            __end_of_test_routine 263C  
                     _uart_init 4E66               display_drops@mode 0132                       _prev_edge 00EE  
             display_drops@temp 0134               display_drops@tori 0133                    ??_blink_mode 0100  
     __size_of_menu1_MsgHandlle 0052                     _display_bat 217A                       _test_mode 00F2  
                   _display_mem 3840                     _display_num 0DE0                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0                     ??_i2c_Delay 00FD               ___wmul@multiplier 0128  
                      _BeepInit 4EA6             ISR@tcnt_overload_ma 00C5       __end_of_display_frame_abc 2EE4  
                   ??_i2c_Start 00FD                    ??_config_LCD 00FF                __size_of_AD_init 0012  
              __size_of_LCD_Off 0004            __end_of_update_focus 45CA                       _work_mode 004D  
                    ?_init_menu 0051                       _write_buf 0200                     _INTCON2bits 000FF1  
                   _INTCON3bits 000FF0                       copy_data0 44BA       __size_of_menu2_MsgHandlle 0052  
         __end_of_drops_routine 14F8            display_frame_de@mode 0132            display_frame_de@temp 0135  
                      _i2c_Stop 4E90            display_frame_de@tori 0133                   ?_check_acting 0051  
            __end_of_blink_mode 1B64                    _HG_interface 490C     __size_of_display_frame_fghi 034C  
                    ?_setYX_LCD 00FF         __size_of_HG_device_init 002E                   ??_shut_device 00FF  
                   _enter_sleep 4410           _display_blank_mode_pa 39C0           drops_routine@cnt_push 012E  
                      __Hrparam 0000                        __Lrparam 0000              _flag_mreset_hit_lp 00EC  
                      _bat100_m 7EEA              __end_of_config_LCD 41DA                     ??_TimerInit 00FD  
                    ?_uart_init 0051       __size_of_menu3_MsgHandlle 022A                   _flag_power_up 00EF  
                HG_interface@kv 0139                        _delaynus 4DD6             menu0_MsgHandlle@key 0138  
                      __ptext10 40CE                        __ptext11 4EB0                        __ptext20 4BA6  
                      __ptext12 119A                        __ptext21 4C3A                        __ptext13 1B64  
                      __ptext30 4538                        __ptext22 34C4                        __ptext14 4E56  
                      __ptext31 09E6                        __ptext23 217A                        __ptext15 1844  
                      __ptext40 14F8                        __ptext32 30E0                        __ptext24 46E2  
                      __ptext16 055C                        __ptext41 2CD0                        __ptext33 263C  
                      __ptext25 4656                        __ptext17 39C0                        __ptext50 4D5E  
                      __ptext42 3B40                        __ptext34 2AA6                        __ptext26 2EE4  
                      __ptext18 4762                        __ptext51 4E66                        __ptext43 3CC0  
                      __ptext35 0012                        __ptext27 4CFC                        __ptext19 47D8  
                      __ptext60 4E82                        __ptext52 3FC0                        __ptext44 3E40  
                      __ptext36 4A18                        __ptext28 4CC6                        __ptext61 4B5A  
                      __ptext53 4DF4                        __ptext45 4966                        __ptext37 4A6A  
                      __ptext29 490C                        __ptext62 4D8C                        __ptext54 4E74  
                      __ptext46 41DA                        __ptext38 1E7E                        __ptext71 48AE  
                      __ptext63 4E90                        __ptext55 4D2E                        __ptext47 4DD6  
                      __ptext39 0DE0                        __ptext72 0000                        __ptext64 4E2E  
                      __ptext56 4EB4                        __ptext48 4E12                        __ptext65 4C80  
                      __ptext57 4EB8                        __ptext49 4ABC                        __ptext66 4EBE  
                      __ptext58 4DB6                        __ptext67 4BF0                        __ptext59 4B0E  
                      __ptext68 4EA6                        __ptext69 4E44                        _hg_reset 32D4  
     __size_of_menu4_MsgHandlle 023E                  ??_check_acting 00FF         __size_of_check_ui_blink 0010  
                      _cur_edge 00ED             display_n_blank@mode 0132                _display_frame_de 0012  
           display_n_blank@temp 0135             display_n_blank@tori 0134                   __size_of_main 00B4  
    __size_of_display_bat_blank 01CC                   __size_of_buzz 001C                        _read_buf 0300  
                   ??_check_bat 0100               ??_check_ui_status 0100                display_n_blank@x 0131  
              display_n_blank@y 0133                        _logo_eme 760A                display_drop@mode 0132  
                   ??_c_routine 00FF                   ?_get_AD_vaule 00FD                display_drop@temp 0134  
              display_drop@tori 0133                     ??_delay_nms 00FD                     ??_delay_pwm 00FF  
                 ?_clear_screen 0051                clear_screen@page 0132                        int$flags 006A  
           __end_of_shut_device 4BF0    __end_of_initial_para_setting 4A18       __size_of_menu5_MsgHandlle 01F4  
              display_logo@page 0134          __size_of_display_cmode 0180          __size_of_display_drops 0180  
    __size_of_display_frame_abc 0214                      _INTCONbits 000FF2             display_frame_fghi@x 0131  
           display_frame_fghi@y 0136                 display_bat@mode 0132                 display_bat@temp 0136  
               display_bat@tori 0135                     ??_init_menu 00FD                _menu0_MsgHandlle 1E7E  
                      intlevel2 0000       __size_of_menu6_MsgHandlle 03FA          ?_display_blank_mode_pa 0131  
  __size_of_get_SenseA_AD_vaule 005E                     ??_setYX_LCD 0100             menu2_MsgHandlle@key 00FD  
                 _test_mode_cnt 0118                 _display_n_blank 055C               c_routine@cnt_push 0130  
         __size_of_test_routine 024A           __end_of_ee_WriteBytes 4BA6                  ??_get_AD_vaule 0128  
               display_mem@mode 0132              __end_of_ptna_frame 7522                 display_mem@temp 0134  
                ??_clear_screen 0100                 display_mem@tori 0133              __end_of_ptnd_frame 74B3  
            __end_of_ptne_frame 7423              __end_of_ptnf_frame 7B5A              __end_of_ptng_frame 7ACA  
            __end_of_ptnh_frame 7A3A              __end_of_ptni_frame 79AA                     ??_uart_init 00FD  
               display_logo@col 0133               ISR@cnt_action_btn 00DB                _menu1_MsgHandlle 4A6A  
               display_num@mode 0132                 display_num@temp 0137                 display_num@tori 0135  
         __size_of_update_focus 0092     __size_of_initial_ui_setting 01B0            ee_WriteBytes@_usSize 012B  
                KEY_Scan@tm_cnt 012C                _work_mode_choice 00DA                    _test_routine 23F2  
              _menu2_MsgHandlle 4A18                   _display_cmode 3E40                   _display_drops 3B40  
                _HG_device_init 4D5E             ee_WriteBytes@usAddr 012F                     _shut_device 4BA6  
                 ?_i2c_SendByte 0051         __size_of_MotorDriveInit 0030  
