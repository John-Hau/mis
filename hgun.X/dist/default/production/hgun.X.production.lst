

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Wed Dec 16 00:34:55 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    93                           	psect	text73,global,reloc=2,class=CODE,delta=1
    94                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    97                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    98  0000                     
    99                           ; Version 1.41
   100                           ; Generated 25/01/2017 GMT
   101                           ; 
   102                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   103                           ; All rights reserved.
   104                           ; 
   105                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   106                           ; 
   107                           ; Redistribution and use in source and binary forms, with or without modification, are
   108                           ; permitted provided that the following conditions are met:
   109                           ; 
   110                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   111                           ;        conditions and the following disclaimer.
   112                           ; 
   113                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   114                           ;        of conditions and the following disclaimer in the documentation and/or other
   115                           ;        materials provided with the distribution.
   116                           ; 
   117                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   118                           ;        software without specific prior written permission.
   119                           ; 
   120                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   121                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   122                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   123                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   124                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   125                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   126                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   127                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   128                           ; 
   129                           ; 
   130                           ; Code-generator required, PIC18F4520 Definitions
   131                           ; 
   132                           ; SFR Addresses
   133  0000                     
   134 ;; Function _menu7_MsgHandlle is unused but had its address taken
   135  0000                     
   136                           	psect	idataCOMRAM
   137  004EB4                     __pidataCOMRAM:
   138                           	opt stack 0
   139                           
   140                           ;initializer for check_bat@bat_flip
   141  004EB4  01                 	db	1
   142                           
   143                           ;initializer for _ms
   144  004EB5  66                 	db	102
   145                           
   146                           	psect	idataBANK0
   147  004E94                     __pidataBANK0:
   148                           	opt stack 0
   149                           
   150                           ;initializer for _dv
   151  004E94  000A               	dw	10
   152                           
   153                           ;initializer for _cv
   154  004E96  000A               	dw	10
   155                           
   156                           ;initializer for _needle_len
   157  004E98  04                 	db	4
   158                           
   159                           ;initializer for _tflag
   160  004E99  01                 	db	1
   161                           
   162                           ;initializer for _flag_tv
   163  004E9A  FF                 	db	255
   164                           
   165                           ;initializer for _flag_wake_up
   166  004E9B  01                 	db	1
   167                           
   168                           ;initializer for _flag_go_to_sleep
   169  004E9C  01                 	db	1
   170                           
   171                           ;initializer for _flag_mreset
   172  004E9D  01                 	db	1
   173                           
   174                           	psect	mediumconst
   175  007384                     __pmediumconst:
   176                           	opt stack 0
   177  007384  00                 	db	0
   178  007385                     _ptne_frame:
   179                           	opt stack 0
   180  007385  0F                 	db	15
   181  007386  10                 	db	16
   182  007387  20                 	db	32
   183  007388  20                 	db	32
   184  007389  20                 	db	32
   185  00738A  20                 	db	32
   186  00738B  20                 	db	32
   187  00738C  20                 	db	32
   188  00738D  20                 	db	32
   189  00738E  20                 	db	32
   190  00738F  20                 	db	32
   191  007390  20                 	db	32
   192  007391  20                 	db	32
   193  007392  20                 	db	32
   194  007393  20                 	db	32
   195  007394  20                 	db	32
   196  007395  20                 	db	32
   197  007396  20                 	db	32
   198  007397  20                 	db	32
   199  007398  20                 	db	32
   200  007399  20                 	db	32
   201  00739A  20                 	db	32
   202  00739B  20                 	db	32
   203  00739C  20                 	db	32
   204  00739D  20                 	db	32
   205  00739E  20                 	db	32
   206  00739F  20                 	db	32
   207  0073A0  20                 	db	32
   208  0073A1  20                 	db	32
   209  0073A2  20                 	db	32
   210  0073A3  20                 	db	32
   211  0073A4  20                 	db	32
   212  0073A5  20                 	db	32
   213  0073A6  20                 	db	32
   214  0073A7  20                 	db	32
   215  0073A8  20                 	db	32
   216  0073A9  20                 	db	32
   217  0073AA  20                 	db	32
   218  0073AB  20                 	db	32
   219  0073AC  20                 	db	32
   220  0073AD  20                 	db	32
   221  0073AE  20                 	db	32
   222  0073AF  2F                 	db	47
   223  0073B0  27                 	db	39
   224  0073B1  23                 	db	35
   225  0073B2  21                 	db	33
   226  0073B3  10                 	db	16
   227  0073B4  0F                 	db	15
   228  0073B5  FF                 	db	255
   229  0073B6  00                 	db	0
   230  0073B7  1F                 	db	31
   231  0073B8  08                 	db	8
   232  0073B9  04                 	db	4
   233  0073BA  08                 	db	8
   234  0073BB  1F                 	db	31
   235  0073BC  00                 	db	0
   236  0073BD  1F                 	db	31
   237  0073BE  08                 	db	8
   238  0073BF  04                 	db	4
   239  0073C0  08                 	db	8
   240  0073C1  1F                 	db	31
   241  0073C2  00                 	db	0
   242  0073C3  00                 	db	0
   243  0073C4  00                 	db	0
   244  0073C5  00                 	db	0
   245  0073C6  00                 	db	0
   246  0073C7  00                 	db	0
   247  0073C8  00                 	db	0
   248  0073C9  00                 	db	0
   249  0073CA  00                 	db	0
   250  0073CB  00                 	db	0
   251  0073CC  00                 	db	0
   252  0073CD  00                 	db	0
   253  0073CE  00                 	db	0
   254  0073CF  00                 	db	0
   255  0073D0  00                 	db	0
   256  0073D1  00                 	db	0
   257  0073D2  00                 	db	0
   258  0073D3  00                 	db	0
   259  0073D4  00                 	db	0
   260  0073D5  04                 	db	4
   261  0073D6  06                 	db	6
   262  0073D7  07                 	db	7
   263  0073D8  07                 	db	7
   264  0073D9  70                 	db	112
   265  0073DA  88                 	db	136
   266  0073DB  88                 	db	136
   267  0073DC  88                 	db	136
   268  0073DD  FF                 	db	255
   269  0073DE  00                 	db	0
   270  0073DF  00                 	db	0
   271  0073E0  00                 	db	0
   272  0073E1  00                 	db	0
   273  0073E2  00                 	db	0
   274  0073E3  00                 	db	0
   275  0073E4  FF                 	db	255
   276  0073E5  C0                 	db	192
   277  0073E6  20                 	db	32
   278  0073E7  10                 	db	16
   279  0073E8  10                 	db	16
   280  0073E9  10                 	db	16
   281  0073EA  10                 	db	16
   282  0073EB  10                 	db	16
   283  0073EC  10                 	db	16
   284  0073ED  10                 	db	16
   285  0073EE  10                 	db	16
   286  0073EF  10                 	db	16
   287  0073F0  10                 	db	16
   288  0073F1  10                 	db	16
   289  0073F2  10                 	db	16
   290  0073F3  10                 	db	16
   291  0073F4  10                 	db	16
   292  0073F5  10                 	db	16
   293  0073F6  10                 	db	16
   294  0073F7  10                 	db	16
   295  0073F8  10                 	db	16
   296  0073F9  10                 	db	16
   297  0073FA  10                 	db	16
   298  0073FB  10                 	db	16
   299  0073FC  10                 	db	16
   300  0073FD  10                 	db	16
   301  0073FE  10                 	db	16
   302  0073FF  10                 	db	16
   303  007400  10                 	db	16
   304  007401  10                 	db	16
   305  007402  10                 	db	16
   306  007403  10                 	db	16
   307  007404  10                 	db	16
   308  007405  10                 	db	16
   309  007406  10                 	db	16
   310  007407  10                 	db	16
   311  007408  90                 	db	144
   312  007409  10                 	db	16
   313  00740A  10                 	db	16
   314  00740B  10                 	db	16
   315  00740C  10                 	db	16
   316  00740D  D0                 	db	208
   317  00740E  10                 	db	16
   318  00740F  10                 	db	16
   319  007410  10                 	db	16
   320  007411  10                 	db	16
   321  007412  10                 	db	16
   322  007413  20                 	db	32
   323  007414  C0                 	db	192
   324  007415                     __end_of_ptne_frame:
   325                           	opt stack 0
   326  007415                     _ptnd_frame:
   327                           	opt stack 0
   328  007415  0F                 	db	15
   329  007416  10                 	db	16
   330  007417  20                 	db	32
   331  007418  20                 	db	32
   332  007419  20                 	db	32
   333  00741A  20                 	db	32
   334  00741B  20                 	db	32
   335  00741C  20                 	db	32
   336  00741D  20                 	db	32
   337  00741E  20                 	db	32
   338  00741F  20                 	db	32
   339  007420  20                 	db	32
   340  007421  20                 	db	32
   341  007422  20                 	db	32
   342  007423  20                 	db	32
   343  007424  20                 	db	32
   344  007425  20                 	db	32
   345  007426  20                 	db	32
   346  007427  20                 	db	32
   347  007428  20                 	db	32
   348  007429  20                 	db	32
   349  00742A  20                 	db	32
   350  00742B  20                 	db	32
   351  00742C  20                 	db	32
   352  00742D  20                 	db	32
   353  00742E  20                 	db	32
   354  00742F  20                 	db	32
   355  007430  20                 	db	32
   356  007431  20                 	db	32
   357  007432  20                 	db	32
   358  007433  20                 	db	32
   359  007434  20                 	db	32
   360  007435  20                 	db	32
   361  007436  20                 	db	32
   362  007437  20                 	db	32
   363  007438  20                 	db	32
   364  007439  20                 	db	32
   365  00743A  20                 	db	32
   366  00743B  20                 	db	32
   367  00743C  20                 	db	32
   368  00743D  21                 	db	33
   369  00743E  23                 	db	35
   370  00743F  2F                 	db	47
   371  007440  27                 	db	39
   372  007441  23                 	db	35
   373  007442  21                 	db	33
   374  007443  10                 	db	16
   375  007444  0F                 	db	15
   376  007445  FF                 	db	255
   377  007446  00                 	db	0
   378  007447  1F                 	db	31
   379  007448  08                 	db	8
   380  007449  04                 	db	4
   381  00744A  08                 	db	8
   382  00744B  1F                 	db	31
   383  00744C  00                 	db	0
   384  00744D  1F                 	db	31
   385  00744E  08                 	db	8
   386  00744F  04                 	db	4
   387  007450  08                 	db	8
   388  007451  1F                 	db	31
   389  007452  00                 	db	0
   390  007453  00                 	db	0
   391  007454  00                 	db	0
   392  007455  00                 	db	0
   393  007456  00                 	db	0
   394  007457  00                 	db	0
   395  007458  00                 	db	0
   396  007459  00                 	db	0
   397  00745A  00                 	db	0
   398  00745B  00                 	db	0
   399  00745C  00                 	db	0
   400  00745D  00                 	db	0
   401  00745E  00                 	db	0
   402  00745F  00                 	db	0
   403  007460  00                 	db	0
   404  007461  00                 	db	0
   405  007462  00                 	db	0
   406  007463  00                 	db	0
   407  007464  00                 	db	0
   408  007465  00                 	db	0
   409  007466  00                 	db	0
   410  007467  01                 	db	1
   411  007468  02                 	db	2
   412  007469  04                 	db	4
   413  00746A  08                 	db	8
   414  00746B  10                 	db	16
   415  00746C  E0                 	db	224
   416  00746D  E0                 	db	224
   417  00746E  E0                 	db	224
   418  00746F  C0                 	db	192
   419  007470  80                 	db	128
   420  007471  00                 	db	0
   421  007472  00                 	db	0
   422  007473  00                 	db	0
   423  007474  FF                 	db	255
   424  007475  C0                 	db	192
   425  007476  20                 	db	32
   426  007477  10                 	db	16
   427  007478  10                 	db	16
   428  007479  10                 	db	16
   429  00747A  10                 	db	16
   430  00747B  10                 	db	16
   431  00747C  10                 	db	16
   432  00747D  10                 	db	16
   433  00747E  10                 	db	16
   434  00747F  10                 	db	16
   435  007480  10                 	db	16
   436  007481  10                 	db	16
   437  007482  10                 	db	16
   438  007483  10                 	db	16
   439  007484  10                 	db	16
   440  007485  10                 	db	16
   441  007486  10                 	db	16
   442  007487  10                 	db	16
   443  007488  10                 	db	16
   444  007489  10                 	db	16
   445  00748A  10                 	db	16
   446  00748B  10                 	db	16
   447  00748C  10                 	db	16
   448  00748D  10                 	db	16
   449  00748E  10                 	db	16
   450  00748F  10                 	db	16
   451  007490  10                 	db	16
   452  007491  10                 	db	16
   453  007492  10                 	db	16
   454  007493  10                 	db	16
   455  007494  10                 	db	16
   456  007495  10                 	db	16
   457  007496  10                 	db	16
   458  007497  10                 	db	16
   459  007498  10                 	db	16
   460  007499  10                 	db	16
   461  00749A  10                 	db	16
   462  00749B  10                 	db	16
   463  00749C  10                 	db	16
   464  00749D  10                 	db	16
   465  00749E  10                 	db	16
   466  00749F  10                 	db	16
   467  0074A0  10                 	db	16
   468  0074A1  10                 	db	16
   469  0074A2  10                 	db	16
   470  0074A3  20                 	db	32
   471  0074A4  C0                 	db	192
   472  0074A5                     __end_of_ptnd_frame:
   473                           	opt stack 0
   474  0074A5                     _n_blank_m:
   475                           	opt stack 0
   476  0074A5  20                 	db	32
   477  0074A6  20                 	db	32
   478  0074A7  20                 	db	32
   479  0074A8  20                 	db	32
   480  0074A9  20                 	db	32
   481  0074AA  20                 	db	32
   482  0074AB  20                 	db	32
   483  0074AC  20                 	db	32
   484  0074AD  20                 	db	32
   485  0074AE  20                 	db	32
   486  0074AF  20                 	db	32
   487  0074B0  20                 	db	32
   488  0074B1  20                 	db	32
   489  0074B2  20                 	db	32
   490  0074B3  20                 	db	32
   491  0074B4  20                 	db	32
   492  0074B5  20                 	db	32
   493  0074B6  20                 	db	32
   494  0074B7  20                 	db	32
   495  0074B8  00                 	db	0
   496  0074B9  00                 	db	0
   497  0074BA  00                 	db	0
   498  0074BB  00                 	db	0
   499  0074BC  00                 	db	0
   500  0074BD  00                 	db	0
   501  0074BE  00                 	db	0
   502  0074BF  00                 	db	0
   503  0074C0  00                 	db	0
   504  0074C1  00                 	db	0
   505  0074C2  00                 	db	0
   506  0074C3  00                 	db	0
   507  0074C4  00                 	db	0
   508  0074C5  00                 	db	0
   509  0074C6  00                 	db	0
   510  0074C7  00                 	db	0
   511  0074C8  00                 	db	0
   512  0074C9  00                 	db	0
   513  0074CA  00                 	db	0
   514  0074CB  10                 	db	16
   515  0074CC  10                 	db	16
   516  0074CD  10                 	db	16
   517  0074CE  10                 	db	16
   518  0074CF  10                 	db	16
   519  0074D0  10                 	db	16
   520  0074D1  10                 	db	16
   521  0074D2  10                 	db	16
   522  0074D3  10                 	db	16
   523  0074D4  10                 	db	16
   524  0074D5  10                 	db	16
   525  0074D6  10                 	db	16
   526  0074D7  10                 	db	16
   527  0074D8  10                 	db	16
   528  0074D9  10                 	db	16
   529  0074DA  10                 	db	16
   530  0074DB  10                 	db	16
   531  0074DC  10                 	db	16
   532  0074DD  10                 	db	16
   533  0074DE                     __end_of_n_blank_m:
   534                           	opt stack 0
   535  0074DE                     _ptna_frame:
   536                           	opt stack 0
   537  0074DE  3F                 	db	63
   538  0074DF  40                 	db	64
   539  0074E0  80                 	db	128
   540  0074E1  80                 	db	128
   541  0074E2  80                 	db	128
   542  0074E3  80                 	db	128
   543  0074E4  80                 	db	128
   544  0074E5  80                 	db	128
   545  0074E6  80                 	db	128
   546  0074E7  80                 	db	128
   547  0074E8  80                 	db	128
   548  0074E9  80                 	db	128
   549  0074EA  80                 	db	128
   550  0074EB  80                 	db	128
   551  0074EC  80                 	db	128
   552  0074ED  80                 	db	128
   553  0074EE  80                 	db	128
   554  0074EF  80                 	db	128
   555  0074F0  80                 	db	128
   556  0074F1  80                 	db	128
   557  0074F2  80                 	db	128
   558  0074F3  80                 	db	128
   559  0074F4  80                 	db	128
   560  0074F5  80                 	db	128
   561  0074F6  80                 	db	128
   562  0074F7  40                 	db	64
   563  0074F8  3F                 	db	63
   564  0074F9  FC                 	db	252
   565  0074FA  02                 	db	2
   566  0074FB  01                 	db	1
   567  0074FC  01                 	db	1
   568  0074FD  01                 	db	1
   569  0074FE  01                 	db	1
   570  0074FF  01                 	db	1
   571  007500  01                 	db	1
   572  007501  01                 	db	1
   573  007502  01                 	db	1
   574  007503  01                 	db	1
   575  007504  01                 	db	1
   576  007505  01                 	db	1
   577  007506  01                 	db	1
   578  007507  01                 	db	1
   579  007508  01                 	db	1
   580  007509  01                 	db	1
   581  00750A  01                 	db	1
   582  00750B  01                 	db	1
   583  00750C  01                 	db	1
   584  00750D  01                 	db	1
   585  00750E  01                 	db	1
   586  00750F  01                 	db	1
   587  007510  01                 	db	1
   588  007511  01                 	db	1
   589  007512  02                 	db	2
   590  007513  FC                 	db	252
   591  007514                     __end_of_ptna_frame:
   592                           	opt stack 0
   593  007514                     _mem_m:
   594                           	opt stack 0
   595  007514  9F                 	db	159
   596  007515  9F                 	db	159
   597  007516  90                 	db	144
   598  007517  9F                 	db	159
   599  007518  9F                 	db	159
   600  007519  90                 	db	144
   601  00751A  9F                 	db	159
   602  00751B  9F                 	db	159
   603  00751C  80                 	db	128
   604  00751D  9D                 	db	157
   605  00751E  95                 	db	149
   606  00751F  95                 	db	149
   607  007520  9F                 	db	159
   608  007521  8E                 	db	142
   609  007522  80                 	db	128
   610  007523  BF                 	db	191
   611  007524  BF                 	db	191
   612  007525  90                 	db	144
   613  007526  88                 	db	136
   614  007527  90                 	db	144
   615  007528  BF                 	db	191
   616  007529  BF                 	db	191
   617  00752A  80                 	db	128
   618  00752B  01                 	db	1
   619  00752C  01                 	db	1
   620  00752D  01                 	db	1
   621  00752E  01                 	db	1
   622  00752F  01                 	db	1
   623  007530  51                 	db	81
   624  007531  7D                 	db	125
   625  007532  3D                 	db	61
   626  007533  01                 	db	1
   627  007534  51                 	db	81
   628  007535  7D                 	db	125
   629  007536  3D                 	db	61
   630  007537  01                 	db	1
   631  007538  39                 	db	57
   632  007539  7D                 	db	125
   633  00753A  45                 	db	69
   634  00753B  7D                 	db	125
   635  00753C  39                 	db	57
   636  00753D  01                 	db	1
   637  00753E  01                 	db	1
   638  00753F  01                 	db	1
   639  007540  01                 	db	1
   640  007541  01                 	db	1
   641  007542                     __end_of_mem_m:
   642                           	opt stack 0
   643  007542                     _drop_m:
   644                           	opt stack 0
   645  007542  80                 	db	128
   646  007543  80                 	db	128
   647  007544  80                 	db	128
   648  007545  80                 	db	128
   649  007546  80                 	db	128
   650  007547  80                 	db	128
   651  007548  80                 	db	128
   652  007549  81                 	db	129
   653  00754A  83                 	db	131
   654  00754B  86                 	db	134
   655  00754C  9D                 	db	157
   656  00754D  BD                 	db	189
   657  00754E  9D                 	db	157
   658  00754F  86                 	db	134
   659  007550  83                 	db	131
   660  007551  81                 	db	129
   661  007552  80                 	db	128
   662  007553  80                 	db	128
   663  007554  80                 	db	128
   664  007555  80                 	db	128
   665  007556  80                 	db	128
   666  007557  80                 	db	128
   667  007558  80                 	db	128
   668  007559  01                 	db	1
   669  00755A  01                 	db	1
   670  00755B  01                 	db	1
   671  00755C  01                 	db	1
   672  00755D  01                 	db	1
   673  00755E  01                 	db	1
   674  00755F  01                 	db	1
   675  007560  F1                 	db	241
   676  007561  F9                 	db	249
   677  007562  CD                 	db	205
   678  007563  B5                 	db	181
   679  007564  B5                 	db	181
   680  007565  B5                 	db	181
   681  007566  6D                 	db	109
   682  007567  F9                 	db	249
   683  007568  F1                 	db	241
   684  007569  01                 	db	1
   685  00756A  01                 	db	1
   686  00756B  01                 	db	1
   687  00756C  01                 	db	1
   688  00756D  01                 	db	1
   689  00756E  01                 	db	1
   690  00756F  01                 	db	1
   691  007570                     __end_of_drop_m:
   692                           	opt stack 0
   693  007570                     _drops_m:
   694                           	opt stack 0
   695  007570  80                 	db	128
   696  007571  83                 	db	131
   697  007572  8F                 	db	143
   698  007573  BF                 	db	191
   699  007574  8F                 	db	143
   700  007575  83                 	db	131
   701  007576  80                 	db	128
   702  007577  80                 	db	128
   703  007578  80                 	db	128
   704  007579  83                 	db	131
   705  00757A  8F                 	db	143
   706  00757B  BF                 	db	191
   707  00757C  8F                 	db	143
   708  00757D  83                 	db	131
   709  00757E  80                 	db	128
   710  00757F  80                 	db	128
   711  007580  80                 	db	128
   712  007581  83                 	db	131
   713  007582  8F                 	db	143
   714  007583  BF                 	db	191
   715  007584  8F                 	db	143
   716  007585  83                 	db	131
   717  007586  80                 	db	128
   718  007587  F1                 	db	241
   719  007588  F9                 	db	249
   720  007589  FD                 	db	253
   721  00758A  FD                 	db	253
   722  00758B  FD                 	db	253
   723  00758C  F9                 	db	249
   724  00758D  F1                 	db	241
   725  00758E  01                 	db	1
   726  00758F  F1                 	db	241
   727  007590  F9                 	db	249
   728  007591  FD                 	db	253
   729  007592  FD                 	db	253
   730  007593  FD                 	db	253
   731  007594  F9                 	db	249
   732  007595  F1                 	db	241
   733  007596  01                 	db	1
   734  007597  F1                 	db	241
   735  007598  F9                 	db	249
   736  007599  FD                 	db	253
   737  00759A  FD                 	db	253
   738  00759B  FD                 	db	253
   739  00759C  F9                 	db	249
   740  00759D  F1                 	db	241
   741  00759E                     __end_of_drops_m:
   742                           	opt stack 0
   743  00759E                     _c_m:
   744                           	opt stack 0
   745  00759E  80                 	db	128
   746  00759F  80                 	db	128
   747  0075A0  80                 	db	128
   748  0075A1  80                 	db	128
   749  0075A2  80                 	db	128
   750  0075A3  80                 	db	128
   751  0075A4  80                 	db	128
   752  0075A5  80                 	db	128
   753  0075A6  80                 	db	128
   754  0075A7  98                 	db	152
   755  0075A8  B8                 	db	184
   756  0075A9  B0                 	db	176
   757  0075AA  B0                 	db	176
   758  0075AB  B0                 	db	176
   759  0075AC  B8                 	db	184
   760  0075AD  9F                 	db	159
   761  0075AE  8F                 	db	143
   762  0075AF  80                 	db	128
   763  0075B0  80                 	db	128
   764  0075B1  80                 	db	128
   765  0075B2  80                 	db	128
   766  0075B3  80                 	db	128
   767  0075B4  80                 	db	128
   768  0075B5  01                 	db	1
   769  0075B6  01                 	db	1
   770  0075B7  01                 	db	1
   771  0075B8  01                 	db	1
   772  0075B9  01                 	db	1
   773  0075BA  01                 	db	1
   774  0075BB  01                 	db	1
   775  0075BC  01                 	db	1
   776  0075BD  01                 	db	1
   777  0075BE  19                 	db	25
   778  0075BF  1D                 	db	29
   779  0075C0  0D                 	db	13
   780  0075C1  0D                 	db	13
   781  0075C2  0D                 	db	13
   782  0075C3  1D                 	db	29
   783  0075C4  F9                 	db	249
   784  0075C5  F1                 	db	241
   785  0075C6  01                 	db	1
   786  0075C7  01                 	db	1
   787  0075C8  01                 	db	1
   788  0075C9  01                 	db	1
   789  0075CA  01                 	db	1
   790  0075CB  01                 	db	1
   791  0075CC                     __end_of_c_m:
   792                           	opt stack 0
   793  0075CC                     _blank_m:
   794                           	opt stack 0
   795  0075CC  80                 	db	128
   796  0075CD  80                 	db	128
   797  0075CE  80                 	db	128
   798  0075CF  80                 	db	128
   799  0075D0  80                 	db	128
   800  0075D1  80                 	db	128
   801  0075D2  80                 	db	128
   802  0075D3  80                 	db	128
   803  0075D4  80                 	db	128
   804  0075D5  80                 	db	128
   805  0075D6  80                 	db	128
   806  0075D7  80                 	db	128
   807  0075D8  80                 	db	128
   808  0075D9  80                 	db	128
   809  0075DA  80                 	db	128
   810  0075DB  80                 	db	128
   811  0075DC  80                 	db	128
   812  0075DD  80                 	db	128
   813  0075DE  80                 	db	128
   814  0075DF  80                 	db	128
   815  0075E0  80                 	db	128
   816  0075E1  80                 	db	128
   817  0075E2  80                 	db	128
   818  0075E3  01                 	db	1
   819  0075E4  01                 	db	1
   820  0075E5  01                 	db	1
   821  0075E6  01                 	db	1
   822  0075E7  01                 	db	1
   823  0075E8  01                 	db	1
   824  0075E9  01                 	db	1
   825  0075EA  01                 	db	1
   826  0075EB  01                 	db	1
   827  0075EC  01                 	db	1
   828  0075ED  01                 	db	1
   829  0075EE  01                 	db	1
   830  0075EF  01                 	db	1
   831  0075F0  01                 	db	1
   832  0075F1  01                 	db	1
   833  0075F2  01                 	db	1
   834  0075F3  01                 	db	1
   835  0075F4  01                 	db	1
   836  0075F5  01                 	db	1
   837  0075F6  01                 	db	1
   838  0075F7  01                 	db	1
   839  0075F8  01                 	db	1
   840  0075F9  01                 	db	1
   841  0075FA                     __end_of_blank_m:
   842                           	opt stack 0
   843  0075FA                     _tss:
   844                           	opt stack 0
   845  0075FA  0096               	dw	150
   846  0075FC                     __end_of_tss:
   847                           	opt stack 0
   848  0075FC                     _logo_eme:
   849                           	opt stack 0
   850  0075FC  00                 	db	0
   851  0075FD  00                 	db	0
   852  0075FE  00                 	db	0
   853  0075FF  00                 	db	0
   854  007600  00                 	db	0
   855  007601  00                 	db	0
   856  007602  00                 	db	0
   857  007603  00                 	db	0
   858  007604  00                 	db	0
   859  007605  00                 	db	0
   860  007606  00                 	db	0
   861  007607  00                 	db	0
   862  007608  00                 	db	0
   863  007609  00                 	db	0
   864  00760A  00                 	db	0
   865  00760B  00                 	db	0
   866  00760C  00                 	db	0
   867  00760D  00                 	db	0
   868  00760E  00                 	db	0
   869  00760F  00                 	db	0
   870  007610  00                 	db	0
   871  007611  00                 	db	0
   872  007612  00                 	db	0
   873  007613  00                 	db	0
   874  007614  00                 	db	0
   875  007615  00                 	db	0
   876  007616  00                 	db	0
   877  007617  00                 	db	0
   878  007618  00                 	db	0
   879  007619  00                 	db	0
   880  00761A  00                 	db	0
   881  00761B  00                 	db	0
   882  00761C  00                 	db	0
   883  00761D  00                 	db	0
   884  00761E  00                 	db	0
   885  00761F  00                 	db	0
   886  007620  00                 	db	0
   887  007621  00                 	db	0
   888  007622  00                 	db	0
   889  007623  00                 	db	0
   890  007624  00                 	db	0
   891  007625  00                 	db	0
   892  007626  00                 	db	0
   893  007627  00                 	db	0
   894  007628  00                 	db	0
   895  007629  00                 	db	0
   896  00762A  00                 	db	0
   897  00762B  00                 	db	0
   898  00762C  00                 	db	0
   899  00762D  00                 	db	0
   900  00762E  00                 	db	0
   901  00762F  00                 	db	0
   902  007630  00                 	db	0
   903  007631  00                 	db	0
   904  007632  00                 	db	0
   905  007633  00                 	db	0
   906  007634  00                 	db	0
   907  007635  00                 	db	0
   908  007636  00                 	db	0
   909  007637  00                 	db	0
   910  007638  00                 	db	0
   911  007639  00                 	db	0
   912  00763A  00                 	db	0
   913  00763B  00                 	db	0
   914  00763C  00                 	db	0
   915  00763D  00                 	db	0
   916  00763E  00                 	db	0
   917  00763F  00                 	db	0
   918  007640  00                 	db	0
   919  007641  00                 	db	0
   920  007642  00                 	db	0
   921  007643  00                 	db	0
   922  007644  00                 	db	0
   923  007645  00                 	db	0
   924  007646  00                 	db	0
   925  007647  00                 	db	0
   926  007648  00                 	db	0
   927  007649  00                 	db	0
   928  00764A  00                 	db	0
   929  00764B  00                 	db	0
   930  00764C  00                 	db	0
   931  00764D  00                 	db	0
   932  00764E  00                 	db	0
   933  00764F  00                 	db	0
   934  007650  00                 	db	0
   935  007651  00                 	db	0
   936  007652  00                 	db	0
   937  007653  00                 	db	0
   938  007654  00                 	db	0
   939  007655  00                 	db	0
   940  007656  00                 	db	0
   941  007657  00                 	db	0
   942  007658  00                 	db	0
   943  007659  00                 	db	0
   944  00765A  00                 	db	0
   945  00765B  00                 	db	0
   946  00765C  00                 	db	0
   947  00765D  00                 	db	0
   948  00765E  00                 	db	0
   949  00765F  00                 	db	0
   950  007660  00                 	db	0
   951  007661  00                 	db	0
   952  007662  00                 	db	0
   953  007663  00                 	db	0
   954  007664  80                 	db	128
   955  007665  C0                 	db	192
   956  007666  E0                 	db	224
   957  007667  F0                 	db	240
   958  007668  F0                 	db	240
   959  007669  F0                 	db	240
   960  00766A  F0                 	db	240
   961  00766B  F0                 	db	240
   962  00766C  F0                 	db	240
   963  00766D  F0                 	db	240
   964  00766E  F0                 	db	240
   965  00766F  F0                 	db	240
   966  007670  F0                 	db	240
   967  007671  F0                 	db	240
   968  007672  F0                 	db	240
   969  007673  F0                 	db	240
   970  007674  F0                 	db	240
   971  007675  F0                 	db	240
   972  007676  F0                 	db	240
   973  007677  FF                 	db	255
   974  007678  FF                 	db	255
   975  007679  FF                 	db	255
   976  00767A  FF                 	db	255
   977  00767B  00                 	db	0
   978  00767C  00                 	db	0
   979  00767D  00                 	db	0
   980  00767E  FF                 	db	255
   981  00767F  FF                 	db	255
   982  007680  FF                 	db	255
   983  007681  7F                 	db	127
   984  007682  3F                 	db	63
   985  007683  0F                 	db	15
   986  007684  07                 	db	7
   987  007685  01                 	db	1
   988  007686  00                 	db	0
   989  007687  00                 	db	0
   990  007688  00                 	db	0
   991  007689  00                 	db	0
   992  00768A  00                 	db	0
   993  00768B  00                 	db	0
   994  00768C  00                 	db	0
   995  00768D  00                 	db	0
   996  00768E  00                 	db	0
   997  00768F  00                 	db	0
   998  007690  00                 	db	0
   999  007691  00                 	db	0
  1000  007692  00                 	db	0
  1001  007693  00                 	db	0
  1002  007694  00                 	db	0
  1003  007695  00                 	db	0
  1004  007696  00                 	db	0
  1005  007697  00                 	db	0
  1006  007698  01                 	db	1
  1007  007699  07                 	db	7
  1008  00769A  0F                 	db	15
  1009  00769B  3F                 	db	63
  1010  00769C  7F                 	db	127
  1011  00769D  FF                 	db	255
  1012  00769E  FF                 	db	255
  1013  00769F  FF                 	db	255
  1014  0076A0  00                 	db	0
  1015  0076A1  00                 	db	0
  1016  0076A2  00                 	db	0
  1017  0076A3  80                 	db	128
  1018  0076A4  C0                 	db	192
  1019  0076A5  E0                 	db	224
  1020  0076A6  F0                 	db	240
  1021  0076A7  F0                 	db	240
  1022  0076A8  F0                 	db	240
  1023  0076A9  F0                 	db	240
  1024  0076AA  F0                 	db	240
  1025  0076AB  F0                 	db	240
  1026  0076AC  F0                 	db	240
  1027  0076AD  F0                 	db	240
  1028  0076AE  F0                 	db	240
  1029  0076AF  F0                 	db	240
  1030  0076B0  F0                 	db	240
  1031  0076B1  F0                 	db	240
  1032  0076B2  F0                 	db	240
  1033  0076B3  F0                 	db	240
  1034  0076B4  F0                 	db	240
  1035  0076B5  F0                 	db	240
  1036  0076B6  FF                 	db	255
  1037  0076B7  FF                 	db	255
  1038  0076B8  FF                 	db	255
  1039  0076B9  FF                 	db	255
  1040  0076BA  00                 	db	0
  1041  0076BB  00                 	db	0
  1042  0076BC  00                 	db	0
  1043  0076BD  00                 	db	0
  1044  0076BE  00                 	db	0
  1045  0076BF  00                 	db	0
  1046  0076C0  00                 	db	0
  1047  0076C1  00                 	db	0
  1048  0076C2  00                 	db	0
  1049  0076C3  00                 	db	0
  1050  0076C4  00                 	db	0
  1051  0076C5  00                 	db	0
  1052  0076C6  00                 	db	0
  1053  0076C7  00                 	db	0
  1054  0076C8  00                 	db	0
  1055  0076C9  00                 	db	0
  1056  0076CA  00                 	db	0
  1057  0076CB  00                 	db	0
  1058  0076CC  00                 	db	0
  1059  0076CD  00                 	db	0
  1060  0076CE  00                 	db	0
  1061  0076CF  00                 	db	0
  1062  0076D0  00                 	db	0
  1063  0076D1  00                 	db	0
  1064  0076D2  00                 	db	0
  1065  0076D3  00                 	db	0
  1066  0076D4  00                 	db	0
  1067  0076D5  00                 	db	0
  1068  0076D6  00                 	db	0
  1069  0076D7  00                 	db	0
  1070  0076D8  00                 	db	0
  1071  0076D9  FF                 	db	255
  1072  0076DA  FF                 	db	255
  1073  0076DB  FF                 	db	255
  1074  0076DC  FF                 	db	255
  1075  0076DD  00                 	db	0
  1076  0076DE  00                 	db	0
  1077  0076DF  00                 	db	0
  1078  0076E0  FF                 	db	255
  1079  0076E1  FF                 	db	255
  1080  0076E2  FF                 	db	255
  1081  0076E3  FF                 	db	255
  1082  0076E4  E0                 	db	224
  1083  0076E5  E0                 	db	224
  1084  0076E6  F0                 	db	240
  1085  0076E7  F8                 	db	248
  1086  0076E8  FC                 	db	252
  1087  0076E9  3E                 	db	62
  1088  0076EA  1F                 	db	31
  1089  0076EB  07                 	db	7
  1090  0076EC  03                 	db	3
  1091  0076ED  01                 	db	1
  1092  0076EE  00                 	db	0
  1093  0076EF  00                 	db	0
  1094  0076F0  00                 	db	0
  1095  0076F1  00                 	db	0
  1096  0076F2  00                 	db	0
  1097  0076F3  00                 	db	0
  1098  0076F4  01                 	db	1
  1099  0076F5  03                 	db	3
  1100  0076F6  07                 	db	7
  1101  0076F7  0F                 	db	15
  1102  0076F8  3E                 	db	62
  1103  0076F9  FC                 	db	252
  1104  0076FA  F8                 	db	248
  1105  0076FB  F0                 	db	240
  1106  0076FC  E0                 	db	224
  1107  0076FD  E0                 	db	224
  1108  0076FE  FF                 	db	255
  1109  0076FF  FF                 	db	255
  1110  007700  FF                 	db	255
  1111  007701  FF                 	db	255
  1112  007702  00                 	db	0
  1113  007703  00                 	db	0
  1114  007704  00                 	db	0
  1115  007705  00                 	db	0
  1116  007706  00                 	db	0
  1117  007707  00                 	db	0
  1118  007708  00                 	db	0
  1119  007709  00                 	db	0
  1120  00770A  00                 	db	0
  1121  00770B  00                 	db	0
  1122  00770C  00                 	db	0
  1123  00770D  00                 	db	0
  1124  00770E  00                 	db	0
  1125  00770F  00                 	db	0
  1126  007710  00                 	db	0
  1127  007711  00                 	db	0
  1128  007712  00                 	db	0
  1129  007713  00                 	db	0
  1130  007714  00                 	db	0
  1131  007715  00                 	db	0
  1132  007716  00                 	db	0
  1133  007717  00                 	db	0
  1134  007718  FF                 	db	255
  1135  007719  FF                 	db	255
  1136  00771A  FF                 	db	255
  1137  00771B  FF                 	db	255
  1138  00771C  00                 	db	0
  1139  00771D  00                 	db	0
  1140  00771E  00                 	db	0
  1141  00771F  00                 	db	0
  1142  007720  00                 	db	0
  1143  007721  00                 	db	0
  1144  007722  00                 	db	0
  1145  007723  00                 	db	0
  1146  007724  00                 	db	0
  1147  007725  00                 	db	0
  1148  007726  00                 	db	0
  1149  007727  00                 	db	0
  1150  007728  00                 	db	0
  1151  007729  00                 	db	0
  1152  00772A  00                 	db	0
  1153  00772B  00                 	db	0
  1154  00772C  00                 	db	0
  1155  00772D  00                 	db	0
  1156  00772E  00                 	db	0
  1157  00772F  00                 	db	0
  1158  007730  00                 	db	0
  1159  007731  0F                 	db	15
  1160  007732  0F                 	db	15
  1161  007733  0F                 	db	15
  1162  007734  0F                 	db	15
  1163  007735  0F                 	db	15
  1164  007736  0F                 	db	15
  1165  007737  0F                 	db	15
  1166  007738  0F                 	db	15
  1167  007739  0F                 	db	15
  1168  00773A  0F                 	db	15
  1169  00773B  FF                 	db	255
  1170  00773C  FF                 	db	255
  1171  00773D  FF                 	db	255
  1172  00773E  FF                 	db	255
  1173  00773F  00                 	db	0
  1174  007740  00                 	db	0
  1175  007741  00                 	db	0
  1176  007742  FF                 	db	255
  1177  007743  FF                 	db	255
  1178  007744  FF                 	db	255
  1179  007745  FF                 	db	255
  1180  007746  00                 	db	0
  1181  007747  00                 	db	0
  1182  007748  00                 	db	0
  1183  007749  00                 	db	0
  1184  00774A  00                 	db	0
  1185  00774B  00                 	db	0
  1186  00774C  00                 	db	0
  1187  00774D  C0                 	db	192
  1188  00774E  E0                 	db	224
  1189  00774F  F0                 	db	240
  1190  007750  78                 	db	120
  1191  007751  3C                 	db	60
  1192  007752  0E                 	db	14
  1193  007753  3E                 	db	62
  1194  007754  7C                 	db	124
  1195  007755  F8                 	db	248
  1196  007756  F0                 	db	240
  1197  007757  E0                 	db	224
  1198  007758  C0                 	db	192
  1199  007759  00                 	db	0
  1200  00775A  00                 	db	0
  1201  00775B  00                 	db	0
  1202  00775C  00                 	db	0
  1203  00775D  00                 	db	0
  1204  00775E  00                 	db	0
  1205  00775F  00                 	db	0
  1206  007760  FF                 	db	255
  1207  007761  FF                 	db	255
  1208  007762  FF                 	db	255
  1209  007763  FF                 	db	255
  1210  007764  00                 	db	0
  1211  007765  00                 	db	0
  1212  007766  00                 	db	0
  1213  007767  00                 	db	0
  1214  007768  00                 	db	0
  1215  007769  00                 	db	0
  1216  00776A  00                 	db	0
  1217  00776B  00                 	db	0
  1218  00776C  00                 	db	0
  1219  00776D  00                 	db	0
  1220  00776E  00                 	db	0
  1221  00776F  00                 	db	0
  1222  007770  0F                 	db	15
  1223  007771  0F                 	db	15
  1224  007772  0F                 	db	15
  1225  007773  0F                 	db	15
  1226  007774  0F                 	db	15
  1227  007775  0F                 	db	15
  1228  007776  0F                 	db	15
  1229  007777  0F                 	db	15
  1230  007778  0F                 	db	15
  1231  007779  0F                 	db	15
  1232  00777A  FF                 	db	255
  1233  00777B  FF                 	db	255
  1234  00777C  FF                 	db	255
  1235  00777D  FF                 	db	255
  1236  00777E  00                 	db	0
  1237  00777F  00                 	db	0
  1238  007780  00                 	db	0
  1239  007781  00                 	db	0
  1240  007782  00                 	db	0
  1241  007783  00                 	db	0
  1242  007784  00                 	db	0
  1243  007785  00                 	db	0
  1244  007786  00                 	db	0
  1245  007787  00                 	db	0
  1246  007788  00                 	db	0
  1247  007789  00                 	db	0
  1248  00778A  00                 	db	0
  1249  00778B  00                 	db	0
  1250  00778C  00                 	db	0
  1251  00778D  00                 	db	0
  1252  00778E  00                 	db	0
  1253  00778F  00                 	db	0
  1254  007790  00                 	db	0
  1255  007791  00                 	db	0
  1256  007792  00                 	db	0
  1257  007793  80                 	db	128
  1258  007794  80                 	db	128
  1259  007795  80                 	db	128
  1260  007796  80                 	db	128
  1261  007797  80                 	db	128
  1262  007798  80                 	db	128
  1263  007799  80                 	db	128
  1264  00779A  80                 	db	128
  1265  00779B  80                 	db	128
  1266  00779C  80                 	db	128
  1267  00779D  FF                 	db	255
  1268  00779E  FF                 	db	255
  1269  00779F  FF                 	db	255
  1270  0077A0  FF                 	db	255
  1271  0077A1  00                 	db	0
  1272  0077A2  00                 	db	0
  1273  0077A3  00                 	db	0
  1274  0077A4  FF                 	db	255
  1275  0077A5  FF                 	db	255
  1276  0077A6  FF                 	db	255
  1277  0077A7  FF                 	db	255
  1278  0077A8  00                 	db	0
  1279  0077A9  00                 	db	0
  1280  0077AA  00                 	db	0
  1281  0077AB  00                 	db	0
  1282  0077AC  00                 	db	0
  1283  0077AD  00                 	db	0
  1284  0077AE  00                 	db	0
  1285  0077AF  00                 	db	0
  1286  0077B0  00                 	db	0
  1287  0077B1  00                 	db	0
  1288  0077B2  00                 	db	0
  1289  0077B3  00                 	db	0
  1290  0077B4  00                 	db	0
  1291  0077B5  00                 	db	0
  1292  0077B6  00                 	db	0
  1293  0077B7  00                 	db	0
  1294  0077B8  00                 	db	0
  1295  0077B9  00                 	db	0
  1296  0077BA  00                 	db	0
  1297  0077BB  00                 	db	0
  1298  0077BC  00                 	db	0
  1299  0077BD  00                 	db	0
  1300  0077BE  00                 	db	0
  1301  0077BF  00                 	db	0
  1302  0077C0  00                 	db	0
  1303  0077C1  00                 	db	0
  1304  0077C2  FF                 	db	255
  1305  0077C3  FF                 	db	255
  1306  0077C4  FF                 	db	255
  1307  0077C5  FF                 	db	255
  1308  0077C6  00                 	db	0
  1309  0077C7  00                 	db	0
  1310  0077C8  00                 	db	0
  1311  0077C9  00                 	db	0
  1312  0077CA  00                 	db	0
  1313  0077CB  00                 	db	0
  1314  0077CC  00                 	db	0
  1315  0077CD  00                 	db	0
  1316  0077CE  00                 	db	0
  1317  0077CF  00                 	db	0
  1318  0077D0  00                 	db	0
  1319  0077D1  00                 	db	0
  1320  0077D2  00                 	db	0
  1321  0077D3  00                 	db	0
  1322  0077D4  00                 	db	0
  1323  0077D5  00                 	db	0
  1324  0077D6  00                 	db	0
  1325  0077D7  00                 	db	0
  1326  0077D8  00                 	db	0
  1327  0077D9  00                 	db	0
  1328  0077DA  00                 	db	0
  1329  0077DB  00                 	db	0
  1330  0077DC  FF                 	db	255
  1331  0077DD  FF                 	db	255
  1332  0077DE  FF                 	db	255
  1333  0077DF  FF                 	db	255
  1334  0077E0  00                 	db	0
  1335  0077E1  00                 	db	0
  1336  0077E2  00                 	db	0
  1337  0077E3  00                 	db	0
  1338  0077E4  00                 	db	0
  1339  0077E5  00                 	db	0
  1340  0077E6  00                 	db	0
  1341  0077E7  00                 	db	0
  1342  0077E8  00                 	db	0
  1343  0077E9  00                 	db	0
  1344  0077EA  00                 	db	0
  1345  0077EB  00                 	db	0
  1346  0077EC  00                 	db	0
  1347  0077ED  00                 	db	0
  1348  0077EE  00                 	db	0
  1349  0077EF  00                 	db	0
  1350  0077F0  00                 	db	0
  1351  0077F1  00                 	db	0
  1352  0077F2  00                 	db	0
  1353  0077F3  00                 	db	0
  1354  0077F4  00                 	db	0
  1355  0077F5  00                 	db	0
  1356  0077F6  00                 	db	0
  1357  0077F7  00                 	db	0
  1358  0077F8  00                 	db	0
  1359  0077F9  00                 	db	0
  1360  0077FA  00                 	db	0
  1361  0077FB  00                 	db	0
  1362  0077FC  00                 	db	0
  1363  0077FD  00                 	db	0
  1364  0077FE  00                 	db	0
  1365  0077FF  FF                 	db	255
  1366  007800  FF                 	db	255
  1367  007801  FF                 	db	255
  1368  007802  FF                 	db	255
  1369  007803  00                 	db	0
  1370  007804  00                 	db	0
  1371  007805  00                 	db	0
  1372  007806  FF                 	db	255
  1373  007807  FF                 	db	255
  1374  007808  FF                 	db	255
  1375  007809  FF                 	db	255
  1376  00780A  00                 	db	0
  1377  00780B  00                 	db	0
  1378  00780C  00                 	db	0
  1379  00780D  00                 	db	0
  1380  00780E  00                 	db	0
  1381  00780F  00                 	db	0
  1382  007810  00                 	db	0
  1383  007811  00                 	db	0
  1384  007812  00                 	db	0
  1385  007813  00                 	db	0
  1386  007814  00                 	db	0
  1387  007815  00                 	db	0
  1388  007816  00                 	db	0
  1389  007817  00                 	db	0
  1390  007818  00                 	db	0
  1391  007819  00                 	db	0
  1392  00781A  00                 	db	0
  1393  00781B  00                 	db	0
  1394  00781C  00                 	db	0
  1395  00781D  00                 	db	0
  1396  00781E  00                 	db	0
  1397  00781F  00                 	db	0
  1398  007820  00                 	db	0
  1399  007821  00                 	db	0
  1400  007822  00                 	db	0
  1401  007823  00                 	db	0
  1402  007824  FF                 	db	255
  1403  007825  FF                 	db	255
  1404  007826  FF                 	db	255
  1405  007827  FF                 	db	255
  1406  007828  00                 	db	0
  1407  007829  00                 	db	0
  1408  00782A  00                 	db	0
  1409  00782B  00                 	db	0
  1410  00782C  00                 	db	0
  1411  00782D  00                 	db	0
  1412  00782E  00                 	db	0
  1413  00782F  00                 	db	0
  1414  007830  00                 	db	0
  1415  007831  00                 	db	0
  1416  007832  00                 	db	0
  1417  007833  00                 	db	0
  1418  007834  00                 	db	0
  1419  007835  00                 	db	0
  1420  007836  00                 	db	0
  1421  007837  00                 	db	0
  1422  007838  00                 	db	0
  1423  007839  00                 	db	0
  1424  00783A  00                 	db	0
  1425  00783B  00                 	db	0
  1426  00783C  00                 	db	0
  1427  00783D  00                 	db	0
  1428  00783E  FF                 	db	255
  1429  00783F  FF                 	db	255
  1430  007840  FF                 	db	255
  1431  007841  FF                 	db	255
  1432  007842  00                 	db	0
  1433  007843  00                 	db	0
  1434  007844  00                 	db	0
  1435  007845  00                 	db	0
  1436  007846  00                 	db	0
  1437  007847  00                 	db	0
  1438  007848  00                 	db	0
  1439  007849  00                 	db	0
  1440  00784A  00                 	db	0
  1441  00784B  00                 	db	0
  1442  00784C  00                 	db	0
  1443  00784D  00                 	db	0
  1444  00784E  00                 	db	0
  1445  00784F  00                 	db	0
  1446  007850  01                 	db	1
  1447  007851  03                 	db	3
  1448  007852  07                 	db	7
  1449  007853  0F                 	db	15
  1450  007854  0F                 	db	15
  1451  007855  0F                 	db	15
  1452  007856  0F                 	db	15
  1453  007857  0F                 	db	15
  1454  007858  0F                 	db	15
  1455  007859  0F                 	db	15
  1456  00785A  0F                 	db	15
  1457  00785B  0F                 	db	15
  1458  00785C  0F                 	db	15
  1459  00785D  0F                 	db	15
  1460  00785E  0F                 	db	15
  1461  00785F  0F                 	db	15
  1462  007860  0F                 	db	15
  1463  007861  FF                 	db	255
  1464  007862  FF                 	db	255
  1465  007863  FF                 	db	255
  1466  007864  FF                 	db	255
  1467  007865  00                 	db	0
  1468  007866  00                 	db	0
  1469  007867  00                 	db	0
  1470  007868  FF                 	db	255
  1471  007869  FF                 	db	255
  1472  00786A  FF                 	db	255
  1473  00786B  FF                 	db	255
  1474  00786C  00                 	db	0
  1475  00786D  00                 	db	0
  1476  00786E  00                 	db	0
  1477  00786F  00                 	db	0
  1478  007870  00                 	db	0
  1479  007871  00                 	db	0
  1480  007872  00                 	db	0
  1481  007873  00                 	db	0
  1482  007874  00                 	db	0
  1483  007875  00                 	db	0
  1484  007876  00                 	db	0
  1485  007877  00                 	db	0
  1486  007878  00                 	db	0
  1487  007879  00                 	db	0
  1488  00787A  00                 	db	0
  1489  00787B  00                 	db	0
  1490  00787C  00                 	db	0
  1491  00787D  00                 	db	0
  1492  00787E  00                 	db	0
  1493  00787F  00                 	db	0
  1494  007880  00                 	db	0
  1495  007881  00                 	db	0
  1496  007882  00                 	db	0
  1497  007883  00                 	db	0
  1498  007884  00                 	db	0
  1499  007885  00                 	db	0
  1500  007886  FF                 	db	255
  1501  007887  FF                 	db	255
  1502  007888  FF                 	db	255
  1503  007889  FF                 	db	255
  1504  00788A  00                 	db	0
  1505  00788B  00                 	db	0
  1506  00788C  00                 	db	0
  1507  00788D  01                 	db	1
  1508  00788E  03                 	db	3
  1509  00788F  07                 	db	7
  1510  007890  0F                 	db	15
  1511  007891  0F                 	db	15
  1512  007892  0F                 	db	15
  1513  007893  0F                 	db	15
  1514  007894  0F                 	db	15
  1515  007895  0F                 	db	15
  1516  007896  0F                 	db	15
  1517  007897  0F                 	db	15
  1518  007898  0F                 	db	15
  1519  007899  0F                 	db	15
  1520  00789A  0F                 	db	15
  1521  00789B  0F                 	db	15
  1522  00789C  0F                 	db	15
  1523  00789D  0F                 	db	15
  1524  00789E  0F                 	db	15
  1525  00789F  0F                 	db	15
  1526  0078A0  FF                 	db	255
  1527  0078A1  FF                 	db	255
  1528  0078A2  FF                 	db	255
  1529  0078A3  FF                 	db	255
  1530  0078A4  00                 	db	0
  1531  0078A5  00                 	db	0
  1532  0078A6  00                 	db	0
  1533  0078A7  00                 	db	0
  1534  0078A8  00                 	db	0
  1535  0078A9  00                 	db	0
  1536  0078AA  00                 	db	0
  1537  0078AB  00                 	db	0
  1538  0078AC  00                 	db	0
  1539  0078AD  00                 	db	0
  1540  0078AE  00                 	db	0
  1541  0078AF  00                 	db	0
  1542  0078B0  00                 	db	0
  1543  0078B1  00                 	db	0
  1544  0078B2  00                 	db	0
  1545  0078B3  00                 	db	0
  1546  0078B4  00                 	db	0
  1547  0078B5  00                 	db	0
  1548  0078B6  00                 	db	0
  1549  0078B7  00                 	db	0
  1550  0078B8  00                 	db	0
  1551  0078B9  00                 	db	0
  1552  0078BA  00                 	db	0
  1553  0078BB  00                 	db	0
  1554  0078BC  00                 	db	0
  1555  0078BD  00                 	db	0
  1556  0078BE  00                 	db	0
  1557  0078BF  00                 	db	0
  1558  0078C0  00                 	db	0
  1559  0078C1  00                 	db	0
  1560  0078C2  00                 	db	0
  1561  0078C3  00                 	db	0
  1562  0078C4  00                 	db	0
  1563  0078C5  00                 	db	0
  1564  0078C6  00                 	db	0
  1565  0078C7  00                 	db	0
  1566  0078C8  00                 	db	0
  1567  0078C9  00                 	db	0
  1568  0078CA  00                 	db	0
  1569  0078CB  00                 	db	0
  1570  0078CC  00                 	db	0
  1571  0078CD  00                 	db	0
  1572  0078CE  00                 	db	0
  1573  0078CF  00                 	db	0
  1574  0078D0  00                 	db	0
  1575  0078D1  00                 	db	0
  1576  0078D2  00                 	db	0
  1577  0078D3  00                 	db	0
  1578  0078D4  00                 	db	0
  1579  0078D5  00                 	db	0
  1580  0078D6  00                 	db	0
  1581  0078D7  00                 	db	0
  1582  0078D8  00                 	db	0
  1583  0078D9  00                 	db	0
  1584  0078DA  00                 	db	0
  1585  0078DB  00                 	db	0
  1586  0078DC  00                 	db	0
  1587  0078DD  00                 	db	0
  1588  0078DE  00                 	db	0
  1589  0078DF  00                 	db	0
  1590  0078E0  00                 	db	0
  1591  0078E1  00                 	db	0
  1592  0078E2  00                 	db	0
  1593  0078E3  00                 	db	0
  1594  0078E4  00                 	db	0
  1595  0078E5  00                 	db	0
  1596  0078E6  00                 	db	0
  1597  0078E7  00                 	db	0
  1598  0078E8  00                 	db	0
  1599  0078E9  00                 	db	0
  1600  0078EA  00                 	db	0
  1601  0078EB  00                 	db	0
  1602  0078EC  00                 	db	0
  1603  0078ED  00                 	db	0
  1604  0078EE  00                 	db	0
  1605  0078EF  00                 	db	0
  1606  0078F0  00                 	db	0
  1607  0078F1  00                 	db	0
  1608  0078F2  00                 	db	0
  1609  0078F3  00                 	db	0
  1610  0078F4  00                 	db	0
  1611  0078F5  00                 	db	0
  1612  0078F6  00                 	db	0
  1613  0078F7  00                 	db	0
  1614  0078F8  00                 	db	0
  1615  0078F9  00                 	db	0
  1616  0078FA  00                 	db	0
  1617  0078FB  00                 	db	0
  1618  0078FC  00                 	db	0
  1619  0078FD  00                 	db	0
  1620  0078FE  00                 	db	0
  1621  0078FF  00                 	db	0
  1622  007900  00                 	db	0
  1623  007901  00                 	db	0
  1624  007902  00                 	db	0
  1625  007903  00                 	db	0
  1626  007904  00                 	db	0
  1627  007905  00                 	db	0
  1628  007906  00                 	db	0
  1629  007907  00                 	db	0
  1630  007908  00                 	db	0
  1631  007909  00                 	db	0
  1632  00790A  00                 	db	0
  1633  00790B  00                 	db	0
  1634  00790C                     __end_of_logo_eme:
  1635                           	opt stack 0
  1636  00790C                     _ptni_frame:
  1637                           	opt stack 0
  1638  00790C  0F                 	db	15
  1639  00790D  10                 	db	16
  1640  00790E  20                 	db	32
  1641  00790F  20                 	db	32
  1642  007910  20                 	db	32
  1643  007911  20                 	db	32
  1644  007912  20                 	db	32
  1645  007913  20                 	db	32
  1646  007914  20                 	db	32
  1647  007915  20                 	db	32
  1648  007916  20                 	db	32
  1649  007917  20                 	db	32
  1650  007918  20                 	db	32
  1651  007919  20                 	db	32
  1652  00791A  20                 	db	32
  1653  00791B  20                 	db	32
  1654  00791C  20                 	db	32
  1655  00791D  20                 	db	32
  1656  00791E  20                 	db	32
  1657  00791F  20                 	db	32
  1658  007920  20                 	db	32
  1659  007921  20                 	db	32
  1660  007922  20                 	db	32
  1661  007923  20                 	db	32
  1662  007924  20                 	db	32
  1663  007925  20                 	db	32
  1664  007926  20                 	db	32
  1665  007927  20                 	db	32
  1666  007928  20                 	db	32
  1667  007929  20                 	db	32
  1668  00792A  20                 	db	32
  1669  00792B  20                 	db	32
  1670  00792C  20                 	db	32
  1671  00792D  20                 	db	32
  1672  00792E  20                 	db	32
  1673  00792F  20                 	db	32
  1674  007930  24                 	db	36
  1675  007931  27                 	db	39
  1676  007932  24                 	db	36
  1677  007933  24                 	db	36
  1678  007934  24                 	db	36
  1679  007935  24                 	db	36
  1680  007936  24                 	db	36
  1681  007937  27                 	db	39
  1682  007938  24                 	db	36
  1683  007939  20                 	db	32
  1684  00793A  10                 	db	16
  1685  00793B  0F                 	db	15
  1686  00793C  FF                 	db	255
  1687  00793D  00                 	db	0
  1688  00793E  00                 	db	0
  1689  00793F  00                 	db	0
  1690  007940  00                 	db	0
  1691  007941  13                 	db	19
  1692  007942  24                 	db	36
  1693  007943  24                 	db	36
  1694  007944  24                 	db	36
  1695  007945  19                 	db	25
  1696  007946  00                 	db	0
  1697  007947  00                 	db	0
  1698  007948  00                 	db	0
  1699  007949  00                 	db	0
  1700  00794A  00                 	db	0
  1701  00794B  00                 	db	0
  1702  00794C  00                 	db	0
  1703  00794D  00                 	db	0
  1704  00794E  00                 	db	0
  1705  00794F  00                 	db	0
  1706  007950  00                 	db	0
  1707  007951  00                 	db	0
  1708  007952  00                 	db	0
  1709  007953  00                 	db	0
  1710  007954  00                 	db	0
  1711  007955  00                 	db	0
  1712  007956  00                 	db	0
  1713  007957  00                 	db	0
  1714  007958  00                 	db	0
  1715  007959  00                 	db	0
  1716  00795A  00                 	db	0
  1717  00795B  00                 	db	0
  1718  00795C  00                 	db	0
  1719  00795D  00                 	db	0
  1720  00795E  00                 	db	0
  1721  00795F  00                 	db	0
  1722  007960  00                 	db	0
  1723  007961  07                 	db	7
  1724  007962  8B                 	db	139
  1725  007963  D3                 	db	211
  1726  007964  E3                 	db	227
  1727  007965  D3                 	db	211
  1728  007966  8B                 	db	139
  1729  007967  07                 	db	7
  1730  007968  00                 	db	0
  1731  007969  00                 	db	0
  1732  00796A  00                 	db	0
  1733  00796B  FF                 	db	255
  1734  00796C  C0                 	db	192
  1735  00796D  20                 	db	32
  1736  00796E  10                 	db	16
  1737  00796F  10                 	db	16
  1738  007970  10                 	db	16
  1739  007971  10                 	db	16
  1740  007972  90                 	db	144
  1741  007973  90                 	db	144
  1742  007974  90                 	db	144
  1743  007975  10                 	db	16
  1744  007976  10                 	db	16
  1745  007977  10                 	db	16
  1746  007978  10                 	db	16
  1747  007979  10                 	db	16
  1748  00797A  10                 	db	16
  1749  00797B  10                 	db	16
  1750  00797C  10                 	db	16
  1751  00797D  10                 	db	16
  1752  00797E  10                 	db	16
  1753  00797F  10                 	db	16
  1754  007980  10                 	db	16
  1755  007981  10                 	db	16
  1756  007982  10                 	db	16
  1757  007983  10                 	db	16
  1758  007984  10                 	db	16
  1759  007985  10                 	db	16
  1760  007986  10                 	db	16
  1761  007987  10                 	db	16
  1762  007988  10                 	db	16
  1763  007989  10                 	db	16
  1764  00798A  10                 	db	16
  1765  00798B  10                 	db	16
  1766  00798C  10                 	db	16
  1767  00798D  10                 	db	16
  1768  00798E  10                 	db	16
  1769  00798F  10                 	db	16
  1770  007990  90                 	db	144
  1771  007991  90                 	db	144
  1772  007992  90                 	db	144
  1773  007993  90                 	db	144
  1774  007994  90                 	db	144
  1775  007995  90                 	db	144
  1776  007996  90                 	db	144
  1777  007997  90                 	db	144
  1778  007998  90                 	db	144
  1779  007999  10                 	db	16
  1780  00799A  20                 	db	32
  1781  00799B  C0                 	db	192
  1782  00799C                     __end_of_ptni_frame:
  1783                           	opt stack 0
  1784  00799C                     _ptnh_frame:
  1785                           	opt stack 0
  1786  00799C  0F                 	db	15
  1787  00799D  10                 	db	16
  1788  00799E  20                 	db	32
  1789  00799F  25                 	db	37
  1790  0079A0  25                 	db	37
  1791  0079A1  27                 	db	39
  1792  0079A2  20                 	db	32
  1793  0079A3  27                 	db	39
  1794  0079A4  25                 	db	37
  1795  0079A5  27                 	db	39
  1796  0079A6  20                 	db	32
  1797  0079A7  24                 	db	36
  1798  0079A8  24                 	db	36
  1799  0079A9  27                 	db	39
  1800  0079AA  20                 	db	32
  1801  0079AB  20                 	db	32
  1802  0079AC  20                 	db	32
  1803  0079AD  20                 	db	32
  1804  0079AE  20                 	db	32
  1805  0079AF  20                 	db	32
  1806  0079B0  20                 	db	32
  1807  0079B1  20                 	db	32
  1808  0079B2  20                 	db	32
  1809  0079B3  20                 	db	32
  1810  0079B4  20                 	db	32
  1811  0079B5  20                 	db	32
  1812  0079B6  20                 	db	32
  1813  0079B7  20                 	db	32
  1814  0079B8  20                 	db	32
  1815  0079B9  20                 	db	32
  1816  0079BA  20                 	db	32
  1817  0079BB  20                 	db	32
  1818  0079BC  20                 	db	32
  1819  0079BD  20                 	db	32
  1820  0079BE  20                 	db	32
  1821  0079BF  20                 	db	32
  1822  0079C0  20                 	db	32
  1823  0079C1  20                 	db	32
  1824  0079C2  20                 	db	32
  1825  0079C3  26                 	db	38
  1826  0079C4  26                 	db	38
  1827  0079C5  26                 	db	38
  1828  0079C6  26                 	db	38
  1829  0079C7  26                 	db	38
  1830  0079C8  27                 	db	39
  1831  0079C9  27                 	db	39
  1832  0079CA  10                 	db	16
  1833  0079CB  0F                 	db	15
  1834  0079CC  FF                 	db	255
  1835  0079CD  00                 	db	0
  1836  0079CE  10                 	db	16
  1837  0079CF  D1                 	db	209
  1838  0079D0  51                 	db	81
  1839  0079D1  51                 	db	81
  1840  0079D2  10                 	db	16
  1841  0079D3  15                 	db	21
  1842  0079D4  10                 	db	16
  1843  0079D5  D7                 	db	215
  1844  0079D6  12                 	db	18
  1845  0079D7  51                 	db	81
  1846  0079D8  52                 	db	82
  1847  0079D9  D7                 	db	215
  1848  0079DA  10                 	db	16
  1849  0079DB  00                 	db	0
  1850  0079DC  00                 	db	0
  1851  0079DD  00                 	db	0
  1852  0079DE  00                 	db	0
  1853  0079DF  00                 	db	0
  1854  0079E0  00                 	db	0
  1855  0079E1  00                 	db	0
  1856  0079E2  00                 	db	0
  1857  0079E3  00                 	db	0
  1858  0079E4  00                 	db	0
  1859  0079E5  00                 	db	0
  1860  0079E6  00                 	db	0
  1861  0079E7  00                 	db	0
  1862  0079E8  00                 	db	0
  1863  0079E9  00                 	db	0
  1864  0079EA  00                 	db	0
  1865  0079EB  00                 	db	0
  1866  0079EC  00                 	db	0
  1867  0079ED  00                 	db	0
  1868  0079EE  00                 	db	0
  1869  0079EF  00                 	db	0
  1870  0079F0  00                 	db	0
  1871  0079F1  00                 	db	0
  1872  0079F2  00                 	db	0
  1873  0079F3  00                 	db	0
  1874  0079F4  60                 	db	96
  1875  0079F5  60                 	db	96
  1876  0079F6  60                 	db	96
  1877  0079F7  60                 	db	96
  1878  0079F8  FF                 	db	255
  1879  0079F9  FF                 	db	255
  1880  0079FA  00                 	db	0
  1881  0079FB  FF                 	db	255
  1882  0079FC  C0                 	db	192
  1883  0079FD  20                 	db	32
  1884  0079FE  10                 	db	16
  1885  0079FF  D0                 	db	208
  1886  007A00  10                 	db	16
  1887  007A01  D0                 	db	208
  1888  007A02  10                 	db	16
  1889  007A03  D0                 	db	208
  1890  007A04  10                 	db	16
  1891  007A05  D0                 	db	208
  1892  007A06  10                 	db	16
  1893  007A07  10                 	db	16
  1894  007A08  10                 	db	16
  1895  007A09  D0                 	db	208
  1896  007A0A  10                 	db	16
  1897  007A0B  10                 	db	16
  1898  007A0C  10                 	db	16
  1899  007A0D  10                 	db	16
  1900  007A0E  10                 	db	16
  1901  007A0F  10                 	db	16
  1902  007A10  10                 	db	16
  1903  007A11  10                 	db	16
  1904  007A12  10                 	db	16
  1905  007A13  10                 	db	16
  1906  007A14  10                 	db	16
  1907  007A15  10                 	db	16
  1908  007A16  10                 	db	16
  1909  007A17  10                 	db	16
  1910  007A18  10                 	db	16
  1911  007A19  10                 	db	16
  1912  007A1A  10                 	db	16
  1913  007A1B  10                 	db	16
  1914  007A1C  10                 	db	16
  1915  007A1D  10                 	db	16
  1916  007A1E  10                 	db	16
  1917  007A1F  10                 	db	16
  1918  007A20  10                 	db	16
  1919  007A21  10                 	db	16
  1920  007A22  10                 	db	16
  1921  007A23  10                 	db	16
  1922  007A24  10                 	db	16
  1923  007A25  10                 	db	16
  1924  007A26  10                 	db	16
  1925  007A27  10                 	db	16
  1926  007A28  90                 	db	144
  1927  007A29  90                 	db	144
  1928  007A2A  20                 	db	32
  1929  007A2B  C0                 	db	192
  1930  007A2C                     __end_of_ptnh_frame:
  1931                           	opt stack 0
  1932  007A2C                     _ptng_frame:
  1933                           	opt stack 0
  1934  007A2C  0F                 	db	15
  1935  007A2D  10                 	db	16
  1936  007A2E  20                 	db	32
  1937  007A2F  20                 	db	32
  1938  007A30  20                 	db	32
  1939  007A31  2F                 	db	47
  1940  007A32  20                 	db	32
  1941  007A33  2F                 	db	47
  1942  007A34  24                 	db	36
  1943  007A35  22                 	db	34
  1944  007A36  24                 	db	36
  1945  007A37  2F                 	db	47
  1946  007A38  20                 	db	32
  1947  007A39  20                 	db	32
  1948  007A3A  20                 	db	32
  1949  007A3B  20                 	db	32
  1950  007A3C  20                 	db	32
  1951  007A3D  20                 	db	32
  1952  007A3E  20                 	db	32
  1953  007A3F  20                 	db	32
  1954  007A40  20                 	db	32
  1955  007A41  20                 	db	32
  1956  007A42  20                 	db	32
  1957  007A43  20                 	db	32
  1958  007A44  20                 	db	32
  1959  007A45  20                 	db	32
  1960  007A46  20                 	db	32
  1961  007A47  20                 	db	32
  1962  007A48  20                 	db	32
  1963  007A49  20                 	db	32
  1964  007A4A  20                 	db	32
  1965  007A4B  20                 	db	32
  1966  007A4C  20                 	db	32
  1967  007A4D  20                 	db	32
  1968  007A4E  20                 	db	32
  1969  007A4F  20                 	db	32
  1970  007A50  20                 	db	32
  1971  007A51  28                 	db	40
  1972  007A52  29                 	db	41
  1973  007A53  2F                 	db	47
  1974  007A54  2F                 	db	47
  1975  007A55  29                 	db	41
  1976  007A56  28                 	db	40
  1977  007A57  20                 	db	32
  1978  007A58  21                 	db	33
  1979  007A59  23                 	db	35
  1980  007A5A  10                 	db	16
  1981  007A5B  0F                 	db	15
  1982  007A5C  FF                 	db	255
  1983  007A5D  00                 	db	0
  1984  007A5E  23                 	db	35
  1985  007A5F  A2                 	db	162
  1986  007A60  A3                 	db	163
  1987  007A61  A0                 	db	160
  1988  007A62  2B                 	db	43
  1989  007A63  A0                 	db	160
  1990  007A64  2F                 	db	47
  1991  007A65  24                 	db	36
  1992  007A66  26                 	db	38
  1993  007A67  A4                 	db	164
  1994  007A68  2F                 	db	47
  1995  007A69  00                 	db	0
  1996  007A6A  00                 	db	0
  1997  007A6B  00                 	db	0
  1998  007A6C  00                 	db	0
  1999  007A6D  00                 	db	0
  2000  007A6E  00                 	db	0
  2001  007A6F  00                 	db	0
  2002  007A70  00                 	db	0
  2003  007A71  00                 	db	0
  2004  007A72  00                 	db	0
  2005  007A73  00                 	db	0
  2006  007A74  00                 	db	0
  2007  007A75  00                 	db	0
  2008  007A76  00                 	db	0
  2009  007A77  00                 	db	0
  2010  007A78  00                 	db	0
  2011  007A79  00                 	db	0
  2012  007A7A  00                 	db	0
  2013  007A7B  00                 	db	0
  2014  007A7C  00                 	db	0
  2015  007A7D  00                 	db	0
  2016  007A7E  7A                 	db	122
  2017  007A7F  F9                 	db	249
  2018  007A80  C0                 	db	192
  2019  007A81  C0                 	db	192
  2020  007A82  E0                 	db	224
  2021  007A83  F0                 	db	240
  2022  007A84  F0                 	db	240
  2023  007A85  E0                 	db	224
  2024  007A86  C0                 	db	192
  2025  007A87  C0                 	db	192
  2026  007A88  E0                 	db	224
  2027  007A89  F0                 	db	240
  2028  007A8A  00                 	db	0
  2029  007A8B  FF                 	db	255
  2030  007A8C  C0                 	db	192
  2031  007A8D  20                 	db	32
  2032  007A8E  90                 	db	144
  2033  007A8F  10                 	db	16
  2034  007A90  90                 	db	144
  2035  007A91  10                 	db	16
  2036  007A92  90                 	db	144
  2037  007A93  10                 	db	16
  2038  007A94  90                 	db	144
  2039  007A95  10                 	db	16
  2040  007A96  10                 	db	16
  2041  007A97  10                 	db	16
  2042  007A98  90                 	db	144
  2043  007A99  10                 	db	16
  2044  007A9A  10                 	db	16
  2045  007A9B  10                 	db	16
  2046  007A9C  10                 	db	16
  2047  007A9D  10                 	db	16
  2048  007A9E  10                 	db	16
  2049  007A9F  10                 	db	16
  2050  007AA0  10                 	db	16
  2051  007AA1  10                 	db	16
  2052  007AA2  10                 	db	16
  2053  007AA3  10                 	db	16
  2054  007AA4  10                 	db	16
  2055  007AA5  10                 	db	16
  2056  007AA6  10                 	db	16
  2057  007AA7  10                 	db	16
  2058  007AA8  10                 	db	16
  2059  007AA9  10                 	db	16
  2060  007AAA  10                 	db	16
  2061  007AAB  10                 	db	16
  2062  007AAC  10                 	db	16
  2063  007AAD  10                 	db	16
  2064  007AAE  90                 	db	144
  2065  007AAF  10                 	db	16
  2066  007AB0  10                 	db	16
  2067  007AB1  10                 	db	16
  2068  007AB2  10                 	db	16
  2069  007AB3  10                 	db	16
  2070  007AB4  10                 	db	16
  2071  007AB5  10                 	db	16
  2072  007AB6  10                 	db	16
  2073  007AB7  10                 	db	16
  2074  007AB8  10                 	db	16
  2075  007AB9  10                 	db	16
  2076  007ABA  20                 	db	32
  2077  007ABB  C0                 	db	192
  2078  007ABC                     __end_of_ptng_frame:
  2079                           	opt stack 0
  2080  007ABC                     _ptnf_frame:
  2081                           	opt stack 0
  2082  007ABC  0F                 	db	15
  2083  007ABD  10                 	db	16
  2084  007ABE  20                 	db	32
  2085  007ABF  20                 	db	32
  2086  007AC0  20                 	db	32
  2087  007AC1  20                 	db	32
  2088  007AC2  20                 	db	32
  2089  007AC3  20                 	db	32
  2090  007AC4  20                 	db	32
  2091  007AC5  20                 	db	32
  2092  007AC6  20                 	db	32
  2093  007AC7  20                 	db	32
  2094  007AC8  20                 	db	32
  2095  007AC9  20                 	db	32
  2096  007ACA  20                 	db	32
  2097  007ACB  20                 	db	32
  2098  007ACC  20                 	db	32
  2099  007ACD  20                 	db	32
  2100  007ACE  20                 	db	32
  2101  007ACF  20                 	db	32
  2102  007AD0  20                 	db	32
  2103  007AD1  20                 	db	32
  2104  007AD2  20                 	db	32
  2105  007AD3  20                 	db	32
  2106  007AD4  20                 	db	32
  2107  007AD5  20                 	db	32
  2108  007AD6  20                 	db	32
  2109  007AD7  20                 	db	32
  2110  007AD8  20                 	db	32
  2111  007AD9  20                 	db	32
  2112  007ADA  20                 	db	32
  2113  007ADB  20                 	db	32
  2114  007ADC  20                 	db	32
  2115  007ADD  20                 	db	32
  2116  007ADE  20                 	db	32
  2117  007ADF  20                 	db	32
  2118  007AE0  20                 	db	32
  2119  007AE1  20                 	db	32
  2120  007AE2  20                 	db	32
  2121  007AE3  25                 	db	37
  2122  007AE4  22                 	db	34
  2123  007AE5  21                 	db	33
  2124  007AE6  2A                 	db	42
  2125  007AE7  24                 	db	36
  2126  007AE8  22                 	db	34
  2127  007AE9  20                 	db	32
  2128  007AEA  10                 	db	16
  2129  007AEB  0F                 	db	15
  2130  007AEC  FF                 	db	255
  2131  007AED  00                 	db	0
  2132  007AEE  00                 	db	0
  2133  007AEF  00                 	db	0
  2134  007AF0  01                 	db	1
  2135  007AF1  01                 	db	1
  2136  007AF2  1F                 	db	31
  2137  007AF3  00                 	db	0
  2138  007AF4  1F                 	db	31
  2139  007AF5  08                 	db	8
  2140  007AF6  04                 	db	4
  2141  007AF7  08                 	db	8
  2142  007AF8  1F                 	db	31
  2143  007AF9  00                 	db	0
  2144  007AFA  00                 	db	0
  2145  007AFB  00                 	db	0
  2146  007AFC  00                 	db	0
  2147  007AFD  00                 	db	0
  2148  007AFE  00                 	db	0
  2149  007AFF  00                 	db	0
  2150  007B00  00                 	db	0
  2151  007B01  00                 	db	0
  2152  007B02  00                 	db	0
  2153  007B03  00                 	db	0
  2154  007B04  00                 	db	0
  2155  007B05  00                 	db	0
  2156  007B06  00                 	db	0
  2157  007B07  00                 	db	0
  2158  007B08  00                 	db	0
  2159  007B09  00                 	db	0
  2160  007B0A  00                 	db	0
  2161  007B0B  00                 	db	0
  2162  007B0C  00                 	db	0
  2163  007B0D  00                 	db	0
  2164  007B0E  02                 	db	2
  2165  007B0F  1C                 	db	28
  2166  007B10  24                 	db	36
  2167  007B11  44                 	db	68
  2168  007B12  88                 	db	136
  2169  007B13  10                 	db	16
  2170  007B14  20                 	db	32
  2171  007B15  40                 	db	64
  2172  007B16  80                 	db	128
  2173  007B17  40                 	db	64
  2174  007B18  00                 	db	0
  2175  007B19  00                 	db	0
  2176  007B1A  00                 	db	0
  2177  007B1B  FF                 	db	255
  2178  007B1C  C0                 	db	192
  2179  007B1D  20                 	db	32
  2180  007B1E  10                 	db	16
  2181  007B1F  10                 	db	16
  2182  007B20  10                 	db	16
  2183  007B21  10                 	db	16
  2184  007B22  10                 	db	16
  2185  007B23  10                 	db	16
  2186  007B24  10                 	db	16
  2187  007B25  10                 	db	16
  2188  007B26  10                 	db	16
  2189  007B27  10                 	db	16
  2190  007B28  10                 	db	16
  2191  007B29  10                 	db	16
  2192  007B2A  10                 	db	16
  2193  007B2B  10                 	db	16
  2194  007B2C  10                 	db	16
  2195  007B2D  10                 	db	16
  2196  007B2E  10                 	db	16
  2197  007B2F  10                 	db	16
  2198  007B30  10                 	db	16
  2199  007B31  10                 	db	16
  2200  007B32  10                 	db	16
  2201  007B33  10                 	db	16
  2202  007B34  10                 	db	16
  2203  007B35  10                 	db	16
  2204  007B36  10                 	db	16
  2205  007B37  10                 	db	16
  2206  007B38  10                 	db	16
  2207  007B39  10                 	db	16
  2208  007B3A  10                 	db	16
  2209  007B3B  10                 	db	16
  2210  007B3C  10                 	db	16
  2211  007B3D  10                 	db	16
  2212  007B3E  10                 	db	16
  2213  007B3F  10                 	db	16
  2214  007B40  10                 	db	16
  2215  007B41  10                 	db	16
  2216  007B42  10                 	db	16
  2217  007B43  10                 	db	16
  2218  007B44  10                 	db	16
  2219  007B45  10                 	db	16
  2220  007B46  10                 	db	16
  2221  007B47  10                 	db	16
  2222  007B48  10                 	db	16
  2223  007B49  10                 	db	16
  2224  007B4A  20                 	db	32
  2225  007B4B  C0                 	db	192
  2226  007B4C                     __end_of_ptnf_frame:
  2227                           	opt stack 0
  2228  007B4C                     _n_250_m:
  2229                           	opt stack 0
  2230  007B4C  23                 	db	35
  2231  007B4D  27                 	db	39
  2232  007B4E  26                 	db	38
  2233  007B4F  27                 	db	39
  2234  007B50  23                 	db	35
  2235  007B51  20                 	db	32
  2236  007B52  26                 	db	38
  2237  007B53  26                 	db	38
  2238  007B54  26                 	db	38
  2239  007B55  27                 	db	39
  2240  007B56  27                 	db	39
  2241  007B57  20                 	db	32
  2242  007B58  23                 	db	35
  2243  007B59  27                 	db	39
  2244  007B5A  26                 	db	38
  2245  007B5B  26                 	db	38
  2246  007B5C  27                 	db	39
  2247  007B5D  23                 	db	35
  2248  007B5E  20                 	db	32
  2249  007B5F  FE                 	db	254
  2250  007B60  FF                 	db	255
  2251  007B61  03                 	db	3
  2252  007B62  FF                 	db	255
  2253  007B63  FE                 	db	254
  2254  007B64  00                 	db	0
  2255  007B65  3E                 	db	62
  2256  007B66  7F                 	db	127
  2257  007B67  63                 	db	99
  2258  007B68  E3                 	db	227
  2259  007B69  C3                 	db	195
  2260  007B6A  00                 	db	0
  2261  007B6B  83                 	db	131
  2262  007B6C  C3                 	db	195
  2263  007B6D  63                 	db	99
  2264  007B6E  33                 	db	51
  2265  007B6F  1F                 	db	31
  2266  007B70  0F                 	db	15
  2267  007B71  00                 	db	0
  2268  007B72  10                 	db	16
  2269  007B73  10                 	db	16
  2270  007B74  10                 	db	16
  2271  007B75  10                 	db	16
  2272  007B76  10                 	db	16
  2273  007B77  10                 	db	16
  2274  007B78  10                 	db	16
  2275  007B79  10                 	db	16
  2276  007B7A  10                 	db	16
  2277  007B7B  10                 	db	16
  2278  007B7C  10                 	db	16
  2279  007B7D  10                 	db	16
  2280  007B7E  10                 	db	16
  2281  007B7F  10                 	db	16
  2282  007B80  10                 	db	16
  2283  007B81  10                 	db	16
  2284  007B82  10                 	db	16
  2285  007B83  10                 	db	16
  2286  007B84  10                 	db	16
  2287  007B85                     __end_of_n_250_m:
  2288                           	opt stack 0
  2289  007B85                     _n_300_m:
  2290                           	opt stack 0
  2291  007B85  23                 	db	35
  2292  007B86  27                 	db	39
  2293  007B87  26                 	db	38
  2294  007B88  27                 	db	39
  2295  007B89  23                 	db	35
  2296  007B8A  20                 	db	32
  2297  007B8B  23                 	db	35
  2298  007B8C  27                 	db	39
  2299  007B8D  26                 	db	38
  2300  007B8E  27                 	db	39
  2301  007B8F  23                 	db	35
  2302  007B90  20                 	db	32
  2303  007B91  23                 	db	35
  2304  007B92  27                 	db	39
  2305  007B93  26                 	db	38
  2306  007B94  26                 	db	38
  2307  007B95  27                 	db	39
  2308  007B96  23                 	db	35
  2309  007B97  20                 	db	32
  2310  007B98  FE                 	db	254
  2311  007B99  FF                 	db	255
  2312  007B9A  03                 	db	3
  2313  007B9B  FF                 	db	255
  2314  007B9C  FE                 	db	254
  2315  007B9D  00                 	db	0
  2316  007B9E  FE                 	db	254
  2317  007B9F  FF                 	db	255
  2318  007BA0  03                 	db	3
  2319  007BA1  FF                 	db	255
  2320  007BA2  FE                 	db	254
  2321  007BA3  00                 	db	0
  2322  007BA4  DE                 	db	222
  2323  007BA5  FF                 	db	255
  2324  007BA6  63                 	db	99
  2325  007BA7  63                 	db	99
  2326  007BA8  07                 	db	7
  2327  007BA9  06                 	db	6
  2328  007BAA  00                 	db	0
  2329  007BAB  10                 	db	16
  2330  007BAC  10                 	db	16
  2331  007BAD  10                 	db	16
  2332  007BAE  10                 	db	16
  2333  007BAF  10                 	db	16
  2334  007BB0  10                 	db	16
  2335  007BB1  10                 	db	16
  2336  007BB2  10                 	db	16
  2337  007BB3  10                 	db	16
  2338  007BB4  10                 	db	16
  2339  007BB5  10                 	db	16
  2340  007BB6  10                 	db	16
  2341  007BB7  10                 	db	16
  2342  007BB8  10                 	db	16
  2343  007BB9  10                 	db	16
  2344  007BBA  10                 	db	16
  2345  007BBB  10                 	db	16
  2346  007BBC  10                 	db	16
  2347  007BBD  10                 	db	16
  2348  007BBE                     __end_of_n_300_m:
  2349                           	opt stack 0
  2350  007BBE                     _n_150_m:
  2351                           	opt stack 0
  2352  007BBE  23                 	db	35
  2353  007BBF  27                 	db	39
  2354  007BC0  26                 	db	38
  2355  007BC1  27                 	db	39
  2356  007BC2  23                 	db	35
  2357  007BC3  20                 	db	32
  2358  007BC4  26                 	db	38
  2359  007BC5  26                 	db	38
  2360  007BC6  26                 	db	38
  2361  007BC7  27                 	db	39
  2362  007BC8  27                 	db	39
  2363  007BC9  20                 	db	32
  2364  007BCA  20                 	db	32
  2365  007BCB  27                 	db	39
  2366  007BCC  27                 	db	39
  2367  007BCD  23                 	db	35
  2368  007BCE  20                 	db	32
  2369  007BCF  20                 	db	32
  2370  007BD0  20                 	db	32
  2371  007BD1  FE                 	db	254
  2372  007BD2  FF                 	db	255
  2373  007BD3  03                 	db	3
  2374  007BD4  FF                 	db	255
  2375  007BD5  FE                 	db	254
  2376  007BD6  00                 	db	0
  2377  007BD7  3E                 	db	62
  2378  007BD8  7F                 	db	127
  2379  007BD9  63                 	db	99
  2380  007BDA  E3                 	db	227
  2381  007BDB  C3                 	db	195
  2382  007BDC  00                 	db	0
  2383  007BDD  03                 	db	3
  2384  007BDE  FF                 	db	255
  2385  007BDF  FF                 	db	255
  2386  007BE0  03                 	db	3
  2387  007BE1  00                 	db	0
  2388  007BE2  00                 	db	0
  2389  007BE3  00                 	db	0
  2390  007BE4  10                 	db	16
  2391  007BE5  10                 	db	16
  2392  007BE6  10                 	db	16
  2393  007BE7  10                 	db	16
  2394  007BE8  10                 	db	16
  2395  007BE9  10                 	db	16
  2396  007BEA  10                 	db	16
  2397  007BEB  10                 	db	16
  2398  007BEC  10                 	db	16
  2399  007BED  10                 	db	16
  2400  007BEE  10                 	db	16
  2401  007BEF  10                 	db	16
  2402  007BF0  10                 	db	16
  2403  007BF1  10                 	db	16
  2404  007BF2  10                 	db	16
  2405  007BF3  10                 	db	16
  2406  007BF4  10                 	db	16
  2407  007BF5  10                 	db	16
  2408  007BF6  10                 	db	16
  2409  007BF7                     __end_of_n_150_m:
  2410                           	opt stack 0
  2411  007BF7                     _n_200_m:
  2412                           	opt stack 0
  2413  007BF7  23                 	db	35
  2414  007BF8  27                 	db	39
  2415  007BF9  26                 	db	38
  2416  007BFA  27                 	db	39
  2417  007BFB  23                 	db	35
  2418  007BFC  20                 	db	32
  2419  007BFD  23                 	db	35
  2420  007BFE  27                 	db	39
  2421  007BFF  26                 	db	38
  2422  007C00  27                 	db	39
  2423  007C01  23                 	db	35
  2424  007C02  20                 	db	32
  2425  007C03  23                 	db	35
  2426  007C04  27                 	db	39
  2427  007C05  26                 	db	38
  2428  007C06  26                 	db	38
  2429  007C07  27                 	db	39
  2430  007C08  23                 	db	35
  2431  007C09  20                 	db	32
  2432  007C0A  FE                 	db	254
  2433  007C0B  FF                 	db	255
  2434  007C0C  03                 	db	3
  2435  007C0D  FF                 	db	255
  2436  007C0E  FE                 	db	254
  2437  007C0F  00                 	db	0
  2438  007C10  FE                 	db	254
  2439  007C11  FF                 	db	255
  2440  007C12  03                 	db	3
  2441  007C13  FF                 	db	255
  2442  007C14  FE                 	db	254
  2443  007C15  00                 	db	0
  2444  007C16  83                 	db	131
  2445  007C17  C3                 	db	195
  2446  007C18  63                 	db	99
  2447  007C19  33                 	db	51
  2448  007C1A  1F                 	db	31
  2449  007C1B  0F                 	db	15
  2450  007C1C  00                 	db	0
  2451  007C1D  10                 	db	16
  2452  007C1E  10                 	db	16
  2453  007C1F  10                 	db	16
  2454  007C20  10                 	db	16
  2455  007C21  10                 	db	16
  2456  007C22  10                 	db	16
  2457  007C23  10                 	db	16
  2458  007C24  10                 	db	16
  2459  007C25  10                 	db	16
  2460  007C26  10                 	db	16
  2461  007C27  10                 	db	16
  2462  007C28  10                 	db	16
  2463  007C29  10                 	db	16
  2464  007C2A  10                 	db	16
  2465  007C2B  10                 	db	16
  2466  007C2C  10                 	db	16
  2467  007C2D  10                 	db	16
  2468  007C2E  10                 	db	16
  2469  007C2F  10                 	db	16
  2470  007C30                     __end_of_n_200_m:
  2471                           	opt stack 0
  2472  007C30                     _n_100_m:
  2473                           	opt stack 0
  2474  007C30  23                 	db	35
  2475  007C31  27                 	db	39
  2476  007C32  26                 	db	38
  2477  007C33  27                 	db	39
  2478  007C34  23                 	db	35
  2479  007C35  20                 	db	32
  2480  007C36  23                 	db	35
  2481  007C37  27                 	db	39
  2482  007C38  26                 	db	38
  2483  007C39  27                 	db	39
  2484  007C3A  23                 	db	35
  2485  007C3B  20                 	db	32
  2486  007C3C  20                 	db	32
  2487  007C3D  27                 	db	39
  2488  007C3E  27                 	db	39
  2489  007C3F  23                 	db	35
  2490  007C40  20                 	db	32
  2491  007C41  20                 	db	32
  2492  007C42  20                 	db	32
  2493  007C43  FE                 	db	254
  2494  007C44  FF                 	db	255
  2495  007C45  03                 	db	3
  2496  007C46  FF                 	db	255
  2497  007C47  FE                 	db	254
  2498  007C48  00                 	db	0
  2499  007C49  FE                 	db	254
  2500  007C4A  FF                 	db	255
  2501  007C4B  03                 	db	3
  2502  007C4C  FF                 	db	255
  2503  007C4D  FE                 	db	254
  2504  007C4E  00                 	db	0
  2505  007C4F  03                 	db	3
  2506  007C50  FF                 	db	255
  2507  007C51  FF                 	db	255
  2508  007C52  03                 	db	3
  2509  007C53  00                 	db	0
  2510  007C54  00                 	db	0
  2511  007C55  00                 	db	0
  2512  007C56  10                 	db	16
  2513  007C57  10                 	db	16
  2514  007C58  10                 	db	16
  2515  007C59  10                 	db	16
  2516  007C5A  10                 	db	16
  2517  007C5B  10                 	db	16
  2518  007C5C  10                 	db	16
  2519  007C5D  10                 	db	16
  2520  007C5E  10                 	db	16
  2521  007C5F  10                 	db	16
  2522  007C60  10                 	db	16
  2523  007C61  10                 	db	16
  2524  007C62  10                 	db	16
  2525  007C63  10                 	db	16
  2526  007C64  10                 	db	16
  2527  007C65  10                 	db	16
  2528  007C66  10                 	db	16
  2529  007C67  10                 	db	16
  2530  007C68  10                 	db	16
  2531  007C69                     __end_of_n_100_m:
  2532                           	opt stack 0
  2533  007C69                     _n_13_m:
  2534                           	opt stack 0
  2535  007C69  20                 	db	32
  2536  007C6A  20                 	db	32
  2537  007C6B  20                 	db	32
  2538  007C6C  20                 	db	32
  2539  007C6D  20                 	db	32
  2540  007C6E  20                 	db	32
  2541  007C6F  23                 	db	35
  2542  007C70  27                 	db	39
  2543  007C71  26                 	db	38
  2544  007C72  26                 	db	38
  2545  007C73  27                 	db	39
  2546  007C74  23                 	db	35
  2547  007C75  20                 	db	32
  2548  007C76  20                 	db	32
  2549  007C77  20                 	db	32
  2550  007C78  27                 	db	39
  2551  007C79  27                 	db	39
  2552  007C7A  23                 	db	35
  2553  007C7B  20                 	db	32
  2554  007C7C  00                 	db	0
  2555  007C7D  00                 	db	0
  2556  007C7E  00                 	db	0
  2557  007C7F  00                 	db	0
  2558  007C80  00                 	db	0
  2559  007C81  00                 	db	0
  2560  007C82  DE                 	db	222
  2561  007C83  FF                 	db	255
  2562  007C84  63                 	db	99
  2563  007C85  63                 	db	99
  2564  007C86  07                 	db	7
  2565  007C87  06                 	db	6
  2566  007C88  00                 	db	0
  2567  007C89  00                 	db	0
  2568  007C8A  03                 	db	3
  2569  007C8B  FF                 	db	255
  2570  007C8C  FF                 	db	255
  2571  007C8D  03                 	db	3
  2572  007C8E  00                 	db	0
  2573  007C8F  10                 	db	16
  2574  007C90  10                 	db	16
  2575  007C91  10                 	db	16
  2576  007C92  10                 	db	16
  2577  007C93  10                 	db	16
  2578  007C94  10                 	db	16
  2579  007C95  10                 	db	16
  2580  007C96  10                 	db	16
  2581  007C97  10                 	db	16
  2582  007C98  10                 	db	16
  2583  007C99  10                 	db	16
  2584  007C9A  10                 	db	16
  2585  007C9B  10                 	db	16
  2586  007C9C  10                 	db	16
  2587  007C9D  10                 	db	16
  2588  007C9E  10                 	db	16
  2589  007C9F  10                 	db	16
  2590  007CA0  10                 	db	16
  2591  007CA1  10                 	db	16
  2592  007CA2                     __end_of_n_13_m:
  2593                           	opt stack 0
  2594  007CA2                     _n_10_m:
  2595                           	opt stack 0
  2596  007CA2  20                 	db	32
  2597  007CA3  20                 	db	32
  2598  007CA4  20                 	db	32
  2599  007CA5  20                 	db	32
  2600  007CA6  20                 	db	32
  2601  007CA7  20                 	db	32
  2602  007CA8  20                 	db	32
  2603  007CA9  23                 	db	35
  2604  007CAA  27                 	db	39
  2605  007CAB  26                 	db	38
  2606  007CAC  26                 	db	38
  2607  007CAD  27                 	db	39
  2608  007CAE  23                 	db	35
  2609  007CAF  20                 	db	32
  2610  007CB0  20                 	db	32
  2611  007CB1  27                 	db	39
  2612  007CB2  27                 	db	39
  2613  007CB3  23                 	db	35
  2614  007CB4  20                 	db	32
  2615  007CB5  00                 	db	0
  2616  007CB6  00                 	db	0
  2617  007CB7  00                 	db	0
  2618  007CB8  00                 	db	0
  2619  007CB9  00                 	db	0
  2620  007CBA  00                 	db	0
  2621  007CBB  00                 	db	0
  2622  007CBC  FE                 	db	254
  2623  007CBD  FF                 	db	255
  2624  007CBE  03                 	db	3
  2625  007CBF  03                 	db	3
  2626  007CC0  FF                 	db	255
  2627  007CC1  FE                 	db	254
  2628  007CC2  00                 	db	0
  2629  007CC3  03                 	db	3
  2630  007CC4  FF                 	db	255
  2631  007CC5  FF                 	db	255
  2632  007CC6  03                 	db	3
  2633  007CC7  00                 	db	0
  2634  007CC8  10                 	db	16
  2635  007CC9  10                 	db	16
  2636  007CCA  10                 	db	16
  2637  007CCB  10                 	db	16
  2638  007CCC  10                 	db	16
  2639  007CCD  10                 	db	16
  2640  007CCE  10                 	db	16
  2641  007CCF  10                 	db	16
  2642  007CD0  10                 	db	16
  2643  007CD1  10                 	db	16
  2644  007CD2  10                 	db	16
  2645  007CD3  10                 	db	16
  2646  007CD4  10                 	db	16
  2647  007CD5  10                 	db	16
  2648  007CD6  10                 	db	16
  2649  007CD7  10                 	db	16
  2650  007CD8  10                 	db	16
  2651  007CD9  10                 	db	16
  2652  007CDA  10                 	db	16
  2653  007CDB                     __end_of_n_10_m:
  2654                           	opt stack 0
  2655  007CDB                     _n_5_m:
  2656                           	opt stack 0
  2657  007CDB  20                 	db	32
  2658  007CDC  20                 	db	32
  2659  007CDD  20                 	db	32
  2660  007CDE  20                 	db	32
  2661  007CDF  20                 	db	32
  2662  007CE0  20                 	db	32
  2663  007CE1  26                 	db	38
  2664  007CE2  26                 	db	38
  2665  007CE3  26                 	db	38
  2666  007CE4  26                 	db	38
  2667  007CE5  26                 	db	38
  2668  007CE6  27                 	db	39
  2669  007CE7  27                 	db	39
  2670  007CE8  20                 	db	32
  2671  007CE9  20                 	db	32
  2672  007CEA  20                 	db	32
  2673  007CEB  20                 	db	32
  2674  007CEC  20                 	db	32
  2675  007CED  20                 	db	32
  2676  007CEE  00                 	db	0
  2677  007CEF  00                 	db	0
  2678  007CF0  00                 	db	0
  2679  007CF1  00                 	db	0
  2680  007CF2  00                 	db	0
  2681  007CF3  00                 	db	0
  2682  007CF4  3E                 	db	62
  2683  007CF5  7F                 	db	127
  2684  007CF6  63                 	db	99
  2685  007CF7  63                 	db	99
  2686  007CF8  63                 	db	99
  2687  007CF9  E3                 	db	227
  2688  007CFA  E3                 	db	227
  2689  007CFB  00                 	db	0
  2690  007CFC  00                 	db	0
  2691  007CFD  00                 	db	0
  2692  007CFE  00                 	db	0
  2693  007CFF  00                 	db	0
  2694  007D00  00                 	db	0
  2695  007D01  10                 	db	16
  2696  007D02  10                 	db	16
  2697  007D03  10                 	db	16
  2698  007D04  10                 	db	16
  2699  007D05  10                 	db	16
  2700  007D06  10                 	db	16
  2701  007D07  10                 	db	16
  2702  007D08  10                 	db	16
  2703  007D09  10                 	db	16
  2704  007D0A  10                 	db	16
  2705  007D0B  10                 	db	16
  2706  007D0C  10                 	db	16
  2707  007D0D  10                 	db	16
  2708  007D0E  10                 	db	16
  2709  007D0F  10                 	db	16
  2710  007D10  10                 	db	16
  2711  007D11  10                 	db	16
  2712  007D12  10                 	db	16
  2713  007D13  10                 	db	16
  2714  007D14                     __end_of_n_5_m:
  2715                           	opt stack 0
  2716  007D14                     _n_6_m:
  2717                           	opt stack 0
  2718  007D14  20                 	db	32
  2719  007D15  20                 	db	32
  2720  007D16  20                 	db	32
  2721  007D17  20                 	db	32
  2722  007D18  20                 	db	32
  2723  007D19  20                 	db	32
  2724  007D1A  23                 	db	35
  2725  007D1B  27                 	db	39
  2726  007D1C  26                 	db	38
  2727  007D1D  26                 	db	38
  2728  007D1E  26                 	db	38
  2729  007D1F  27                 	db	39
  2730  007D20  23                 	db	35
  2731  007D21  20                 	db	32
  2732  007D22  20                 	db	32
  2733  007D23  20                 	db	32
  2734  007D24  20                 	db	32
  2735  007D25  20                 	db	32
  2736  007D26  20                 	db	32
  2737  007D27  00                 	db	0
  2738  007D28  00                 	db	0
  2739  007D29  00                 	db	0
  2740  007D2A  00                 	db	0
  2741  007D2B  00                 	db	0
  2742  007D2C  00                 	db	0
  2743  007D2D  3E                 	db	62
  2744  007D2E  7F                 	db	127
  2745  007D2F  63                 	db	99
  2746  007D30  63                 	db	99
  2747  007D31  63                 	db	99
  2748  007D32  FF                 	db	255
  2749  007D33  FE                 	db	254
  2750  007D34  00                 	db	0
  2751  007D35  00                 	db	0
  2752  007D36  00                 	db	0
  2753  007D37  00                 	db	0
  2754  007D38  00                 	db	0
  2755  007D39  00                 	db	0
  2756  007D3A  10                 	db	16
  2757  007D3B  10                 	db	16
  2758  007D3C  10                 	db	16
  2759  007D3D  10                 	db	16
  2760  007D3E  10                 	db	16
  2761  007D3F  10                 	db	16
  2762  007D40  10                 	db	16
  2763  007D41  10                 	db	16
  2764  007D42  10                 	db	16
  2765  007D43  10                 	db	16
  2766  007D44  10                 	db	16
  2767  007D45  10                 	db	16
  2768  007D46  10                 	db	16
  2769  007D47  10                 	db	16
  2770  007D48  10                 	db	16
  2771  007D49  10                 	db	16
  2772  007D4A  10                 	db	16
  2773  007D4B  10                 	db	16
  2774  007D4C  10                 	db	16
  2775  007D4D                     __end_of_n_6_m:
  2776                           	opt stack 0
  2777  007D4D                     _n_4_m:
  2778                           	opt stack 0
  2779  007D4D  20                 	db	32
  2780  007D4E  20                 	db	32
  2781  007D4F  20                 	db	32
  2782  007D50  20                 	db	32
  2783  007D51  20                 	db	32
  2784  007D52  20                 	db	32
  2785  007D53  27                 	db	39
  2786  007D54  27                 	db	39
  2787  007D55  20                 	db	32
  2788  007D56  20                 	db	32
  2789  007D57  20                 	db	32
  2790  007D58  27                 	db	39
  2791  007D59  27                 	db	39
  2792  007D5A  20                 	db	32
  2793  007D5B  20                 	db	32
  2794  007D5C  20                 	db	32
  2795  007D5D  20                 	db	32
  2796  007D5E  20                 	db	32
  2797  007D5F  20                 	db	32
  2798  007D60  00                 	db	0
  2799  007D61  00                 	db	0
  2800  007D62  00                 	db	0
  2801  007D63  00                 	db	0
  2802  007D64  00                 	db	0
  2803  007D65  00                 	db	0
  2804  007D66  FF                 	db	255
  2805  007D67  FF                 	db	255
  2806  007D68  60                 	db	96
  2807  007D69  60                 	db	96
  2808  007D6A  60                 	db	96
  2809  007D6B  E0                 	db	224
  2810  007D6C  E0                 	db	224
  2811  007D6D  00                 	db	0
  2812  007D6E  00                 	db	0
  2813  007D6F  00                 	db	0
  2814  007D70  00                 	db	0
  2815  007D71  00                 	db	0
  2816  007D72  00                 	db	0
  2817  007D73  10                 	db	16
  2818  007D74  10                 	db	16
  2819  007D75  10                 	db	16
  2820  007D76  10                 	db	16
  2821  007D77  10                 	db	16
  2822  007D78  10                 	db	16
  2823  007D79  10                 	db	16
  2824  007D7A  10                 	db	16
  2825  007D7B  10                 	db	16
  2826  007D7C  10                 	db	16
  2827  007D7D  10                 	db	16
  2828  007D7E  10                 	db	16
  2829  007D7F  10                 	db	16
  2830  007D80  10                 	db	16
  2831  007D81  10                 	db	16
  2832  007D82  10                 	db	16
  2833  007D83  10                 	db	16
  2834  007D84  10                 	db	16
  2835  007D85  10                 	db	16
  2836  007D86                     __end_of_n_4_m:
  2837                           	opt stack 0
  2838  007D86                     _n_3_m:
  2839                           	opt stack 0
  2840  007D86  20                 	db	32
  2841  007D87  20                 	db	32
  2842  007D88  20                 	db	32
  2843  007D89  20                 	db	32
  2844  007D8A  20                 	db	32
  2845  007D8B  20                 	db	32
  2846  007D8C  20                 	db	32
  2847  007D8D  23                 	db	35
  2848  007D8E  27                 	db	39
  2849  007D8F  26                 	db	38
  2850  007D90  26                 	db	38
  2851  007D91  27                 	db	39
  2852  007D92  23                 	db	35
  2853  007D93  20                 	db	32
  2854  007D94  20                 	db	32
  2855  007D95  20                 	db	32
  2856  007D96  20                 	db	32
  2857  007D97  20                 	db	32
  2858  007D98  20                 	db	32
  2859  007D99  00                 	db	0
  2860  007D9A  00                 	db	0
  2861  007D9B  00                 	db	0
  2862  007D9C  00                 	db	0
  2863  007D9D  00                 	db	0
  2864  007D9E  00                 	db	0
  2865  007D9F  00                 	db	0
  2866  007DA0  DE                 	db	222
  2867  007DA1  FF                 	db	255
  2868  007DA2  63                 	db	99
  2869  007DA3  63                 	db	99
  2870  007DA4  07                 	db	7
  2871  007DA5  06                 	db	6
  2872  007DA6  00                 	db	0
  2873  007DA7  00                 	db	0
  2874  007DA8  00                 	db	0
  2875  007DA9  00                 	db	0
  2876  007DAA  00                 	db	0
  2877  007DAB  00                 	db	0
  2878  007DAC  10                 	db	16
  2879  007DAD  10                 	db	16
  2880  007DAE  10                 	db	16
  2881  007DAF  10                 	db	16
  2882  007DB0  10                 	db	16
  2883  007DB1  10                 	db	16
  2884  007DB2  10                 	db	16
  2885  007DB3  10                 	db	16
  2886  007DB4  10                 	db	16
  2887  007DB5  10                 	db	16
  2888  007DB6  10                 	db	16
  2889  007DB7  10                 	db	16
  2890  007DB8  10                 	db	16
  2891  007DB9  10                 	db	16
  2892  007DBA  10                 	db	16
  2893  007DBB  10                 	db	16
  2894  007DBC  10                 	db	16
  2895  007DBD  10                 	db	16
  2896  007DBE  10                 	db	16
  2897  007DBF                     __end_of_n_3_m:
  2898                           	opt stack 0
  2899  007DBF                     _n_2_m:
  2900                           	opt stack 0
  2901  007DBF  20                 	db	32
  2902  007DC0  20                 	db	32
  2903  007DC1  20                 	db	32
  2904  007DC2  20                 	db	32
  2905  007DC3  20                 	db	32
  2906  007DC4  20                 	db	32
  2907  007DC5  20                 	db	32
  2908  007DC6  23                 	db	35
  2909  007DC7  27                 	db	39
  2910  007DC8  26                 	db	38
  2911  007DC9  26                 	db	38
  2912  007DCA  27                 	db	39
  2913  007DCB  23                 	db	35
  2914  007DCC  20                 	db	32
  2915  007DCD  20                 	db	32
  2916  007DCE  20                 	db	32
  2917  007DCF  20                 	db	32
  2918  007DD0  20                 	db	32
  2919  007DD1  20                 	db	32
  2920  007DD2  00                 	db	0
  2921  007DD3  00                 	db	0
  2922  007DD4  00                 	db	0
  2923  007DD5  00                 	db	0
  2924  007DD6  00                 	db	0
  2925  007DD7  00                 	db	0
  2926  007DD8  00                 	db	0
  2927  007DD9  83                 	db	131
  2928  007DDA  C3                 	db	195
  2929  007DDB  63                 	db	99
  2930  007DDC  33                 	db	51
  2931  007DDD  1F                 	db	31
  2932  007DDE  0F                 	db	15
  2933  007DDF  00                 	db	0
  2934  007DE0  00                 	db	0
  2935  007DE1  00                 	db	0
  2936  007DE2  00                 	db	0
  2937  007DE3  00                 	db	0
  2938  007DE4  00                 	db	0
  2939  007DE5  10                 	db	16
  2940  007DE6  10                 	db	16
  2941  007DE7  10                 	db	16
  2942  007DE8  10                 	db	16
  2943  007DE9  10                 	db	16
  2944  007DEA  10                 	db	16
  2945  007DEB  10                 	db	16
  2946  007DEC  10                 	db	16
  2947  007DED  10                 	db	16
  2948  007DEE  10                 	db	16
  2949  007DEF  10                 	db	16
  2950  007DF0  10                 	db	16
  2951  007DF1  10                 	db	16
  2952  007DF2  10                 	db	16
  2953  007DF3  10                 	db	16
  2954  007DF4  10                 	db	16
  2955  007DF5  10                 	db	16
  2956  007DF6  10                 	db	16
  2957  007DF7  10                 	db	16
  2958  007DF8                     __end_of_n_2_m:
  2959                           	opt stack 0
  2960  007DF8                     _n_2P5_m:
  2961                           	opt stack 0
  2962  007DF8  26                 	db	38
  2963  007DF9  26                 	db	38
  2964  007DFA  26                 	db	38
  2965  007DFB  27                 	db	39
  2966  007DFC  27                 	db	39
  2967  007DFD  20                 	db	32
  2968  007DFE  20                 	db	32
  2969  007DFF  20                 	db	32
  2970  007E00  20                 	db	32
  2971  007E01  23                 	db	35
  2972  007E02  27                 	db	39
  2973  007E03  26                 	db	38
  2974  007E04  26                 	db	38
  2975  007E05  27                 	db	39
  2976  007E06  23                 	db	35
  2977  007E07  20                 	db	32
  2978  007E08  20                 	db	32
  2979  007E09  20                 	db	32
  2980  007E0A  20                 	db	32
  2981  007E0B  3E                 	db	62
  2982  007E0C  7F                 	db	127
  2983  007E0D  63                 	db	99
  2984  007E0E  E3                 	db	227
  2985  007E0F  C3                 	db	195
  2986  007E10  00                 	db	0
  2987  007E11  06                 	db	6
  2988  007E12  06                 	db	6
  2989  007E13  00                 	db	0
  2990  007E14  83                 	db	131
  2991  007E15  C3                 	db	195
  2992  007E16  63                 	db	99
  2993  007E17  33                 	db	51
  2994  007E18  1F                 	db	31
  2995  007E19  0F                 	db	15
  2996  007E1A  00                 	db	0
  2997  007E1B  00                 	db	0
  2998  007E1C  00                 	db	0
  2999  007E1D  00                 	db	0
  3000  007E1E  10                 	db	16
  3001  007E1F  10                 	db	16
  3002  007E20  10                 	db	16
  3003  007E21  10                 	db	16
  3004  007E22  10                 	db	16
  3005  007E23  10                 	db	16
  3006  007E24  10                 	db	16
  3007  007E25  10                 	db	16
  3008  007E26  10                 	db	16
  3009  007E27  10                 	db	16
  3010  007E28  10                 	db	16
  3011  007E29  10                 	db	16
  3012  007E2A  10                 	db	16
  3013  007E2B  10                 	db	16
  3014  007E2C  10                 	db	16
  3015  007E2D  10                 	db	16
  3016  007E2E  10                 	db	16
  3017  007E2F  10                 	db	16
  3018  007E30  10                 	db	16
  3019  007E31                     __end_of_n_2P5_m:
  3020                           	opt stack 0
  3021  007E31                     _n_1P5_m:
  3022                           	opt stack 0
  3023  007E31  26                 	db	38
  3024  007E32  26                 	db	38
  3025  007E33  26                 	db	38
  3026  007E34  27                 	db	39
  3027  007E35  27                 	db	39
  3028  007E36  20                 	db	32
  3029  007E37  20                 	db	32
  3030  007E38  20                 	db	32
  3031  007E39  20                 	db	32
  3032  007E3A  20                 	db	32
  3033  007E3B  27                 	db	39
  3034  007E3C  27                 	db	39
  3035  007E3D  23                 	db	35
  3036  007E3E  20                 	db	32
  3037  007E3F  20                 	db	32
  3038  007E40  20                 	db	32
  3039  007E41  20                 	db	32
  3040  007E42  20                 	db	32
  3041  007E43  20                 	db	32
  3042  007E44  3E                 	db	62
  3043  007E45  7F                 	db	127
  3044  007E46  63                 	db	99
  3045  007E47  E3                 	db	227
  3046  007E48  C3                 	db	195
  3047  007E49  00                 	db	0
  3048  007E4A  06                 	db	6
  3049  007E4B  06                 	db	6
  3050  007E4C  00                 	db	0
  3051  007E4D  03                 	db	3
  3052  007E4E  FF                 	db	255
  3053  007E4F  FF                 	db	255
  3054  007E50  03                 	db	3
  3055  007E51  00                 	db	0
  3056  007E52  00                 	db	0
  3057  007E53  00                 	db	0
  3058  007E54  00                 	db	0
  3059  007E55  00                 	db	0
  3060  007E56  00                 	db	0
  3061  007E57  10                 	db	16
  3062  007E58  10                 	db	16
  3063  007E59  10                 	db	16
  3064  007E5A  10                 	db	16
  3065  007E5B  10                 	db	16
  3066  007E5C  10                 	db	16
  3067  007E5D  10                 	db	16
  3068  007E5E  10                 	db	16
  3069  007E5F  10                 	db	16
  3070  007E60  10                 	db	16
  3071  007E61  10                 	db	16
  3072  007E62  10                 	db	16
  3073  007E63  10                 	db	16
  3074  007E64  10                 	db	16
  3075  007E65  10                 	db	16
  3076  007E66  10                 	db	16
  3077  007E67  10                 	db	16
  3078  007E68  10                 	db	16
  3079  007E69  10                 	db	16
  3080  007E6A                     __end_of_n_1P5_m:
  3081                           	opt stack 0
  3082  007E6A                     _n_1_m:
  3083                           	opt stack 0
  3084  007E6A  20                 	db	32
  3085  007E6B  20                 	db	32
  3086  007E6C  20                 	db	32
  3087  007E6D  20                 	db	32
  3088  007E6E  20                 	db	32
  3089  007E6F  20                 	db	32
  3090  007E70  20                 	db	32
  3091  007E71  20                 	db	32
  3092  007E72  27                 	db	39
  3093  007E73  27                 	db	39
  3094  007E74  23                 	db	35
  3095  007E75  20                 	db	32
  3096  007E76  20                 	db	32
  3097  007E77  20                 	db	32
  3098  007E78  20                 	db	32
  3099  007E79  20                 	db	32
  3100  007E7A  20                 	db	32
  3101  007E7B  20                 	db	32
  3102  007E7C  20                 	db	32
  3103  007E7D  00                 	db	0
  3104  007E7E  00                 	db	0
  3105  007E7F  00                 	db	0
  3106  007E80  00                 	db	0
  3107  007E81  00                 	db	0
  3108  007E82  00                 	db	0
  3109  007E83  00                 	db	0
  3110  007E84  03                 	db	3
  3111  007E85  FF                 	db	255
  3112  007E86  FF                 	db	255
  3113  007E87  03                 	db	3
  3114  007E88  00                 	db	0
  3115  007E89  00                 	db	0
  3116  007E8A  00                 	db	0
  3117  007E8B  00                 	db	0
  3118  007E8C  00                 	db	0
  3119  007E8D  00                 	db	0
  3120  007E8E  00                 	db	0
  3121  007E8F  00                 	db	0
  3122  007E90  10                 	db	16
  3123  007E91  10                 	db	16
  3124  007E92  10                 	db	16
  3125  007E93  10                 	db	16
  3126  007E94  10                 	db	16
  3127  007E95  10                 	db	16
  3128  007E96  10                 	db	16
  3129  007E97  10                 	db	16
  3130  007E98  10                 	db	16
  3131  007E99  10                 	db	16
  3132  007E9A  10                 	db	16
  3133  007E9B  10                 	db	16
  3134  007E9C  10                 	db	16
  3135  007E9D  10                 	db	16
  3136  007E9E  10                 	db	16
  3137  007E9F  10                 	db	16
  3138  007EA0  10                 	db	16
  3139  007EA1  10                 	db	16
  3140  007EA2  10                 	db	16
  3141  007EA3                     __end_of_n_1_m:
  3142                           	opt stack 0
  3143  007EA3                     _n_0_m:
  3144                           	opt stack 0
  3145  007EA3  20                 	db	32
  3146  007EA4  20                 	db	32
  3147  007EA5  20                 	db	32
  3148  007EA6  20                 	db	32
  3149  007EA7  20                 	db	32
  3150  007EA8  20                 	db	32
  3151  007EA9  23                 	db	35
  3152  007EAA  27                 	db	39
  3153  007EAB  26                 	db	38
  3154  007EAC  26                 	db	38
  3155  007EAD  26                 	db	38
  3156  007EAE  27                 	db	39
  3157  007EAF  23                 	db	35
  3158  007EB0  20                 	db	32
  3159  007EB1  20                 	db	32
  3160  007EB2  20                 	db	32
  3161  007EB3  20                 	db	32
  3162  007EB4  20                 	db	32
  3163  007EB5  20                 	db	32
  3164  007EB6  00                 	db	0
  3165  007EB7  00                 	db	0
  3166  007EB8  00                 	db	0
  3167  007EB9  00                 	db	0
  3168  007EBA  00                 	db	0
  3169  007EBB  00                 	db	0
  3170  007EBC  FE                 	db	254
  3171  007EBD  FF                 	db	255
  3172  007EBE  03                 	db	3
  3173  007EBF  03                 	db	3
  3174  007EC0  03                 	db	3
  3175  007EC1  FF                 	db	255
  3176  007EC2  FE                 	db	254
  3177  007EC3  00                 	db	0
  3178  007EC4  00                 	db	0
  3179  007EC5  00                 	db	0
  3180  007EC6  00                 	db	0
  3181  007EC7  00                 	db	0
  3182  007EC8  00                 	db	0
  3183  007EC9  10                 	db	16
  3184  007ECA  10                 	db	16
  3185  007ECB  10                 	db	16
  3186  007ECC  10                 	db	16
  3187  007ECD  10                 	db	16
  3188  007ECE  10                 	db	16
  3189  007ECF  10                 	db	16
  3190  007ED0  10                 	db	16
  3191  007ED1  10                 	db	16
  3192  007ED2  10                 	db	16
  3193  007ED3  10                 	db	16
  3194  007ED4  10                 	db	16
  3195  007ED5  10                 	db	16
  3196  007ED6  10                 	db	16
  3197  007ED7  10                 	db	16
  3198  007ED8  10                 	db	16
  3199  007ED9  10                 	db	16
  3200  007EDA  10                 	db	16
  3201  007EDB  10                 	db	16
  3202  007EDC                     __end_of_n_0_m:
  3203                           	opt stack 0
  3204  007EDC                     _bat100_m:
  3205                           	opt stack 0
  3206  007EDC  80                 	db	128
  3207  007EDD  80                 	db	128
  3208  007EDE  80                 	db	128
  3209  007EDF  80                 	db	128
  3210  007EE0  80                 	db	128
  3211  007EE1  80                 	db	128
  3212  007EE2  80                 	db	128
  3213  007EE3  8F                 	db	143
  3214  007EE4  8F                 	db	143
  3215  007EE5  BF                 	db	191
  3216  007EE6  BF                 	db	191
  3217  007EE7  BF                 	db	191
  3218  007EE8  BF                 	db	191
  3219  007EE9  BF                 	db	191
  3220  007EEA  8F                 	db	143
  3221  007EEB  8F                 	db	143
  3222  007EEC  80                 	db	128
  3223  007EED  80                 	db	128
  3224  007EEE  80                 	db	128
  3225  007EEF  80                 	db	128
  3226  007EF0  80                 	db	128
  3227  007EF1  80                 	db	128
  3228  007EF2  80                 	db	128
  3229  007EF3  01                 	db	1
  3230  007EF4  01                 	db	1
  3231  007EF5  01                 	db	1
  3232  007EF6  01                 	db	1
  3233  007EF7  01                 	db	1
  3234  007EF8  01                 	db	1
  3235  007EF9  01                 	db	1
  3236  007EFA  FD                 	db	253
  3237  007EFB  FD                 	db	253
  3238  007EFC  FD                 	db	253
  3239  007EFD  FD                 	db	253
  3240  007EFE  FD                 	db	253
  3241  007EFF  FD                 	db	253
  3242  007F00  FD                 	db	253
  3243  007F01  FD                 	db	253
  3244  007F02  FD                 	db	253
  3245  007F03  01                 	db	1
  3246  007F04  01                 	db	1
  3247  007F05  01                 	db	1
  3248  007F06  01                 	db	1
  3249  007F07  01                 	db	1
  3250  007F08  01                 	db	1
  3251  007F09  01                 	db	1
  3252  007F0A                     __end_of_bat100_m:
  3253                           	opt stack 0
  3254  007F0A                     _bat80_m:
  3255                           	opt stack 0
  3256  007F0A  80                 	db	128
  3257  007F0B  80                 	db	128
  3258  007F0C  80                 	db	128
  3259  007F0D  80                 	db	128
  3260  007F0E  80                 	db	128
  3261  007F0F  80                 	db	128
  3262  007F10  80                 	db	128
  3263  007F11  8F                 	db	143
  3264  007F12  8F                 	db	143
  3265  007F13  BF                 	db	191
  3266  007F14  A7                 	db	167
  3267  007F15  A7                 	db	167
  3268  007F16  A7                 	db	167
  3269  007F17  BF                 	db	191
  3270  007F18  8F                 	db	143
  3271  007F19  8F                 	db	143
  3272  007F1A  80                 	db	128
  3273  007F1B  80                 	db	128
  3274  007F1C  80                 	db	128
  3275  007F1D  80                 	db	128
  3276  007F1E  80                 	db	128
  3277  007F1F  80                 	db	128
  3278  007F20  80                 	db	128
  3279  007F21  01                 	db	1
  3280  007F22  01                 	db	1
  3281  007F23  01                 	db	1
  3282  007F24  01                 	db	1
  3283  007F25  01                 	db	1
  3284  007F26  01                 	db	1
  3285  007F27  01                 	db	1
  3286  007F28  FD                 	db	253
  3287  007F29  FD                 	db	253
  3288  007F2A  FD                 	db	253
  3289  007F2B  FD                 	db	253
  3290  007F2C  FD                 	db	253
  3291  007F2D  FD                 	db	253
  3292  007F2E  FD                 	db	253
  3293  007F2F  FD                 	db	253
  3294  007F30  FD                 	db	253
  3295  007F31  01                 	db	1
  3296  007F32  01                 	db	1
  3297  007F33  01                 	db	1
  3298  007F34  01                 	db	1
  3299  007F35  01                 	db	1
  3300  007F36  01                 	db	1
  3301  007F37  01                 	db	1
  3302  007F38                     __end_of_bat80_m:
  3303                           	opt stack 0
  3304  007F38                     _bat60_m:
  3305                           	opt stack 0
  3306  007F38  80                 	db	128
  3307  007F39  80                 	db	128
  3308  007F3A  80                 	db	128
  3309  007F3B  80                 	db	128
  3310  007F3C  80                 	db	128
  3311  007F3D  80                 	db	128
  3312  007F3E  80                 	db	128
  3313  007F3F  8F                 	db	143
  3314  007F40  89                 	db	137
  3315  007F41  B9                 	db	185
  3316  007F42  A1                 	db	161
  3317  007F43  A1                 	db	161
  3318  007F44  A1                 	db	161
  3319  007F45  B9                 	db	185
  3320  007F46  89                 	db	137
  3321  007F47  8F                 	db	143
  3322  007F48  80                 	db	128
  3323  007F49  80                 	db	128
  3324  007F4A  80                 	db	128
  3325  007F4B  80                 	db	128
  3326  007F4C  80                 	db	128
  3327  007F4D  80                 	db	128
  3328  007F4E  80                 	db	128
  3329  007F4F  01                 	db	1
  3330  007F50  01                 	db	1
  3331  007F51  01                 	db	1
  3332  007F52  01                 	db	1
  3333  007F53  01                 	db	1
  3334  007F54  01                 	db	1
  3335  007F55  01                 	db	1
  3336  007F56  FD                 	db	253
  3337  007F57  FD                 	db	253
  3338  007F58  FD                 	db	253
  3339  007F59  FD                 	db	253
  3340  007F5A  FD                 	db	253
  3341  007F5B  FD                 	db	253
  3342  007F5C  FD                 	db	253
  3343  007F5D  FD                 	db	253
  3344  007F5E  FD                 	db	253
  3345  007F5F  01                 	db	1
  3346  007F60  01                 	db	1
  3347  007F61  01                 	db	1
  3348  007F62  01                 	db	1
  3349  007F63  01                 	db	1
  3350  007F64  01                 	db	1
  3351  007F65  01                 	db	1
  3352  007F66                     __end_of_bat60_m:
  3353                           	opt stack 0
  3354  007F66                     _bat40_m:
  3355                           	opt stack 0
  3356  007F66  80                 	db	128
  3357  007F67  80                 	db	128
  3358  007F68  80                 	db	128
  3359  007F69  80                 	db	128
  3360  007F6A  80                 	db	128
  3361  007F6B  80                 	db	128
  3362  007F6C  80                 	db	128
  3363  007F6D  8F                 	db	143
  3364  007F6E  88                 	db	136
  3365  007F6F  B8                 	db	184
  3366  007F70  A0                 	db	160
  3367  007F71  A0                 	db	160
  3368  007F72  A0                 	db	160
  3369  007F73  B8                 	db	184
  3370  007F74  88                 	db	136
  3371  007F75  8F                 	db	143
  3372  007F76  80                 	db	128
  3373  007F77  80                 	db	128
  3374  007F78  80                 	db	128
  3375  007F79  80                 	db	128
  3376  007F7A  80                 	db	128
  3377  007F7B  80                 	db	128
  3378  007F7C  80                 	db	128
  3379  007F7D  01                 	db	1
  3380  007F7E  01                 	db	1
  3381  007F7F  01                 	db	1
  3382  007F80  01                 	db	1
  3383  007F81  01                 	db	1
  3384  007F82  01                 	db	1
  3385  007F83  01                 	db	1
  3386  007F84  FD                 	db	253
  3387  007F85  7D                 	db	125
  3388  007F86  7D                 	db	125
  3389  007F87  7D                 	db	125
  3390  007F88  7D                 	db	125
  3391  007F89  7D                 	db	125
  3392  007F8A  7D                 	db	125
  3393  007F8B  7D                 	db	125
  3394  007F8C  FD                 	db	253
  3395  007F8D  01                 	db	1
  3396  007F8E  01                 	db	1
  3397  007F8F  01                 	db	1
  3398  007F90  01                 	db	1
  3399  007F91  01                 	db	1
  3400  007F92  01                 	db	1
  3401  007F93  01                 	db	1
  3402  007F94                     __end_of_bat40_m:
  3403                           	opt stack 0
  3404  007F94                     _bat20_m:
  3405                           	opt stack 0
  3406  007F94  80                 	db	128
  3407  007F95  80                 	db	128
  3408  007F96  80                 	db	128
  3409  007F97  80                 	db	128
  3410  007F98  80                 	db	128
  3411  007F99  80                 	db	128
  3412  007F9A  80                 	db	128
  3413  007F9B  8F                 	db	143
  3414  007F9C  88                 	db	136
  3415  007F9D  B8                 	db	184
  3416  007F9E  A0                 	db	160
  3417  007F9F  A0                 	db	160
  3418  007FA0  A0                 	db	160
  3419  007FA1  B8                 	db	184
  3420  007FA2  88                 	db	136
  3421  007FA3  8F                 	db	143
  3422  007FA4  80                 	db	128
  3423  007FA5  80                 	db	128
  3424  007FA6  80                 	db	128
  3425  007FA7  80                 	db	128
  3426  007FA8  80                 	db	128
  3427  007FA9  80                 	db	128
  3428  007FAA  80                 	db	128
  3429  007FAB  01                 	db	1
  3430  007FAC  01                 	db	1
  3431  007FAD  01                 	db	1
  3432  007FAE  01                 	db	1
  3433  007FAF  01                 	db	1
  3434  007FB0  01                 	db	1
  3435  007FB1  01                 	db	1
  3436  007FB2  FD                 	db	253
  3437  007FB3  1D                 	db	29
  3438  007FB4  1D                 	db	29
  3439  007FB5  1D                 	db	29
  3440  007FB6  1D                 	db	29
  3441  007FB7  1D                 	db	29
  3442  007FB8  1D                 	db	29
  3443  007FB9  1D                 	db	29
  3444  007FBA  FD                 	db	253
  3445  007FBB  01                 	db	1
  3446  007FBC  01                 	db	1
  3447  007FBD  01                 	db	1
  3448  007FBE  01                 	db	1
  3449  007FBF  01                 	db	1
  3450  007FC0  01                 	db	1
  3451  007FC1  01                 	db	1
  3452  007FC2                     __end_of_bat20_m:
  3453                           	opt stack 0
  3454  007FC2                     _bat00_m:
  3455                           	opt stack 0
  3456  007FC2  80                 	db	128
  3457  007FC3  80                 	db	128
  3458  007FC4  80                 	db	128
  3459  007FC5  80                 	db	128
  3460  007FC6  80                 	db	128
  3461  007FC7  80                 	db	128
  3462  007FC8  80                 	db	128
  3463  007FC9  8F                 	db	143
  3464  007FCA  88                 	db	136
  3465  007FCB  B8                 	db	184
  3466  007FCC  A0                 	db	160
  3467  007FCD  A0                 	db	160
  3468  007FCE  A0                 	db	160
  3469  007FCF  B8                 	db	184
  3470  007FD0  88                 	db	136
  3471  007FD1  8F                 	db	143
  3472  007FD2  80                 	db	128
  3473  007FD3  80                 	db	128
  3474  007FD4  80                 	db	128
  3475  007FD5  80                 	db	128
  3476  007FD6  80                 	db	128
  3477  007FD7  80                 	db	128
  3478  007FD8  80                 	db	128
  3479  007FD9  01                 	db	1
  3480  007FDA  01                 	db	1
  3481  007FDB  01                 	db	1
  3482  007FDC  01                 	db	1
  3483  007FDD  01                 	db	1
  3484  007FDE  01                 	db	1
  3485  007FDF  01                 	db	1
  3486  007FE0  FD                 	db	253
  3487  007FE1  05                 	db	5
  3488  007FE2  05                 	db	5
  3489  007FE3  05                 	db	5
  3490  007FE4  05                 	db	5
  3491  007FE5  05                 	db	5
  3492  007FE6  05                 	db	5
  3493  007FE7  05                 	db	5
  3494  007FE8  FD                 	db	253
  3495  007FE9  01                 	db	1
  3496  007FEA  01                 	db	1
  3497  007FEB  01                 	db	1
  3498  007FEC  01                 	db	1
  3499  007FED  01                 	db	1
  3500  007FEE  01                 	db	1
  3501  007FEF  01                 	db	1
  3502  007FF0                     __end_of_bat00_m:
  3503                           	opt stack 0
  3504  0000                     _TMR0	set	4054
  3505  0000                     _TMR1	set	4046
  3506  0000                     _PORTCbits	set	3970
  3507  0000                     _ADRESL	set	4035
  3508  0000                     _ADRESH	set	4036
  3509  0000                     _ADCON0bits	set	4034
  3510  0000                     _ADCON2bits	set	4032
  3511  0000                     _PORTC	set	3970
  3512  0000                     _PORTAbits	set	3968
  3513  0000                     _T1CONbits	set	4045
  3514  0000                     _INTCON3bits	set	4080
  3515  0000                     _LATCbits	set	3979
  3516  0000                     _LATAbits	set	3977
  3517  0000                     _PORTBbits	set	3969
  3518  0000                     _T0CONbits	set	4053
  3519  0000                     _PORTDbits	set	3971
  3520  0000                     _INTCONbits	set	4082
  3521  0000                     _INTCON2bits	set	4081
  3522  0000                     _TRISAbits	set	3986
  3523  0000                     _TRISBbits	set	3987
  3524  0000                     _ADCON1	set	4033
  3525  0000                     _LATDbits	set	3980
  3526  0000                     _TRISDbits	set	3989
  3527  0000                     _LATEbits	set	3981
  3528  0000                     _TRISEbits	set	3990
  3529  0000                     _TXREG	set	4013
  3530  0000                     _PIR1bits	set	3998
  3531  0000                     _TXSTAbits	set	4012
  3532  0000                     _RCSTAbits	set	4011
  3533  0000                     _SPBRG	set	4015
  3534  0000                     _TRISCbits	set	3988
  3535  0000                     _GIE	set	32663
  3536  0000                     _T08BIT	set	32430
  3537  0000                     _T0PS0	set	32424
  3538  0000                     _T0PS1	set	32425
  3539  0000                     _T0PS2	set	32426
  3540  0000                     _PSA	set	32427
  3541  0000                     _T0CS	set	32429
  3542  0000                     _T0IF	set	32658
  3543  0000                     _T0IE	set	32661
  3544  007FF0                     STR_1:
  3545  007FF0  69                 	db	105	;'i'
  3546  007FF1  6E                 	db	110	;'n'
  3547  007FF2  20                 	db	32
  3548  007FF3  74                 	db	116	;'t'
  3549  007FF4  65                 	db	101	;'e'
  3550  007FF5  73                 	db	115	;'s'
  3551  007FF6  74                 	db	116	;'t'
  3552  007FF7  20                 	db	32
  3553  007FF8  6D                 	db	109	;'m'
  3554  007FF9  6F                 	db	111	;'o'
  3555  007FFA  64                 	db	100	;'d'
  3556  007FFB  65                 	db	101	;'e'
  3557  007FFC  0D                 	db	13
  3558  007FFD  0A                 	db	10
  3559  007FFE  00                 	db	0
  3560                           
  3561                           ; #config settings
  3562  007FFF  00                 	db	0	; dummy byte at the end
  3563  0000                     
  3564                           	psect	cinit
  3565  004490                     __pcinit:
  3566                           	opt stack 0
  3567  004490                     start_initialization:
  3568                           	opt stack 0
  3569  004490                     __initialization:
  3570                           	opt stack 0
  3571                           
  3572                           ; Initialize objects allocated to BANK0 (10 bytes)
  3573                           ; load TBLPTR registers with __pidataBANK0
  3574  004490  0E94               	movlw	low __pidataBANK0
  3575  004492  6EF6               	movwf	tblptrl,c
  3576  004494  0E4E               	movlw	high __pidataBANK0
  3577  004496  6EF7               	movwf	tblptrh,c
  3578  004498  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  3579  00449A  6EF8               	movwf	tblptru,c
  3580  00449C  EE00  F0F3         	lfsr	0,__pdataBANK0
  3581  0044A0  EE10 F00A          	lfsr	1,10
  3582  0044A4                     copy_data0:
  3583  0044A4  0009               	tblrd		*+
  3584  0044A6  CFF5 FFEE          	movff	tablat,postinc0
  3585  0044AA  50E5               	movf	postdec1,w,c
  3586  0044AC  50E1               	movf	fsr1l,w,c
  3587  0044AE  E1FA               	bnz	copy_data0
  3588                           
  3589                           ; Initialize objects allocated to COMRAM (2 bytes)
  3590                           ; load TBLPTR registers with __pidataCOMRAM
  3591  0044B0  0EB4               	movlw	low __pidataCOMRAM
  3592  0044B2  6EF6               	movwf	tblptrl,c
  3593  0044B4  0E4E               	movlw	high __pidataCOMRAM
  3594  0044B6  6EF7               	movwf	tblptrh,c
  3595  0044B8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3596  0044BA  6EF8               	movwf	tblptru,c
  3597  0044BC  0009               	tblrd		*+	;fetch initializer
  3598  0044BE  CFF5 F068          	movff	tablat,__pdataCOMRAM
  3599  0044C2  0009               	tblrd		*+	;fetch initializer
  3600  0044C4  CFF5 F069          	movff	tablat,__pdataCOMRAM+1
  3601                           
  3602                           ; Clear objects allocated to BANK3 (256 bytes)
  3603  0044C8  EE03  F000         	lfsr	0,__pbssBANK3
  3604  0044CC  EE11 F000          	lfsr	1,256
  3605  0044D0                     clear_0:
  3606  0044D0  6AEE               	clrf	postinc0,c
  3607  0044D2  50E5               	movf	postdec1,w,c
  3608  0044D4  50E1               	movf	fsr1l,w,c
  3609  0044D6  E1FC               	bnz	clear_0
  3610  0044D8  50E2               	movf	fsr1h,w,c
  3611  0044DA  E1FA               	bnz	clear_0
  3612                           
  3613                           ; Clear objects allocated to BANK2 (256 bytes)
  3614  0044DC  EE02  F000         	lfsr	0,__pbssBANK2
  3615  0044E0  EE11 F000          	lfsr	1,256
  3616  0044E4                     clear_1:
  3617  0044E4  6AEE               	clrf	postinc0,c
  3618  0044E6  50E5               	movf	postdec1,w,c
  3619  0044E8  50E1               	movf	fsr1l,w,c
  3620  0044EA  E1FC               	bnz	clear_1
  3621  0044EC  50E2               	movf	fsr1h,w,c
  3622  0044EE  E1FA               	bnz	clear_1
  3623                           
  3624                           ; Clear objects allocated to BANK1 (40 bytes)
  3625  0044F0  EE01  F000         	lfsr	0,__pbssBANK1
  3626  0044F4  0E28               	movlw	40
  3627  0044F6                     clear_2:
  3628  0044F6  6AEE               	clrf	postinc0,c
  3629  0044F8  06E8               	decf	wreg,f,c
  3630  0044FA  E1FD               	bnz	clear_2
  3631                           
  3632                           ; Clear objects allocated to BANK0 (115 bytes)
  3633  0044FC  EE00  F080         	lfsr	0,__pbssBANK0
  3634  004500  0E73               	movlw	115
  3635  004502                     clear_3:
  3636  004502  6AEE               	clrf	postinc0,c
  3637  004504  06E8               	decf	wreg,f,c
  3638  004506  E1FD               	bnz	clear_3
  3639                           
  3640                           ; Clear objects allocated to COMRAM (80 bytes)
  3641  004508  EE00  F001         	lfsr	0,__pbssCOMRAM
  3642  00450C  0E50               	movlw	80
  3643  00450E                     clear_4:
  3644  00450E  6AEE               	clrf	postinc0,c
  3645  004510  06E8               	decf	wreg,f,c
  3646  004512  E1FD               	bnz	clear_4
  3647  004514                     end_of_initialization:
  3648                           	opt stack 0
  3649  004514                     __end_of__initialization:
  3650                           	opt stack 0
  3651  004514  906A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3652  004516  926A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3653  004518  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3654  00451A  6EF8               	movwf	tblptru,c
  3655  00451C  0100               	movlb	0
  3656  00451E  EFA3  F021         	goto	_main	;jump to C main() function
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           postdec1	equ	0xFE5
  3664                           fsr1h	equ	0xFE2
  3665                           fsr1l	equ	0xFE1
  3666                           
  3667                           	psect	bssCOMRAM
  3668  000001                     __pbssCOMRAM:
  3669                           	opt stack 0
  3670  000001                     _menu:
  3671                           	opt stack 0
  3672  000001                     	ds	64
  3673  000041                     check_ui_status@cnt_ui_check:
  3674                           	opt stack 0
  3675  000041                     	ds	4
  3676  000045                     _ptnx_frame:
  3677                           	opt stack 0
  3678  000045                     	ds	2
  3679  000047                     _bat_vol:
  3680                           	opt stack 0
  3681  000047                     	ds	2
  3682  000049                     _bat_x_m:
  3683                           	opt stack 0
  3684  000049                     	ds	2
  3685  00004B                     _n_x_m:
  3686                           	opt stack 0
  3687  00004B                     	ds	2
  3688  00004D                     _work_mode:
  3689                           	opt stack 0
  3690  00004D                     	ds	1
  3691  00004E                     _flip:
  3692                           	opt stack 0
  3693  00004E                     	ds	1
  3694  00004F                     _focus:
  3695                           	opt stack 0
  3696  00004F                     	ds	1
  3697  000050                     _flag_blink:
  3698                           	opt stack 0
  3699  000050                     	ds	1
  3700                           tblptru	equ	0xFF8
  3701                           tblptrh	equ	0xFF7
  3702                           tblptrl	equ	0xFF6
  3703                           tablat	equ	0xFF5
  3704                           postinc0	equ	0xFEE
  3705                           wreg	equ	0xFE8
  3706                           postdec1	equ	0xFE5
  3707                           fsr1h	equ	0xFE2
  3708                           fsr1l	equ	0xFE1
  3709                           
  3710                           	psect	dataCOMRAM
  3711  000068                     __pdataCOMRAM:
  3712                           	opt stack 0
  3713  000068                     check_bat@bat_flip:
  3714                           	opt stack 0
  3715  000068                     	ds	1
  3716  000069                     _ms:
  3717                           	opt stack 0
  3718  000069                     	ds	1
  3719                           tblptru	equ	0xFF8
  3720                           tblptrh	equ	0xFF7
  3721                           tblptrl	equ	0xFF6
  3722                           tablat	equ	0xFF5
  3723                           postinc0	equ	0xFEE
  3724                           wreg	equ	0xFE8
  3725                           postdec1	equ	0xFE5
  3726                           fsr1h	equ	0xFE2
  3727                           fsr1l	equ	0xFE1
  3728                           
  3729                           	psect	bssBANK0
  3730  000080                     __pbssBANK0:
  3731                           	opt stack 0
  3732  000080                     _hg_op:
  3733                           	opt stack 0
  3734  000080                     	ds	57
  3735  0000B9                     _msleep:
  3736                           	opt stack 0
  3737  0000B9                     	ds	4
  3738  0000BD                     _cnt_mb:
  3739                           	opt stack 0
  3740  0000BD                     	ds	4
  3741  0000C1                     _cnt_ma:
  3742                           	opt stack 0
  3743  0000C1                     	ds	4
  3744  0000C5                     	ds	2
  3745  0000C7                     ISR@tcnt_bat:
  3746                           	opt stack 0
  3747  0000C7                     	ds	2
  3748  0000C9                     _mbcnt:
  3749                           	opt stack 0
  3750  0000C9                     	ds	2
  3751  0000CB                     _tvb:
  3752                           	opt stack 0
  3753  0000CB                     	ds	2
  3754  0000CD                     _tva:
  3755                           	opt stack 0
  3756  0000CD                     	ds	2
  3757  0000CF                     _xtt:
  3758                           	opt stack 0
  3759  0000CF                     	ds	2
  3760  0000D1                     _action_btn_cnt:
  3761                           	opt stack 0
  3762  0000D1                     	ds	2
  3763  0000D3                     _cntb_mb:
  3764                           	opt stack 0
  3765  0000D3                     	ds	2
  3766  0000D5                     _cnta_mb:
  3767                           	opt stack 0
  3768  0000D5                     	ds	2
  3769  0000D7                     _bv:
  3770                           	opt stack 0
  3771  0000D7                     	ds	2
  3772  0000D9                     _flag_test_mode_break:
  3773                           	opt stack 0
  3774  0000D9                     	ds	1
  3775  0000DA                     _work_mode_choice:
  3776                           	opt stack 0
  3777  0000DA                     	ds	1
  3778  0000DB                     	ds	1
  3779  0000DC                     ISR@tcnt:
  3780                           	opt stack 0
  3781  0000DC                     	ds	1
  3782  0000DD                     _ttte:
  3783                           	opt stack 0
  3784  0000DD                     	ds	1
  3785  0000DE                     _old_c:
  3786                           	opt stack 0
  3787  0000DE                     	ds	1
  3788  0000DF                     _tv_cnt:
  3789                           	opt stack 0
  3790  0000DF                     	ds	1
  3791  0000E0                     _flag:
  3792                           	opt stack 0
  3793  0000E0                     	ds	1
  3794  0000E1                     _page:
  3795                           	opt stack 0
  3796  0000E1                     	ds	1
  3797  0000E2                     _rcnt:
  3798                           	opt stack 0
  3799  0000E2                     	ds	1
  3800  0000E3                     _css:
  3801                           	opt stack 0
  3802  0000E3                     	ds	1
  3803  0000E4                     _ss:
  3804                           	opt stack 0
  3805  0000E4                     	ds	1
  3806  0000E5                     _flag_do_reset_in_drops_mode:
  3807                           	opt stack 0
  3808  0000E5                     	ds	1
  3809  0000E6                     _flag_action_button:
  3810                           	opt stack 0
  3811  0000E6                     	ds	1
  3812  0000E7                     _flag_action:
  3813                           	opt stack 0
  3814  0000E7                     	ds	1
  3815  0000E8                     _flag_push:
  3816                           	opt stack 0
  3817  0000E8                     	ds	1
  3818  0000E9                     _flag_inject_sb:
  3819                           	opt stack 0
  3820  0000E9                     	ds	1
  3821  0000EA                     _flag_inject_sa:
  3822                           	opt stack 0
  3823  0000EA                     	ds	1
  3824  0000EB                     _flag_inject:
  3825                           	opt stack 0
  3826  0000EB                     	ds	1
  3827  0000EC                     _flag_mreset_hit_lp:
  3828                           	opt stack 0
  3829  0000EC                     	ds	1
  3830  0000ED                     _cur_edge:
  3831                           	opt stack 0
  3832  0000ED                     	ds	1
  3833  0000EE                     _prev_edge:
  3834                           	opt stack 0
  3835  0000EE                     	ds	1
  3836  0000EF                     _flag_power_up:
  3837                           	opt stack 0
  3838  0000EF                     	ds	1
  3839  0000F0                     _prev_state_phb_ma:
  3840                           	opt stack 0
  3841  0000F0                     	ds	1
  3842  0000F1                     _cur_state_phb_ma:
  3843                           	opt stack 0
  3844  0000F1                     	ds	1
  3845  0000F2                     _test_mode:
  3846                           	opt stack 0
  3847  0000F2                     	ds	1
  3848                           tblptru	equ	0xFF8
  3849                           tblptrh	equ	0xFF7
  3850                           tblptrl	equ	0xFF6
  3851                           tablat	equ	0xFF5
  3852                           postinc0	equ	0xFEE
  3853                           wreg	equ	0xFE8
  3854                           postdec1	equ	0xFE5
  3855                           fsr1h	equ	0xFE2
  3856                           fsr1l	equ	0xFE1
  3857                           
  3858                           	psect	dataBANK0
  3859  0000F3                     __pdataBANK0:
  3860                           	opt stack 0
  3861  0000F3                     _dv:
  3862                           	opt stack 0
  3863  0000F3                     	ds	2
  3864  0000F5                     _cv:
  3865                           	opt stack 0
  3866  0000F5                     	ds	2
  3867  0000F7                     _needle_len:
  3868                           	opt stack 0
  3869  0000F7                     	ds	1
  3870  0000F8                     _tflag:
  3871                           	opt stack 0
  3872  0000F8                     	ds	1
  3873  0000F9                     _flag_tv:
  3874                           	opt stack 0
  3875  0000F9                     	ds	1
  3876  0000FA                     _flag_wake_up:
  3877                           	opt stack 0
  3878  0000FA                     	ds	1
  3879  0000FB                     _flag_go_to_sleep:
  3880                           	opt stack 0
  3881  0000FB                     	ds	1
  3882  0000FC                     _flag_mreset:
  3883                           	opt stack 0
  3884  0000FC                     	ds	1
  3885                           tblptru	equ	0xFF8
  3886                           tblptrh	equ	0xFF7
  3887                           tblptrl	equ	0xFF6
  3888                           tablat	equ	0xFF5
  3889                           postinc0	equ	0xFEE
  3890                           wreg	equ	0xFE8
  3891                           postdec1	equ	0xFE5
  3892                           fsr1h	equ	0xFE2
  3893                           fsr1l	equ	0xFE1
  3894                           
  3895                           	psect	bssBANK1
  3896  000100                     __pbssBANK1:
  3897                           	opt stack 0
  3898  000100                     _tv_s:
  3899                           	opt stack 0
  3900  000100                     	ds	20
  3901  000114                     	ds	4
  3902  000118                     	ds	4
  3903  00011C                     _tmcnt:
  3904                           	opt stack 0
  3905  00011C                     	ds	4
  3906  000120                     _cnt_mb_sb:
  3907                           	opt stack 0
  3908  000120                     	ds	4
  3909  000124                     _cnt_mb_sa:
  3910                           	opt stack 0
  3911  000124                     	ds	4
  3912                           tblptru	equ	0xFF8
  3913                           tblptrh	equ	0xFF7
  3914                           tblptrl	equ	0xFF6
  3915                           tablat	equ	0xFF5
  3916                           postinc0	equ	0xFEE
  3917                           wreg	equ	0xFE8
  3918                           postdec1	equ	0xFE5
  3919                           fsr1h	equ	0xFE2
  3920                           fsr1l	equ	0xFE1
  3921                           
  3922                           	psect	bssBANK2
  3923  000200                     __pbssBANK2:
  3924                           	opt stack 0
  3925  000200                     _write_buf:
  3926                           	opt stack 0
  3927  000200                     	ds	256
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           postinc0	equ	0xFEE
  3933                           wreg	equ	0xFE8
  3934                           postdec1	equ	0xFE5
  3935                           fsr1h	equ	0xFE2
  3936                           fsr1l	equ	0xFE1
  3937                           
  3938                           	psect	bssBANK3
  3939  000300                     __pbssBANK3:
  3940                           	opt stack 0
  3941  000300                     _read_buf:
  3942                           	opt stack 0
  3943  000300                     	ds	256
  3944                           tblptru	equ	0xFF8
  3945                           tblptrh	equ	0xFF7
  3946                           tblptrl	equ	0xFF6
  3947                           tablat	equ	0xFF5
  3948                           postinc0	equ	0xFEE
  3949                           wreg	equ	0xFE8
  3950                           postdec1	equ	0xFE5
  3951                           fsr1h	equ	0xFE2
  3952                           fsr1l	equ	0xFE1
  3953                           
  3954                           	psect	cstackBANK1
  3955  000128                     __pcstackBANK1:
  3956                           	opt stack 0
  3957  000128                     ??_get_AD_vaule:
  3958  000128                     ?___wmul:
  3959                           	opt stack 0
  3960  000128                     delay@i:
  3961                           	opt stack 0
  3962  000128                     ee_WriteBytes@_pWriteBuf:
  3963                           	opt stack 0
  3964  000128                     printf@ap:
  3965                           	opt stack 0
  3966  000128                     ___wmul@multiplier:
  3967                           	opt stack 0
  3968  000128                     delay_nms@n:
  3969                           	opt stack 0
  3970                           
  3971                           ; 4 bytes @ 0x0
  3972  000128                     	ds	2
  3973  00012A                     ee_WriteBytes@_usAddress:
  3974                           	opt stack 0
  3975  00012A                     printf@c:
  3976                           	opt stack 0
  3977  00012A                     delay@j:
  3978                           	opt stack 0
  3979  00012A                     ___wmul@multiplicand:
  3980                           	opt stack 0
  3981                           
  3982                           ; 2 bytes @ 0x2
  3983  00012A                     	ds	1
  3984  00012B                     get_AD_vaule@ts:
  3985                           	opt stack 0
  3986  00012B                     ee_WriteBytes@_usSize:
  3987                           	opt stack 0
  3988                           
  3989                           ; 2 bytes @ 0x3
  3990  00012B                     	ds	1
  3991  00012C                     ??_drops_routine:
  3992  00012C                     KEY_Scan@tm_cnt:
  3993                           	opt stack 0
  3994  00012C                     get_AD_vaule@rv:
  3995                           	opt stack 0
  3996  00012C                     delay_pwm@n:
  3997                           	opt stack 0
  3998                           
  3999                           ; 4 bytes @ 0x4
  4000  00012C                     	ds	1
  4001  00012D                     ee_WriteBytes@m:
  4002                           	opt stack 0
  4003                           
  4004                           ; 2 bytes @ 0x5
  4005  00012D                     	ds	1
  4006  00012E                     get_AD_vaule@hv:
  4007                           	opt stack 0
  4008  00012E                     drops_routine@cnt_push:
  4009                           	opt stack 0
  4010                           
  4011                           ; 2 bytes @ 0x6
  4012  00012E                     	ds	1
  4013  00012F                     get_AD_vaule@lv:
  4014                           	opt stack 0
  4015  00012F                     ee_WriteBytes@usAddr:
  4016                           	opt stack 0
  4017                           
  4018                           ; 1 bytes @ 0x7
  4019  00012F                     	ds	1
  4020  000130                     ??_test_routine:
  4021  000130                     setYX_LCD@py:
  4022                           	opt stack 0
  4023  000130                     c_routine@cnt_push:
  4024                           	opt stack 0
  4025                           
  4026                           ; 2 bytes @ 0x8
  4027  000130                     	ds	1
  4028  000131                     ??_display_logo:
  4029  000131                     display_n_blank@x:
  4030                           	opt stack 0
  4031  000131                     display_num@x:
  4032                           	opt stack 0
  4033  000131                     display_bat_blank@x:
  4034                           	opt stack 0
  4035  000131                     display_bat@x:
  4036                           	opt stack 0
  4037  000131                     display_mem@x:
  4038                           	opt stack 0
  4039  000131                     display_blank_mode_pa@x:
  4040                           	opt stack 0
  4041  000131                     display_cmode@x:
  4042                           	opt stack 0
  4043  000131                     display_drops@x:
  4044                           	opt stack 0
  4045  000131                     display_drop@x:
  4046                           	opt stack 0
  4047  000131                     display_frame_abc@x:
  4048                           	opt stack 0
  4049  000131                     display_frame_de@x:
  4050                           	opt stack 0
  4051  000131                     display_frame_fghi@x:
  4052                           	opt stack 0
  4053  000131                     clear_screen@col:
  4054                           	opt stack 0
  4055                           
  4056                           ; 1 bytes @ 0x9
  4057  000131                     	ds	1
  4058  000132                     display_n_blank@mode:
  4059                           	opt stack 0
  4060  000132                     display_num@mode:
  4061                           	opt stack 0
  4062  000132                     display_bat_blank@mode:
  4063                           	opt stack 0
  4064  000132                     display_bat@mode:
  4065                           	opt stack 0
  4066  000132                     display_mem@mode:
  4067                           	opt stack 0
  4068  000132                     display_blank_mode_pa@mode:
  4069                           	opt stack 0
  4070  000132                     display_cmode@mode:
  4071                           	opt stack 0
  4072  000132                     display_drops@mode:
  4073                           	opt stack 0
  4074  000132                     display_drop@mode:
  4075                           	opt stack 0
  4076  000132                     display_frame_abc@mode:
  4077                           	opt stack 0
  4078  000132                     display_frame_de@mode:
  4079                           	opt stack 0
  4080  000132                     display_frame_fghi@mode:
  4081                           	opt stack 0
  4082  000132                     clear_screen@page:
  4083                           	opt stack 0
  4084  000132                     test_routine@cnt_push:
  4085                           	opt stack 0
  4086                           
  4087                           ; 2 bytes @ 0xA
  4088  000132                     	ds	1
  4089  000133                     ??_display_bat:
  4090  000133                     ??_display_bat_blank:
  4091  000133                     ??_display_num:
  4092  000133                     ??_display_frame_fghi:
  4093  000133                     display_n_blank@y:
  4094                           	opt stack 0
  4095  000133                     display_mem@tori:
  4096                           	opt stack 0
  4097  000133                     display_blank_mode_pa@tori:
  4098                           	opt stack 0
  4099  000133                     display_cmode@tori:
  4100                           	opt stack 0
  4101  000133                     display_drops@tori:
  4102                           	opt stack 0
  4103  000133                     display_drop@tori:
  4104                           	opt stack 0
  4105  000133                     display_frame_abc@tori:
  4106                           	opt stack 0
  4107  000133                     display_frame_de@tori:
  4108                           	opt stack 0
  4109  000133                     display_logo@col:
  4110                           	opt stack 0
  4111                           
  4112                           ; 1 bytes @ 0xB
  4113  000133                     	ds	1
  4114  000134                     display_n_blank@tori:
  4115                           	opt stack 0
  4116  000134                     display_mem@temp:
  4117                           	opt stack 0
  4118  000134                     display_blank_mode_pa@temp:
  4119                           	opt stack 0
  4120  000134                     display_cmode@temp:
  4121                           	opt stack 0
  4122  000134                     display_drops@temp:
  4123                           	opt stack 0
  4124  000134                     display_drop@temp:
  4125                           	opt stack 0
  4126  000134                     display_frame_abc@temp:
  4127                           	opt stack 0
  4128  000134                     display_frame_de@y:
  4129                           	opt stack 0
  4130  000134                     display_logo@page:
  4131                           	opt stack 0
  4132                           
  4133                           ; 1 bytes @ 0xC
  4134  000134                     	ds	1
  4135  000135                     display_n_blank@temp:
  4136                           	opt stack 0
  4137  000135                     display_num@tori:
  4138                           	opt stack 0
  4139  000135                     display_bat_blank@tori:
  4140                           	opt stack 0
  4141  000135                     display_bat@tori:
  4142                           	opt stack 0
  4143  000135                     display_frame_de@temp:
  4144                           	opt stack 0
  4145  000135                     display_frame_fghi@tori:
  4146                           	opt stack 0
  4147                           
  4148                           ; 1 bytes @ 0xD
  4149  000135                     	ds	1
  4150  000136                     display_num@y:
  4151                           	opt stack 0
  4152  000136                     display_bat_blank@temp:
  4153                           	opt stack 0
  4154  000136                     display_bat@temp:
  4155                           	opt stack 0
  4156  000136                     display_frame_fghi@y:
  4157                           	opt stack 0
  4158                           
  4159                           ; 1 bytes @ 0xE
  4160  000136                     	ds	1
  4161  000137                     display_num@temp:
  4162                           	opt stack 0
  4163  000137                     display_frame_fghi@temp:
  4164                           	opt stack 0
  4165                           
  4166                           ; 1 bytes @ 0xF
  4167  000137                     	ds	1
  4168  000138                     initial_ui_setting@i:
  4169                           	opt stack 0
  4170  000138                     menu0_MsgHandlle@key:
  4171                           	opt stack 0
  4172  000138                     menu3_MsgHandlle@key:
  4173                           	opt stack 0
  4174  000138                     menu4_MsgHandlle@key:
  4175                           	opt stack 0
  4176  000138                     menu5_MsgHandlle@key:
  4177                           	opt stack 0
  4178  000138                     menu6_MsgHandlle@key:
  4179                           	opt stack 0
  4180                           
  4181                           ; 1 bytes @ 0x10
  4182  000138                     	ds	1
  4183  000139                     HG_interface@kv:
  4184                           	opt stack 0
  4185  000139                     enter_sleep@temp:
  4186                           	opt stack 0
  4187                           
  4188                           ; 1 bytes @ 0x11
  4189  000139                     	ds	1
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           postinc0	equ	0xFEE
  4195                           wreg	equ	0xFE8
  4196                           postdec1	equ	0xFE5
  4197                           fsr1h	equ	0xFE2
  4198                           fsr1l	equ	0xFE1
  4199                           
  4200                           	psect	cstackBANK0
  4201  0000FD                     __pcstackBANK0:
  4202                           	opt stack 0
  4203  0000FD                     ?_get_AD_vaule:
  4204                           	opt stack 0
  4205  0000FD                     putch@c:
  4206                           	opt stack 0
  4207  0000FD                     i2c_SendByte@_ucByte:
  4208                           	opt stack 0
  4209  0000FD                     i2c_WaitAck@re:
  4210                           	opt stack 0
  4211  0000FD                     menu1_MsgHandlle@key:
  4212                           	opt stack 0
  4213  0000FD                     menu2_MsgHandlle@key:
  4214                           	opt stack 0
  4215  0000FD                     delay_nms@i:
  4216                           	opt stack 0
  4217  0000FD                     delay@x:
  4218                           	opt stack 0
  4219  0000FD                     delaynus@n:
  4220                           	opt stack 0
  4221  0000FD                     ___wmul@product:
  4222                           	opt stack 0
  4223                           
  4224                           ; 2 bytes @ 0x0
  4225  0000FD                     	ds	1
  4226  0000FE                     ?_printf:
  4227                           	opt stack 0
  4228  0000FE                     i2c_SendByte@i:
  4229                           	opt stack 0
  4230  0000FE                     update_focus@key:
  4231                           	opt stack 0
  4232  0000FE                     printf@f:
  4233                           	opt stack 0
  4234                           
  4235                           ; 2 bytes @ 0x1
  4236  0000FE                     	ds	1
  4237  0000FF                     setYX_LCD@px:
  4238                           	opt stack 0
  4239  0000FF                     update_focus@i:
  4240                           	opt stack 0
  4241                           
  4242                           ; 1 bytes @ 0x2
  4243  0000FF                     	ds	1
  4244  000100                     tblptru	equ	0xFF8
  4245                           tblptrh	equ	0xFF7
  4246                           tblptrl	equ	0xFF6
  4247                           tablat	equ	0xFF5
  4248                           postinc0	equ	0xFEE
  4249                           wreg	equ	0xFE8
  4250                           postdec1	equ	0xFE5
  4251                           fsr1h	equ	0xFE2
  4252                           fsr1l	equ	0xFE1
  4253                           
  4254                           ; 1 bytes @ 0x3
  4255                           
  4256                           	psect	cstackCOMRAM
  4257  000051                     __pcstackCOMRAM:
  4258                           	opt stack 0
  4259  000051                     ?_get_SenseA_AD_vaule:
  4260                           	opt stack 0
  4261  000051                     
  4262                           ; 1 bytes @ 0x0
  4263  000051                     	ds	2
  4264  000053                     ??_get_SenseA_AD_vaule:
  4265                           
  4266                           ; 1 bytes @ 0x2
  4267  000053                     	ds	3
  4268  000056                     get_SenseA_AD_vaule@rv:
  4269                           	opt stack 0
  4270                           
  4271                           ; 2 bytes @ 0x5
  4272  000056                     	ds	2
  4273  000058                     get_SenseA_AD_vaule@hv:
  4274                           	opt stack 0
  4275                           
  4276                           ; 1 bytes @ 0x7
  4277  000058                     	ds	1
  4278  000059                     get_SenseA_AD_vaule@lv:
  4279                           	opt stack 0
  4280                           
  4281                           ; 1 bytes @ 0x8
  4282  000059                     	ds	1
  4283  00005A                     ??_ISR:
  4284                           
  4285                           ; 1 bytes @ 0x9
  4286  00005A                     	ds	14
  4287                           tblptru	equ	0xFF8
  4288                           tblptrh	equ	0xFF7
  4289                           tblptrl	equ	0xFF6
  4290                           tablat	equ	0xFF5
  4291                           postinc0	equ	0xFEE
  4292                           wreg	equ	0xFE8
  4293                           postdec1	equ	0xFE5
  4294                           fsr1h	equ	0xFE2
  4295                           fsr1l	equ	0xFE1
  4296                           
  4297 ;;
  4298 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  4299 ;;
  4300 ;; *************** function _main *****************
  4301 ;; Defined at:
  4302 ;;		line 91 in file "../Main.c"
  4303 ;; Parameters:    Size  Location     Type
  4304 ;;		None
  4305 ;; Auto vars:     Size  Location     Type
  4306 ;;		None
  4307 ;; Return value:  Size  Location     Type
  4308 ;;                  1    wreg      void 
  4309 ;; Registers used:
  4310 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4311 ;; Tracked objects:
  4312 ;;		On entry : 0/0
  4313 ;;		On exit  : 0/0
  4314 ;;		Unchanged: 0/0
  4315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4316 ;;      Params:         0       0       0       0       0       0       0
  4317 ;;      Locals:         0       0       0       0       0       0       0
  4318 ;;      Temps:          0       0       0       0       0       0       0
  4319 ;;      Totals:         0       0       0       0       0       0       0
  4320 ;;Total ram usage:        0 bytes
  4321 ;; Hardware stack levels required when called:   10
  4322 ;; This function calls:
  4323 ;;		_HG_device_init
  4324 ;;		_HG_interface
  4325 ;;		_c_routine
  4326 ;;		_check_acting
  4327 ;;		_check_bat
  4328 ;;		_check_device_idle
  4329 ;;		_check_shut_device
  4330 ;;		_check_ui_blink
  4331 ;;		_check_ui_status
  4332 ;;		_drops_routine
  4333 ;;		_enter_sleep
  4334 ;;		_hg_reset
  4335 ;;		_initial_para_setting
  4336 ;;		_test_routine
  4337 ;; This function is called by:
  4338 ;;		Startup code after reset
  4339 ;; This function uses a non-reentrant model
  4340 ;;
  4341                           
  4342                           	psect	text0
  4343  004346                     __ptext0:
  4344                           	opt stack 0
  4345  004346                     _main:
  4346                           	opt stack 21
  4347                           
  4348                           ;Main.c: 93: cur_state_phb_ma=0;
  4349                           
  4350                           ;incstack = 0
  4351  004346  0E00               	movlw	0
  4352  004348  0100               	movlb	0	; () banked
  4353  00434A  6FF1               	movwf	_cur_state_phb_ma& (0+255),b
  4354                           
  4355                           ;Main.c: 94: prev_state_phb_ma=0;
  4356  00434C  0E00               	movlw	0
  4357  00434E  0100               	movlb	0	; () banked
  4358  004350  6FF0               	movwf	_prev_state_phb_ma& (0+255),b
  4359                           
  4360                           ;Main.c: 95: cnt_ma = 0;
  4361  004352  0E00               	movlw	0
  4362  004354  0100               	movlb	0	; () banked
  4363  004356  6FC1               	movwf	_cnt_ma& (0+255),b
  4364  004358  0E00               	movlw	0
  4365  00435A  6FC2               	movwf	(_cnt_ma+1)& (0+255),b
  4366  00435C  0E00               	movlw	0
  4367  00435E  6FC3               	movwf	(_cnt_ma+2)& (0+255),b
  4368  004360  0E00               	movlw	0
  4369  004362  6FC4               	movwf	(_cnt_ma+3)& (0+255),b
  4370                           
  4371                           ;Main.c: 96: cnt_mb = 0;
  4372  004364  0E00               	movlw	0
  4373  004366  0100               	movlb	0	; () banked
  4374  004368  6FBD               	movwf	_cnt_mb& (0+255),b
  4375  00436A  0E00               	movlw	0
  4376  00436C  6FBE               	movwf	(_cnt_mb+1)& (0+255),b
  4377  00436E  0E00               	movlw	0
  4378  004370  6FBF               	movwf	(_cnt_mb+2)& (0+255),b
  4379  004372  0E00               	movlw	0
  4380  004374  6FC0               	movwf	(_cnt_mb+3)& (0+255),b
  4381                           
  4382                           ; BSR set to: 0
  4383                           ;Main.c: 97: HG_device_init();
  4384  004376  ECA4  F026         	call	_HG_device_init	;wreg free
  4385                           
  4386                           ;Main.c: 117: initial_para_setting();
  4387  00437A  ECBB  F024         	call	_initial_para_setting	;wreg free
  4388  00437E                     l15119:
  4389                           
  4390                           ;Main.c: 125: {
  4391                           ;Main.c: 126: enter_sleep();
  4392  00437E  ECFD  F021         	call	_enter_sleep	;wreg free
  4393                           
  4394                           ;Main.c: 128: if(hg_op.need_reset)
  4395  004382  0100               	movlb	0	; () banked
  4396  004384  5185               	movf	(_hg_op+5)& (0+255),w,b
  4397  004386  B4D8               	btfsc	status,2,c
  4398  004388  D003               	goto	l15125
  4399                           
  4400                           ; BSR set to: 0
  4401                           ;Main.c: 129: {
  4402                           ;Main.c: 131: hg_reset();
  4403  00438A  EC5F  F019         	call	_hg_reset	;wreg free
  4404                           
  4405                           ;Main.c: 132: }
  4406  00438E  D7F7               	goto	l15119
  4407  004390                     l15125:
  4408                           
  4409                           ;Main.c: 133: else
  4410                           ;Main.c: 134: {
  4411                           ;Main.c: 135: if(hg_op.working_mode == 0x01)
  4412  004390  0100               	movlb	0	; () banked
  4413  004392  0580               	decf	_hg_op& (0+255),w,b
  4414  004394  A4D8               	btfss	status,2,c
  4415  004396  D003               	goto	l15129
  4416                           
  4417                           ; BSR set to: 0
  4418                           ;Main.c: 136: {
  4419                           ;Main.c: 138: drops_routine();
  4420  004398  EC73  F00A         	call	_drops_routine	;wreg free
  4421                           
  4422                           ;Main.c: 139: }
  4423  00439C  D027               	goto	l15155
  4424  00439E                     l15129:
  4425                           
  4426                           ;Main.c: 142: else if(hg_op.working_mode == 0x00)
  4427  00439E  0100               	movlb	0	; () banked
  4428  0043A0  5180               	movf	_hg_op& (0+255),w,b
  4429  0043A2  A4D8               	btfss	status,2,c
  4430  0043A4  D003               	goto	l15133
  4431                           
  4432                           ; BSR set to: 0
  4433                           ;Main.c: 143: {
  4434                           ;Main.c: 144: c_routine();
  4435  0043A6  EC67  F017         	call	_c_routine	;wreg free
  4436                           
  4437                           ;Main.c: 145: }
  4438  0043AA  D020               	goto	l15155
  4439  0043AC                     l15133:
  4440                           
  4441                           ;Main.c: 146: else if(hg_op.working_mode == 0x02)
  4442  0043AC  0E02               	movlw	2
  4443  0043AE  0100               	movlb	0	; () banked
  4444  0043B0  1980               	xorwf	_hg_op& (0+255),w,b
  4445  0043B2  B4D8               	btfsc	status,2,c
  4446  0043B4  D01B               	goto	l15155
  4447                           
  4448                           ; BSR set to: 0
  4449                           ;Main.c: 150: else if(hg_op.working_mode == 0x04)
  4450                           
  4451                           ; BSR set to: 0
  4452                           
  4453                           ; BSR set to: 0
  4454                           ;Main.c: 147: {
  4455                           ;Main.c: 149: }
  4456  0043B6  0E04               	movlw	4
  4457  0043B8  0100               	movlb	0	; () banked
  4458  0043BA  1980               	xorwf	_hg_op& (0+255),w,b
  4459  0043BC  A4D8               	btfss	status,2,c
  4460  0043BE  D003               	goto	l15141
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;Main.c: 151: {
  4464                           ;Main.c: 152: test_routine();
  4465  0043C0  ECE6  F011         	call	_test_routine	;wreg free
  4466                           
  4467                           ;Main.c: 153: }
  4468  0043C4  D013               	goto	l15155
  4469  0043C6                     l15141:
  4470                           
  4471                           ;Main.c: 154: else if(hg_op.working_mode == 0x03)
  4472  0043C6  0E03               	movlw	3
  4473  0043C8  0100               	movlb	0	; () banked
  4474  0043CA  1980               	xorwf	_hg_op& (0+255),w,b
  4475  0043CC  A4D8               	btfss	status,2,c
  4476  0043CE  D00E               	goto	l15155
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;Main.c: 155: {
  4480                           ;Main.c: 156: if(T0IE == 0 || T0CONbits.TMR0ON == 0)
  4481  0043D0  BAF2               	btfsc	intcon,5,c	;volatile
  4482                           
  4483                           ; BSR set to: 0
  4484  0043D2  AED5               	btfss	4053,7,c	;volatile
  4485  0043D4  D001               	goto	l188
  4486  0043D6  D002               	goto	l15147
  4487  0043D8                     l188:
  4488                           
  4489                           ; BSR set to: 0
  4490  0043D8  8AF2               	bsf	intcon,5,c	;volatile
  4491  0043DA  8ED5               	bsf	4053,7,c	;volatile
  4492  0043DC                     l15147:
  4493                           
  4494                           ; BSR set to: 0
  4495                           ;Main.c: 159: }
  4496                           ;Main.c: 161: HG_interface();
  4497  0043DC  EC61  F024         	call	_HG_interface	;wreg free
  4498                           
  4499                           ;Main.c: 162: check_bat();
  4500  0043E0  ECF8  F025         	call	_check_bat	;wreg free
  4501                           
  4502                           ;Main.c: 163: check_ui_status();
  4503  0043E4  EC9F  F00D         	call	_check_ui_status	;wreg free
  4504                           
  4505                           ;Main.c: 165: check_shut_device();
  4506  0043E8  EC56  F023         	call	_check_shut_device	;wreg free
  4507  0043EC                     l15155:
  4508                           
  4509                           ;Main.c: 171: }
  4510                           ;Main.c: 176: check_acting();
  4511  0043EC  ECCC  F023         	call	_check_acting	;wreg free
  4512                           
  4513                           ;Main.c: 181: check_ui_blink();
  4514  0043F0  EC20  F027         	call	_check_ui_blink	;wreg free
  4515                           
  4516                           ;Main.c: 185: check_device_idle();
  4517  0043F4  EC91  F023         	call	_check_device_idle	;wreg free
  4518  0043F8  D7C2               	goto	l15119
  4519  0043FA                     __end_of_main:
  4520                           	opt stack 0
  4521                           tblptru	equ	0xFF8
  4522                           tblptrh	equ	0xFF7
  4523                           tblptrl	equ	0xFF6
  4524                           tablat	equ	0xFF5
  4525                           intcon	equ	0xFF2
  4526                           postinc0	equ	0xFEE
  4527                           wreg	equ	0xFE8
  4528                           postdec1	equ	0xFE5
  4529                           fsr1h	equ	0xFE2
  4530                           fsr1l	equ	0xFE1
  4531                           status	equ	0xFD8
  4532                           
  4533 ;; *************** function _test_routine *****************
  4534 ;; Defined at:
  4535 ;;		line 689 in file "../MotorDrive.c"
  4536 ;; Parameters:    Size  Location     Type
  4537 ;;		None
  4538 ;; Auto vars:     Size  Location     Type
  4539 ;;  cnt_push        2   10[BANK1 ] unsigned int 
  4540 ;; Return value:  Size  Location     Type
  4541 ;;                  1    wreg      void 
  4542 ;; Registers used:
  4543 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4544 ;; Tracked objects:
  4545 ;;		On entry : 0/0
  4546 ;;		On exit  : 0/0
  4547 ;;		Unchanged: 0/0
  4548 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4549 ;;      Params:         0       0       0       0       0       0       0
  4550 ;;      Locals:         0       0       2       0       0       0       0
  4551 ;;      Temps:          0       0       2       0       0       0       0
  4552 ;;      Totals:         0       0       4       0       0       0       0
  4553 ;;Total ram usage:        4 bytes
  4554 ;; Hardware stack levels used:    1
  4555 ;; Hardware stack levels required when called:    4
  4556 ;; This function calls:
  4557 ;;		___wmul
  4558 ;;		_delay_pwm
  4559 ;;		_printf
  4560 ;; This function is called by:
  4561 ;;		_main
  4562 ;; This function uses a non-reentrant model
  4563 ;;
  4564                           
  4565                           	psect	text1
  4566  0023CC                     __ptext1:
  4567                           	opt stack 0
  4568  0023CC                     _test_routine:
  4569                           	opt stack 26
  4570                           
  4571                           ;MotorDrive.c: 691: uint16_t cnt_push =0;
  4572                           
  4573                           ;incstack = 0
  4574  0023CC  0E00               	movlw	0
  4575  0023CE  0101               	movlb	1	; () banked
  4576  0023D0  6F33               	movwf	(test_routine@cnt_push+1)& (0+255),b
  4577  0023D2  0E00               	movlw	0
  4578  0023D4  6F32               	movwf	test_routine@cnt_push& (0+255),b
  4579                           
  4580                           ;MotorDrive.c: 709: else
  4581                           ;MotorDrive.c: 710: {
  4582                           ;MotorDrive.c: 711: if(hg_op.drops_sa == 1)
  4583                           
  4584                           ; BSR set to: 0
  4585                           
  4586                           ;MotorDrive.c: 708: }
  4587                           
  4588                           ; BSR set to: 0
  4589                           ;MotorDrive.c: 707: hg_op.need_reset =1;
  4590                           
  4591                           ; BSR set to: 0
  4592                           ;MotorDrive.c: 706: hg_op.working_mode = 0x03;
  4593                           
  4594                           ;MotorDrive.c: 705: hg_op.acting_flag =0;
  4595                           
  4596                           ;MotorDrive.c: 701: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4597                           
  4598                           ; BSR set to: 1
  4599                           ;MotorDrive.c: 700: delay_pwm(300 * 30);
  4600                           
  4601                           ; BSR set to: 1
  4602                           
  4603                           ; BSR set to: 1
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;MotorDrive.c: 698: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  4607                           
  4608                           ; BSR set to: 1
  4609                           
  4610                           ;MotorDrive.c: 695: {
  4611                           ;MotorDrive.c: 696: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4612                           
  4613                           ;MotorDrive.c: 694: if(0)
  4614  0023D6  0100               	movlb	0	; () banked
  4615  0023D8  059F               	decf	(_hg_op+31)& (0+255),w,b
  4616  0023DA  A4D8               	btfss	status,2,c
  4617  0023DC  D04D               	goto	l14797
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;MotorDrive.c: 712: {
  4621                           ;MotorDrive.c: 713: hg_op.cnt_posa =0;
  4622  0023DE  0E00               	movlw	0
  4623  0023E0  0100               	movlb	0	; () banked
  4624  0023E2  6FA6               	movwf	(_hg_op+38)& (0+255),b
  4625  0023E4  0E00               	movlw	0
  4626  0023E6  6FA5               	movwf	(_hg_op+37)& (0+255),b
  4627                           
  4628                           ; BSR set to: 0
  4629                           ;MotorDrive.c: 715: if( hg_op.needle_len == 13)
  4630  0023E8  0E0D               	movlw	13
  4631  0023EA  0100               	movlb	0	; () banked
  4632  0023EC  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  4633  0023EE  A4D8               	btfss	status,2,c
  4634  0023F0  D00B               	goto	l538
  4635                           
  4636                           ; BSR set to: 0
  4637                           ;MotorDrive.c: 716: {
  4638                           ;MotorDrive.c: 718: LATDbits.LD2 =1;
  4639  0023F2  848C               	bsf	3980,2,c	;volatile
  4640                           
  4641                           ;MotorDrive.c: 719: LATDbits.LD4 =1;
  4642  0023F4  888C               	bsf	3980,4,c	;volatile
  4643  0023F6                     l14781:
  4644                           
  4645                           ; BSR set to: 0
  4646  0023F6  0100               	movlb	0	; () banked
  4647  0023F8  51A6               	movf	(_hg_op+38)& (0+255),w,b
  4648  0023FA  E11B               	bnz	l552
  4649  0023FC  0EBB               	movlw	187
  4650  0023FE  0100               	movlb	0	; () banked
  4651  002400  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  4652  002402  B0D8               	btfsc	status,0,c
  4653  002404  D016               	goto	l552
  4654  002406  D7F7               	goto	l14781
  4655  002408                     l538:
  4656                           
  4657                           ; BSR set to: 0
  4658                           ;MotorDrive.c: 723: else
  4659                           ;MotorDrive.c: 724: {
  4660                           ;MotorDrive.c: 725: LATDbits.LD2 =1;
  4661  002408  848C               	bsf	3980,2,c	;volatile
  4662                           
  4663                           ;MotorDrive.c: 726: LATDbits.LD4 =1;
  4664  00240A  888C               	bsf	3980,4,c	;volatile
  4665                           
  4666                           ;MotorDrive.c: 730: while(hg_op.cnt_posa < 20)
  4667  00240C  D00A               	goto	l14787
  4668  00240E                     l545:
  4669  00240E  A481               	btfss	3969,2,c	;volatile
  4670  002410  D7FE               	goto	l545
  4671                           
  4672                           ;MotorDrive.c: 738: hg_op.cnt_posa ++;
  4673  002412  0100               	movlb	0	; () banked
  4674  002414  4BA5               	infsnz	(_hg_op+37)& (0+255),f,b
  4675  002416  2BA6               	incf	(_hg_op+38)& (0+255),f,b
  4676  002418                     l548:
  4677  002418  B481               	btfsc	3969,2,c	;volatile
  4678  00241A  D7FE               	goto	l548
  4679                           
  4680                           ;MotorDrive.c: 740: hg_op.cnt_posa ++;
  4681  00241C  0100               	movlb	0	; () banked
  4682  00241E  4BA5               	infsnz	(_hg_op+37)& (0+255),f,b
  4683  002420  2BA6               	incf	(_hg_op+38)& (0+255),f,b
  4684  002422                     l14787:
  4685                           
  4686                           ; BSR set to: 0
  4687  002422  0100               	movlb	0	; () banked
  4688  002424  51A6               	movf	(_hg_op+38)& (0+255),w,b
  4689  002426  E105               	bnz	l552
  4690  002428  0E14               	movlw	20
  4691  00242A  0100               	movlb	0	; () banked
  4692  00242C  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  4693  00242E  A0D8               	btfss	status,0,c
  4694  002430  D7EE               	goto	l545
  4695  002432                     l552:
  4696                           
  4697                           ; BSR set to: 0
  4698  002432  888C               	bsf	3980,4,c	;volatile
  4699  002434  948C               	bcf	3980,2,c	;volatile
  4700  002436  968C               	bcf	3980,3,c	;volatile
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;MotorDrive.c: 747: delay_pwm(hg_op.work_freq * 300);
  4704                           
  4705                           ; BSR set to: 0
  4706  002438  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
  4707  00243C  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
  4708  002440  0E01               	movlw	1
  4709  002442  0101               	movlb	1	; () banked
  4710  002444  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4711  002446  0E2C               	movlw	44
  4712  002448  6F2A               	movwf	___wmul@multiplicand& (0+255),b
  4713  00244A  EC3E  F026         	call	___wmul	;wreg free
  4714  00244E  0101               	movlb	1	; () banked
  4715  002450  C128  F12C         	movff	?___wmul,delay_pwm@n
  4716  002454  0101               	movlb	1	; () banked
  4717  002456  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
  4718  00245A  0101               	movlb	1	; () banked
  4719  00245C  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
  4720  00245E  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
  4721  002460  EC73  F026         	call	_delay_pwm	;wreg free
  4722                           
  4723                           ;MotorDrive.c: 749: hg_op.drops_sa = 0;
  4724  002464  0E00               	movlw	0
  4725  002466  0100               	movlb	0	; () banked
  4726  002468  6F9F               	movwf	(_hg_op+31)& (0+255),b
  4727                           
  4728                           ; BSR set to: 0
  4729                           ;MotorDrive.c: 750: hg_op.drops_sb = 0;
  4730  00246A  0E00               	movlw	0
  4731  00246C  0100               	movlb	0	; () banked
  4732  00246E  6FA0               	movwf	(_hg_op+32)& (0+255),b
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;MotorDrive.c: 751: hg_op.drops_push = 1;
  4736  002470  0E01               	movlw	1
  4737  002472  0100               	movlb	0	; () banked
  4738  002474  6FA1               	movwf	(_hg_op+33)& (0+255),b
  4739                           
  4740                           ;MotorDrive.c: 752: }
  4741  002476  0012               	return	
  4742  002478                     l14797:
  4743                           
  4744                           ; BSR set to: 0
  4745                           ;MotorDrive.c: 753: else if(hg_op.drops_push == 1)
  4746  002478  0100               	movlb	0	; () banked
  4747  00247A  05A1               	decf	(_hg_op+33)& (0+255),w,b
  4748  00247C  A4D8               	btfss	status,2,c
  4749  00247E  D045               	goto	l14821
  4750                           
  4751                           ; BSR set to: 0
  4752                           ;MotorDrive.c: 754: {
  4753                           ;MotorDrive.c: 759: cnt_push =0;
  4754  002480  0E00               	movlw	0
  4755  002482  0101               	movlb	1	; () banked
  4756  002484  6F33               	movwf	(test_routine@cnt_push+1)& (0+255),b
  4757  002486  0E00               	movlw	0
  4758  002488  6F32               	movwf	test_routine@cnt_push& (0+255),b
  4759                           
  4760                           ; BSR set to: 1
  4761                           
  4762                           ; BSR set to: 1
  4763                           
  4764                           ;MotorDrive.c: 761: do{LATDbits.LD0 =1;LATDbits.LD1 =0; LATCbits.LC2 =1; }while(0);
  4765  00248A  808C               	bsf	3980,0,c	;volatile
  4766                           
  4767                           ; BSR set to: 1
  4768  00248C  928C               	bcf	3980,1,c	;volatile
  4769                           
  4770                           ; BSR set to: 1
  4771  00248E  848B               	bsf	3979,2,c	;volatile
  4772                           
  4773                           ; BSR set to: 1
  4774                           ;MotorDrive.c: 764: while(cnt_push < hg_op.push_len)
  4775  002490  D00A               	goto	l14811
  4776  002492                     l560:
  4777  002492  A880               	btfss	3968,4,c	;volatile
  4778  002494  D7FE               	goto	l560
  4779                           
  4780                           ;MotorDrive.c: 767: cnt_push ++;
  4781  002496  0101               	movlb	1	; () banked
  4782  002498  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  4783  00249A  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  4784  00249C                     l563:
  4785  00249C  B880               	btfsc	3968,4,c	;volatile
  4786  00249E  D7FE               	goto	l563
  4787                           
  4788                           ;MotorDrive.c: 769: cnt_push ++;
  4789  0024A0  0101               	movlb	1	; () banked
  4790  0024A2  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  4791  0024A4  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  4792  0024A6                     l14811:
  4793                           
  4794                           ; BSR set to: 1
  4795  0024A6  0100               	movlb	0	; () banked
  4796  0024A8  519D               	movf	(_hg_op+29)& (0+255),w,b
  4797  0024AA  0101               	movlb	1	; () banked
  4798  0024AC  6F30               	movwf	??_test_routine& (0+255),b
  4799  0024AE  6B31               	clrf	(??_test_routine+1)& (0+255),b
  4800  0024B0  0101               	movlb	1	; () banked
  4801  0024B2  5130               	movf	??_test_routine& (0+255),w,b
  4802  0024B4  0101               	movlb	1	; () banked
  4803  0024B6  5D32               	subwf	test_routine@cnt_push& (0+255),w,b
  4804  0024B8  0101               	movlb	1	; () banked
  4805  0024BA  5131               	movf	(??_test_routine+1)& (0+255),w,b
  4806  0024BC  0101               	movlb	1	; () banked
  4807  0024BE  5933               	subwfb	(test_routine@cnt_push+1)& (0+255),w,b
  4808  0024C0  A0D8               	btfss	status,0,c
  4809  0024C2  D7E7               	goto	l560
  4810                           
  4811                           ; BSR set to: 1
  4812                           
  4813                           ; BSR set to: 1
  4814                           ;MotorDrive.c: 771: }
  4815                           ;MotorDrive.c: 774: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4816  0024C4  848B               	bsf	3979,2,c	;volatile
  4817  0024C6  908C               	bcf	3980,0,c	;volatile
  4818  0024C8  928C               	bcf	3980,1,c	;volatile
  4819                           
  4820                           ; BSR set to: 1
  4821                           ;MotorDrive.c: 779: delay_pwm(hg_op.work_freq * 300);
  4822                           
  4823                           ; BSR set to: 1
  4824  0024CA  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
  4825  0024CE  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
  4826  0024D2  0E01               	movlw	1
  4827  0024D4  0101               	movlb	1	; () banked
  4828  0024D6  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4829  0024D8  0E2C               	movlw	44
  4830  0024DA  6F2A               	movwf	___wmul@multiplicand& (0+255),b
  4831  0024DC  EC3E  F026         	call	___wmul	;wreg free
  4832  0024E0  0101               	movlb	1	; () banked
  4833  0024E2  C128  F12C         	movff	?___wmul,delay_pwm@n
  4834  0024E6  0101               	movlb	1	; () banked
  4835  0024E8  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
  4836  0024EC  0101               	movlb	1	; () banked
  4837  0024EE  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
  4838  0024F0  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
  4839  0024F2  EC73  F026         	call	_delay_pwm	;wreg free
  4840                           
  4841                           ;MotorDrive.c: 780: hg_op.drops_sa = 0;
  4842  0024F6  0E00               	movlw	0
  4843  0024F8  0100               	movlb	0	; () banked
  4844  0024FA  6F9F               	movwf	(_hg_op+31)& (0+255),b
  4845                           
  4846                           ; BSR set to: 0
  4847                           ;MotorDrive.c: 781: hg_op.drops_push = 0;
  4848  0024FC  0E00               	movlw	0
  4849  0024FE  0100               	movlb	0	; () banked
  4850  002500  6FA1               	movwf	(_hg_op+33)& (0+255),b
  4851                           
  4852                           ; BSR set to: 0
  4853                           ;MotorDrive.c: 782: hg_op.drops_sb = 1;
  4854  002502  0E01               	movlw	1
  4855  002504  0100               	movlb	0	; () banked
  4856  002506  6FA0               	movwf	(_hg_op+32)& (0+255),b
  4857                           
  4858                           ;MotorDrive.c: 785: }
  4859  002508  0012               	return	
  4860  00250A                     l14821:
  4861                           
  4862                           ; BSR set to: 0
  4863                           ;MotorDrive.c: 786: else if(hg_op.drops_sb == 1)
  4864  00250A  0100               	movlb	0	; () banked
  4865  00250C  05A0               	decf	(_hg_op+32)& (0+255),w,b
  4866  00250E  A4D8               	btfss	status,2,c
  4867  002510  0012               	return	
  4868                           
  4869                           ; BSR set to: 0
  4870                           ;MotorDrive.c: 787: {
  4871                           ;MotorDrive.c: 788: hg_op.cnt_posb =0;
  4872  002512  0E00               	movlw	0
  4873  002514  0100               	movlb	0	; () banked
  4874  002516  6FA8               	movwf	(_hg_op+40)& (0+255),b
  4875  002518  0E00               	movlw	0
  4876  00251A  6FA7               	movwf	(_hg_op+39)& (0+255),b
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;MotorDrive.c: 790: if(hg_op.needle_len == 13)
  4880  00251C  0E0D               	movlw	13
  4881  00251E  0100               	movlb	0	; () banked
  4882  002520  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  4883  002522  A4D8               	btfss	status,2,c
  4884  002524  D005               	goto	l571
  4885                           
  4886                           ; BSR set to: 0
  4887                           ;MotorDrive.c: 791: {
  4888                           ;MotorDrive.c: 792: LATDbits.LD3 =1;
  4889  002526  868C               	bsf	3980,3,c	;volatile
  4890                           
  4891                           ;MotorDrive.c: 793: LATDbits.LD4 =1;
  4892  002528  888C               	bsf	3980,4,c	;volatile
  4893  00252A                     l572:
  4894  00252A  A081               	btfss	3969,0,c	;volatile
  4895  00252C  D016               	goto	l585
  4896  00252E  D7FD               	goto	l572
  4897  002530                     l571:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;MotorDrive.c: 796: else
  4901                           ;MotorDrive.c: 797: {
  4902                           ;MotorDrive.c: 798: LATDbits.LD3 =1;
  4903  002530  868C               	bsf	3980,3,c	;volatile
  4904                           
  4905                           ;MotorDrive.c: 799: LATDbits.LD4 =1;
  4906  002532  888C               	bsf	3980,4,c	;volatile
  4907                           
  4908                           ;MotorDrive.c: 804: while(hg_op.cnt_posb < 20)
  4909  002534  D00A               	goto	l14833
  4910  002536                     l578:
  4911  002536  A481               	btfss	3969,2,c	;volatile
  4912  002538  D7FE               	goto	l578
  4913                           
  4914                           ;MotorDrive.c: 813: hg_op.cnt_posb ++;
  4915  00253A  0100               	movlb	0	; () banked
  4916  00253C  4BA7               	infsnz	(_hg_op+39)& (0+255),f,b
  4917  00253E  2BA8               	incf	(_hg_op+40)& (0+255),f,b
  4918  002540                     l581:
  4919  002540  B481               	btfsc	3969,2,c	;volatile
  4920  002542  D7FE               	goto	l581
  4921                           
  4922                           ;MotorDrive.c: 815: hg_op.cnt_posb ++;
  4923  002544  0100               	movlb	0	; () banked
  4924  002546  4BA7               	infsnz	(_hg_op+39)& (0+255),f,b
  4925  002548  2BA8               	incf	(_hg_op+40)& (0+255),f,b
  4926  00254A                     l14833:
  4927                           
  4928                           ; BSR set to: 0
  4929  00254A  0100               	movlb	0	; () banked
  4930  00254C  51A8               	movf	(_hg_op+40)& (0+255),w,b
  4931  00254E  E105               	bnz	l585
  4932  002550  0E14               	movlw	20
  4933  002552  0100               	movlb	0	; () banked
  4934  002554  5DA7               	subwf	(_hg_op+39)& (0+255),w,b
  4935  002556  A0D8               	btfss	status,0,c
  4936  002558  D7EE               	goto	l578
  4937  00255A                     l585:
  4938  00255A  888C               	bsf	3980,4,c	;volatile
  4939  00255C  948C               	bcf	3980,2,c	;volatile
  4940  00255E  968C               	bcf	3980,3,c	;volatile
  4941                           
  4942                           ;MotorDrive.c: 828: delay_pwm(hg_op.work_freq * 300);
  4943  002560  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
  4944  002564  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
  4945  002568  0E01               	movlw	1
  4946  00256A  0101               	movlb	1	; () banked
  4947  00256C  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4948  00256E  0E2C               	movlw	44
  4949  002570  6F2A               	movwf	___wmul@multiplicand& (0+255),b
  4950  002572  EC3E  F026         	call	___wmul	;wreg free
  4951  002576  0101               	movlb	1	; () banked
  4952  002578  C128  F12C         	movff	?___wmul,delay_pwm@n
  4953  00257C  0101               	movlb	1	; () banked
  4954  00257E  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
  4955  002582  0101               	movlb	1	; () banked
  4956  002584  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
  4957  002586  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
  4958  002588  EC73  F026         	call	_delay_pwm	;wreg free
  4959                           
  4960                           ;MotorDrive.c: 830: printf("in test mode\r\n");
  4961  00258C  0EF0               	movlw	low STR_1
  4962  00258E  0100               	movlb	0	; () banked
  4963  002590  6FFE               	movwf	printf@f& (0+255),b
  4964  002592  0E7F               	movlw	high STR_1
  4965  002594  0100               	movlb	0	; () banked
  4966  002596  6FFF               	movwf	(printf@f+1)& (0+255),b
  4967  002598  EC59  F026         	call	_printf	;wreg free
  4968                           
  4969                           ;MotorDrive.c: 832: if(action_btn_cnt%2 == 0)
  4970  00259C  0100               	movlb	0	; () banked
  4971  00259E  B1D1               	btfsc	_action_btn_cnt& (0+255),0,b
  4972  0025A0  D038               	goto	l14855
  4973                           
  4974                           ; BSR set to: 0
  4975                           
  4976                           ;MotorDrive.c: 833: {
  4977                           ;MotorDrive.c: 834: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4978  0025A2  888C               	bsf	3980,4,c	;volatile
  4979  0025A4  948C               	bcf	3980,2,c	;volatile
  4980  0025A6  968C               	bcf	3980,3,c	;volatile
  4981                           
  4982                           ; BSR set to: 0
  4983                           
  4984                           ; BSR set to: 0
  4985                           ;MotorDrive.c: 835: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4986  0025A8  848B               	bsf	3979,2,c	;volatile
  4987  0025AA  908C               	bcf	3980,0,c	;volatile
  4988  0025AC  928C               	bcf	3980,1,c	;volatile
  4989                           
  4990                           ; BSR set to: 0
  4991                           
  4992                           ; BSR set to: 0
  4993                           ;MotorDrive.c: 837: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  4994  0025AE  908C               	bcf	3980,0,c	;volatile
  4995  0025B0  828C               	bsf	3980,1,c	;volatile
  4996  0025B2  848B               	bsf	3979,2,c	;volatile
  4997                           
  4998                           ; BSR set to: 0
  4999                           ;MotorDrive.c: 840: while(cnt_push < 14)
  5000  0025B4  D00A               	goto	l14845
  5001  0025B6                     l596:
  5002  0025B6  A880               	btfss	3968,4,c	;volatile
  5003  0025B8  D7FE               	goto	l596
  5004                           
  5005                           ;MotorDrive.c: 843: cnt_push ++;
  5006  0025BA  0101               	movlb	1	; () banked
  5007  0025BC  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  5008  0025BE  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  5009  0025C0                     l599:
  5010  0025C0  B880               	btfsc	3968,4,c	;volatile
  5011  0025C2  D7FE               	goto	l599
  5012                           
  5013                           ;MotorDrive.c: 845: cnt_push ++;
  5014  0025C4  0101               	movlb	1	; () banked
  5015  0025C6  4B32               	infsnz	test_routine@cnt_push& (0+255),f,b
  5016  0025C8  2B33               	incf	(test_routine@cnt_push+1)& (0+255),f,b
  5017  0025CA                     l14845:
  5018  0025CA  0101               	movlb	1	; () banked
  5019  0025CC  5133               	movf	(test_routine@cnt_push+1)& (0+255),w,b
  5020  0025CE  E105               	bnz	l603
  5021  0025D0  0E0E               	movlw	14
  5022  0025D2  0101               	movlb	1	; () banked
  5023  0025D4  5D32               	subwf	test_routine@cnt_push& (0+255),w,b
  5024  0025D6  A0D8               	btfss	status,0,c
  5025  0025D8  D7EE               	goto	l596
  5026  0025DA                     l603:
  5027                           
  5028                           ; BSR set to: 1
  5029  0025DA  848B               	bsf	3979,2,c	;volatile
  5030  0025DC  908C               	bcf	3980,0,c	;volatile
  5031  0025DE  928C               	bcf	3980,1,c	;volatile
  5032                           
  5033                           ; BSR set to: 1
  5034                           ;MotorDrive.c: 851: hg_op.drops_sa = 0;
  5035                           
  5036                           ; BSR set to: 1
  5037  0025E0  0E00               	movlw	0
  5038  0025E2  0100               	movlb	0	; () banked
  5039  0025E4  6F9F               	movwf	(_hg_op+31)& (0+255),b
  5040                           
  5041                           ;MotorDrive.c: 852: hg_op.drops_sb = 0;
  5042  0025E6  0E00               	movlw	0
  5043  0025E8  0100               	movlb	0	; () banked
  5044  0025EA  6FA0               	movwf	(_hg_op+32)& (0+255),b
  5045                           
  5046                           ;MotorDrive.c: 853: hg_op.drops_push = 0;
  5047  0025EC  0E00               	movlw	0
  5048  0025EE  0100               	movlb	0	; () banked
  5049  0025F0  6FA1               	movwf	(_hg_op+33)& (0+255),b
  5050                           
  5051                           ;MotorDrive.c: 856: hg_op.acting_flag =0;
  5052  0025F2  0E00               	movlw	0
  5053  0025F4  0100               	movlb	0	; () banked
  5054  0025F6  6F9E               	movwf	(_hg_op+30)& (0+255),b
  5055                           
  5056                           ; BSR set to: 0
  5057                           ;MotorDrive.c: 859: if(hg_op.needle_len == 13)
  5058  0025F8  0E0D               	movlw	13
  5059  0025FA  0100               	movlb	0	; () banked
  5060  0025FC  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5061  0025FE  A4D8               	btfss	status,2,c
  5062  002600  D004               	goto	l14853
  5063                           
  5064                           ; BSR set to: 0
  5065                           ;MotorDrive.c: 860: {
  5066                           ;MotorDrive.c: 861: hg_op.need_reset =0;
  5067  002602  0E00               	movlw	0
  5068  002604  0100               	movlb	0	; () banked
  5069  002606  6F85               	movwf	(_hg_op+5)& (0+255),b
  5070                           
  5071                           ;MotorDrive.c: 862: }
  5072  002608  0012               	return	
  5073  00260A                     l14853:
  5074                           
  5075                           ; BSR set to: 0
  5076                           ;MotorDrive.c: 863: else
  5077                           ;MotorDrive.c: 864: {
  5078                           ;MotorDrive.c: 865: hg_op.need_reset =1;
  5079  00260A  0E01               	movlw	1
  5080  00260C  0100               	movlb	0	; () banked
  5081  00260E  6F85               	movwf	(_hg_op+5)& (0+255),b
  5082                           
  5083                           ; BSR set to: 0
  5084                           ;MotorDrive.c: 866: }
  5085                           ;MotorDrive.c: 868: }
  5086  002610  0012               	return	
  5087  002612                     l14855:
  5088                           
  5089                           ; BSR set to: 0
  5090                           ;MotorDrive.c: 870: else
  5091                           ;MotorDrive.c: 871: {
  5092                           ;MotorDrive.c: 872: hg_op.drops_sb = 0;
  5093  002612  0E00               	movlw	0
  5094  002614  0100               	movlb	0	; () banked
  5095  002616  6FA0               	movwf	(_hg_op+32)& (0+255),b
  5096                           
  5097                           ;MotorDrive.c: 873: hg_op.drops_push =0;
  5098  002618  0E00               	movlw	0
  5099  00261A  0100               	movlb	0	; () banked
  5100  00261C  6FA1               	movwf	(_hg_op+33)& (0+255),b
  5101                           
  5102                           ;MotorDrive.c: 874: hg_op.drops_sa = 1;
  5103  00261E  0E01               	movlw	1
  5104  002620  0100               	movlb	0	; () banked
  5105  002622  6F9F               	movwf	(_hg_op+31)& (0+255),b
  5106                           
  5107                           ; BSR set to: 0
  5108                           
  5109                           ; BSR set to: 0
  5110                           
  5111                           ; BSR set to: 0
  5112                           
  5113                           ; BSR set to: 0
  5114  002624  0012               	return	
  5115  002626                     __end_of_test_routine:
  5116                           	opt stack 0
  5117                           tblptru	equ	0xFF8
  5118                           tblptrh	equ	0xFF7
  5119                           tblptrl	equ	0xFF6
  5120                           tablat	equ	0xFF5
  5121                           intcon	equ	0xFF2
  5122                           postinc0	equ	0xFEE
  5123                           wreg	equ	0xFE8
  5124                           postdec1	equ	0xFE5
  5125                           fsr1h	equ	0xFE2
  5126                           fsr1l	equ	0xFE1
  5127                           status	equ	0xFD8
  5128                           
  5129 ;; *************** function _printf *****************
  5130 ;; Defined at:
  5131 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  5132 ;; Parameters:    Size  Location     Type
  5133 ;;  f               2    1[BANK0 ] PTR const unsigned char 
  5134 ;;		 -> STR_1(15), 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  tmpval          4    0        struct .
  5137 ;;  cp              3    0        PTR const unsigned char 
  5138 ;;  ap              2    0[BANK1 ] PTR void [1]
  5139 ;;		 -> ?_printf(2), 
  5140 ;;  len             2    0        unsigned int 
  5141 ;;  val             2    0        unsigned int 
  5142 ;;  c               1    2[BANK1 ] char 
  5143 ;;  flag            1    0        unsigned char 
  5144 ;;  prec            1    0        char 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2    1[BANK0 ] int 
  5147 ;; Registers used:
  5148 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5154 ;;      Params:         0       2       0       0       0       0       0
  5155 ;;      Locals:         0       0       3       0       0       0       0
  5156 ;;      Temps:          0       0       0       0       0       0       0
  5157 ;;      Totals:         0       2       3       0       0       0       0
  5158 ;;Total ram usage:        5 bytes
  5159 ;; Hardware stack levels used:    1
  5160 ;; Hardware stack levels required when called:    3
  5161 ;; This function calls:
  5162 ;;		_putch
  5163 ;; This function is called by:
  5164 ;;		_test_routine
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text2
  5169  004CB2                     __ptext2:
  5170                           	opt stack 0
  5171  004CB2                     _printf:
  5172                           	opt stack 26
  5173                           
  5174                           ;doprnt.c: 466: va_list ap;
  5175                           ;doprnt.c: 499: signed char c;
  5176                           ;doprnt.c: 506: signed char prec;
  5177                           ;doprnt.c: 508: unsigned char flag;
  5178                           ;doprnt.c: 523: union {
  5179                           ;doprnt.c: 524: unsigned long vd;
  5180                           ;doprnt.c: 525: double integ;
  5181                           ;doprnt.c: 526: } tmpval;
  5182                           ;doprnt.c: 528: unsigned int val;
  5183                           ;doprnt.c: 529: unsigned len;
  5184                           ;doprnt.c: 530: const char * cp;
  5185                           ;doprnt.c: 533: *ap = __va_start();
  5186                           
  5187                           ; BSR set to: 0
  5188                           ;incstack = 0
  5189  004CB2  0E00               	movlw	low (?_printf+2)
  5190  004CB4  0101               	movlb	1	; () banked
  5191  004CB6  6F28               	movwf	printf@ap& (0+255),b
  5192  004CB8  0E01               	movlw	high (?_printf+2)
  5193  004CBA  0101               	movlb	1	; () banked
  5194  004CBC  6F29               	movwf	(printf@ap+1)& (0+255),b
  5195                           
  5196                           ;doprnt.c: 536: while(c = *f++) {
  5197  004CBE  D004               	goto	l13079
  5198  004CC0                     l13077:
  5199                           
  5200                           ; BSR set to: 1
  5201                           ;doprnt.c: 540: {
  5202                           ;doprnt.c: 541: (putch(c) );
  5203  004CC0  0101               	movlb	1	; () banked
  5204  004CC2  512A               	movf	printf@c& (0+255),w,b
  5205  004CC4  EC28  F027         	call	_putch
  5206  004CC8                     l13079:
  5207  004CC8  C0FE  FFF6         	movff	printf@f,tblptrl
  5208  004CCC  C0FF  FFF7         	movff	printf@f+1,tblptrh
  5209  004CD0  0100               	movlb	0	; () banked
  5210  004CD2  4BFE               	infsnz	printf@f& (0+255),f,b
  5211  004CD4  2BFF               	incf	(printf@f+1)& (0+255),f,b
  5212  004CD6                     	if	0	;tblptru may be non-zero
  5213  004CD6                     	endif
  5214  004CD6                     	if	0	;tblptru may be non-zero
  5215  004CD6                     	endif
  5216  004CD6  0008               	tblrd		*
  5217  004CD8  CFF5 F12A          	movff	tablat,printf@c
  5218  004CDC  0101               	movlb	1	; () banked
  5219  004CDE  512A               	movf	printf@c& (0+255),w,b
  5220  004CE0  B4D8               	btfsc	status,2,c
  5221  004CE2  0012               	return	
  5222  004CE4  D7ED               	goto	l13077
  5223  004CE6                     __end_of_printf:
  5224                           	opt stack 0
  5225                           tblptru	equ	0xFF8
  5226                           tblptrh	equ	0xFF7
  5227                           tblptrl	equ	0xFF6
  5228                           tablat	equ	0xFF5
  5229                           intcon	equ	0xFF2
  5230                           postinc0	equ	0xFEE
  5231                           wreg	equ	0xFE8
  5232                           postdec1	equ	0xFE5
  5233                           fsr1h	equ	0xFE2
  5234                           fsr1l	equ	0xFE1
  5235                           status	equ	0xFD8
  5236                           
  5237 ;; *************** function _putch *****************
  5238 ;; Defined at:
  5239 ;;		line 56 in file "../Beep.c"
  5240 ;; Parameters:    Size  Location     Type
  5241 ;;  c               1    wreg     unsigned char 
  5242 ;; Auto vars:     Size  Location     Type
  5243 ;;  c               1    0[BANK0 ] unsigned char 
  5244 ;; Return value:  Size  Location     Type
  5245 ;;                  1    wreg      void 
  5246 ;; Registers used:
  5247 ;;		wreg
  5248 ;; Tracked objects:
  5249 ;;		On entry : 0/0
  5250 ;;		On exit  : 0/0
  5251 ;;		Unchanged: 0/0
  5252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5253 ;;      Params:         0       0       0       0       0       0       0
  5254 ;;      Locals:         0       1       0       0       0       0       0
  5255 ;;      Temps:          0       0       0       0       0       0       0
  5256 ;;      Totals:         0       1       0       0       0       0       0
  5257 ;;Total ram usage:        1 bytes
  5258 ;; Hardware stack levels used:    1
  5259 ;; Hardware stack levels required when called:    2
  5260 ;; This function calls:
  5261 ;;		Nothing
  5262 ;; This function is called by:
  5263 ;;		_printf
  5264 ;; This function uses a non-reentrant model
  5265 ;;
  5266                           
  5267                           	psect	text3
  5268  004E50                     __ptext3:
  5269                           	opt stack 0
  5270  004E50                     _putch:
  5271                           	opt stack 26
  5272                           
  5273                           ; BSR set to: 1
  5274                           ;incstack = 0
  5275                           ;putch@c stored from wreg
  5276  004E50  0100               	movlb	0	; () banked
  5277  004E52  6FFD               	movwf	putch@c& (0+255),b
  5278                           
  5279                           ;Beep.c: 58: TXREG = c;
  5280  004E54  C0FD  FFAD         	movff	putch@c,4013	;volatile
  5281  004E58                     l43:
  5282  004E58  B2AC               	btfsc	4012,1,c	;volatile
  5283  004E5A  0012               	return	
  5284  004E5C  D7FD               	goto	l43
  5285  004E5E                     __end_of_putch:
  5286                           	opt stack 0
  5287                           tblptru	equ	0xFF8
  5288                           tblptrh	equ	0xFF7
  5289                           tblptrl	equ	0xFF6
  5290                           tablat	equ	0xFF5
  5291                           intcon	equ	0xFF2
  5292                           postinc0	equ	0xFEE
  5293                           wreg	equ	0xFE8
  5294                           postdec1	equ	0xFE5
  5295                           fsr1h	equ	0xFE2
  5296                           fsr1l	equ	0xFE1
  5297                           status	equ	0xFD8
  5298                           
  5299 ;; *************** function _initial_para_setting *****************
  5300 ;; Defined at:
  5301 ;;		line 1607 in file "../gui.c"
  5302 ;; Parameters:    Size  Location     Type
  5303 ;;		None
  5304 ;; Auto vars:     Size  Location     Type
  5305 ;;		None
  5306 ;; Return value:  Size  Location     Type
  5307 ;;                  1    wreg      void 
  5308 ;; Registers used:
  5309 ;;		wreg, status,2
  5310 ;; Tracked objects:
  5311 ;;		On entry : 0/0
  5312 ;;		On exit  : 0/0
  5313 ;;		Unchanged: 0/0
  5314 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5315 ;;      Params:         0       0       0       0       0       0       0
  5316 ;;      Locals:         0       0       0       0       0       0       0
  5317 ;;      Temps:          0       0       0       0       0       0       0
  5318 ;;      Totals:         0       0       0       0       0       0       0
  5319 ;;Total ram usage:        0 bytes
  5320 ;; Hardware stack levels used:    1
  5321 ;; Hardware stack levels required when called:    2
  5322 ;; This function calls:
  5323 ;;		Nothing
  5324 ;; This function is called by:
  5325 ;;		_main
  5326 ;; This function uses a non-reentrant model
  5327 ;;
  5328                           
  5329                           	psect	text4
  5330  004976                     __ptext4:
  5331                           	opt stack 0
  5332  004976                     _initial_para_setting:
  5333                           	opt stack 28
  5334                           
  5335                           ;gui.c: 1611: hg_op.need_reset =0;
  5336                           
  5337                           ;incstack = 0
  5338  004976  0E00               	movlw	0
  5339  004978  0100               	movlb	0	; () banked
  5340  00497A  6F85               	movwf	(_hg_op+5)& (0+255),b
  5341                           
  5342                           ;gui.c: 1613: hg_op.cur_working_mode = 0x00;
  5343  00497C  0E00               	movlw	0
  5344  00497E  0100               	movlb	0	; () banked
  5345  004980  6F81               	movwf	(_hg_op+1)& (0+255),b
  5346                           
  5347                           ;gui.c: 1614: hg_op.cnt_target_posrst = (789);
  5348  004982  0E03               	movlw	3
  5349  004984  0100               	movlb	0	; () banked
  5350  004986  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5351  004988  0E15               	movlw	21
  5352  00498A  6FB7               	movwf	(_hg_op+55)& (0+255),b
  5353                           
  5354                           ;gui.c: 1615: hg_op.needle_len = 4;
  5355  00498C  0E04               	movlw	4
  5356  00498E  0100               	movlb	0	; () banked
  5357  004990  6F97               	movwf	(_hg_op+23)& (0+255),b
  5358                           
  5359                           ;gui.c: 1616: hg_op.status_powerup = 0x00;
  5360  004992  0E00               	movlw	0
  5361  004994  0100               	movlb	0	; () banked
  5362  004996  6F83               	movwf	(_hg_op+3)& (0+255),b
  5363                           
  5364                           ;gui.c: 1617: hg_op.working_mode = 0x03;
  5365  004998  0E03               	movlw	3
  5366  00499A  0100               	movlb	0	; () banked
  5367  00499C  6F80               	movwf	_hg_op& (0+255),b
  5368                           
  5369                           ;gui.c: 1619: hg_op.status_hit_lp = 0;
  5370  00499E  0E00               	movlw	0
  5371  0049A0  0100               	movlb	0	; () banked
  5372  0049A2  6F86               	movwf	(_hg_op+6)& (0+255),b
  5373                           
  5374                           ;gui.c: 1621: hg_op.cnt_pos_1mm =0;
  5375  0049A4  0E00               	movlw	0
  5376  0049A6  0100               	movlb	0	; () banked
  5377  0049A8  6FAA               	movwf	(_hg_op+42)& (0+255),b
  5378  0049AA  0E00               	movlw	0
  5379  0049AC  6FA9               	movwf	(_hg_op+41)& (0+255),b
  5380                           
  5381                           ;gui.c: 1622: hg_op.cnt_pos_nmm = 0;
  5382  0049AE  0E00               	movlw	0
  5383  0049B0  0100               	movlb	0	; () banked
  5384  0049B2  6FAE               	movwf	(_hg_op+46)& (0+255),b
  5385  0049B4  0E00               	movlw	0
  5386  0049B6  6FAD               	movwf	(_hg_op+45)& (0+255),b
  5387                           
  5388                           ;gui.c: 1623: hg_op.cnt_pos_nmm_target = (236);
  5389  0049B8  0E00               	movlw	0
  5390  0049BA  0100               	movlb	0	; () banked
  5391  0049BC  6FB4               	movwf	(_hg_op+52)& (0+255),b
  5392  0049BE  0EEC               	movlw	236
  5393  0049C0  6FB3               	movwf	(_hg_op+51)& (0+255),b
  5394                           
  5395                           ;gui.c: 1624: hg_op.inject_len = 1;
  5396  0049C2  0E00               	movlw	0
  5397  0049C4  0100               	movlb	0	; () banked
  5398  0049C6  6F99               	movwf	(_hg_op+25)& (0+255),b
  5399  0049C8  0E01               	movlw	1
  5400  0049CA  6F98               	movwf	(_hg_op+24)& (0+255),b
  5401                           
  5402                           ; BSR set to: 0
  5403  0049CC  0012               	return		;funcret
  5404  0049CE                     __end_of_initial_para_setting:
  5405                           	opt stack 0
  5406                           tblptru	equ	0xFF8
  5407                           tblptrh	equ	0xFF7
  5408                           tblptrl	equ	0xFF6
  5409                           tablat	equ	0xFF5
  5410                           intcon	equ	0xFF2
  5411                           postinc0	equ	0xFEE
  5412                           wreg	equ	0xFE8
  5413                           postdec1	equ	0xFE5
  5414                           fsr1h	equ	0xFE2
  5415                           fsr1l	equ	0xFE1
  5416                           status	equ	0xFD8
  5417                           
  5418 ;; *************** function _hg_reset *****************
  5419 ;; Defined at:
  5420 ;;		line 158 in file "../MotorDrive.c"
  5421 ;; Parameters:    Size  Location     Type
  5422 ;;		None
  5423 ;; Auto vars:     Size  Location     Type
  5424 ;;		None
  5425 ;; Return value:  Size  Location     Type
  5426 ;;                  1    wreg      void 
  5427 ;; Registers used:
  5428 ;;		wreg, status,2, status,0, cstack
  5429 ;; Tracked objects:
  5430 ;;		On entry : 0/0
  5431 ;;		On exit  : 0/0
  5432 ;;		Unchanged: 0/0
  5433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5434 ;;      Params:         0       0       0       0       0       0       0
  5435 ;;      Locals:         0       0       0       0       0       0       0
  5436 ;;      Temps:          0       0       0       0       0       0       0
  5437 ;;      Totals:         0       0       0       0       0       0       0
  5438 ;;Total ram usage:        0 bytes
  5439 ;; Hardware stack levels used:    1
  5440 ;; Hardware stack levels required when called:    3
  5441 ;; This function calls:
  5442 ;;		_delaynus
  5443 ;; This function is called by:
  5444 ;;		_main
  5445 ;; This function uses a non-reentrant model
  5446 ;;
  5447                           
  5448                           	psect	text5
  5449  0032BE                     __ptext5:
  5450                           	opt stack 0
  5451  0032BE                     _hg_reset:
  5452                           	opt stack 27
  5453                           
  5454                           ;MotorDrive.c: 161: if(PORTBbits.RB0 == 0 || hg_op.needle_len == 13)
  5455                           
  5456                           ; BSR set to: 0
  5457                           ;incstack = 0
  5458  0032BE  A081               	btfss	3969,0,c	;volatile
  5459  0032C0  D005               	goto	l14417
  5460  0032C2  0E0D               	movlw	13
  5461  0032C4  0100               	movlb	0	; () banked
  5462  0032C6  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5463  0032C8  A4D8               	btfss	status,2,c
  5464  0032CA  D05A               	goto	l14437
  5465  0032CC                     l14417:
  5466                           
  5467                           ;MotorDrive.c: 164: {
  5468                           ;MotorDrive.c: 165: hg_op.posrst = 0;
  5469  0032CC  0E00               	movlw	0
  5470  0032CE  0100               	movlb	0	; () banked
  5471  0032D0  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5472                           
  5473                           ;MotorDrive.c: 166: hg_op.cnt_posrst =0;
  5474  0032D2  0E00               	movlw	0
  5475  0032D4  0100               	movlb	0	; () banked
  5476  0032D6  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5477  0032D8  0E00               	movlw	0
  5478  0032DA  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5479                           
  5480                           ;MotorDrive.c: 167: hg_op.cnt_target_posrst = 600;
  5481  0032DC  0E02               	movlw	2
  5482  0032DE  0100               	movlb	0	; () banked
  5483  0032E0  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5484  0032E2  0E58               	movlw	88
  5485  0032E4  6FB7               	movwf	(_hg_op+55)& (0+255),b
  5486                           
  5487                           ;MotorDrive.c: 168: hg_op.in_reset = 1;
  5488  0032E6  0E01               	movlw	1
  5489  0032E8  0100               	movlb	0	; () banked
  5490  0032EA  6F90               	movwf	(_hg_op+16)& (0+255),b
  5491                           
  5492                           ; BSR set to: 0
  5493                           
  5494                           ; BSR set to: 0
  5495                           
  5496                           ;MotorDrive.c: 171: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  5497  0032EC  848C               	bsf	3980,2,c	;volatile
  5498                           
  5499                           ; BSR set to: 0
  5500  0032EE  968C               	bcf	3980,3,c	;volatile
  5501                           
  5502                           ; BSR set to: 0
  5503  0032F0  888C               	bsf	3980,4,c	;volatile
  5504                           
  5505                           ; BSR set to: 0
  5506                           ;MotorDrive.c: 172: while(hg_op.cnt_posrst < 200)
  5507  0032F2  D02C               	goto	l14429
  5508  0032F4                     l306:
  5509                           
  5510                           ; BSR set to: 0
  5511                           ;MotorDrive.c: 173: {
  5512                           ;MotorDrive.c: 174: LATDbits.LD2 =1;
  5513  0032F4  848C               	bsf	3980,2,c	;volatile
  5514                           
  5515                           ; BSR set to: 0
  5516                           ;MotorDrive.c: 175: delaynus(10); delaynus(10); delaynus(10); delaynus(10); delaynus(10)
      +                          ;
  5517  0032F6  0E00               	movlw	0
  5518  0032F8  0100               	movlb	0	; () banked
  5519  0032FA  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5520  0032FC  0E0A               	movlw	10
  5521  0032FE  6FFD               	movwf	delaynus@n& (0+255),b
  5522  003300  ECE0  F026         	call	_delaynus	;wreg free
  5523  003304  0E00               	movlw	0
  5524  003306  0100               	movlb	0	; () banked
  5525  003308  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5526  00330A  0E0A               	movlw	10
  5527  00330C  6FFD               	movwf	delaynus@n& (0+255),b
  5528  00330E  ECE0  F026         	call	_delaynus	;wreg free
  5529  003312  0E00               	movlw	0
  5530  003314  0100               	movlb	0	; () banked
  5531  003316  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5532  003318  0E0A               	movlw	10
  5533  00331A  6FFD               	movwf	delaynus@n& (0+255),b
  5534  00331C  ECE0  F026         	call	_delaynus	;wreg free
  5535  003320  0E00               	movlw	0
  5536  003322  0100               	movlb	0	; () banked
  5537  003324  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5538  003326  0E0A               	movlw	10
  5539  003328  6FFD               	movwf	delaynus@n& (0+255),b
  5540  00332A  ECE0  F026         	call	_delaynus	;wreg free
  5541  00332E  0E00               	movlw	0
  5542  003330  0100               	movlb	0	; () banked
  5543  003332  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5544  003334  0E0A               	movlw	10
  5545  003336  6FFD               	movwf	delaynus@n& (0+255),b
  5546  003338  ECE0  F026         	call	_delaynus	;wreg free
  5547                           
  5548                           ;MotorDrive.c: 176: LATDbits.LD2 =0;
  5549  00333C  948C               	bcf	3980,2,c	;volatile
  5550                           
  5551                           ;MotorDrive.c: 177: delaynus(10);
  5552  00333E  0E00               	movlw	0
  5553  003340  0100               	movlb	0	; () banked
  5554  003342  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5555  003344  0E0A               	movlw	10
  5556  003346  6FFD               	movwf	delaynus@n& (0+255),b
  5557  003348  ECE0  F026         	call	_delaynus	;wreg free
  5558  00334C                     l14429:
  5559  00334C  0100               	movlb	0	; () banked
  5560  00334E  51B6               	movf	(_hg_op+54)& (0+255),w,b
  5561  003350  E105               	bnz	l308
  5562  003352  0EC8               	movlw	200
  5563  003354  0100               	movlb	0	; () banked
  5564  003356  5DB5               	subwf	(_hg_op+53)& (0+255),w,b
  5565  003358  A0D8               	btfss	status,0,c
  5566  00335A  D7CC               	goto	l306
  5567  00335C                     l308:
  5568                           
  5569                           ; BSR set to: 0
  5570  00335C  888C               	bsf	3980,4,c	;volatile
  5571  00335E  948C               	bcf	3980,2,c	;volatile
  5572  003360  968C               	bcf	3980,3,c	;volatile
  5573                           
  5574                           ; BSR set to: 0
  5575                           ;MotorDrive.c: 182: delaynus(50 * 1000);
  5576                           
  5577                           ; BSR set to: 0
  5578  003362  0EC3               	movlw	195
  5579  003364  0100               	movlb	0	; () banked
  5580  003366  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5581  003368  0E50               	movlw	80
  5582  00336A  6FFD               	movwf	delaynus@n& (0+255),b
  5583  00336C  ECE0  F026         	call	_delaynus	;wreg free
  5584                           
  5585                           ;MotorDrive.c: 183: hg_op.posrst = 0;
  5586  003370  0E00               	movlw	0
  5587  003372  0100               	movlb	0	; () banked
  5588  003374  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5589                           
  5590                           ; BSR set to: 0
  5591                           ;MotorDrive.c: 184: hg_op.cnt_posrst =0;
  5592  003376  0E00               	movlw	0
  5593  003378  0100               	movlb	0	; () banked
  5594  00337A  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5595  00337C  0E00               	movlw	0
  5596  00337E  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5597  003380                     l14437:
  5598                           
  5599                           ; BSR set to: 0
  5600                           ;MotorDrive.c: 191: }
  5601                           ;MotorDrive.c: 193: if(hg_op.needle_len == 4)
  5602  003380  0E04               	movlw	4
  5603  003382  0100               	movlb	0	; () banked
  5604  003384  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5605  003386  A4D8               	btfss	status,2,c
  5606  003388  D005               	goto	l14441
  5607                           
  5608                           ; BSR set to: 0
  5609                           ;MotorDrive.c: 194: {
  5610                           ;MotorDrive.c: 195: hg_op.cnt_target_posrst = (789);
  5611  00338A  0E03               	movlw	3
  5612  00338C  0100               	movlb	0	; () banked
  5613  00338E  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5614  003390  0E15               	movlw	21
  5615  003392  D013               	goto	L2
  5616  003394                     l14441:
  5617                           
  5618                           ; BSR set to: 0
  5619                           ;MotorDrive.c: 197: else if(hg_op.needle_len == 6)
  5620  003394  0E06               	movlw	6
  5621  003396  0100               	movlb	0	; () banked
  5622  003398  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5623  00339A  A4D8               	btfss	status,2,c
  5624  00339C  D005               	goto	l14445
  5625                           
  5626                           ; BSR set to: 0
  5627                           ;MotorDrive.c: 198: {
  5628                           ;MotorDrive.c: 199: hg_op.cnt_target_posrst = (614 );
  5629  00339E  0E02               	movlw	2
  5630  0033A0  0100               	movlb	0	; () banked
  5631  0033A2  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5632  0033A4  0E66               	movlw	102
  5633  0033A6  D009               	goto	L2
  5634  0033A8                     l14445:
  5635                           
  5636                           ; BSR set to: 0
  5637                           ;MotorDrive.c: 201: else if(hg_op.needle_len == 13)
  5638  0033A8  0E0D               	movlw	13
  5639  0033AA  0100               	movlb	0	; () banked
  5640  0033AC  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5641  0033AE  A4D8               	btfss	status,2,c
  5642  0033B0  D005               	goto	l311
  5643                           
  5644                           ; BSR set to: 0
  5645                           ;MotorDrive.c: 202: {
  5646                           ;MotorDrive.c: 203: hg_op.cnt_target_posrst = (1);
  5647  0033B2  0E00               	movlw	0
  5648  0033B4  0100               	movlb	0	; () banked
  5649  0033B6  6FB8               	movwf	(_hg_op+56)& (0+255),b
  5650  0033B8  0E01               	movlw	1
  5651  0033BA                     L2:
  5652  0033BA  6FB7               	movwf	(_hg_op+55)& (0+255),b
  5653  0033BC                     l311:
  5654                           
  5655                           ; BSR set to: 0
  5656                           ;MotorDrive.c: 204: }
  5657                           ;MotorDrive.c: 209: hg_op.status_hit_lp = 0;
  5658  0033BC  0E00               	movlw	0
  5659  0033BE  0100               	movlb	0	; () banked
  5660  0033C0  6F86               	movwf	(_hg_op+6)& (0+255),b
  5661                           
  5662                           ; BSR set to: 0
  5663                           ;MotorDrive.c: 210: LATDbits.LD4 =1;LATDbits.LD2 =0;
  5664  0033C2  888C               	bsf	3980,4,c	;volatile
  5665                           
  5666                           ; BSR set to: 0
  5667  0033C4  948C               	bcf	3980,2,c	;volatile
  5668                           
  5669                           ;MotorDrive.c: 211: while(hg_op.status_hit_lp == 0)
  5670  0033C6  D010               	goto	l14457
  5671  0033C8                     l316:
  5672                           
  5673                           ; BSR set to: 0
  5674                           ;MotorDrive.c: 212: {
  5675                           ;MotorDrive.c: 213: LATDbits.LD3 =1;
  5676  0033C8  868C               	bsf	3980,3,c	;volatile
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;MotorDrive.c: 214: delaynus(540*2);
  5680  0033CA  0E04               	movlw	4
  5681  0033CC  0100               	movlb	0	; () banked
  5682  0033CE  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5683  0033D0  0E38               	movlw	56
  5684  0033D2  6FFD               	movwf	delaynus@n& (0+255),b
  5685  0033D4  ECE0  F026         	call	_delaynus	;wreg free
  5686                           
  5687                           ;MotorDrive.c: 215: LATDbits.LD3 =0;
  5688  0033D8  968C               	bcf	3980,3,c	;volatile
  5689                           
  5690                           ;MotorDrive.c: 216: delaynus(460*2);
  5691  0033DA  0E03               	movlw	3
  5692  0033DC  0100               	movlb	0	; () banked
  5693  0033DE  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5694  0033E0  0E98               	movlw	152
  5695  0033E2  6FFD               	movwf	delaynus@n& (0+255),b
  5696  0033E4  ECE0  F026         	call	_delaynus	;wreg free
  5697  0033E8                     l14457:
  5698  0033E8  0100               	movlb	0	; () banked
  5699  0033EA  5186               	movf	(_hg_op+6)& (0+255),w,b
  5700  0033EC  B4D8               	btfsc	status,2,c
  5701  0033EE  D7EC               	goto	l316
  5702                           
  5703                           ; BSR set to: 0
  5704                           
  5705                           ; BSR set to: 0
  5706                           
  5707                           ;MotorDrive.c: 218: }
  5708                           ;MotorDrive.c: 220: do{do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);del
      +                          aynus(15*1000);do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);}while(0);
  5709                           
  5710                           ; BSR set to: 0
  5711  0033F0  848C               	bsf	3980,2,c	;volatile
  5712  0033F2  968C               	bcf	3980,3,c	;volatile
  5713  0033F4  888C               	bsf	3980,4,c	;volatile
  5714                           
  5715                           ; BSR set to: 0
  5716                           
  5717                           ; BSR set to: 0
  5718  0033F6  0E3A               	movlw	58
  5719  0033F8  0100               	movlb	0	; () banked
  5720  0033FA  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5721  0033FC  0E98               	movlw	152
  5722  0033FE  6FFD               	movwf	delaynus@n& (0+255),b
  5723  003400  ECE0  F026         	call	_delaynus	;wreg free
  5724  003404  888C               	bsf	3980,4,c	;volatile
  5725  003406  948C               	bcf	3980,2,c	;volatile
  5726  003408  968C               	bcf	3980,3,c	;volatile
  5727                           
  5728                           ;MotorDrive.c: 222: if(hg_op.needle_len == 13)
  5729  00340A  0E0D               	movlw	13
  5730  00340C  0100               	movlb	0	; () banked
  5731  00340E  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5732  003410  A4D8               	btfss	status,2,c
  5733  003412  D004               	goto	l324
  5734                           
  5735                           ; BSR set to: 0
  5736                           ;MotorDrive.c: 223: {
  5737                           ;MotorDrive.c: 224: hg_op.need_reset =0;
  5738  003414  0E00               	movlw	0
  5739  003416  0100               	movlb	0	; () banked
  5740  003418  6F85               	movwf	(_hg_op+5)& (0+255),b
  5741                           
  5742                           ;MotorDrive.c: 225: }
  5743  00341A  0012               	return	
  5744  00341C                     l324:
  5745                           
  5746                           ; BSR set to: 0
  5747                           ;MotorDrive.c: 226: else
  5748                           ;MotorDrive.c: 227: {
  5749                           ;MotorDrive.c: 228: LATDbits.LD4 =1;LATDbits.LD3 =0;
  5750  00341C  888C               	bsf	3980,4,c	;volatile
  5751  00341E  968C               	bcf	3980,3,c	;volatile
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;MotorDrive.c: 229: hg_op.posrst = 0;
  5755  003420  0E00               	movlw	0
  5756  003422  0100               	movlb	0	; () banked
  5757  003424  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5758                           
  5759                           ;MotorDrive.c: 230: hg_op.cnt_posrst =0;
  5760  003426  0E00               	movlw	0
  5761  003428  0100               	movlb	0	; () banked
  5762  00342A  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5763  00342C  0E00               	movlw	0
  5764  00342E  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5765                           
  5766                           ;MotorDrive.c: 231: hg_op.in_reset = 1;
  5767  003430  0E01               	movlw	1
  5768  003432  0100               	movlb	0	; () banked
  5769  003434  6F90               	movwf	(_hg_op+16)& (0+255),b
  5770                           
  5771                           ;MotorDrive.c: 232: while(hg_op.cnt_posrst < hg_op.cnt_target_posrst)
  5772  003436  D010               	goto	l14477
  5773  003438                     l327:
  5774                           
  5775                           ; BSR set to: 0
  5776                           ;MotorDrive.c: 233: {
  5777                           ;MotorDrive.c: 234: LATDbits.LD2 =1;
  5778  003438  848C               	bsf	3980,2,c	;volatile
  5779                           
  5780                           ; BSR set to: 0
  5781                           ;MotorDrive.c: 235: delaynus(300*2);
  5782  00343A  0E02               	movlw	2
  5783  00343C  0100               	movlb	0	; () banked
  5784  00343E  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5785  003440  0E58               	movlw	88
  5786  003442  6FFD               	movwf	delaynus@n& (0+255),b
  5787  003444  ECE0  F026         	call	_delaynus	;wreg free
  5788                           
  5789                           ;MotorDrive.c: 237: LATDbits.LD2 =0;
  5790  003448  948C               	bcf	3980,2,c	;volatile
  5791                           
  5792                           ;MotorDrive.c: 238: delaynus(700*2);
  5793  00344A  0E05               	movlw	5
  5794  00344C  0100               	movlb	0	; () banked
  5795  00344E  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5796  003450  0E78               	movlw	120
  5797  003452  6FFD               	movwf	delaynus@n& (0+255),b
  5798  003454  ECE0  F026         	call	_delaynus	;wreg free
  5799  003458                     l14477:
  5800  003458  0100               	movlb	0	; () banked
  5801  00345A  51B7               	movf	(_hg_op+55)& (0+255),w,b
  5802  00345C  0100               	movlb	0	; () banked
  5803  00345E  5DB5               	subwf	(_hg_op+53)& (0+255),w,b
  5804  003460  0100               	movlb	0	; () banked
  5805  003462  51B8               	movf	(_hg_op+56)& (0+255),w,b
  5806  003464  0100               	movlb	0	; () banked
  5807  003466  59B6               	subwfb	(_hg_op+54)& (0+255),w,b
  5808  003468  A0D8               	btfss	status,0,c
  5809  00346A  D7E6               	goto	l327
  5810                           
  5811                           ; BSR set to: 0
  5812                           
  5813                           ; BSR set to: 0
  5814                           
  5815                           ;MotorDrive.c: 240: }
  5816                           ;MotorDrive.c: 244: do{do{LATDbits.LD2 =0;LATDbits.LD3 =1; LATDbits.LD4 =1;}while(0);del
      +                          aynus(15*1000);do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);}while(0);
  5817                           
  5818                           ; BSR set to: 0
  5819  00346C  948C               	bcf	3980,2,c	;volatile
  5820  00346E  868C               	bsf	3980,3,c	;volatile
  5821  003470  888C               	bsf	3980,4,c	;volatile
  5822                           
  5823                           ; BSR set to: 0
  5824                           
  5825                           ; BSR set to: 0
  5826  003472  0E3A               	movlw	58
  5827  003474  0100               	movlb	0	; () banked
  5828  003476  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  5829  003478  0E98               	movlw	152
  5830  00347A  6FFD               	movwf	delaynus@n& (0+255),b
  5831  00347C  ECE0  F026         	call	_delaynus	;wreg free
  5832  003480  888C               	bsf	3980,4,c	;volatile
  5833  003482  948C               	bcf	3980,2,c	;volatile
  5834  003484  968C               	bcf	3980,3,c	;volatile
  5835                           
  5836                           ;MotorDrive.c: 252: hg_op.need_reset =0;
  5837  003486  0E00               	movlw	0
  5838  003488  0100               	movlb	0	; () banked
  5839  00348A  6F85               	movwf	(_hg_op+5)& (0+255),b
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;MotorDrive.c: 253: hg_op.in_reset = 0;
  5843  00348C  0E00               	movlw	0
  5844  00348E  0100               	movlb	0	; () banked
  5845  003490  6F90               	movwf	(_hg_op+16)& (0+255),b
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;MotorDrive.c: 254: hg_op.status_hit_lp =0;
  5849  003492  0E00               	movlw	0
  5850  003494  0100               	movlb	0	; () banked
  5851  003496  6F86               	movwf	(_hg_op+6)& (0+255),b
  5852                           
  5853                           ; BSR set to: 0
  5854                           ;MotorDrive.c: 255: hg_op.cnt_posrst =0;
  5855  003498  0E00               	movlw	0
  5856  00349A  0100               	movlb	0	; () banked
  5857  00349C  6FB6               	movwf	(_hg_op+54)& (0+255),b
  5858  00349E  0E00               	movlw	0
  5859  0034A0  6FB5               	movwf	(_hg_op+53)& (0+255),b
  5860                           
  5861                           ; BSR set to: 0
  5862                           ;MotorDrive.c: 256: hg_op.posrst =0;
  5863  0034A2  0E00               	movlw	0
  5864  0034A4  0100               	movlb	0	; () banked
  5865  0034A6  6FA2               	movwf	(_hg_op+34)& (0+255),b
  5866                           
  5867                           ; BSR set to: 0
  5868                           
  5869                           ; BSR set to: 0
  5870                           
  5871                           ;MotorDrive.c: 260: do{T0IE=1;T0CONbits.TMR0ON =1;}while(0);
  5872  0034A8  8AF2               	bsf	intcon,5,c	;volatile
  5873                           
  5874                           ; BSR set to: 0
  5875  0034AA  8ED5               	bsf	4053,7,c	;volatile
  5876                           
  5877                           ; BSR set to: 0
  5878  0034AC  0012               	return	
  5879  0034AE                     __end_of_hg_reset:
  5880                           	opt stack 0
  5881                           tblptru	equ	0xFF8
  5882                           tblptrh	equ	0xFF7
  5883                           tblptrl	equ	0xFF6
  5884                           tablat	equ	0xFF5
  5885                           intcon	equ	0xFF2
  5886                           postinc0	equ	0xFEE
  5887                           wreg	equ	0xFE8
  5888                           postdec1	equ	0xFE5
  5889                           fsr1h	equ	0xFE2
  5890                           fsr1l	equ	0xFE1
  5891                           status	equ	0xFD8
  5892                           
  5893 ;; *************** function _enter_sleep *****************
  5894 ;; Defined at:
  5895 ;;		line 1522 in file "../gui.c"
  5896 ;; Parameters:    Size  Location     Type
  5897 ;;		None
  5898 ;; Auto vars:     Size  Location     Type
  5899 ;;  temp            1   17[BANK1 ] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  1    wreg      void 
  5902 ;; Registers used:
  5903 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5909 ;;      Params:         0       0       0       0       0       0       0
  5910 ;;      Locals:         0       0       1       0       0       0       0
  5911 ;;      Temps:          0       0       0       0       0       0       0
  5912 ;;      Totals:         0       0       1       0       0       0       0
  5913 ;;Total ram usage:        1 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    9
  5916 ;; This function calls:
  5917 ;;		_check_wake_button
  5918 ;;		_delaynus
  5919 ;; This function is called by:
  5920 ;;		_main
  5921 ;; This function uses a non-reentrant model
  5922 ;;
  5923                           
  5924                           	psect	text6
  5925  0043FA                     __ptext6:
  5926                           	opt stack 0
  5927  0043FA                     _enter_sleep:
  5928                           	opt stack 21
  5929                           
  5930                           ;gui.c: 1524: uint8_t temp=0;
  5931                           
  5932                           ; BSR set to: 0
  5933                           ;incstack = 0
  5934  0043FA  0E00               	movlw	0
  5935  0043FC  0101               	movlb	1	; () banked
  5936  0043FE  6F39               	movwf	enter_sleep@temp& (0+255),b
  5937                           
  5938                           ;gui.c: 1529: if( hg_op.status_powerup == 0x00)
  5939  004400  0100               	movlb	0	; () banked
  5940  004402  5183               	movf	(_hg_op+3)& (0+255),w,b
  5941  004404  A4D8               	btfss	status,2,c
  5942  004406  0012               	return	
  5943                           
  5944                           ; BSR set to: 0
  5945                           ;gui.c: 1531: {
  5946                           ;gui.c: 1533: if(hg_op.needle_len == 13)
  5947  004408  0E0D               	movlw	13
  5948  00440A  0100               	movlb	0	; () banked
  5949  00440C  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  5950  00440E  A4D8               	btfss	status,2,c
  5951  004410  D01D               	goto	l14379
  5952                           
  5953                           ; BSR set to: 0
  5954                           
  5955                           ;gui.c: 1534: {
  5956                           ;gui.c: 1535: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  5957  004412  848C               	bsf	3980,2,c	;volatile
  5958  004414  968C               	bcf	3980,3,c	;volatile
  5959  004416  888C               	bsf	3980,4,c	;volatile
  5960                           
  5961                           ; BSR set to: 0
  5962                           ;gui.c: 1537: temp =0;
  5963                           
  5964                           ; BSR set to: 0
  5965  004418  0E00               	movlw	0
  5966  00441A  0101               	movlb	1	; () banked
  5967  00441C  6F39               	movwf	enter_sleep@temp& (0+255),b
  5968                           
  5969                           ;gui.c: 1539: while(temp < 200)
  5970  00441E  D008               	goto	l14375
  5971  004420                     l1881:
  5972  004420  A481               	btfss	3969,2,c	;volatile
  5973  004422  D7FE               	goto	l1881
  5974                           
  5975                           ;gui.c: 1543: temp ++;
  5976  004424  0101               	movlb	1	; () banked
  5977  004426  2B39               	incf	enter_sleep@temp& (0+255),f,b
  5978  004428                     l1884:
  5979  004428  B481               	btfsc	3969,2,c	;volatile
  5980  00442A  D7FE               	goto	l1884
  5981                           
  5982                           ;gui.c: 1546: temp ++;
  5983  00442C  0101               	movlb	1	; () banked
  5984  00442E  2B39               	incf	enter_sleep@temp& (0+255),f,b
  5985  004430                     l14375:
  5986                           
  5987                           ; BSR set to: 1
  5988  004430  0EC7               	movlw	199
  5989  004432  0101               	movlb	1	; () banked
  5990  004434  6539               	cpfsgt	enter_sleep@temp& (0+255),b
  5991  004436  D7F4               	goto	l1881
  5992                           
  5993                           ; BSR set to: 1
  5994                           
  5995                           ; BSR set to: 1
  5996                           ;gui.c: 1548: }
  5997                           ;gui.c: 1549: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  5998  004438  888C               	bsf	3980,4,c	;volatile
  5999  00443A  948C               	bcf	3980,2,c	;volatile
  6000  00443C  968C               	bcf	3980,3,c	;volatile
  6001                           
  6002                           ; BSR set to: 1
  6003                           ;gui.c: 1550: delaynus(50*1000);
  6004                           
  6005                           ; BSR set to: 1
  6006  00443E  0EC3               	movlw	195
  6007  004440  0100               	movlb	0	; () banked
  6008  004442  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  6009  004444  0E50               	movlw	80
  6010  004446  6FFD               	movwf	delaynus@n& (0+255),b
  6011  004448  ECE0  F026         	call	_delaynus	;wreg free
  6012  00444C                     l14379:
  6013  00444C  848B               	bsf	3979,2,c	;volatile
  6014  00444E  908C               	bcf	3980,0,c	;volatile
  6015  004450  928C               	bcf	3980,1,c	;volatile
  6016                           
  6017                           ;gui.c: 1557: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  6018  004452  888C               	bsf	3980,4,c	;volatile
  6019  004454  948C               	bcf	3980,2,c	;volatile
  6020  004456  968C               	bcf	3980,3,c	;volatile
  6021                           
  6022                           ;gui.c: 1559: LATCbits.LC2 =0;
  6023  004458  948B               	bcf	3979,2,c	;volatile
  6024                           
  6025                           ;gui.c: 1560: LATDbits.LD4 =0;
  6026  00445A  988C               	bcf	3980,4,c	;volatile
  6027                           
  6028                           ;gui.c: 1564: hg_op.needle_len = 4;
  6029  00445C  0E04               	movlw	4
  6030  00445E  0100               	movlb	0	; () banked
  6031  004460  6F97               	movwf	(_hg_op+23)& (0+255),b
  6032                           
  6033                           ; BSR set to: 0
  6034                           
  6035                           ; BSR set to: 0
  6036                           
  6037                           ;gui.c: 1569: do{ INTCON3bits.INT2E = 0;INTCON3bits.INT2IF =0;}while(0);
  6038  004462  98F0               	bcf	intcon3,4,c	;volatile
  6039                           
  6040                           ; BSR set to: 0
  6041  004464  92F0               	bcf	intcon3,1,c	;volatile
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;gui.c: 1570: __nop();__nop();__nop();__nop();
  6045                           
  6046                           ; BSR set to: 0
  6047  004466  F000               	nop	
  6048  004468  F000               	nop	
  6049  00446A  F000               	nop	
  6050  00446C  F000               	nop	
  6051                           
  6052                           ;gui.c: 1574: while(hg_op.status_powerup == 0x00)
  6053  00446E  D00B               	goto	l14411
  6054  004470                     l1897:
  6055                           
  6056                           ; BSR set to: 0
  6057                           ;gui.c: 1575: {
  6058                           ;gui.c: 1576: __nop();__nop();__nop();__nop();
  6059  004470  F000               	nop	
  6060  004472  F000               	nop	
  6061  004474  F000               	nop	
  6062  004476  F000               	nop	
  6063  004478  0003               	sleep		;# 
  6064                           
  6065                           ;gui.c: 1578: __nop();__nop();__nop();__nop();
  6066  00447A  F000               	nop	
  6067  00447C  F000               	nop	
  6068  00447E  F000               	nop	
  6069  004480  F000               	nop	
  6070                           
  6071                           ;gui.c: 1581: check_wake_button();
  6072  004482  EC45  F021         	call	_check_wake_button	;wreg free
  6073  004486                     l14411:
  6074  004486  0100               	movlb	0	; () banked
  6075  004488  5183               	movf	(_hg_op+3)& (0+255),w,b
  6076  00448A  A4D8               	btfss	status,2,c
  6077  00448C  0012               	return	
  6078  00448E  D7F0               	goto	l1897
  6079  004490                     __end_of_enter_sleep:
  6080                           	opt stack 0
  6081                           tblptru	equ	0xFF8
  6082                           tblptrh	equ	0xFF7
  6083                           tblptrl	equ	0xFF6
  6084                           tablat	equ	0xFF5
  6085                           intcon	equ	0xFF2
  6086                           intcon3	equ	0xFF0
  6087                           postinc0	equ	0xFEE
  6088                           wreg	equ	0xFE8
  6089                           postdec1	equ	0xFE5
  6090                           fsr1h	equ	0xFE2
  6091                           fsr1l	equ	0xFE1
  6092                           status	equ	0xFD8
  6093                           
  6094 ;; *************** function _check_wake_button *****************
  6095 ;; Defined at:
  6096 ;;		line 1931 in file "../gui.c"
  6097 ;; Parameters:    Size  Location     Type
  6098 ;;		None
  6099 ;; Auto vars:     Size  Location     Type
  6100 ;;		None
  6101 ;; Return value:  Size  Location     Type
  6102 ;;                  1    wreg      void 
  6103 ;; Registers used:
  6104 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6105 ;; Tracked objects:
  6106 ;;		On entry : 0/0
  6107 ;;		On exit  : 0/0
  6108 ;;		Unchanged: 0/0
  6109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6110 ;;      Params:         0       0       0       0       0       0       0
  6111 ;;      Locals:         0       0       0       0       0       0       0
  6112 ;;      Temps:          0       0       0       0       0       0       0
  6113 ;;      Totals:         0       0       0       0       0       0       0
  6114 ;;Total ram usage:        0 bytes
  6115 ;; Hardware stack levels used:    1
  6116 ;; Hardware stack levels required when called:    8
  6117 ;; This function calls:
  6118 ;;		_LCD_On
  6119 ;;		_buzz
  6120 ;;		_config_LCD
  6121 ;;		_delay_nms
  6122 ;;		_initial_ui_setting
  6123 ;; This function is called by:
  6124 ;;		_enter_sleep
  6125 ;; This function uses a non-reentrant model
  6126 ;;
  6127                           
  6128                           	psect	text7
  6129  00428A                     __ptext7:
  6130                           	opt stack 0
  6131  00428A                     _check_wake_button:
  6132                           	opt stack 21
  6133                           
  6134                           ;gui.c: 1933: if(hg_op.flag_wake_device == 1)
  6135                           
  6136                           ; BSR set to: 0
  6137                           ;incstack = 0
  6138  00428A  0100               	movlb	0	; () banked
  6139  00428C  0591               	decf	(_hg_op+17)& (0+255),w,b
  6140  00428E  A4D8               	btfss	status,2,c
  6141  004290  0012               	return	
  6142                           
  6143                           ; BSR set to: 0
  6144                           ;gui.c: 1934: {
  6145                           ;gui.c: 1937: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
  6146  004292  A881               	btfss	3969,4,c	;volatile
  6147                           
  6148                           ; BSR set to: 0
  6149  004294  AC83               	btfss	3971,6,c	;volatile
  6150  004296  D053               	goto	l14175
  6151                           
  6152                           ; BSR set to: 0
  6153  004298  BE83               	btfsc	3971,7,c	;volatile
  6154                           
  6155                           ; BSR set to: 0
  6156  00429A  A681               	btfss	3969,3,c	;volatile
  6157  00429C  D050               	goto	l14175
  6158                           
  6159                           ; BSR set to: 0
  6160                           ;gui.c: 1938: {
  6161                           ;gui.c: 1939: delay_nms(4);
  6162  00429E  0E04               	movlw	4
  6163  0042A0  0101               	movlb	1	; () banked
  6164  0042A2  6F28               	movwf	delay_nms@n& (0+255),b
  6165  0042A4  0E00               	movlw	0
  6166  0042A6  6F29               	movwf	(delay_nms@n+1)& (0+255),b
  6167  0042A8  0E00               	movlw	0
  6168  0042AA  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
  6169  0042AC  0E00               	movlw	0
  6170  0042AE  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
  6171  0042B0  EC39  F025         	call	_delay_nms	;wreg free
  6172                           
  6173                           ;gui.c: 1940: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
  6174  0042B4  A881               	btfss	3969,4,c	;volatile
  6175  0042B6  AC83               	btfss	3971,6,c	;volatile
  6176  0042B8  D042               	goto	l14175
  6177  0042BA  BE83               	btfsc	3971,7,c	;volatile
  6178  0042BC  A681               	btfss	3969,3,c	;volatile
  6179  0042BE  D03F               	goto	l14175
  6180                           
  6181                           ;gui.c: 1941: {
  6182                           ;gui.c: 1942: buzz();
  6183  0042C0  ECFE  F026         	call	_buzz	;wreg free
  6184                           
  6185                           ;gui.c: 1943: test_mode =0;
  6186  0042C4  0E00               	movlw	0
  6187  0042C6  0100               	movlb	0	; () banked
  6188  0042C8  6FF2               	movwf	_test_mode& (0+255),b
  6189                           
  6190                           ; BSR set to: 0
  6191                           ;gui.c: 1945: if(hg_op.status_powerup == 0x00)
  6192  0042CA  0100               	movlb	0	; () banked
  6193  0042CC  5183               	movf	(_hg_op+3)& (0+255),w,b
  6194  0042CE  A4D8               	btfss	status,2,c
  6195  0042D0  D036               	goto	l14175
  6196                           
  6197                           ; BSR set to: 0
  6198                           ;gui.c: 1946: {
  6199                           ;gui.c: 1947: hg_op.status_powerup = 0x01;
  6200  0042D2  0E01               	movlw	1
  6201  0042D4  0100               	movlb	0	; () banked
  6202  0042D6  6F83               	movwf	(_hg_op+3)& (0+255),b
  6203                           
  6204                           ; BSR set to: 0
  6205                           ;gui.c: 1948: LCD_On();
  6206  0042D8  EC54  F027         	call	_LCD_On	;wreg free
  6207                           
  6208                           ;gui.c: 1949: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  6209  0042DC  848B               	bsf	3979,2,c	;volatile
  6210  0042DE  908C               	bcf	3980,0,c	;volatile
  6211  0042E0  928C               	bcf	3980,1,c	;volatile
  6212                           
  6213                           ;gui.c: 1950: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  6214  0042E2  888C               	bsf	3980,4,c	;volatile
  6215  0042E4  948C               	bcf	3980,2,c	;volatile
  6216  0042E6  968C               	bcf	3980,3,c	;volatile
  6217                           
  6218                           ;gui.c: 1951: LATCbits.LC2 =1;
  6219  0042E8  848B               	bsf	3979,2,c	;volatile
  6220                           
  6221                           ;gui.c: 1952: LATDbits.LD4 =1;
  6222  0042EA  888C               	bsf	3980,4,c	;volatile
  6223                           
  6224                           ;gui.c: 1954: hg_op.status_hit_lp = 0;
  6225  0042EC  0E00               	movlw	0
  6226  0042EE  0100               	movlb	0	; () banked
  6227  0042F0  6F86               	movwf	(_hg_op+6)& (0+255),b
  6228                           
  6229                           ; BSR set to: 0
  6230                           ;gui.c: 1955: hg_op.need_reset =1;
  6231  0042F2  0E01               	movlw	1
  6232  0042F4  0100               	movlb	0	; () banked
  6233  0042F6  6F85               	movwf	(_hg_op+5)& (0+255),b
  6234                           
  6235                           ; BSR set to: 0
  6236                           ;gui.c: 1956: hg_op.in_reset =0;
  6237  0042F8  0E00               	movlw	0
  6238  0042FA  0100               	movlb	0	; () banked
  6239  0042FC  6F90               	movwf	(_hg_op+16)& (0+255),b
  6240                           
  6241                           ; BSR set to: 0
  6242                           ;gui.c: 1957: hg_op.needle_len = 4;
  6243  0042FE  0E04               	movlw	4
  6244  004300  0100               	movlb	0	; () banked
  6245  004302  6F97               	movwf	(_hg_op+23)& (0+255),b
  6246                           
  6247                           ; BSR set to: 0
  6248                           ;gui.c: 1958: hg_op.inject_len = 1;
  6249  004304  0E00               	movlw	0
  6250  004306  0100               	movlb	0	; () banked
  6251  004308  6F99               	movwf	(_hg_op+25)& (0+255),b
  6252  00430A  0E01               	movlw	1
  6253  00430C  6F98               	movwf	(_hg_op+24)& (0+255),b
  6254                           
  6255                           ; BSR set to: 0
  6256                           ;gui.c: 1960: menu[0].parameter = 0;
  6257  00430E  0E00               	movlw	0
  6258  004310  6E06               	movwf	_menu+5,c
  6259                           
  6260                           ; BSR set to: 0
  6261                           ;gui.c: 1961: menu[1].parameter = 0;
  6262  004312  0E00               	movlw	0
  6263  004314  6E0E               	movwf	_menu+13,c
  6264                           
  6265                           ; BSR set to: 0
  6266                           ;gui.c: 1962: menu[2].parameter = 0;
  6267  004316  0E00               	movlw	0
  6268  004318  6E16               	movwf	_menu+21,c
  6269                           
  6270                           ; BSR set to: 0
  6271                           ;gui.c: 1963: menu[3].parameter = 0;
  6272  00431A  0E00               	movlw	0
  6273  00431C  6E1E               	movwf	_menu+29,c
  6274                           
  6275                           ; BSR set to: 0
  6276                           ;gui.c: 1964: menu[4].parameter = 0;
  6277  00431E  0E00               	movlw	0
  6278  004320  6E26               	movwf	_menu+37,c
  6279                           
  6280                           ; BSR set to: 0
  6281                           ;gui.c: 1965: menu[5].parameter = 0;
  6282  004322  0E00               	movlw	0
  6283  004324  6E2E               	movwf	_menu+45,c
  6284                           
  6285                           ; BSR set to: 0
  6286                           ;gui.c: 1966: menu[6].parameter = 0;
  6287  004326  0E00               	movlw	0
  6288  004328  6E36               	movwf	_menu+53,c
  6289                           
  6290                           ; BSR set to: 0
  6291                           ;gui.c: 1967: focus =0;
  6292  00432A  0E00               	movlw	0
  6293  00432C  6E4F               	movwf	_focus,c
  6294                           
  6295                           ; BSR set to: 0
  6296                           ;gui.c: 1968: work_mode = 0x00;
  6297  00432E  0E00               	movlw	0
  6298  004330  6E4D               	movwf	_work_mode,c
  6299                           
  6300                           ; BSR set to: 0
  6301                           ;gui.c: 1973: config_LCD();
  6302  004332  EC5C  F020         	call	_config_LCD	;wreg free
  6303                           
  6304                           ;gui.c: 1974: initial_ui_setting();
  6305  004336  EC3D  F01B         	call	_initial_ui_setting	;wreg free
  6306                           
  6307                           ;gui.c: 1975: do{ INTCON3bits.INT2E = 1;INTCON3bits.INT2IF =0;}while(0);
  6308  00433A  88F0               	bsf	intcon3,4,c	;volatile
  6309  00433C  92F0               	bcf	intcon3,1,c	;volatile
  6310  00433E                     l14175:
  6311                           
  6312                           ;gui.c: 1977: }
  6313                           ;gui.c: 2008: }
  6314                           ;gui.c: 2010: }
  6315                           ;gui.c: 2013: hg_op.flag_wake_device = 0;
  6316  00433E  0E00               	movlw	0
  6317  004340  0100               	movlb	0	; () banked
  6318  004342  6F91               	movwf	(_hg_op+17)& (0+255),b
  6319  004344  0012               	return	
  6320  004346                     __end_of_check_wake_button:
  6321                           	opt stack 0
  6322                           tblptru	equ	0xFF8
  6323                           tblptrh	equ	0xFF7
  6324                           tblptrl	equ	0xFF6
  6325                           tablat	equ	0xFF5
  6326                           intcon	equ	0xFF2
  6327                           intcon3	equ	0xFF0
  6328                           postinc0	equ	0xFEE
  6329                           wreg	equ	0xFE8
  6330                           postdec1	equ	0xFE5
  6331                           fsr1h	equ	0xFE2
  6332                           fsr1l	equ	0xFE1
  6333                           status	equ	0xFD8
  6334                           
  6335 ;; *************** function _initial_ui_setting *****************
  6336 ;; Defined at:
  6337 ;;		line 3194 in file "../Oled.c"
  6338 ;; Parameters:    Size  Location     Type
  6339 ;;		None
  6340 ;; Auto vars:     Size  Location     Type
  6341 ;;  i               1   16[BANK1 ] unsigned char 
  6342 ;; Return value:  Size  Location     Type
  6343 ;;                  1    wreg      void 
  6344 ;; Registers used:
  6345 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6346 ;; Tracked objects:
  6347 ;;		On entry : 0/0
  6348 ;;		On exit  : 0/0
  6349 ;;		Unchanged: 0/0
  6350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6351 ;;      Params:         0       0       0       0       0       0       0
  6352 ;;      Locals:         0       0       1       0       0       0       0
  6353 ;;      Temps:          0       0       0       0       0       0       0
  6354 ;;      Totals:         0       0       1       0       0       0       0
  6355 ;;Total ram usage:        1 bytes
  6356 ;; Hardware stack levels used:    1
  6357 ;; Hardware stack levels required when called:    7
  6358 ;; This function calls:
  6359 ;;		_clear_screen
  6360 ;;		_delaynus
  6361 ;;		_display_bat
  6362 ;;		_display_cmode
  6363 ;;		_display_frame_abc
  6364 ;;		_display_frame_de
  6365 ;;		_display_frame_fghi
  6366 ;;		_display_logo
  6367 ;;		_display_mem
  6368 ;;		_display_num
  6369 ;; This function is called by:
  6370 ;;		_check_wake_button
  6371 ;; This function uses a non-reentrant model
  6372 ;;
  6373                           
  6374                           	psect	text8
  6375  00367A                     __ptext8:
  6376                           	opt stack 0
  6377  00367A                     _initial_ui_setting:
  6378                           	opt stack 21
  6379                           
  6380                           ;Oled.c: 3197: uint8_t i;
  6381                           ;Oled.c: 3199: clear_screen();
  6382                           
  6383                           ; BSR set to: 0
  6384                           ;incstack = 0
  6385  00367A  EC02  F024         	call	_clear_screen	;wreg free
  6386                           
  6387                           ;Oled.c: 3202: display_logo();
  6388  00367E  EC91  F022         	call	_display_logo	;wreg free
  6389                           
  6390                           ;Oled.c: 3204: for(i=0;i<50;i++)
  6391  003682  0E00               	movlw	0
  6392  003684  0101               	movlb	1	; () banked
  6393  003686  6F38               	movwf	initial_ui_setting@i& (0+255),b
  6394  003688                     l12863:
  6395                           
  6396                           ; BSR set to: 1
  6397  003688  0E31               	movlw	49
  6398  00368A  0101               	movlb	1	; () banked
  6399  00368C  6538               	cpfsgt	initial_ui_setting@i& (0+255),b
  6400  00368E  D001               	goto	l12867
  6401  003690  D00A               	goto	l12873
  6402  003692                     l12867:
  6403                           
  6404                           ; BSR set to: 1
  6405                           ;Oled.c: 3205: {
  6406                           ;Oled.c: 3206: delaynus(50 * 1000);
  6407  003692  0EC3               	movlw	195
  6408  003694  0100               	movlb	0	; () banked
  6409  003696  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  6410  003698  0E50               	movlw	80
  6411  00369A  6FFD               	movwf	delaynus@n& (0+255),b
  6412  00369C  ECE0  F026         	call	_delaynus	;wreg free
  6413  0036A0  0101               	movlb	1	; () banked
  6414  0036A2  2B38               	incf	initial_ui_setting@i& (0+255),f,b
  6415  0036A4  D7F1               	goto	l12863
  6416  0036A6                     l12873:
  6417                           
  6418                           ; BSR set to: 1
  6419                           ;Oled.c: 3208: }
  6420                           ;Oled.c: 3209: clear_screen();
  6421  0036A6  EC02  F024         	call	_clear_screen	;wreg free
  6422                           
  6423                           ;Oled.c: 3232: display_frame_abc(1,71, 0);
  6424  0036AA  0E47               	movlw	71
  6425  0036AC  0101               	movlb	1	; () banked
  6426  0036AE  6F31               	movwf	display_frame_abc@x& (0+255),b
  6427  0036B0  0E00               	movlw	0
  6428  0036B2  0101               	movlb	1	; () banked
  6429  0036B4  6F32               	movwf	display_frame_abc@mode& (0+255),b
  6430  0036B6  0E01               	movlw	1
  6431  0036B8  EC5D  F016         	call	_display_frame_abc
  6432                           
  6433                           ;Oled.c: 3233: display_cmode(1,(71 + 2),0);
  6434  0036BC  0E49               	movlw	73
  6435  0036BE  0101               	movlb	1	; () banked
  6436  0036C0  6F31               	movwf	display_cmode@x& (0+255),b
  6437  0036C2  0E00               	movlw	0
  6438  0036C4  0101               	movlb	1	; () banked
  6439  0036C6  6F32               	movwf	display_cmode@mode& (0+255),b
  6440  0036C8  0E01               	movlw	1
  6441  0036CA  EC15  F01F         	call	_display_cmode
  6442                           
  6443                           ;Oled.c: 3234: menu[0].mode = 0;
  6444  0036CE  0E00               	movlw	0
  6445  0036D0  6E02               	movwf	_menu+1,c
  6446                           
  6447                           ;Oled.c: 3236: menu[0].value = 0x00;
  6448  0036D2  0E00               	movlw	0
  6449  0036D4  6E05               	movwf	_menu+4,c
  6450                           
  6451                           ;Oled.c: 3240: display_frame_abc(1,35, 0);
  6452  0036D6  0E23               	movlw	35
  6453  0036D8  0101               	movlb	1	; () banked
  6454  0036DA  6F31               	movwf	display_frame_abc@x& (0+255),b
  6455  0036DC  0E00               	movlw	0
  6456  0036DE  0101               	movlb	1	; () banked
  6457  0036E0  6F32               	movwf	display_frame_abc@mode& (0+255),b
  6458  0036E2  0E01               	movlw	1
  6459  0036E4  EC5D  F016         	call	_display_frame_abc
  6460                           
  6461                           ;Oled.c: 3241: display_mem(1,(35 + 2),0);
  6462  0036E8  0E25               	movlw	37
  6463  0036EA  0101               	movlb	1	; () banked
  6464  0036EC  6F31               	movwf	display_mem@x& (0+255),b
  6465  0036EE  0E00               	movlw	0
  6466  0036F0  0101               	movlb	1	; () banked
  6467  0036F2  6F32               	movwf	display_mem@mode& (0+255),b
  6468  0036F4  0E01               	movlw	1
  6469  0036F6  EC15  F01C         	call	_display_mem
  6470                           
  6471                           ;Oled.c: 3242: menu[1].mode = 0;
  6472  0036FA  0E00               	movlw	0
  6473  0036FC  6E0A               	movwf	_menu+9,c
  6474                           
  6475                           ;Oled.c: 3243: menu[1].value = 0x58;
  6476  0036FE  0E58               	movlw	88
  6477  003700  6E0D               	movwf	_menu+12,c
  6478                           
  6479                           ;Oled.c: 3247: display_frame_abc(1,0, 0);
  6480  003702  0E00               	movlw	0
  6481  003704  0101               	movlb	1	; () banked
  6482  003706  6F31               	movwf	display_frame_abc@x& (0+255),b
  6483  003708  0E00               	movlw	0
  6484  00370A  0101               	movlb	1	; () banked
  6485  00370C  6F32               	movwf	display_frame_abc@mode& (0+255),b
  6486  00370E  0E01               	movlw	1
  6487  003710  EC5D  F016         	call	_display_frame_abc
  6488                           
  6489                           ;Oled.c: 3248: display_bat(1,(0 + 2),0);
  6490  003714  0E02               	movlw	2
  6491  003716  0101               	movlb	1	; () banked
  6492  003718  6F31               	movwf	display_bat@x& (0+255),b
  6493  00371A  0E00               	movlw	0
  6494  00371C  0101               	movlb	1	; () banked
  6495  00371E  6F32               	movwf	display_bat@mode& (0+255),b
  6496  003720  0E01               	movlw	1
  6497  003722  ECAA  F010         	call	_display_bat
  6498                           
  6499                           ;Oled.c: 3249: menu[2].mode = 0;
  6500  003726  0E00               	movlw	0
  6501  003728  6E12               	movwf	_menu+17,c
  6502                           
  6503                           ;Oled.c: 3250: menu[2].value = 0x59;
  6504  00372A  0E59               	movlw	89
  6505  00372C  6E15               	movwf	_menu+20,c
  6506                           
  6507                           ;Oled.c: 3255: display_frame_de(1,49, 0);
  6508  00372E  0E31               	movlw	49
  6509  003730  0101               	movlb	1	; () banked
  6510  003732  6F31               	movwf	display_frame_de@x& (0+255),b
  6511  003734  0E00               	movlw	0
  6512  003736  0101               	movlb	1	; () banked
  6513  003738  6F32               	movwf	display_frame_de@mode& (0+255),b
  6514  00373A  0E01               	movlw	1
  6515  00373C  EC09  F000         	call	_display_frame_de
  6516                           
  6517                           ;Oled.c: 3256: display_num(0,(49 + 14), 4);
  6518  003740  0E3F               	movlw	63
  6519  003742  0101               	movlb	1	; () banked
  6520  003744  6F31               	movwf	display_num@x& (0+255),b
  6521  003746  0E04               	movlw	4
  6522  003748  0101               	movlb	1	; () banked
  6523  00374A  6F32               	movwf	display_num@mode& (0+255),b
  6524  00374C  0E00               	movlw	0
  6525  00374E  ECF0  F006         	call	_display_num
  6526                           
  6527                           ;Oled.c: 3257: menu[3].mode = 0;
  6528  003752  0E00               	movlw	0
  6529  003754  6E1A               	movwf	_menu+25,c
  6530                           
  6531                           ;Oled.c: 3258: menu[3].value = 4;
  6532  003756  0E04               	movlw	4
  6533  003758  6E1D               	movwf	_menu+28,c
  6534                           
  6535                           ;Oled.c: 3260: display_frame_de(2,0, 0);
  6536  00375A  0E00               	movlw	0
  6537  00375C  0101               	movlb	1	; () banked
  6538  00375E  6F31               	movwf	display_frame_de@x& (0+255),b
  6539  003760  0E00               	movlw	0
  6540  003762  0101               	movlb	1	; () banked
  6541  003764  6F32               	movwf	display_frame_de@mode& (0+255),b
  6542  003766  0E02               	movlw	2
  6543  003768  EC09  F000         	call	_display_frame_de
  6544                           
  6545                           ;Oled.c: 3261: display_num(0,(0 + 14), 1);
  6546  00376C  0E0E               	movlw	14
  6547  00376E  0101               	movlb	1	; () banked
  6548  003770  6F31               	movwf	display_num@x& (0+255),b
  6549  003772  0E01               	movlw	1
  6550  003774  0101               	movlb	1	; () banked
  6551  003776  6F32               	movwf	display_num@mode& (0+255),b
  6552  003778  0E00               	movlw	0
  6553  00377A  ECF0  F006         	call	_display_num
  6554                           
  6555                           ;Oled.c: 3262: menu[4].mode = 0;
  6556  00377E  0E00               	movlw	0
  6557  003780  6E22               	movwf	_menu+33,c
  6558                           
  6559                           ;Oled.c: 3263: menu[4].value = 1;
  6560  003782  0E01               	movlw	1
  6561  003784  6E25               	movwf	_menu+36,c
  6562                           
  6563                           ;Oled.c: 3267: display_frame_fghi(1,49, 0);
  6564  003786  0E31               	movlw	49
  6565  003788  0101               	movlb	1	; () banked
  6566  00378A  6F31               	movwf	display_frame_fghi@x& (0+255),b
  6567  00378C  0E00               	movlw	0
  6568  00378E  0101               	movlb	1	; () banked
  6569  003790  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  6570  003792  0E01               	movlw	1
  6571  003794  ECCD  F008         	call	_display_frame_fghi
  6572                           
  6573                           ;Oled.c: 3269: display_num(3,(49 + 14), 1);
  6574  003798  0E3F               	movlw	63
  6575  00379A  0101               	movlb	1	; () banked
  6576  00379C  6F31               	movwf	display_num@x& (0+255),b
  6577  00379E  0E01               	movlw	1
  6578  0037A0  0101               	movlb	1	; () banked
  6579  0037A2  6F32               	movwf	display_num@mode& (0+255),b
  6580  0037A4  0E03               	movlw	3
  6581  0037A6  ECF0  F006         	call	_display_num
  6582                           
  6583                           ;Oled.c: 3270: menu[5].mode = 0;
  6584  0037AA  0E00               	movlw	0
  6585  0037AC  6E2A               	movwf	_menu+41,c
  6586                           
  6587                           ;Oled.c: 3271: menu[5].value = 1;
  6588  0037AE  0E01               	movlw	1
  6589  0037B0  6E2D               	movwf	_menu+44,c
  6590                           
  6591                           ;Oled.c: 3275: display_frame_fghi(2,0, 0);
  6592  0037B2  0E00               	movlw	0
  6593  0037B4  0101               	movlb	1	; () banked
  6594  0037B6  6F31               	movwf	display_frame_fghi@x& (0+255),b
  6595  0037B8  0E00               	movlw	0
  6596  0037BA  0101               	movlb	1	; () banked
  6597  0037BC  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  6598  0037BE  0E02               	movlw	2
  6599  0037C0  ECCD  F008         	call	_display_frame_fghi
  6600                           
  6601                           ;Oled.c: 3276: display_num(3,(0 + 14), 3);
  6602  0037C4  0E0E               	movlw	14
  6603  0037C6  0101               	movlb	1	; () banked
  6604  0037C8  6F31               	movwf	display_num@x& (0+255),b
  6605  0037CA  0E03               	movlw	3
  6606  0037CC  0101               	movlb	1	; () banked
  6607  0037CE  6F32               	movwf	display_num@mode& (0+255),b
  6608  0037D0  0E03               	movlw	3
  6609  0037D2  ECF0  F006         	call	_display_num
  6610                           
  6611                           ;Oled.c: 3277: menu[6].mode = 0;
  6612  0037D6  0E00               	movlw	0
  6613  0037D8  6E32               	movwf	_menu+49,c
  6614                           
  6615                           ;Oled.c: 3278: menu[6].value = 3;
  6616  0037DA  0E03               	movlw	3
  6617  0037DC  6E35               	movwf	_menu+52,c
  6618                           
  6619                           ;Oled.c: 3284: hg_op.cur_working_mode = 0x00;
  6620  0037DE  0E00               	movlw	0
  6621  0037E0  0100               	movlb	0	; () banked
  6622  0037E2  6F81               	movwf	(_hg_op+1)& (0+255),b
  6623                           
  6624                           ; BSR set to: 0
  6625                           ;Oled.c: 3287: hg_op.cnt_target_posrst = (789);
  6626  0037E4  0E03               	movlw	3
  6627  0037E6  0100               	movlb	0	; () banked
  6628  0037E8  6FB8               	movwf	(_hg_op+56)& (0+255),b
  6629  0037EA  0E15               	movlw	21
  6630  0037EC  6FB7               	movwf	(_hg_op+55)& (0+255),b
  6631                           
  6632                           ; BSR set to: 0
  6633                           ;Oled.c: 3288: hg_op.needle_len = 4;
  6634  0037EE  0E04               	movlw	4
  6635  0037F0  0100               	movlb	0	; () banked
  6636  0037F2  6F97               	movwf	(_hg_op+23)& (0+255),b
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;Oled.c: 3290: hg_op.inject_len = 1;
  6640  0037F4  0E00               	movlw	0
  6641  0037F6  0100               	movlb	0	; () banked
  6642  0037F8  6F99               	movwf	(_hg_op+25)& (0+255),b
  6643  0037FA  0E01               	movlw	1
  6644  0037FC  6F98               	movwf	(_hg_op+24)& (0+255),b
  6645                           
  6646                           ; BSR set to: 0
  6647                           ;Oled.c: 3292: hg_op.tube_cap = 0;
  6648  0037FE  0E00               	movlw	0
  6649  003800  0100               	movlb	0	; () banked
  6650  003802  6F9A               	movwf	(_hg_op+26)& (0+255),b
  6651                           
  6652                           ; BSR set to: 0
  6653                           ;Oled.c: 3293: hg_op.work_freq = (2*1000);
  6654  003804  0E07               	movlw	7
  6655  003806  0100               	movlb	0	; () banked
  6656  003808  6F9C               	movwf	(_hg_op+28)& (0+255),b
  6657  00380A  0ED0               	movlw	208
  6658  00380C  6F9B               	movwf	(_hg_op+27)& (0+255),b
  6659                           
  6660                           ; BSR set to: 0
  6661                           ;Oled.c: 3295: hg_op.push_len = (112);
  6662  00380E  0E70               	movlw	112
  6663  003810  0100               	movlb	0	; () banked
  6664  003812  6F9D               	movwf	(_hg_op+29)& (0+255),b
  6665                           
  6666                           ; BSR set to: 0
  6667                           ;Oled.c: 3298: hg_op.cnt_pos_nmm = 0;
  6668  003814  0E00               	movlw	0
  6669  003816  0100               	movlb	0	; () banked
  6670  003818  6FAE               	movwf	(_hg_op+46)& (0+255),b
  6671  00381A  0E00               	movlw	0
  6672  00381C  6FAD               	movwf	(_hg_op+45)& (0+255),b
  6673                           
  6674                           ; BSR set to: 0
  6675                           ;Oled.c: 3299: hg_op.cnt_pos_nmm_target = (236);
  6676  00381E  0E00               	movlw	0
  6677  003820  0100               	movlb	0	; () banked
  6678  003822  6FB4               	movwf	(_hg_op+52)& (0+255),b
  6679  003824  0EEC               	movlw	236
  6680  003826  6FB3               	movwf	(_hg_op+51)& (0+255),b
  6681                           
  6682                           ; BSR set to: 0
  6683  003828  0012               	return		;funcret
  6684  00382A                     __end_of_initial_ui_setting:
  6685                           	opt stack 0
  6686                           tblptru	equ	0xFF8
  6687                           tblptrh	equ	0xFF7
  6688                           tblptrl	equ	0xFF6
  6689                           tablat	equ	0xFF5
  6690                           intcon	equ	0xFF2
  6691                           intcon3	equ	0xFF0
  6692                           postinc0	equ	0xFEE
  6693                           wreg	equ	0xFE8
  6694                           postdec1	equ	0xFE5
  6695                           fsr1h	equ	0xFE2
  6696                           fsr1l	equ	0xFE1
  6697                           status	equ	0xFD8
  6698                           
  6699 ;; *************** function _display_mem *****************
  6700 ;; Defined at:
  6701 ;;		line 1874 in file "../Oled.c"
  6702 ;; Parameters:    Size  Location     Type
  6703 ;;  y               1    wreg     unsigned char 
  6704 ;;  x               1    9[BANK1 ] unsigned char 
  6705 ;;  mode            1   10[BANK1 ] unsigned char 
  6706 ;; Auto vars:     Size  Location     Type
  6707 ;;  y               1    0[COMRAM] unsigned char 
  6708 ;;  temp            1   12[BANK1 ] unsigned char 
  6709 ;;  tori            1   11[BANK1 ] unsigned char 
  6710 ;; Return value:  Size  Location     Type
  6711 ;;                  1    wreg      void 
  6712 ;; Registers used:
  6713 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6714 ;; Tracked objects:
  6715 ;;		On entry : 0/0
  6716 ;;		On exit  : 0/0
  6717 ;;		Unchanged: 0/0
  6718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6719 ;;      Params:         0       0       2       0       0       0       0
  6720 ;;      Locals:         0       0       2       0       0       0       0
  6721 ;;      Temps:          0       0       0       0       0       0       0
  6722 ;;      Totals:         0       0       4       0       0       0       0
  6723 ;;Total ram usage:        4 bytes
  6724 ;; Hardware stack levels used:    1
  6725 ;; Hardware stack levels required when called:    6
  6726 ;; This function calls:
  6727 ;;		_ee_WriteBytes
  6728 ;;		_setYX_LCD
  6729 ;; This function is called by:
  6730 ;;		_initial_ui_setting
  6731 ;; This function uses a non-reentrant model
  6732 ;;
  6733                           
  6734                           	psect	text9
  6735  00382A                     __ptext9:
  6736                           	opt stack 0
  6737  00382A                     _display_mem:
  6738                           	opt stack 21
  6739                           
  6740                           ;Oled.c: 1877: uint8_t temp =0;
  6741                           
  6742                           ; BSR set to: 0
  6743                           ;incstack = 0
  6744  00382A  0E00               	movlw	0
  6745  00382C  0101               	movlb	1	; () banked
  6746  00382E  6F34               	movwf	display_mem@temp& (0+255),b
  6747                           
  6748                           ;Oled.c: 1878: uint8_t tori =0;
  6749  003830  0E00               	movlw	0
  6750  003832  0101               	movlb	1	; () banked
  6751  003834  6F33               	movwf	display_mem@tori& (0+255),b
  6752                           
  6753                           ;Oled.c: 1879: switch(mode)
  6754  003836  D0B0               	goto	l11665
  6755  003838                     l11591:
  6756                           
  6757                           ; BSR set to: 1
  6758                           ;Oled.c: 1885: setYX_LCD(0,x);
  6759  003838  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6760  00383C  0E00               	movlw	0
  6761  00383E  EC8E  F024         	call	_setYX_LCD
  6762                           
  6763                           ;Oled.c: 1886: for(ms=0;ms<23;ms++)
  6764  003842  0E00               	movlw	0
  6765  003844  6E69               	movwf	_ms,c
  6766  003846                     l11595:
  6767  003846  0E16               	movlw	22
  6768  003848  6469               	cpfsgt	_ms,c
  6769  00384A  D001               	goto	l11599
  6770  00384C  D01D               	goto	l11607
  6771  00384E                     l11599:
  6772                           
  6773                           ;Oled.c: 1887: {
  6774                           ;Oled.c: 1889: temp =mem_m[0][ms];
  6775  00384E  5069               	movf	_ms,w,c
  6776  003850  0D01               	mullw	1
  6777  003852  0E14               	movlw	low _mem_m
  6778  003854  24F3               	addwf	prodl,w,c
  6779  003856  6EF6               	movwf	tblptrl,c
  6780  003858  0E75               	movlw	high _mem_m
  6781  00385A  20F4               	addwfc	prodh,w,c
  6782  00385C  6EF7               	movwf	tblptrh,c
  6783  00385E                     	if	0	;There are less than 3 active tblptr bytes
  6784  00385E                     	endif
  6785  00385E  0008               	tblrd		*
  6786  003860  CFF5 F134          	movff	tablat,display_mem@temp
  6787                           
  6788                           ;Oled.c: 1891: ee_WriteBytes(&temp, 0x40, 1);
  6789  003864  0E34               	movlw	low display_mem@temp
  6790  003866  0101               	movlb	1	; () banked
  6791  003868  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6792  00386A  0E01               	movlw	high display_mem@temp
  6793  00386C  0101               	movlb	1	; () banked
  6794  00386E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6795  003870  0E40               	movlw	64
  6796  003872  0101               	movlb	1	; () banked
  6797  003874  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6798  003876  0E00               	movlw	0
  6799  003878  0101               	movlb	1	; () banked
  6800  00387A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6801  00387C  0E01               	movlw	1
  6802  00387E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6803  003880  EC88  F025         	call	_ee_WriteBytes	;wreg free
  6804  003884  2A69               	incf	_ms,f,c
  6805  003886  D7DF               	goto	l11595
  6806  003888                     l11607:
  6807                           
  6808                           ;Oled.c: 1892: }
  6809                           ;Oled.c: 1895: setYX_LCD(1,x);
  6810  003888  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6811  00388C  0E01               	movlw	1
  6812  00388E  EC8E  F024         	call	_setYX_LCD
  6813                           
  6814                           ;Oled.c: 1896: for(ms=0;ms<23;ms++)
  6815  003892  0E00               	movlw	0
  6816  003894  6E69               	movwf	_ms,c
  6817  003896                     l11611:
  6818  003896  0E16               	movlw	22
  6819  003898  6469               	cpfsgt	_ms,c
  6820  00389A  D001               	goto	l11615
  6821  00389C  0012               	return	
  6822  00389E                     l11615:
  6823                           
  6824                           ;Oled.c: 1897: {
  6825                           ;Oled.c: 1898: temp = mem_m[1][ms];
  6826  00389E  5069               	movf	_ms,w,c
  6827  0038A0  0D01               	mullw	1
  6828  0038A2  0E17               	movlw	23
  6829  0038A4  26F3               	addwf	prodl,f,c
  6830  0038A6  0E00               	movlw	0
  6831  0038A8  22F4               	addwfc	prodh,f,c
  6832  0038AA  0E14               	movlw	low _mem_m
  6833  0038AC  24F3               	addwf	prodl,w,c
  6834  0038AE  6EF6               	movwf	tblptrl,c
  6835  0038B0  0E75               	movlw	high _mem_m
  6836  0038B2  20F4               	addwfc	prodh,w,c
  6837  0038B4  6EF7               	movwf	tblptrh,c
  6838  0038B6                     	if	0	;There are less than 3 active tblptr bytes
  6839  0038B6                     	endif
  6840  0038B6  0008               	tblrd		*
  6841  0038B8  CFF5 F134          	movff	tablat,display_mem@temp
  6842                           
  6843                           ;Oled.c: 1900: ee_WriteBytes(&temp, 0x40, 1);
  6844  0038BC  0E34               	movlw	low display_mem@temp
  6845  0038BE  0101               	movlb	1	; () banked
  6846  0038C0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6847  0038C2  0E01               	movlw	high display_mem@temp
  6848  0038C4  0101               	movlb	1	; () banked
  6849  0038C6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6850  0038C8  0E40               	movlw	64
  6851  0038CA  0101               	movlb	1	; () banked
  6852  0038CC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6853  0038CE  0E00               	movlw	0
  6854  0038D0  0101               	movlb	1	; () banked
  6855  0038D2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6856  0038D4  0E01               	movlw	1
  6857  0038D6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6858  0038D8  EC88  F025         	call	_ee_WriteBytes	;wreg free
  6859  0038DC  2A69               	incf	_ms,f,c
  6860  0038DE  D7DB               	goto	l11611
  6861  0038E0                     l11623:
  6862                           
  6863                           ;Oled.c: 1909: setYX_LCD(0,x);
  6864  0038E0  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6865  0038E4  0E00               	movlw	0
  6866  0038E6  EC8E  F024         	call	_setYX_LCD
  6867                           
  6868                           ;Oled.c: 1910: for(ms=0;ms<23;ms++)
  6869  0038EA  0E00               	movlw	0
  6870  0038EC  6E69               	movwf	_ms,c
  6871  0038EE                     l11627:
  6872  0038EE  0E16               	movlw	22
  6873  0038F0  6469               	cpfsgt	_ms,c
  6874  0038F2  D001               	goto	l11631
  6875  0038F4  D021               	goto	l11643
  6876  0038F6                     l11631:
  6877                           
  6878                           ;Oled.c: 1911: {
  6879                           ;Oled.c: 1913: temp = mem_m[0][ms];
  6880  0038F6  5069               	movf	_ms,w,c
  6881  0038F8  0D01               	mullw	1
  6882  0038FA  0E14               	movlw	low _mem_m
  6883  0038FC  24F3               	addwf	prodl,w,c
  6884  0038FE  6EF6               	movwf	tblptrl,c
  6885  003900  0E75               	movlw	high _mem_m
  6886  003902  20F4               	addwfc	prodh,w,c
  6887  003904  6EF7               	movwf	tblptrh,c
  6888  003906                     	if	0	;There are less than 3 active tblptr bytes
  6889  003906                     	endif
  6890  003906  0008               	tblrd		*
  6891  003908  CFF5 F134          	movff	tablat,display_mem@temp
  6892                           
  6893                           ;Oled.c: 1914: tori = temp;
  6894  00390C  C134  F133         	movff	display_mem@temp,display_mem@tori
  6895                           
  6896                           ;Oled.c: 1916: temp = ~temp;
  6897  003910  0101               	movlb	1	; () banked
  6898  003912  1F34               	comf	display_mem@temp& (0+255),f,b
  6899                           
  6900                           ; BSR set to: 1
  6901                           ;Oled.c: 1919: ee_WriteBytes(&temp, 0x40, 1);
  6902  003914  0E34               	movlw	low display_mem@temp
  6903  003916  0101               	movlb	1	; () banked
  6904  003918  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6905  00391A  0E01               	movlw	high display_mem@temp
  6906  00391C  0101               	movlb	1	; () banked
  6907  00391E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6908  003920  0E40               	movlw	64
  6909  003922  0101               	movlb	1	; () banked
  6910  003924  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6911  003926  0E00               	movlw	0
  6912  003928  0101               	movlb	1	; () banked
  6913  00392A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6914  00392C  0E01               	movlw	1
  6915  00392E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6916  003930  EC88  F025         	call	_ee_WriteBytes	;wreg free
  6917  003934  2A69               	incf	_ms,f,c
  6918  003936  D7DB               	goto	l11627
  6919  003938                     l11643:
  6920                           
  6921                           ;Oled.c: 1920: }
  6922                           ;Oled.c: 1923: setYX_LCD(1,x);
  6923  003938  C131  F0FF         	movff	display_mem@x,setYX_LCD@px
  6924  00393C  0E01               	movlw	1
  6925  00393E  EC8E  F024         	call	_setYX_LCD
  6926                           
  6927                           ;Oled.c: 1924: for(ms=0;ms<23;ms++)
  6928  003942  0E00               	movlw	0
  6929  003944  6E69               	movwf	_ms,c
  6930  003946                     l11647:
  6931  003946  0E16               	movlw	22
  6932  003948  6469               	cpfsgt	_ms,c
  6933  00394A  D001               	goto	l11651
  6934  00394C  0012               	return	
  6935  00394E                     l11651:
  6936                           
  6937                           ;Oled.c: 1925: {
  6938                           ;Oled.c: 1926: temp = mem_m[1][ms];
  6939  00394E  5069               	movf	_ms,w,c
  6940  003950  0D01               	mullw	1
  6941  003952  0E17               	movlw	23
  6942  003954  26F3               	addwf	prodl,f,c
  6943  003956  0E00               	movlw	0
  6944  003958  22F4               	addwfc	prodh,f,c
  6945  00395A  0E14               	movlw	low _mem_m
  6946  00395C  24F3               	addwf	prodl,w,c
  6947  00395E  6EF6               	movwf	tblptrl,c
  6948  003960  0E75               	movlw	high _mem_m
  6949  003962  20F4               	addwfc	prodh,w,c
  6950  003964  6EF7               	movwf	tblptrh,c
  6951  003966                     	if	0	;There are less than 3 active tblptr bytes
  6952  003966                     	endif
  6953  003966  0008               	tblrd		*
  6954  003968  CFF5 F134          	movff	tablat,display_mem@temp
  6955                           
  6956                           ;Oled.c: 1927: tori =temp;
  6957  00396C  C134  F133         	movff	display_mem@temp,display_mem@tori
  6958                           
  6959                           ;Oled.c: 1929: temp = ~temp;
  6960  003970  0101               	movlb	1	; () banked
  6961  003972  1F34               	comf	display_mem@temp& (0+255),f,b
  6962                           
  6963                           ; BSR set to: 1
  6964                           ;Oled.c: 1932: ee_WriteBytes(&temp, 0x40, 1);
  6965  003974  0E34               	movlw	low display_mem@temp
  6966  003976  0101               	movlb	1	; () banked
  6967  003978  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  6968  00397A  0E01               	movlw	high display_mem@temp
  6969  00397C  0101               	movlb	1	; () banked
  6970  00397E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  6971  003980  0E40               	movlw	64
  6972  003982  0101               	movlb	1	; () banked
  6973  003984  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  6974  003986  0E00               	movlw	0
  6975  003988  0101               	movlb	1	; () banked
  6976  00398A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  6977  00398C  0E01               	movlw	1
  6978  00398E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  6979  003990  EC88  F025         	call	_ee_WriteBytes	;wreg free
  6980  003994  2A69               	incf	_ms,f,c
  6981  003996  D7D7               	goto	l11647
  6982  003998                     l11665:
  6983  003998  0101               	movlb	1	; () banked
  6984  00399A  5132               	movf	display_mem@mode& (0+255),w,b
  6985                           
  6986                           ; Switch size 1, requested type "space"
  6987                           ; Number of cases is 2, Range of values is 0 to 128
  6988                           ; switch strategies available:
  6989                           ; Name         Instructions Cycles
  6990                           ; simple_byte            7     4 (average)
  6991                           ;	Chosen strategy is simple_byte
  6992  00399C  0A00               	xorlw	0	; case 0
  6993  00399E  B4D8               	btfsc	status,2,c
  6994  0039A0  D74B               	goto	l11591
  6995  0039A2  0A80               	xorlw	128	; case 128
  6996  0039A4  A4D8               	btfss	status,2,c
  6997  0039A6  0012               	return	
  6998  0039A8  D79B               	goto	l11623
  6999  0039AA                     __end_of_display_mem:
  7000                           	opt stack 0
  7001                           tblptru	equ	0xFF8
  7002                           tblptrh	equ	0xFF7
  7003                           tblptrl	equ	0xFF6
  7004                           tablat	equ	0xFF5
  7005                           prodh	equ	0xFF4
  7006                           prodl	equ	0xFF3
  7007                           intcon	equ	0xFF2
  7008                           intcon3	equ	0xFF0
  7009                           postinc0	equ	0xFEE
  7010                           wreg	equ	0xFE8
  7011                           postdec1	equ	0xFE5
  7012                           fsr1h	equ	0xFE2
  7013                           fsr1l	equ	0xFE1
  7014                           status	equ	0xFD8
  7015                           
  7016 ;; *************** function _display_logo *****************
  7017 ;; Defined at:
  7018 ;;		line 3152 in file "../Oled.c"
  7019 ;; Parameters:    Size  Location     Type
  7020 ;;		None
  7021 ;; Auto vars:     Size  Location     Type
  7022 ;;  page            1   12[BANK1 ] unsigned char 
  7023 ;;  col             1   11[BANK1 ] unsigned char 
  7024 ;; Return value:  Size  Location     Type
  7025 ;;                  1    wreg      void 
  7026 ;; Registers used:
  7027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7028 ;; Tracked objects:
  7029 ;;		On entry : 0/0
  7030 ;;		On exit  : 0/0
  7031 ;;		Unchanged: 0/0
  7032 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7033 ;;      Params:         0       0       0       0       0       0       0
  7034 ;;      Locals:         0       0       2       0       0       0       0
  7035 ;;      Temps:          0       0       2       0       0       0       0
  7036 ;;      Totals:         0       0       4       0       0       0       0
  7037 ;;Total ram usage:        4 bytes
  7038 ;; Hardware stack levels used:    1
  7039 ;; Hardware stack levels required when called:    6
  7040 ;; This function calls:
  7041 ;;		_ee_WriteBytes
  7042 ;;		_setYX_LCD
  7043 ;; This function is called by:
  7044 ;;		_initial_ui_setting
  7045 ;; This function uses a non-reentrant model
  7046 ;;
  7047                           
  7048                           	psect	text10
  7049  004522                     __ptext10:
  7050                           	opt stack 0
  7051  004522                     _display_logo:
  7052                           	opt stack 21
  7053                           
  7054                           ;Oled.c: 3154: uint8_t page,col;
  7055                           ;Oled.c: 3155: for(page=0;page<9;page++)
  7056                           
  7057                           ;incstack = 0
  7058  004522  0E00               	movlw	0
  7059  004524  0101               	movlb	1	; () banked
  7060  004526  6F34               	movwf	display_logo@page& (0+255),b
  7061  004528                     l12309:
  7062                           
  7063                           ; BSR set to: 1
  7064  004528  0E08               	movlw	8
  7065  00452A  0101               	movlb	1	; () banked
  7066  00452C  6534               	cpfsgt	display_logo@page& (0+255),b
  7067  00452E  D001               	goto	l12313
  7068  004530  0012               	return	
  7069  004532                     l12313:
  7070                           
  7071                           ; BSR set to: 1
  7072                           ;Oled.c: 3156: {
  7073                           ;Oled.c: 3157: setYX_LCD(page,0);
  7074  004532  0E00               	movlw	0
  7075  004534  0100               	movlb	0	; () banked
  7076  004536  6FFF               	movwf	setYX_LCD@px& (0+255),b
  7077  004538  0101               	movlb	1	; () banked
  7078  00453A  5134               	movf	display_logo@page& (0+255),w,b
  7079  00453C  EC8E  F024         	call	_setYX_LCD
  7080                           
  7081                           ;Oled.c: 3158: write_buf[0] =0x00;
  7082  004540  0E00               	movlw	0
  7083  004542  0102               	movlb	2	; () banked
  7084  004544  6F00               	movwf	_write_buf& (0+255),b
  7085                           
  7086                           ; BSR set to: 2
  7087                           ;Oled.c: 3160: for(col=0;col<99;col++)
  7088  004546  0E00               	movlw	0
  7089  004548  0101               	movlb	1	; () banked
  7090  00454A  6F33               	movwf	display_logo@col& (0+255),b
  7091  00454C                     l12319:
  7092                           
  7093                           ; BSR set to: 1
  7094  00454C  0E62               	movlw	98
  7095  00454E  0101               	movlb	1	; () banked
  7096  004550  6533               	cpfsgt	display_logo@col& (0+255),b
  7097  004552  D001               	goto	l12323
  7098  004554  D029               	goto	l12329
  7099  004556                     l12323:
  7100                           
  7101                           ; BSR set to: 1
  7102                           ;Oled.c: 3161: {
  7103                           ;Oled.c: 3162: ee_WriteBytes( &(logo_eme[page][col]), 0x40, 1);
  7104  004556  0101               	movlb	1	; () banked
  7105  004558  5134               	movf	display_logo@page& (0+255),w,b
  7106  00455A  0D62               	mullw	98
  7107  00455C  0EFC               	movlw	low _logo_eme
  7108  00455E  0101               	movlb	1	; () banked
  7109  004560  6F31               	movwf	??_display_logo& (0+255),b
  7110  004562  0E75               	movlw	high _logo_eme
  7111  004564  0101               	movlb	1	; () banked
  7112  004566  6F32               	movwf	(??_display_logo+1)& (0+255),b
  7113  004568  50F3               	movf	prodl,w,c
  7114  00456A  0101               	movlb	1	; () banked
  7115  00456C  2731               	addwf	??_display_logo& (0+255),f,b
  7116  00456E  50F4               	movf	prodh,w,c
  7117  004570  0101               	movlb	1	; () banked
  7118  004572  2332               	addwfc	(??_display_logo+1)& (0+255),f,b
  7119  004574  0101               	movlb	1	; () banked
  7120  004576  5133               	movf	display_logo@col& (0+255),w,b
  7121  004578  0D01               	mullw	1
  7122  00457A  50F3               	movf	prodl,w,c
  7123  00457C  0101               	movlb	1	; () banked
  7124  00457E  2531               	addwf	??_display_logo& (0+255),w,b
  7125  004580  0101               	movlb	1	; () banked
  7126  004582  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7127  004584  50F4               	movf	prodh,w,c
  7128  004586  0101               	movlb	1	; () banked
  7129  004588  2132               	addwfc	(??_display_logo+1)& (0+255),w,b
  7130  00458A  0101               	movlb	1	; () banked
  7131  00458C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7132  00458E  0E40               	movlw	64
  7133  004590  0101               	movlb	1	; () banked
  7134  004592  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7135  004594  0E00               	movlw	0
  7136  004596  0101               	movlb	1	; () banked
  7137  004598  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7138  00459A  0E01               	movlw	1
  7139  00459C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7140  00459E  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7141  0045A2  0101               	movlb	1	; () banked
  7142  0045A4  2B33               	incf	display_logo@col& (0+255),f,b
  7143  0045A6  D7D2               	goto	l12319
  7144  0045A8                     l12329:
  7145                           
  7146                           ; BSR set to: 1
  7147  0045A8  0101               	movlb	1	; () banked
  7148  0045AA  2B34               	incf	display_logo@page& (0+255),f,b
  7149  0045AC  D7BD               	goto	l12309
  7150  0045AE                     __end_of_display_logo:
  7151                           	opt stack 0
  7152                           tblptru	equ	0xFF8
  7153                           tblptrh	equ	0xFF7
  7154                           tblptrl	equ	0xFF6
  7155                           tablat	equ	0xFF5
  7156                           prodh	equ	0xFF4
  7157                           prodl	equ	0xFF3
  7158                           intcon	equ	0xFF2
  7159                           intcon3	equ	0xFF0
  7160                           postinc0	equ	0xFEE
  7161                           wreg	equ	0xFE8
  7162                           postdec1	equ	0xFE5
  7163                           fsr1h	equ	0xFE2
  7164                           fsr1l	equ	0xFE1
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _clear_screen *****************
  7168 ;; Defined at:
  7169 ;;		line 3174 in file "../Oled.c"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;		None
  7172 ;; Auto vars:     Size  Location     Type
  7173 ;;  page            1   10[BANK1 ] unsigned char 
  7174 ;;  col             1    9[BANK1 ] unsigned char 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      unsigned char 
  7177 ;; Registers used:
  7178 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7184 ;;      Params:         0       0       0       0       0       0       0
  7185 ;;      Locals:         0       0       2       0       0       0       0
  7186 ;;      Temps:          0       0       0       0       0       0       0
  7187 ;;      Totals:         0       0       2       0       0       0       0
  7188 ;;Total ram usage:        2 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:    6
  7191 ;; This function calls:
  7192 ;;		_ee_WriteBytes
  7193 ;;		_setYX_LCD
  7194 ;; This function is called by:
  7195 ;;		_initial_ui_setting
  7196 ;; This function uses a non-reentrant model
  7197 ;;
  7198                           
  7199                           	psect	text11
  7200  004804                     __ptext11:
  7201                           	opt stack 0
  7202  004804                     _clear_screen:
  7203                           	opt stack 21
  7204                           
  7205                           ;Oled.c: 3178: uint8_t page,col;
  7206                           ;Oled.c: 3179: for(page=0;page<9;page++)
  7207                           
  7208                           ; BSR set to: 1
  7209                           ;incstack = 0
  7210  004804  0E00               	movlw	0
  7211  004806  0101               	movlb	1	; () banked
  7212  004808  6F32               	movwf	clear_screen@page& (0+255),b
  7213  00480A                     l12335:
  7214                           
  7215                           ; BSR set to: 1
  7216  00480A  0E08               	movlw	8
  7217  00480C  0101               	movlb	1	; () banked
  7218  00480E  6532               	cpfsgt	clear_screen@page& (0+255),b
  7219  004810  D001               	goto	l12339
  7220  004812  0012               	return	
  7221  004814                     l12339:
  7222                           
  7223                           ; BSR set to: 1
  7224                           ;Oled.c: 3180: {
  7225                           ;Oled.c: 3181: setYX_LCD(page,0);
  7226  004814  0E00               	movlw	0
  7227  004816  0100               	movlb	0	; () banked
  7228  004818  6FFF               	movwf	setYX_LCD@px& (0+255),b
  7229  00481A  0101               	movlb	1	; () banked
  7230  00481C  5132               	movf	clear_screen@page& (0+255),w,b
  7231  00481E  EC8E  F024         	call	_setYX_LCD
  7232                           
  7233                           ;Oled.c: 3182: write_buf[0] =0x00;
  7234  004822  0E00               	movlw	0
  7235  004824  0102               	movlb	2	; () banked
  7236  004826  6F00               	movwf	_write_buf& (0+255),b
  7237                           
  7238                           ; BSR set to: 2
  7239                           ;Oled.c: 3183: for(col=0;col<99;col++)
  7240  004828  0E00               	movlw	0
  7241  00482A  0101               	movlb	1	; () banked
  7242  00482C  6F31               	movwf	clear_screen@col& (0+255),b
  7243  00482E                     l12345:
  7244                           
  7245                           ; BSR set to: 1
  7246  00482E  0E62               	movlw	98
  7247  004830  0101               	movlb	1	; () banked
  7248  004832  6531               	cpfsgt	clear_screen@col& (0+255),b
  7249  004834  D001               	goto	l12349
  7250  004836  D013               	goto	l12355
  7251  004838                     l12349:
  7252                           
  7253                           ; BSR set to: 1
  7254                           ;Oled.c: 3184: {
  7255                           ;Oled.c: 3185: ee_WriteBytes(write_buf, 0x40, 1);
  7256  004838  0E00               	movlw	low _write_buf
  7257  00483A  0101               	movlb	1	; () banked
  7258  00483C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7259  00483E  0E02               	movlw	high _write_buf
  7260  004840  0101               	movlb	1	; () banked
  7261  004842  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7262  004844  0E40               	movlw	64
  7263  004846  0101               	movlb	1	; () banked
  7264  004848  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7265  00484A  0E00               	movlw	0
  7266  00484C  0101               	movlb	1	; () banked
  7267  00484E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7268  004850  0E01               	movlw	1
  7269  004852  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7270  004854  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7271  004858  0101               	movlb	1	; () banked
  7272  00485A  2B31               	incf	clear_screen@col& (0+255),f,b
  7273  00485C  D7E8               	goto	l12345
  7274  00485E                     l12355:
  7275                           
  7276                           ; BSR set to: 1
  7277  00485E  0101               	movlb	1	; () banked
  7278  004860  2B32               	incf	clear_screen@page& (0+255),f,b
  7279  004862  D7D3               	goto	l12335
  7280  004864                     __end_of_clear_screen:
  7281                           	opt stack 0
  7282                           tblptru	equ	0xFF8
  7283                           tblptrh	equ	0xFF7
  7284                           tblptrl	equ	0xFF6
  7285                           tablat	equ	0xFF5
  7286                           prodh	equ	0xFF4
  7287                           prodl	equ	0xFF3
  7288                           intcon	equ	0xFF2
  7289                           intcon3	equ	0xFF0
  7290                           postinc0	equ	0xFEE
  7291                           wreg	equ	0xFE8
  7292                           postdec1	equ	0xFE5
  7293                           fsr1h	equ	0xFE2
  7294                           fsr1l	equ	0xFE1
  7295                           status	equ	0xFD8
  7296                           
  7297 ;; *************** function _config_LCD *****************
  7298 ;; Defined at:
  7299 ;;		line 3305 in file "../Oled.c"
  7300 ;; Parameters:    Size  Location     Type
  7301 ;;		None
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;		None
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7313 ;;      Params:         0       0       0       0       0       0       0
  7314 ;;      Locals:         0       0       0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0
  7316 ;;      Totals:         0       0       0       0       0       0       0
  7317 ;;Total ram usage:        0 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; Hardware stack levels required when called:    5
  7320 ;; This function calls:
  7321 ;;		_ee_WriteBytes
  7322 ;; This function is called by:
  7323 ;;		_check_wake_button
  7324 ;; This function uses a non-reentrant model
  7325 ;;
  7326                           
  7327                           	psect	text12
  7328  0040B8                     __ptext12:
  7329                           	opt stack 0
  7330  0040B8                     _config_LCD:
  7331                           	opt stack 23
  7332                           
  7333                           ;Oled.c: 3308: write_buf[0]=0x21;
  7334                           
  7335                           ; BSR set to: 1
  7336                           ;incstack = 0
  7337  0040B8  0E21               	movlw	33
  7338  0040BA  0102               	movlb	2	; () banked
  7339  0040BC  6F00               	movwf	_write_buf& (0+255),b
  7340                           
  7341                           ; BSR set to: 2
  7342                           ;Oled.c: 3310: ee_WriteBytes(write_buf, 0x00, 1);
  7343  0040BE  0E00               	movlw	low _write_buf
  7344  0040C0  0101               	movlb	1	; () banked
  7345  0040C2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7346  0040C4  0E02               	movlw	high _write_buf
  7347  0040C6  0101               	movlb	1	; () banked
  7348  0040C8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7349  0040CA  0E00               	movlw	0
  7350  0040CC  0101               	movlb	1	; () banked
  7351  0040CE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7352  0040D0  0E00               	movlw	0
  7353  0040D2  0101               	movlb	1	; () banked
  7354  0040D4  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7355  0040D6  0E01               	movlw	1
  7356  0040D8  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7357  0040DA  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7358                           
  7359                           ;Oled.c: 3313: write_buf[0]=0x15;
  7360  0040DE  0E15               	movlw	21
  7361  0040E0  0102               	movlb	2	; () banked
  7362  0040E2  6F00               	movwf	_write_buf& (0+255),b
  7363                           
  7364                           ;Oled.c: 3314: ee_WriteBytes(write_buf, 0x00, 1);
  7365  0040E4  0E00               	movlw	low _write_buf
  7366  0040E6  0101               	movlb	1	; () banked
  7367  0040E8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7368  0040EA  0E02               	movlw	high _write_buf
  7369  0040EC  0101               	movlb	1	; () banked
  7370  0040EE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7371  0040F0  0E00               	movlw	0
  7372  0040F2  0101               	movlb	1	; () banked
  7373  0040F4  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7374  0040F6  0E00               	movlw	0
  7375  0040F8  0101               	movlb	1	; () banked
  7376  0040FA  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7377  0040FC  0E01               	movlw	1
  7378  0040FE  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7379  004100  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7380                           
  7381                           ;Oled.c: 3316: write_buf[0]=0x08;
  7382  004104  0E08               	movlw	8
  7383  004106  0102               	movlb	2	; () banked
  7384  004108  6F00               	movwf	_write_buf& (0+255),b
  7385                           
  7386                           ; BSR set to: 2
  7387                           ;Oled.c: 3317: ee_WriteBytes(write_buf, 0x00, 1);
  7388  00410A  0E00               	movlw	low _write_buf
  7389  00410C  0101               	movlb	1	; () banked
  7390  00410E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7391  004110  0E02               	movlw	high _write_buf
  7392  004112  0101               	movlb	1	; () banked
  7393  004114  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7394  004116  0E00               	movlw	0
  7395  004118  0101               	movlb	1	; () banked
  7396  00411A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7397  00411C  0E00               	movlw	0
  7398  00411E  0101               	movlb	1	; () banked
  7399  004120  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7400  004122  0E01               	movlw	1
  7401  004124  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7402  004126  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7403                           
  7404                           ;Oled.c: 3319: write_buf[0]=0x9f;
  7405  00412A  0E9F               	movlw	159
  7406  00412C  0102               	movlb	2	; () banked
  7407  00412E  6F00               	movwf	_write_buf& (0+255),b
  7408                           
  7409                           ; BSR set to: 2
  7410                           ;Oled.c: 3320: ee_WriteBytes(write_buf, 0x00, 1);
  7411  004130  0E00               	movlw	low _write_buf
  7412  004132  0101               	movlb	1	; () banked
  7413  004134  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7414  004136  0E02               	movlw	high _write_buf
  7415  004138  0101               	movlb	1	; () banked
  7416  00413A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7417  00413C  0E00               	movlw	0
  7418  00413E  0101               	movlb	1	; () banked
  7419  004140  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7420  004142  0E00               	movlw	0
  7421  004144  0101               	movlb	1	; () banked
  7422  004146  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7423  004148  0E01               	movlw	1
  7424  00414A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7425  00414C  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7426                           
  7427                           ;Oled.c: 3322: write_buf[0]=0x20;
  7428  004150  0E20               	movlw	32
  7429  004152  0102               	movlb	2	; () banked
  7430  004154  6F00               	movwf	_write_buf& (0+255),b
  7431                           
  7432                           ;Oled.c: 3323: ee_WriteBytes(write_buf, 0x00, 1);
  7433  004156  0E00               	movlw	low _write_buf
  7434  004158  0101               	movlb	1	; () banked
  7435  00415A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7436  00415C  0E02               	movlw	high _write_buf
  7437  00415E  0101               	movlb	1	; () banked
  7438  004160  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7439  004162  0E00               	movlw	0
  7440  004164  0101               	movlb	1	; () banked
  7441  004166  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7442  004168  0E00               	movlw	0
  7443  00416A  0101               	movlb	1	; () banked
  7444  00416C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7445  00416E  0E01               	movlw	1
  7446  004170  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7447  004172  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7448                           
  7449                           ;Oled.c: 3325: write_buf[0]=0x05;
  7450  004176  0E05               	movlw	5
  7451  004178  0102               	movlb	2	; () banked
  7452  00417A  6F00               	movwf	_write_buf& (0+255),b
  7453                           
  7454                           ; BSR set to: 2
  7455                           ;Oled.c: 3326: ee_WriteBytes(write_buf, 0x00, 1);
  7456  00417C  0E00               	movlw	low _write_buf
  7457  00417E  0101               	movlb	1	; () banked
  7458  004180  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7459  004182  0E02               	movlw	high _write_buf
  7460  004184  0101               	movlb	1	; () banked
  7461  004186  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7462  004188  0E00               	movlw	0
  7463  00418A  0101               	movlb	1	; () banked
  7464  00418C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7465  00418E  0E00               	movlw	0
  7466  004190  0101               	movlb	1	; () banked
  7467  004192  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7468  004194  0E01               	movlw	1
  7469  004196  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7470  004198  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7471                           
  7472                           ;Oled.c: 3328: write_buf[0]=0x0c;
  7473  00419C  0E0C               	movlw	12
  7474  00419E  0102               	movlb	2	; () banked
  7475  0041A0  6F00               	movwf	_write_buf& (0+255),b
  7476                           
  7477                           ; BSR set to: 2
  7478                           ;Oled.c: 3331: ee_WriteBytes(write_buf, 0x00, 1);
  7479  0041A2  0E00               	movlw	low _write_buf
  7480  0041A4  0101               	movlb	1	; () banked
  7481  0041A6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  7482  0041A8  0E02               	movlw	high _write_buf
  7483  0041AA  0101               	movlb	1	; () banked
  7484  0041AC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  7485  0041AE  0E00               	movlw	0
  7486  0041B0  0101               	movlb	1	; () banked
  7487  0041B2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  7488  0041B4  0E00               	movlw	0
  7489  0041B6  0101               	movlb	1	; () banked
  7490  0041B8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  7491  0041BA  0E01               	movlw	1
  7492  0041BC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  7493  0041BE  EC88  F025         	call	_ee_WriteBytes	;wreg free
  7494  0041C2  0012               	return		;funcret
  7495  0041C4                     __end_of_config_LCD:
  7496                           	opt stack 0
  7497                           tblptru	equ	0xFF8
  7498                           tblptrh	equ	0xFF7
  7499                           tblptrl	equ	0xFF6
  7500                           tablat	equ	0xFF5
  7501                           prodh	equ	0xFF4
  7502                           prodl	equ	0xFF3
  7503                           intcon	equ	0xFF2
  7504                           intcon3	equ	0xFF0
  7505                           postinc0	equ	0xFEE
  7506                           wreg	equ	0xFE8
  7507                           postdec1	equ	0xFE5
  7508                           fsr1h	equ	0xFE2
  7509                           fsr1l	equ	0xFE1
  7510                           status	equ	0xFD8
  7511                           
  7512 ;; *************** function _LCD_On *****************
  7513 ;; Defined at:
  7514 ;;		line 573 in file "../Oled.c"
  7515 ;; Parameters:    Size  Location     Type
  7516 ;;		None
  7517 ;; Auto vars:     Size  Location     Type
  7518 ;;		None
  7519 ;; Return value:  Size  Location     Type
  7520 ;;                  1    wreg      void 
  7521 ;; Registers used:
  7522 ;;		None
  7523 ;; Tracked objects:
  7524 ;;		On entry : 0/0
  7525 ;;		On exit  : 0/0
  7526 ;;		Unchanged: 0/0
  7527 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7528 ;;      Params:         0       0       0       0       0       0       0
  7529 ;;      Locals:         0       0       0       0       0       0       0
  7530 ;;      Temps:          0       0       0       0       0       0       0
  7531 ;;      Totals:         0       0       0       0       0       0       0
  7532 ;;Total ram usage:        0 bytes
  7533 ;; Hardware stack levels used:    1
  7534 ;; Hardware stack levels required when called:    2
  7535 ;; This function calls:
  7536 ;;		Nothing
  7537 ;; This function is called by:
  7538 ;;		_check_wake_button
  7539 ;; This function uses a non-reentrant model
  7540 ;;
  7541                           
  7542                           	psect	text13
  7543  004EA8                     __ptext13:
  7544                           	opt stack 0
  7545  004EA8                     _LCD_On:
  7546                           	opt stack 26
  7547                           
  7548                           ;Oled.c: 577: LATEbits.LE0 =1;
  7549                           
  7550                           ;incstack = 0
  7551  004EA8  808D               	bsf	3981,0,c	;volatile
  7552  004EAA  0012               	return		;funcret
  7553  004EAC                     __end_of_LCD_On:
  7554                           	opt stack 0
  7555                           tblptru	equ	0xFF8
  7556                           tblptrh	equ	0xFF7
  7557                           tblptrl	equ	0xFF6
  7558                           tablat	equ	0xFF5
  7559                           prodh	equ	0xFF4
  7560                           prodl	equ	0xFF3
  7561                           intcon	equ	0xFF2
  7562                           intcon3	equ	0xFF0
  7563                           postinc0	equ	0xFEE
  7564                           wreg	equ	0xFE8
  7565                           postdec1	equ	0xFE5
  7566                           fsr1h	equ	0xFE2
  7567                           fsr1l	equ	0xFE1
  7568                           status	equ	0xFD8
  7569                           
  7570 ;; *************** function _drops_routine *****************
  7571 ;; Defined at:
  7572 ;;		line 266 in file "../MotorDrive.c"
  7573 ;; Parameters:    Size  Location     Type
  7574 ;;		None
  7575 ;; Auto vars:     Size  Location     Type
  7576 ;;  cnt_push        2    6[BANK1 ] unsigned int 
  7577 ;; Return value:  Size  Location     Type
  7578 ;;                  1    wreg      void 
  7579 ;; Registers used:
  7580 ;;		wreg, status,2, status,0, cstack
  7581 ;; Tracked objects:
  7582 ;;		On entry : 0/0
  7583 ;;		On exit  : 0/0
  7584 ;;		Unchanged: 0/0
  7585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7586 ;;      Params:         0       0       0       0       0       0       0
  7587 ;;      Locals:         0       0       2       0       0       0       0
  7588 ;;      Temps:          0       0       2       0       0       0       0
  7589 ;;      Totals:         0       0       4       0       0       0       0
  7590 ;;Total ram usage:        4 bytes
  7591 ;; Hardware stack levels used:    1
  7592 ;; Hardware stack levels required when called:    4
  7593 ;; This function calls:
  7594 ;;		_buzz
  7595 ;;		_delaynus
  7596 ;; This function is called by:
  7597 ;;		_main
  7598 ;; This function uses a non-reentrant model
  7599 ;;
  7600                           
  7601                           	psect	text14
  7602  0014E6                     __ptext14:
  7603                           	opt stack 0
  7604  0014E6                     _drops_routine:
  7605                           	opt stack 26
  7606                           
  7607                           ;MotorDrive.c: 268: uint16_t cnt_push =0;
  7608                           
  7609                           ;incstack = 0
  7610  0014E6  0E00               	movlw	0
  7611  0014E8  0101               	movlb	1	; () banked
  7612  0014EA  6F2F               	movwf	(drops_routine@cnt_push+1)& (0+255),b
  7613  0014EC  0E00               	movlw	0
  7614  0014EE  6F2E               	movwf	drops_routine@cnt_push& (0+255),b
  7615                           
  7616                           ;MotorDrive.c: 281: else
  7617                           ;MotorDrive.c: 282: {
  7618                           ;MotorDrive.c: 283: if(hg_op.drops_sa == 1)
  7619                           
  7620                           ; BSR set to: 0
  7621                           
  7622                           ;MotorDrive.c: 280: }
  7623                           
  7624                           ;MotorDrive.c: 279: hg_op.need_reset =1;
  7625                           
  7626                           ;MotorDrive.c: 278: hg_op.working_mode = 0x03;
  7627                           
  7628                           ; BSR set to: 1
  7629                           ;MotorDrive.c: 277: hg_op.acting_flag =0;
  7630                           
  7631                           ; BSR set to: 1
  7632                           
  7633                           ; BSR set to: 1
  7634                           
  7635                           ; BSR set to: 1
  7636                           ;MotorDrive.c: 276: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  7637                           
  7638                           ; BSR set to: 1
  7639                           
  7640                           ; BSR set to: 1
  7641                           ;MotorDrive.c: 274: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  7642                           
  7643                           ; BSR set to: 1
  7644                           
  7645                           ;MotorDrive.c: 272: {
  7646                           ;MotorDrive.c: 273: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  7647                           
  7648                           ;MotorDrive.c: 271: if(0)
  7649  0014F0  0100               	movlb	0	; () banked
  7650  0014F2  059F               	decf	(_hg_op+31)& (0+255),w,b
  7651  0014F4  A4D8               	btfss	status,2,c
  7652  0014F6  D08F               	goto	l14571
  7653                           
  7654                           ; BSR set to: 0
  7655                           ;MotorDrive.c: 284: {
  7656                           ;MotorDrive.c: 287: if( hg_op.needle_len == 13)
  7657  0014F8  0E0D               	movlw	13
  7658  0014FA  0100               	movlb	0	; () banked
  7659  0014FC  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  7660  0014FE  A4D8               	btfss	status,2,c
  7661  001500  D043               	goto	l371
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;MotorDrive.c: 288: {
  7665                           ;MotorDrive.c: 289: hg_op.cnt_posa =0;
  7666  001502  0E00               	movlw	0
  7667  001504  0100               	movlb	0	; () banked
  7668  001506  6FA6               	movwf	(_hg_op+38)& (0+255),b
  7669  001508  0E00               	movlw	0
  7670  00150A  6FA5               	movwf	(_hg_op+37)& (0+255),b
  7671                           
  7672                           ; BSR set to: 0
  7673                           
  7674                           ; BSR set to: 0
  7675                           
  7676                           ;MotorDrive.c: 290: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  7677  00150C  848C               	bsf	3980,2,c	;volatile
  7678                           
  7679                           ; BSR set to: 0
  7680  00150E  968C               	bcf	3980,3,c	;volatile
  7681                           
  7682                           ; BSR set to: 0
  7683  001510  888C               	bsf	3980,4,c	;volatile
  7684                           
  7685                           ; BSR set to: 0
  7686                           ;MotorDrive.c: 293: if(hg_op.inject_len == 1)
  7687                           
  7688                           ; BSR set to: 0
  7689  001512  0100               	movlb	0	; () banked
  7690  001514  0598               	decf	(_hg_op+24)& (0+255),w,b
  7691  001516  0100               	movlb	0	; () banked
  7692  001518  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7693  00151A  A4D8               	btfss	status,2,c
  7694  00151C  D009               	goto	l14523
  7695  00151E                     l14521:
  7696                           
  7697                           ; BSR set to: 0
  7698  00151E  0100               	movlb	0	; () banked
  7699  001520  51A6               	movf	(_hg_op+38)& (0+255),w,b
  7700  001522  E124               	bnz	l366
  7701  001524  0EEC               	movlw	236
  7702  001526  0100               	movlb	0	; () banked
  7703  001528  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  7704  00152A  B0D8               	btfsc	status,0,c
  7705  00152C  D01F               	goto	l366
  7706  00152E  D7F7               	goto	l14521
  7707  001530                     l14523:
  7708                           
  7709                           ; BSR set to: 0
  7710                           ;MotorDrive.c: 297: else if(hg_op.inject_len == 2)
  7711  001530  0E02               	movlw	2
  7712  001532  0100               	movlb	0	; () banked
  7713  001534  1998               	xorwf	(_hg_op+24)& (0+255),w,b
  7714  001536  0100               	movlb	0	; () banked
  7715  001538  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7716  00153A  A4D8               	btfss	status,2,c
  7717  00153C  D009               	goto	l14529
  7718  00153E                     l14527:
  7719                           
  7720                           ; BSR set to: 0
  7721  00153E  0E45               	movlw	69
  7722  001540  0100               	movlb	0	; () banked
  7723  001542  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  7724  001544  0E01               	movlw	1
  7725  001546  0100               	movlb	0	; () banked
  7726  001548  59A6               	subwfb	(_hg_op+38)& (0+255),w,b
  7727  00154A  B0D8               	btfsc	status,0,c
  7728  00154C  D00F               	goto	l366
  7729  00154E  D7F7               	goto	l14527
  7730  001550                     l14529:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;MotorDrive.c: 301: else if(hg_op.inject_len == 0)
  7734  001550  0100               	movlb	0	; () banked
  7735  001552  5198               	movf	(_hg_op+24)& (0+255),w,b
  7736  001554  0100               	movlb	0	; () banked
  7737  001556  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7738  001558  A4D8               	btfss	status,2,c
  7739  00155A  D008               	goto	l366
  7740  00155C                     l14533:
  7741                           
  7742                           ; BSR set to: 0
  7743  00155C  0100               	movlb	0	; () banked
  7744  00155E  51A6               	movf	(_hg_op+38)& (0+255),w,b
  7745  001560  E105               	bnz	l366
  7746  001562  0E94               	movlw	148
  7747  001564  0100               	movlb	0	; () banked
  7748  001566  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
  7749  001568  A0D8               	btfss	status,0,c
  7750  00156A  D7F8               	goto	l14533
  7751  00156C                     l366:
  7752                           
  7753                           ; BSR set to: 0
  7754  00156C  948C               	bcf	3980,2,c	;volatile
  7755  00156E  868C               	bsf	3980,3,c	;volatile
  7756  001570  888C               	bsf	3980,4,c	;volatile
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;MotorDrive.c: 306: delaynus(15 * 1000);
  7760                           
  7761                           ; BSR set to: 0
  7762  001572  0E3A               	movlw	58
  7763  001574  0100               	movlb	0	; () banked
  7764  001576  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7765  001578  0E98               	movlw	152
  7766  00157A  6FFD               	movwf	delaynus@n& (0+255),b
  7767  00157C  ECE0  F026         	call	_delaynus	;wreg free
  7768                           
  7769                           ;MotorDrive.c: 307: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  7770  001580  888C               	bsf	3980,4,c	;volatile
  7771  001582  948C               	bcf	3980,2,c	;volatile
  7772  001584  968C               	bcf	3980,3,c	;volatile
  7773                           
  7774                           ;MotorDrive.c: 311: }
  7775  001586  D03D               	goto	l14565
  7776  001588                     l371:
  7777  001588  888C               	bsf	3980,4,c	;volatile
  7778  00158A  948C               	bcf	3980,2,c	;volatile
  7779  00158C  968C               	bcf	3980,3,c	;volatile
  7780                           
  7781                           ;MotorDrive.c: 315: LATDbits.LD4 =1;LATDbits.LD3 =0;LATDbits.LD2 =1;
  7782  00158E  888C               	bsf	3980,4,c	;volatile
  7783  001590  968C               	bcf	3980,3,c	;volatile
  7784  001592  848C               	bsf	3980,2,c	;volatile
  7785                           
  7786                           ;MotorDrive.c: 325: if(hg_op.inject_len == 1)
  7787  001594  0100               	movlb	0	; () banked
  7788  001596  0598               	decf	(_hg_op+24)& (0+255),w,b
  7789  001598  0100               	movlb	0	; () banked
  7790  00159A  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7791  00159C  A4D8               	btfss	status,2,c
  7792  00159E  D00C               	goto	l14549
  7793  0015A0                     l14547:
  7794                           
  7795                           ; BSR set to: 0
  7796  0015A0  0100               	movlb	0	; () banked
  7797  0015A2  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  7798  0015A4  D7FD               	goto	l14547
  7799  0015A6  0100               	movlb	0	; () banked
  7800  0015A8  51AE               	movf	(_hg_op+46)& (0+255),w,b
  7801  0015AA  E117               	bnz	l385
  7802  0015AC  0EEC               	movlw	236
  7803  0015AE  0100               	movlb	0	; () banked
  7804  0015B0  5DAD               	subwf	(_hg_op+45)& (0+255),w,b
  7805  0015B2  B0D8               	btfsc	status,0,c
  7806  0015B4  D012               	goto	l385
  7807  0015B6  D7F4               	goto	l14547
  7808  0015B8                     l14549:
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;MotorDrive.c: 330: else if(hg_op.inject_len == 0)
  7812  0015B8  0100               	movlb	0	; () banked
  7813  0015BA  5198               	movf	(_hg_op+24)& (0+255),w,b
  7814  0015BC  0100               	movlb	0	; () banked
  7815  0015BE  1199               	iorwf	(_hg_op+25)& (0+255),w,b
  7816  0015C0  A4D8               	btfss	status,2,c
  7817  0015C2  D00B               	goto	l385
  7818  0015C4                     l14553:
  7819                           
  7820                           ; BSR set to: 0
  7821  0015C4  0100               	movlb	0	; () banked
  7822  0015C6  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  7823  0015C8  D7FD               	goto	l14553
  7824  0015CA  0100               	movlb	0	; () banked
  7825  0015CC  51AE               	movf	(_hg_op+46)& (0+255),w,b
  7826  0015CE  E105               	bnz	l385
  7827  0015D0  0E94               	movlw	148
  7828  0015D2  0100               	movlb	0	; () banked
  7829  0015D4  5DAD               	subwf	(_hg_op+45)& (0+255),w,b
  7830  0015D6  A0D8               	btfss	status,0,c
  7831  0015D8  D7F5               	goto	l14553
  7832  0015DA                     l385:
  7833                           
  7834                           ; BSR set to: 0
  7835  0015DA  948C               	bcf	3980,2,c	;volatile
  7836  0015DC  868C               	bsf	3980,3,c	;volatile
  7837  0015DE  888C               	bsf	3980,4,c	;volatile
  7838                           
  7839                           ; BSR set to: 0
  7840                           
  7841                           ; BSR set to: 0
  7842  0015E0  0E3A               	movlw	58
  7843  0015E2  0100               	movlb	0	; () banked
  7844  0015E4  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7845  0015E6  0E98               	movlw	152
  7846  0015E8  6FFD               	movwf	delaynus@n& (0+255),b
  7847  0015EA  ECE0  F026         	call	_delaynus	;wreg free
  7848  0015EE  888C               	bsf	3980,4,c	;volatile
  7849  0015F0  948C               	bcf	3980,2,c	;volatile
  7850  0015F2  968C               	bcf	3980,3,c	;volatile
  7851                           
  7852                           ;MotorDrive.c: 350: delaynus(30 *1000);
  7853  0015F4  0E75               	movlw	117
  7854  0015F6  0100               	movlb	0	; () banked
  7855  0015F8  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  7856  0015FA  0E30               	movlw	48
  7857  0015FC  6FFD               	movwf	delaynus@n& (0+255),b
  7858  0015FE  ECE0  F026         	call	_delaynus	;wreg free
  7859  001602                     l14565:
  7860                           
  7861                           ;MotorDrive.c: 353: }
  7862                           ;MotorDrive.c: 355: hg_op.drops_sa = 0;
  7863  001602  0E00               	movlw	0
  7864  001604  0100               	movlb	0	; () banked
  7865  001606  6F9F               	movwf	(_hg_op+31)& (0+255),b
  7866                           
  7867                           ; BSR set to: 0
  7868                           ;MotorDrive.c: 356: hg_op.drops_sb = 0;
  7869  001608  0E00               	movlw	0
  7870  00160A  0100               	movlb	0	; () banked
  7871  00160C  6FA0               	movwf	(_hg_op+32)& (0+255),b
  7872                           
  7873                           ; BSR set to: 0
  7874                           ;MotorDrive.c: 357: hg_op.drops_push = 1;
  7875  00160E  0E01               	movlw	1
  7876  001610  0100               	movlb	0	; () banked
  7877  001612  6FA1               	movwf	(_hg_op+33)& (0+255),b
  7878                           
  7879                           ;MotorDrive.c: 361: }
  7880  001614  0012               	return	
  7881  001616                     l14571:
  7882                           
  7883                           ; BSR set to: 0
  7884                           ;MotorDrive.c: 362: else if(hg_op.drops_push == 1)
  7885  001616  0100               	movlb	0	; () banked
  7886  001618  05A1               	decf	(_hg_op+33)& (0+255),w,b
  7887  00161A  A4D8               	btfss	status,2,c
  7888  00161C  D07E               	goto	l14607
  7889                           
  7890                           ; BSR set to: 0
  7891                           ;MotorDrive.c: 363: {
  7892                           ;MotorDrive.c: 366: hg_op.cnt_push =0;
  7893  00161E  0E00               	movlw	0
  7894  001620  0100               	movlb	0	; () banked
  7895  001622  6F8B               	movwf	(_hg_op+11)& (0+255),b
  7896  001624  0E00               	movlw	0
  7897  001626  6F8A               	movwf	(_hg_op+10)& (0+255),b
  7898                           
  7899                           ; BSR set to: 0
  7900                           
  7901                           ; BSR set to: 0
  7902                           
  7903                           ;MotorDrive.c: 370: do{T0IE=1;T0CONbits.TMR0ON =1;}while(0);
  7904  001628  8AF2               	bsf	intcon,5,c	;volatile
  7905                           
  7906                           ; BSR set to: 0
  7907  00162A  8ED5               	bsf	4053,7,c	;volatile
  7908                           
  7909                           ; BSR set to: 0
  7910                           
  7911                           ; BSR set to: 0
  7912                           
  7913                           ;MotorDrive.c: 371: do{LATDbits.LD0 =1;LATDbits.LD1 =0; LATCbits.LC2 =1; }while(0);
  7914                           
  7915                           ; BSR set to: 0
  7916  00162C  808C               	bsf	3980,0,c	;volatile
  7917                           
  7918                           ; BSR set to: 0
  7919  00162E  928C               	bcf	3980,1,c	;volatile
  7920                           
  7921                           ; BSR set to: 0
  7922  001630  848B               	bsf	3979,2,c	;volatile
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;MotorDrive.c: 373: while(hg_op.cnt_push < hg_op.push_len)
  7926  001632  D00E               	goto	l14593
  7927  001634                     l398:
  7928  001634  A880               	btfss	3968,4,c	;volatile
  7929  001636  D7FE               	goto	l398
  7930                           
  7931                           ;MotorDrive.c: 376: hg_op.cnt_push ++;
  7932  001638  0100               	movlb	0	; () banked
  7933  00163A  4B8A               	infsnz	(_hg_op+10)& (0+255),f,b
  7934  00163C  2B8B               	incf	(_hg_op+11)& (0+255),f,b
  7935  00163E                     l401:
  7936  00163E  B880               	btfsc	3968,4,c	;volatile
  7937  001640  D7FE               	goto	l401
  7938                           
  7939                           ;MotorDrive.c: 378: hg_op.cnt_push ++;
  7940  001642  0100               	movlb	0	; () banked
  7941  001644  4B8A               	infsnz	(_hg_op+10)& (0+255),f,b
  7942  001646  2B8B               	incf	(_hg_op+11)& (0+255),f,b
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;MotorDrive.c: 380: if(hg_op.flag_warning_ma == 1)
  7946  001648  0100               	movlb	0	; () banked
  7947  00164A  058E               	decf	(_hg_op+14)& (0+255),w,b
  7948  00164C  B4D8               	btfsc	status,2,c
  7949  00164E  D00F               	goto	l406
  7950  001650                     l14593:
  7951                           
  7952                           ; BSR set to: 0
  7953  001650  0100               	movlb	0	; () banked
  7954  001652  519D               	movf	(_hg_op+29)& (0+255),w,b
  7955  001654  0101               	movlb	1	; () banked
  7956  001656  6F2C               	movwf	??_drops_routine& (0+255),b
  7957  001658  6B2D               	clrf	(??_drops_routine+1)& (0+255),b
  7958  00165A  0101               	movlb	1	; () banked
  7959  00165C  512C               	movf	??_drops_routine& (0+255),w,b
  7960  00165E  0100               	movlb	0	; () banked
  7961  001660  5D8A               	subwf	(_hg_op+10)& (0+255),w,b
  7962  001662  0101               	movlb	1	; () banked
  7963  001664  512D               	movf	(??_drops_routine+1)& (0+255),w,b
  7964  001666  0100               	movlb	0	; () banked
  7965  001668  598B               	subwfb	(_hg_op+11)& (0+255),w,b
  7966  00166A  A0D8               	btfss	status,0,c
  7967  00166C  D7E3               	goto	l398
  7968  00166E                     l406:
  7969                           
  7970                           ; BSR set to: 0
  7971  00166E  848B               	bsf	3979,2,c	;volatile
  7972  001670  908C               	bcf	3980,0,c	;volatile
  7973  001672  928C               	bcf	3980,1,c	;volatile
  7974                           
  7975                           ; BSR set to: 0
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;MotorDrive.c: 386: do{T0IE=0;T0IF = 0;T0CONbits.TMR0ON =0;}while(0);
  7979  001674  9AF2               	bcf	intcon,5,c	;volatile
  7980  001676  94F2               	bcf	intcon,2,c	;volatile
  7981  001678  9ED5               	bcf	4053,7,c	;volatile
  7982                           
  7983                           ; BSR set to: 0
  7984                           ;MotorDrive.c: 387: if(hg_op.flag_warning_ma == 1)
  7985                           
  7986                           ; BSR set to: 0
  7987  00167A  0100               	movlb	0	; () banked
  7988  00167C  058E               	decf	(_hg_op+14)& (0+255),w,b
  7989  00167E  A4D8               	btfss	status,2,c
  7990  001680  D042               	goto	l14605
  7991                           
  7992                           ; BSR set to: 0
  7993                           ;MotorDrive.c: 388: {
  7994                           ;MotorDrive.c: 390: hg_op.drops_sa = 0;
  7995  001682  0E00               	movlw	0
  7996  001684  0100               	movlb	0	; () banked
  7997  001686  6F9F               	movwf	(_hg_op+31)& (0+255),b
  7998                           
  7999                           ;MotorDrive.c: 391: hg_op.drops_push = 0;
  8000  001688  0E00               	movlw	0
  8001  00168A  0100               	movlb	0	; () banked
  8002  00168C  6FA1               	movwf	(_hg_op+33)& (0+255),b
  8003                           
  8004                           ;MotorDrive.c: 392: hg_op.drops_sb = 0;
  8005  00168E  0E00               	movlw	0
  8006  001690  0100               	movlb	0	; () banked
  8007  001692  6FA0               	movwf	(_hg_op+32)& (0+255),b
  8008                           
  8009                           ;MotorDrive.c: 395: while(PORTBbits.RB5 == 0)
  8010  001694  D02C               	goto	l14601
  8011  001696                     l14599:
  8012                           
  8013                           ;MotorDrive.c: 396: {
  8014                           ;MotorDrive.c: 397: buzz();
  8015  001696  ECFE  F026         	call	_buzz	;wreg free
  8016                           
  8017                           ;MotorDrive.c: 398: delaynus(50*1000);delaynus(50*1000);
  8018  00169A  0EC3               	movlw	195
  8019  00169C  0100               	movlb	0	; () banked
  8020  00169E  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8021  0016A0  0E50               	movlw	80
  8022  0016A2  6FFD               	movwf	delaynus@n& (0+255),b
  8023  0016A4  ECE0  F026         	call	_delaynus	;wreg free
  8024  0016A8  0EC3               	movlw	195
  8025  0016AA  0100               	movlb	0	; () banked
  8026  0016AC  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8027  0016AE  0E50               	movlw	80
  8028  0016B0  6FFD               	movwf	delaynus@n& (0+255),b
  8029  0016B2  ECE0  F026         	call	_delaynus	;wreg free
  8030                           
  8031                           ;MotorDrive.c: 399: delaynus(50*1000);delaynus(50*1000);
  8032  0016B6  0EC3               	movlw	195
  8033  0016B8  0100               	movlb	0	; () banked
  8034  0016BA  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8035  0016BC  0E50               	movlw	80
  8036  0016BE  6FFD               	movwf	delaynus@n& (0+255),b
  8037  0016C0  ECE0  F026         	call	_delaynus	;wreg free
  8038  0016C4  0EC3               	movlw	195
  8039  0016C6  0100               	movlb	0	; () banked
  8040  0016C8  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8041  0016CA  0E50               	movlw	80
  8042  0016CC  6FFD               	movwf	delaynus@n& (0+255),b
  8043  0016CE  ECE0  F026         	call	_delaynus	;wreg free
  8044                           
  8045                           ;MotorDrive.c: 400: delaynus(50*1000);delaynus(50*1000);
  8046  0016D2  0EC3               	movlw	195
  8047  0016D4  0100               	movlb	0	; () banked
  8048  0016D6  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8049  0016D8  0E50               	movlw	80
  8050  0016DA  6FFD               	movwf	delaynus@n& (0+255),b
  8051  0016DC  ECE0  F026         	call	_delaynus	;wreg free
  8052  0016E0  0EC3               	movlw	195
  8053  0016E2  0100               	movlb	0	; () banked
  8054  0016E4  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8055  0016E6  0E50               	movlw	80
  8056  0016E8  6FFD               	movwf	delaynus@n& (0+255),b
  8057  0016EA  ECE0  F026         	call	_delaynus	;wreg free
  8058  0016EE                     l14601:
  8059  0016EE  AA81               	btfss	3969,5,c	;volatile
  8060  0016F0  D7D2               	goto	l14599
  8061                           
  8062                           ;MotorDrive.c: 402: }
  8063                           ;MotorDrive.c: 405: hg_op.flag_warning_ma =0;
  8064  0016F2  0E00               	movlw	0
  8065  0016F4  0100               	movlb	0	; () banked
  8066  0016F6  6F8E               	movwf	(_hg_op+14)& (0+255),b
  8067                           
  8068                           ;MotorDrive.c: 406: hg_op.need_reset =1;
  8069  0016F8  0E01               	movlw	1
  8070  0016FA  0100               	movlb	0	; () banked
  8071  0016FC  6F85               	movwf	(_hg_op+5)& (0+255),b
  8072                           
  8073                           ;MotorDrive.c: 407: hg_op.working_mode = 0x03;
  8074  0016FE  0E03               	movlw	3
  8075  001700  0100               	movlb	0	; () banked
  8076  001702  6F80               	movwf	_hg_op& (0+255),b
  8077                           
  8078                           ;MotorDrive.c: 409: }
  8079  001704  0012               	return	
  8080  001706                     l14605:
  8081                           
  8082                           ; BSR set to: 0
  8083                           ;MotorDrive.c: 410: else
  8084                           ;MotorDrive.c: 411: {
  8085                           ;MotorDrive.c: 416: hg_op.drops_sa = 0;
  8086  001706  0E00               	movlw	0
  8087  001708  0100               	movlb	0	; () banked
  8088  00170A  6F9F               	movwf	(_hg_op+31)& (0+255),b
  8089                           
  8090                           ;MotorDrive.c: 417: hg_op.drops_push = 0;
  8091  00170C  0E00               	movlw	0
  8092  00170E  0100               	movlb	0	; () banked
  8093  001710  6FA1               	movwf	(_hg_op+33)& (0+255),b
  8094                           
  8095                           ;MotorDrive.c: 418: hg_op.drops_sb = 1;
  8096  001712  0E01               	movlw	1
  8097  001714  0100               	movlb	0	; () banked
  8098  001716  6FA0               	movwf	(_hg_op+32)& (0+255),b
  8099                           
  8100                           ; BSR set to: 0
  8101                           ;MotorDrive.c: 420: }
  8102                           ;MotorDrive.c: 422: }
  8103  001718  0012               	return	
  8104  00171A                     l14607:
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;MotorDrive.c: 423: else if(hg_op.drops_sb == 1)
  8108  00171A  0100               	movlb	0	; () banked
  8109  00171C  05A0               	decf	(_hg_op+32)& (0+255),w,b
  8110  00171E  A4D8               	btfss	status,2,c
  8111  001720  0012               	return	
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;MotorDrive.c: 424: {
  8115                           ;MotorDrive.c: 429: if(hg_op.needle_len == 13)
  8116  001722  0E0D               	movlw	13
  8117  001724  0100               	movlb	0	; () banked
  8118  001726  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  8119  001728  A4D8               	btfss	status,2,c
  8120  00172A  D012               	goto	l417
  8121                           
  8122                           ; BSR set to: 0
  8123                           
  8124                           ;MotorDrive.c: 430: {
  8125                           ;MotorDrive.c: 433: do{LATDbits.LD2 =0;LATDbits.LD3 =1; LATDbits.LD4 =1;}while(0);
  8126  00172C  948C               	bcf	3980,2,c	;volatile
  8127  00172E  868C               	bsf	3980,3,c	;volatile
  8128  001730  888C               	bsf	3980,4,c	;volatile
  8129  001732                     l420:
  8130  001732  B081               	btfsc	3969,0,c	;volatile
  8131  001734  D7FE               	goto	l420
  8132                           
  8133                           ;MotorDrive.c: 435: do{LATDbits.LD2 =1;LATDbits.LD3 =0; LATDbits.LD4 =1;}while(0);
  8134  001736  848C               	bsf	3980,2,c	;volatile
  8135  001738  968C               	bcf	3980,3,c	;volatile
  8136  00173A  888C               	bsf	3980,4,c	;volatile
  8137                           
  8138                           ;MotorDrive.c: 436: delaynus(12 * 1000);
  8139  00173C  0E2E               	movlw	46
  8140  00173E  0100               	movlb	0	; () banked
  8141  001740  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8142  001742  0EE0               	movlw	224
  8143  001744  6FFD               	movwf	delaynus@n& (0+255),b
  8144  001746  ECE0  F026         	call	_delaynus	;wreg free
  8145  00174A  D019               	goto	l14623
  8146  00174C                     l14615:
  8147  00174C  948C               	bcf	3980,2,c	;volatile
  8148  00174E  D019               	goto	l14627
  8149  001750                     l417:
  8150                           
  8151                           ; BSR set to: 0
  8152                           ;MotorDrive.c: 440: else
  8153                           ;MotorDrive.c: 441: {
  8154                           ;MotorDrive.c: 442: LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =1;
  8155  001750  888C               	bsf	3980,4,c	;volatile
  8156  001752  948C               	bcf	3980,2,c	;volatile
  8157  001754  868C               	bsf	3980,3,c	;volatile
  8158  001756                     l14619:
  8159                           
  8160                           ; BSR set to: 0
  8161  001756  0100               	movlb	0	; () banked
  8162  001758  BFAE               	btfsc	(_hg_op+46)& (0+255),7,b
  8163  00175A  D007               	goto	l432
  8164  00175C  0100               	movlb	0	; () banked
  8165  00175E  51AE               	movf	(_hg_op+46)& (0+255),w,b
  8166  001760  E1FA               	bnz	l14619
  8167  001762  0100               	movlb	0	; () banked
  8168  001764  05AD               	decf	(_hg_op+45)& (0+255),w,b
  8169  001766  B0D8               	btfsc	status,0,c
  8170  001768  D7F6               	goto	l14619
  8171  00176A                     l432:
  8172                           
  8173                           ; BSR set to: 0
  8174  00176A  848C               	bsf	3980,2,c	;volatile
  8175  00176C  968C               	bcf	3980,3,c	;volatile
  8176  00176E  888C               	bsf	3980,4,c	;volatile
  8177                           
  8178                           ; BSR set to: 0
  8179                           
  8180                           ; BSR set to: 0
  8181  001770  0E3A               	movlw	58
  8182  001772  0100               	movlb	0	; () banked
  8183  001774  6FFE               	movwf	(delaynus@n+1)& (0+255),b
  8184  001776  0E98               	movlw	152
  8185  001778  6FFD               	movwf	delaynus@n& (0+255),b
  8186  00177A  ECE0  F026         	call	_delaynus	;wreg free
  8187  00177E                     l14623:
  8188  00177E  888C               	bsf	3980,4,c	;volatile
  8189  001780  D7E5               	goto	l14615
  8190  001782                     l14627:
  8191  001782  968C               	bcf	3980,3,c	;volatile
  8192                           
  8193                           ;MotorDrive.c: 447: }
  8194                           ;MotorDrive.c: 452: delaynus(hg_op.work_freq);
  8195  001784  C09B  F0FD         	movff	_hg_op+27,delaynus@n
  8196  001788  C09C  F0FE         	movff	_hg_op+28,delaynus@n+1
  8197  00178C  ECE0  F026         	call	_delaynus	;wreg free
  8198                           
  8199                           ;MotorDrive.c: 457: if(PORTBbits.RB5 == 1)
  8200  001790  AA81               	btfss	3969,5,c	;volatile
  8201  001792  D039               	goto	l437
  8202                           
  8203                           ;MotorDrive.c: 458: {
  8204                           ;MotorDrive.c: 459: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  8205  001794  888C               	bsf	3980,4,c	;volatile
  8206  001796  948C               	bcf	3980,2,c	;volatile
  8207  001798  968C               	bcf	3980,3,c	;volatile
  8208                           
  8209                           ;MotorDrive.c: 460: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  8210  00179A  848B               	bsf	3979,2,c	;volatile
  8211  00179C  908C               	bcf	3980,0,c	;volatile
  8212  00179E  928C               	bcf	3980,1,c	;volatile
  8213                           
  8214                           ;MotorDrive.c: 462: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
  8215  0017A0  908C               	bcf	3980,0,c	;volatile
  8216  0017A2  828C               	bsf	3980,1,c	;volatile
  8217  0017A4  848B               	bsf	3979,2,c	;volatile
  8218                           
  8219                           ;MotorDrive.c: 465: while(cnt_push < 260)
  8220  0017A6  D00A               	goto	l14635
  8221  0017A8                     l446:
  8222  0017A8  A880               	btfss	3968,4,c	;volatile
  8223  0017AA  D7FE               	goto	l446
  8224                           
  8225                           ;MotorDrive.c: 468: cnt_push ++;
  8226  0017AC  0101               	movlb	1	; () banked
  8227  0017AE  4B2E               	infsnz	drops_routine@cnt_push& (0+255),f,b
  8228  0017B0  2B2F               	incf	(drops_routine@cnt_push+1)& (0+255),f,b
  8229  0017B2                     l449:
  8230  0017B2  B880               	btfsc	3968,4,c	;volatile
  8231  0017B4  D7FE               	goto	l449
  8232                           
  8233                           ;MotorDrive.c: 470: cnt_push ++;
  8234  0017B6  0101               	movlb	1	; () banked
  8235  0017B8  4B2E               	infsnz	drops_routine@cnt_push& (0+255),f,b
  8236  0017BA  2B2F               	incf	(drops_routine@cnt_push+1)& (0+255),f,b
  8237  0017BC                     l14635:
  8238  0017BC  0E04               	movlw	4
  8239  0017BE  0101               	movlb	1	; () banked
  8240  0017C0  5D2E               	subwf	drops_routine@cnt_push& (0+255),w,b
  8241  0017C2  0E01               	movlw	1
  8242  0017C4  0101               	movlb	1	; () banked
  8243  0017C6  592F               	subwfb	(drops_routine@cnt_push+1)& (0+255),w,b
  8244  0017C8  A0D8               	btfss	status,0,c
  8245  0017CA  D7EE               	goto	l446
  8246                           
  8247                           ; BSR set to: 1
  8248                           
  8249                           ; BSR set to: 1
  8250                           ;MotorDrive.c: 472: }
  8251                           ;MotorDrive.c: 474: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  8252  0017CC  848B               	bsf	3979,2,c	;volatile
  8253  0017CE  908C               	bcf	3980,0,c	;volatile
  8254  0017D0  928C               	bcf	3980,1,c	;volatile
  8255                           
  8256                           ; BSR set to: 1
  8257                           ;MotorDrive.c: 476: hg_op.drops_sa = 0;
  8258                           
  8259                           ; BSR set to: 1
  8260  0017D2  0E00               	movlw	0
  8261  0017D4  0100               	movlb	0	; () banked
  8262  0017D6  6F9F               	movwf	(_hg_op+31)& (0+255),b
  8263                           
  8264                           ;MotorDrive.c: 477: hg_op.drops_sb = 0;
  8265  0017D8  0E00               	movlw	0
  8266  0017DA  0100               	movlb	0	; () banked
  8267  0017DC  6FA0               	movwf	(_hg_op+32)& (0+255),b
  8268                           
  8269                           ;MotorDrive.c: 478: hg_op.drops_push = 0;
  8270  0017DE  0E00               	movlw	0
  8271  0017E0  0100               	movlb	0	; () banked
  8272  0017E2  6FA1               	movwf	(_hg_op+33)& (0+255),b
  8273                           
  8274                           ;MotorDrive.c: 481: hg_op.acting_flag =0;
  8275  0017E4  0E00               	movlw	0
  8276  0017E6  0100               	movlb	0	; () banked
  8277  0017E8  6F9E               	movwf	(_hg_op+30)& (0+255),b
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;MotorDrive.c: 484: if(hg_op.needle_len == 13)
  8281  0017EA  0E0D               	movlw	13
  8282  0017EC  0100               	movlb	0	; () banked
  8283  0017EE  1997               	xorwf	(_hg_op+23)& (0+255),w,b
  8284  0017F0  A4D8               	btfss	status,2,c
  8285  0017F2  D002               	goto	l14643
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;MotorDrive.c: 485: {
  8289                           ;MotorDrive.c: 486: hg_op.need_reset =0;
  8290  0017F4  0E00               	movlw	0
  8291  0017F6  D001               	goto	L3
  8292  0017F8                     l14643:
  8293                           
  8294                           ; BSR set to: 0
  8295                           ;MotorDrive.c: 488: else
  8296                           ;MotorDrive.c: 489: {
  8297                           ;MotorDrive.c: 490: hg_op.need_reset =1;
  8298  0017F8  0E01               	movlw	1
  8299  0017FA                     L3:
  8300  0017FA  0100               	movlb	0	; () banked
  8301  0017FC  6F85               	movwf	(_hg_op+5)& (0+255),b
  8302                           
  8303                           ; BSR set to: 0
  8304                           ;MotorDrive.c: 491: }
  8305                           ;MotorDrive.c: 493: hg_op.working_mode = 0x03;
  8306  0017FE  0E03               	movlw	3
  8307  001800  0100               	movlb	0	; () banked
  8308  001802  6F80               	movwf	_hg_op& (0+255),b
  8309                           
  8310                           ;MotorDrive.c: 495: }
  8311  001804  0012               	return	
  8312  001806                     l437:
  8313                           
  8314                           ;MotorDrive.c: 496: else if(PORTBbits.RB5 == 0)
  8315  001806  BA81               	btfsc	3969,5,c	;volatile
  8316  001808  0012               	return	
  8317                           
  8318                           ;MotorDrive.c: 497: {
  8319                           ;MotorDrive.c: 499: hg_op.drops_sb = 0;
  8320  00180A  0E00               	movlw	0
  8321  00180C  0100               	movlb	0	; () banked
  8322  00180E  6FA0               	movwf	(_hg_op+32)& (0+255),b
  8323                           
  8324                           ;MotorDrive.c: 500: hg_op.drops_push =0;
  8325  001810  0E00               	movlw	0
  8326  001812  0100               	movlb	0	; () banked
  8327  001814  6FA1               	movwf	(_hg_op+33)& (0+255),b
  8328                           
  8329                           ;MotorDrive.c: 501: hg_op.drops_sa = 1;
  8330  001816  0E01               	movlw	1
  8331  001818  0100               	movlb	0	; () banked
  8332  00181A  6F9F               	movwf	(_hg_op+31)& (0+255),b
  8333                           
  8334                           ; BSR set to: 0
  8335                           
  8336                           ; BSR set to: 0
  8337                           
  8338                           ; BSR set to: 0
  8339                           
  8340                           ; BSR set to: 0
  8341                           
  8342                           ; BSR set to: 0
  8343  00181C  0012               	return	
  8344  00181E                     __end_of_drops_routine:
  8345                           	opt stack 0
  8346                           tblptru	equ	0xFF8
  8347                           tblptrh	equ	0xFF7
  8348                           tblptrl	equ	0xFF6
  8349                           tablat	equ	0xFF5
  8350                           prodh	equ	0xFF4
  8351                           prodl	equ	0xFF3
  8352                           intcon	equ	0xFF2
  8353                           intcon3	equ	0xFF0
  8354                           postinc0	equ	0xFEE
  8355                           wreg	equ	0xFE8
  8356                           postdec1	equ	0xFE5
  8357                           fsr1h	equ	0xFE2
  8358                           fsr1l	equ	0xFE1
  8359                           status	equ	0xFD8
  8360                           
  8361 ;; *************** function _check_ui_status *****************
  8362 ;; Defined at:
  8363 ;;		line 1633 in file "../gui.c"
  8364 ;; Parameters:    Size  Location     Type
  8365 ;;		None
  8366 ;; Auto vars:     Size  Location     Type
  8367 ;;		None
  8368 ;; Return value:  Size  Location     Type
  8369 ;;                  1    wreg      void 
  8370 ;; Registers used:
  8371 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8372 ;; Tracked objects:
  8373 ;;		On entry : 0/0
  8374 ;;		On exit  : 0/0
  8375 ;;		Unchanged: 0/0
  8376 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8377 ;;      Params:         0       0       0       0       0       0       0
  8378 ;;      Locals:         0       0       0       0       0       0       0
  8379 ;;      Temps:          0       0       0       0       0       0       0
  8380 ;;      Totals:         0       0       0       0       0       0       0
  8381 ;;Total ram usage:        0 bytes
  8382 ;; Hardware stack levels used:    1
  8383 ;; Hardware stack levels required when called:    7
  8384 ;; This function calls:
  8385 ;;		_display_cmode
  8386 ;;		_display_drop
  8387 ;;		_display_drops
  8388 ;;		_display_frame_abc
  8389 ;;		_display_frame_de
  8390 ;;		_display_frame_fghi
  8391 ;;		_display_num
  8392 ;; This function is called by:
  8393 ;;		_main
  8394 ;; This function uses a non-reentrant model
  8395 ;;
  8396                           
  8397                           	psect	text15
  8398  001B3E                     __ptext15:
  8399                           	opt stack 0
  8400  001B3E                     _check_ui_status:
  8401                           	opt stack 23
  8402                           
  8403                           ;gui.c: 1635: static uint32_t cnt_ui_check =0;
  8404                           ;gui.c: 1636: if(menu[0].mode != 0)
  8405                           
  8406                           ;incstack = 0
  8407  001B3E  5002               	movf	_menu+1,w,c
  8408  001B40  B4D8               	btfsc	status,2,c
  8409  001B42  D04D               	goto	l14909
  8410                           
  8411                           ;gui.c: 1637: {
  8412                           ;gui.c: 1638: cnt_ui_check ++;
  8413  001B44  0E01               	movlw	1
  8414  001B46  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8415  001B48  0E00               	movlw	0
  8416  001B4A  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8417  001B4C  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8418  001B4E  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8419                           
  8420                           ;gui.c: 1640: if(cnt_ui_check > 200000)
  8421  001B50  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8422  001B52  E108               	bnz	u18750
  8423  001B54  0E41               	movlw	65
  8424  001B56  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8425  001B58  0E0D               	movlw	13
  8426  001B5A  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8427  001B5C  0E03               	movlw	3
  8428  001B5E  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8429  001B60  A0D8               	btfss	status,0,c
  8430  001B62  0012               	return	
  8431  001B64                     u18750:
  8432                           
  8433                           ;gui.c: 1641: {
  8434                           ;gui.c: 1642: display_frame_abc(1,71, 0);
  8435  001B64  0E47               	movlw	71
  8436  001B66  0101               	movlb	1	; () banked
  8437  001B68  6F31               	movwf	display_frame_abc@x& (0+255),b
  8438  001B6A  0E00               	movlw	0
  8439  001B6C  0101               	movlb	1	; () banked
  8440  001B6E  6F32               	movwf	display_frame_abc@mode& (0+255),b
  8441  001B70  0E01               	movlw	1
  8442  001B72  EC5D  F016         	call	_display_frame_abc
  8443                           
  8444                           ;gui.c: 1643: if(menu[0].value == 0x00)
  8445  001B76  5005               	movf	_menu+4,w,c
  8446  001B78  A4D8               	btfss	status,2,c
  8447  001B7A  D00A               	goto	l14895
  8448                           
  8449                           ;gui.c: 1644: {
  8450                           ;gui.c: 1645: display_cmode(1,(71 + 2),0);
  8451  001B7C  0E49               	movlw	73
  8452  001B7E  0101               	movlb	1	; () banked
  8453  001B80  6F31               	movwf	display_cmode@x& (0+255),b
  8454  001B82  0E00               	movlw	0
  8455  001B84  0101               	movlb	1	; () banked
  8456  001B86  6F32               	movwf	display_cmode@mode& (0+255),b
  8457  001B88  0E01               	movlw	1
  8458  001B8A  EC15  F01F         	call	_display_cmode
  8459                           
  8460                           ;gui.c: 1646: }
  8461  001B8E  D01A               	goto	l14903
  8462  001B90                     l14895:
  8463                           
  8464                           ;gui.c: 1647: else if(menu[0].value == 0x02)
  8465  001B90  0E02               	movlw	2
  8466  001B92  1805               	xorwf	_menu+4,w,c
  8467  001B94  A4D8               	btfss	status,2,c
  8468  001B96  D00A               	goto	l14899
  8469                           
  8470                           ;gui.c: 1648: {
  8471                           ;gui.c: 1649: display_drop(1,(71 + 2),0);
  8472  001B98  0E49               	movlw	73
  8473  001B9A  0101               	movlb	1	; () banked
  8474  001B9C  6F31               	movwf	display_drop@x& (0+255),b
  8475  001B9E  0E00               	movlw	0
  8476  001BA0  0101               	movlb	1	; () banked
  8477  001BA2  6F32               	movwf	display_drop@mode& (0+255),b
  8478  001BA4  0E01               	movlw	1
  8479  001BA6  EC55  F01E         	call	_display_drop
  8480                           
  8481                           ;gui.c: 1650: }
  8482  001BAA  D00C               	goto	l14903
  8483  001BAC                     l14899:
  8484                           
  8485                           ;gui.c: 1651: else if(menu[0].value == 0x01)
  8486  001BAC  0405               	decf	_menu+4,w,c
  8487  001BAE  A4D8               	btfss	status,2,c
  8488  001BB0  D009               	goto	l14903
  8489                           
  8490                           ;gui.c: 1652: {
  8491                           ;gui.c: 1653: display_drops(1,(71 + 2),0);
  8492  001BB2  0E49               	movlw	73
  8493  001BB4  0101               	movlb	1	; () banked
  8494  001BB6  6F31               	movwf	display_drops@x& (0+255),b
  8495  001BB8  0E00               	movlw	0
  8496  001BBA  0101               	movlb	1	; () banked
  8497  001BBC  6F32               	movwf	display_drops@mode& (0+255),b
  8498  001BBE  0E01               	movlw	1
  8499  001BC0  EC95  F01D         	call	_display_drops
  8500  001BC4                     l14903:
  8501                           
  8502                           ;gui.c: 1654: }
  8503                           ;gui.c: 1655: menu[0].mode = 0;
  8504  001BC4  0E00               	movlw	0
  8505  001BC6  6E02               	movwf	_menu+1,c
  8506                           
  8507                           ;gui.c: 1656: cnt_ui_check =0;
  8508  001BC8  0E00               	movlw	0
  8509  001BCA  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8510  001BCC  0E00               	movlw	0
  8511  001BCE  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8512  001BD0  0E00               	movlw	0
  8513  001BD2  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8514  001BD4  0E00               	movlw	0
  8515  001BD6  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8516                           
  8517                           ;gui.c: 1658: work_mode = menu[0].value ;
  8518  001BD8  C005  F04D         	movff	_menu+4,_work_mode
  8519                           
  8520                           ;gui.c: 1661: }
  8521                           ;gui.c: 1662: }
  8522  001BDC  0012               	return	
  8523  001BDE                     l14909:
  8524                           
  8525                           ;gui.c: 1663: else if(menu[1].mode != 0)
  8526  001BDE  500A               	movf	_menu+9,w,c
  8527  001BE0  B4D8               	btfsc	status,2,c
  8528  001BE2  D003               	goto	l14913
  8529                           
  8530                           ;gui.c: 1664: {
  8531                           ;gui.c: 1665: menu[1].mode = 0;
  8532  001BE4  0E00               	movlw	0
  8533  001BE6  6E0A               	movwf	_menu+9,c
  8534                           
  8535                           ;gui.c: 1666: }
  8536  001BE8  0012               	return	
  8537  001BEA                     l14913:
  8538                           
  8539                           ;gui.c: 1667: else if(menu[2].mode != 0)
  8540  001BEA  5012               	movf	_menu+17,w,c
  8541  001BEC  B4D8               	btfsc	status,2,c
  8542  001BEE  D003               	goto	l14917
  8543                           
  8544                           ;gui.c: 1668: {
  8545                           ;gui.c: 1669: menu[2].mode = 0;
  8546  001BF0  0E00               	movlw	0
  8547  001BF2  6E12               	movwf	_menu+17,c
  8548                           
  8549                           ;gui.c: 1670: }
  8550  001BF4  0012               	return	
  8551  001BF6                     l14917:
  8552                           
  8553                           ;gui.c: 1671: else if(menu[3].mode != 0)
  8554  001BF6  501A               	movf	_menu+25,w,c
  8555  001BF8  B4D8               	btfsc	status,2,c
  8556  001BFA  D03E               	goto	l14935
  8557                           
  8558                           ;gui.c: 1672: {
  8559                           ;gui.c: 1674: cnt_ui_check ++;
  8560  001BFC  0E01               	movlw	1
  8561  001BFE  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8562  001C00  0E00               	movlw	0
  8563  001C02  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8564  001C04  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8565  001C06  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8566                           
  8567                           ;gui.c: 1675: if(cnt_ui_check > 200000)
  8568  001C08  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8569  001C0A  E108               	bnz	u18820
  8570  001C0C  0E41               	movlw	65
  8571  001C0E  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8572  001C10  0E0D               	movlw	13
  8573  001C12  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8574  001C14  0E03               	movlw	3
  8575  001C16  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8576  001C18  A0D8               	btfss	status,0,c
  8577  001C1A  0012               	return	
  8578  001C1C                     u18820:
  8579                           
  8580                           ;gui.c: 1676: {
  8581                           ;gui.c: 1678: display_frame_de(1,49, 0);
  8582  001C1C  0E31               	movlw	49
  8583  001C1E  0101               	movlb	1	; () banked
  8584  001C20  6F31               	movwf	display_frame_de@x& (0+255),b
  8585  001C22  0E00               	movlw	0
  8586  001C24  0101               	movlb	1	; () banked
  8587  001C26  6F32               	movwf	display_frame_de@mode& (0+255),b
  8588  001C28  0E01               	movlw	1
  8589  001C2A  EC09  F000         	call	_display_frame_de
  8590                           
  8591                           ;gui.c: 1679: display_num(0,(49 + 14), 0|menu[3].value);
  8592  001C2E  0E3F               	movlw	63
  8593  001C30  0101               	movlb	1	; () banked
  8594  001C32  6F31               	movwf	display_num@x& (0+255),b
  8595  001C34  C01D  F132         	movff	_menu+28,display_num@mode
  8596  001C38  0E00               	movlw	0
  8597  001C3A  ECF0  F006         	call	_display_num
  8598                           
  8599                           ;gui.c: 1683: if(menu[3].value == 4)
  8600  001C3E  0E04               	movlw	4
  8601  001C40  181D               	xorwf	_menu+28,w,c
  8602  001C42  A4D8               	btfss	status,2,c
  8603  001C44  D002               	goto	l14927
  8604                           
  8605                           ;gui.c: 1684: {
  8606                           ;gui.c: 1685: menu[3].parameter =0;
  8607  001C46  0E00               	movlw	0
  8608  001C48  D00B               	goto	L5
  8609  001C4A                     l14927:
  8610                           
  8611                           ;gui.c: 1687: else if(menu[3].value == 6)
  8612  001C4A  0E06               	movlw	6
  8613  001C4C  181D               	xorwf	_menu+28,w,c
  8614  001C4E  A4D8               	btfss	status,2,c
  8615  001C50  D002               	goto	l14931
  8616                           
  8617                           ;gui.c: 1688: {
  8618                           ;gui.c: 1689: menu[3].parameter =1;
  8619  001C52  0E01               	movlw	1
  8620  001C54  D005               	goto	L5
  8621  001C56                     l14931:
  8622                           
  8623                           ;gui.c: 1691: else if(menu[3].value == 13)
  8624  001C56  0E0D               	movlw	13
  8625  001C58  181D               	xorwf	_menu+28,w,c
  8626  001C5A  A4D8               	btfss	status,2,c
  8627  001C5C  D002               	goto	l1922
  8628                           
  8629                           ;gui.c: 1692: {
  8630                           ;gui.c: 1693: menu[3].parameter =2;
  8631  001C5E  0E02               	movlw	2
  8632  001C60                     L5:
  8633  001C60  6E1E               	movwf	_menu+29,c
  8634  001C62                     l1922:
  8635                           
  8636                           ;gui.c: 1694: }
  8637                           ;gui.c: 1696: menu[3].mode = 0;
  8638  001C62  0E00               	movlw	0
  8639  001C64  6E1A               	movwf	_menu+25,c
  8640                           
  8641                           ;gui.c: 1697: cnt_ui_check =0;
  8642  001C66  0E00               	movlw	0
  8643  001C68  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8644  001C6A  0E00               	movlw	0
  8645  001C6C  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8646  001C6E  0E00               	movlw	0
  8647  001C70  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8648  001C72  0E00               	movlw	0
  8649  001C74  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8650                           
  8651                           ;gui.c: 1699: }
  8652                           ;gui.c: 1700: }
  8653  001C76  0012               	return	
  8654  001C78                     l14935:
  8655                           
  8656                           ;gui.c: 1701: else if(menu[4].mode != 0)
  8657  001C78  5022               	movf	_menu+33,w,c
  8658  001C7A  B4D8               	btfsc	status,2,c
  8659  001C7C  D03C               	goto	l14953
  8660                           
  8661                           ;gui.c: 1702: {
  8662                           ;gui.c: 1704: cnt_ui_check ++;
  8663  001C7E  0E01               	movlw	1
  8664  001C80  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8665  001C82  0E00               	movlw	0
  8666  001C84  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8667  001C86  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8668  001C88  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8669                           
  8670                           ;gui.c: 1705: if(cnt_ui_check > 200000)
  8671  001C8A  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8672  001C8C  E108               	bnz	u18870
  8673  001C8E  0E41               	movlw	65
  8674  001C90  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8675  001C92  0E0D               	movlw	13
  8676  001C94  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8677  001C96  0E03               	movlw	3
  8678  001C98  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8679  001C9A  A0D8               	btfss	status,0,c
  8680  001C9C  0012               	return	
  8681  001C9E                     u18870:
  8682                           
  8683                           ;gui.c: 1706: {
  8684                           ;gui.c: 1707: display_frame_de(2,0, 0);
  8685  001C9E  0E00               	movlw	0
  8686  001CA0  0101               	movlb	1	; () banked
  8687  001CA2  6F31               	movwf	display_frame_de@x& (0+255),b
  8688  001CA4  0E00               	movlw	0
  8689  001CA6  0101               	movlb	1	; () banked
  8690  001CA8  6F32               	movwf	display_frame_de@mode& (0+255),b
  8691  001CAA  0E02               	movlw	2
  8692  001CAC  EC09  F000         	call	_display_frame_de
  8693                           
  8694                           ;gui.c: 1708: display_num(0,(0 + 14), 0|menu[4].value);
  8695  001CB0  0E0E               	movlw	14
  8696  001CB2  0101               	movlb	1	; () banked
  8697  001CB4  6F31               	movwf	display_num@x& (0+255),b
  8698  001CB6  C025  F132         	movff	_menu+36,display_num@mode
  8699  001CBA  0E00               	movlw	0
  8700  001CBC  ECF0  F006         	call	_display_num
  8701                           
  8702                           ;gui.c: 1710: if(menu[4].value == 1)
  8703  001CC0  0425               	decf	_menu+36,w,c
  8704  001CC2  A4D8               	btfss	status,2,c
  8705  001CC4  D002               	goto	l14945
  8706                           
  8707                           ;gui.c: 1711: {
  8708                           ;gui.c: 1712: menu[4].parameter =0;
  8709  001CC6  0E00               	movlw	0
  8710  001CC8  D00A               	goto	L7
  8711  001CCA                     l14945:
  8712                           
  8713                           ;gui.c: 1714: else if(menu[4].value == 2)
  8714  001CCA  0E02               	movlw	2
  8715  001CCC  1825               	xorwf	_menu+36,w,c
  8716  001CCE  A4D8               	btfss	status,2,c
  8717  001CD0  D002               	goto	l14949
  8718                           
  8719                           ;gui.c: 1715: {
  8720                           ;gui.c: 1716: menu[4].parameter =1;
  8721  001CD2  0E01               	movlw	1
  8722  001CD4  D004               	goto	L7
  8723  001CD6                     l14949:
  8724                           
  8725                           ;gui.c: 1718: else if(menu[4].value == 0)
  8726  001CD6  5025               	movf	_menu+36,w,c
  8727  001CD8  A4D8               	btfss	status,2,c
  8728  001CDA  D002               	goto	l1930
  8729                           
  8730                           ;gui.c: 1719: {
  8731                           ;gui.c: 1720: menu[4].parameter =2;
  8732  001CDC  0E02               	movlw	2
  8733  001CDE                     L7:
  8734  001CDE  6E26               	movwf	_menu+37,c
  8735  001CE0                     l1930:
  8736                           
  8737                           ;gui.c: 1721: }
  8738                           ;gui.c: 1723: menu[4].mode = 0;
  8739  001CE0  0E00               	movlw	0
  8740  001CE2  6E22               	movwf	_menu+33,c
  8741                           
  8742                           ;gui.c: 1724: cnt_ui_check =0;
  8743  001CE4  0E00               	movlw	0
  8744  001CE6  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8745  001CE8  0E00               	movlw	0
  8746  001CEA  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8747  001CEC  0E00               	movlw	0
  8748  001CEE  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8749  001CF0  0E00               	movlw	0
  8750  001CF2  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8751                           
  8752                           ;gui.c: 1725: }
  8753                           ;gui.c: 1726: }
  8754  001CF4  0012               	return	
  8755  001CF6                     l14953:
  8756                           
  8757                           ;gui.c: 1727: else if(menu[5].mode != 0)
  8758  001CF6  502A               	movf	_menu+41,w,c
  8759  001CF8  B4D8               	btfsc	status,2,c
  8760  001CFA  D03D               	goto	l14971
  8761                           
  8762                           ;gui.c: 1728: {
  8763                           ;gui.c: 1730: cnt_ui_check ++;
  8764  001CFC  0E01               	movlw	1
  8765  001CFE  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8766  001D00  0E00               	movlw	0
  8767  001D02  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8768  001D04  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8769  001D06  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8770                           
  8771                           ;gui.c: 1731: if(cnt_ui_check > 200000)
  8772  001D08  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8773  001D0A  E108               	bnz	u18920
  8774  001D0C  0E41               	movlw	65
  8775  001D0E  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8776  001D10  0E0D               	movlw	13
  8777  001D12  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8778  001D14  0E03               	movlw	3
  8779  001D16  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8780  001D18  A0D8               	btfss	status,0,c
  8781  001D1A  0012               	return	
  8782  001D1C                     u18920:
  8783                           
  8784                           ;gui.c: 1732: {
  8785                           ;gui.c: 1733: display_frame_fghi(1,49, 0);
  8786  001D1C  0E31               	movlw	49
  8787  001D1E  0101               	movlb	1	; () banked
  8788  001D20  6F31               	movwf	display_frame_fghi@x& (0+255),b
  8789  001D22  0E00               	movlw	0
  8790  001D24  0101               	movlb	1	; () banked
  8791  001D26  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  8792  001D28  0E01               	movlw	1
  8793  001D2A  ECCD  F008         	call	_display_frame_fghi
  8794                           
  8795                           ;gui.c: 1734: display_num(3,(49 + 14), 0|menu[5].value);
  8796  001D2E  0E3F               	movlw	63
  8797  001D30  0101               	movlb	1	; () banked
  8798  001D32  6F31               	movwf	display_num@x& (0+255),b
  8799  001D34  C02D  F132         	movff	_menu+44,display_num@mode
  8800  001D38  0E03               	movlw	3
  8801  001D3A  ECF0  F006         	call	_display_num
  8802                           
  8803                           ;gui.c: 1737: if(menu[5].value == 1)
  8804  001D3E  042D               	decf	_menu+44,w,c
  8805  001D40  A4D8               	btfss	status,2,c
  8806  001D42  D002               	goto	l14963
  8807                           
  8808                           ;gui.c: 1738: {
  8809                           ;gui.c: 1739: menu[5].parameter =0;
  8810  001D44  0E00               	movlw	0
  8811  001D46  D00B               	goto	L9
  8812  001D48                     l14963:
  8813                           
  8814                           ;gui.c: 1741: else if(menu[5].value == 106)
  8815  001D48  0E6A               	movlw	106
  8816  001D4A  182D               	xorwf	_menu+44,w,c
  8817  001D4C  A4D8               	btfss	status,2,c
  8818  001D4E  D002               	goto	l14967
  8819                           
  8820                           ;gui.c: 1742: {
  8821                           ;gui.c: 1743: menu[5].parameter =1;
  8822  001D50  0E01               	movlw	1
  8823  001D52  D005               	goto	L9
  8824  001D54                     l14967:
  8825                           
  8826                           ;gui.c: 1745: else if(menu[5].value == 5)
  8827  001D54  0E05               	movlw	5
  8828  001D56  182D               	xorwf	_menu+44,w,c
  8829  001D58  A4D8               	btfss	status,2,c
  8830  001D5A  D002               	goto	l1938
  8831                           
  8832                           ;gui.c: 1746: {
  8833                           ;gui.c: 1747: menu[5].parameter =2;
  8834  001D5C  0E02               	movlw	2
  8835  001D5E                     L9:
  8836  001D5E  6E2E               	movwf	_menu+45,c
  8837  001D60                     l1938:
  8838                           
  8839                           ;gui.c: 1748: }
  8840                           ;gui.c: 1753: menu[5].mode = 0;
  8841  001D60  0E00               	movlw	0
  8842  001D62  6E2A               	movwf	_menu+41,c
  8843                           
  8844                           ;gui.c: 1754: cnt_ui_check =0;
  8845  001D64  0E00               	movlw	0
  8846  001D66  6E41               	movwf	check_ui_status@cnt_ui_check,c
  8847  001D68  0E00               	movlw	0
  8848  001D6A  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  8849  001D6C  0E00               	movlw	0
  8850  001D6E  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  8851  001D70  0E00               	movlw	0
  8852  001D72  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  8853                           
  8854                           ;gui.c: 1755: }
  8855                           ;gui.c: 1756: }
  8856  001D74  0012               	return	
  8857  001D76                     l14971:
  8858                           
  8859                           ;gui.c: 1757: else if(menu[6].mode != 0)
  8860  001D76  5032               	movf	_menu+49,w,c
  8861  001D78  B4D8               	btfsc	status,2,c
  8862  001D7A  D065               	goto	l15009
  8863                           
  8864                           ;gui.c: 1758: {
  8865                           ;gui.c: 1759: cnt_ui_check ++;
  8866  001D7C  0E01               	movlw	1
  8867  001D7E  2641               	addwf	check_ui_status@cnt_ui_check,f,c
  8868  001D80  0E00               	movlw	0
  8869  001D82  2242               	addwfc	check_ui_status@cnt_ui_check+1,f,c
  8870  001D84  2243               	addwfc	check_ui_status@cnt_ui_check+2,f,c
  8871  001D86  2244               	addwfc	check_ui_status@cnt_ui_check+3,f,c
  8872                           
  8873                           ;gui.c: 1760: if(cnt_ui_check > 200000)
  8874  001D88  5044               	movf	check_ui_status@cnt_ui_check+3,w,c
  8875  001D8A  E108               	bnz	u18970
  8876  001D8C  0E41               	movlw	65
  8877  001D8E  5C41               	subwf	check_ui_status@cnt_ui_check,w,c
  8878  001D90  0E0D               	movlw	13
  8879  001D92  5842               	subwfb	check_ui_status@cnt_ui_check+1,w,c
  8880  001D94  0E03               	movlw	3
  8881  001D96  5843               	subwfb	check_ui_status@cnt_ui_check+2,w,c
  8882  001D98  A0D8               	btfss	status,0,c
  8883  001D9A  0012               	return	
  8884  001D9C                     u18970:
  8885                           
  8886                           ;gui.c: 1761: {
  8887                           ;gui.c: 1763: if(hg_op.cur_working_mode == 0x00)
  8888  001D9C  0100               	movlb	0	; () banked
  8889  001D9E  5181               	movf	(_hg_op+1)& (0+255),w,b
  8890  001DA0  A4D8               	btfss	status,2,c
  8891  001DA2  D012               	goto	l14979
  8892                           
  8893                           ; BSR set to: 0
  8894                           ;gui.c: 1764: {
  8895                           ;gui.c: 1765: display_frame_fghi(2,0, 0);
  8896  001DA4  0E00               	movlw	0
  8897  001DA6  0101               	movlb	1	; () banked
  8898  001DA8  6F31               	movwf	display_frame_fghi@x& (0+255),b
  8899  001DAA  0E00               	movlw	0
  8900  001DAC  0101               	movlb	1	; () banked
  8901  001DAE  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  8902  001DB0  0E02               	movlw	2
  8903  001DB2  ECCD  F008         	call	_display_frame_fghi
  8904                           
  8905                           ;gui.c: 1766: display_num(3,(0 + 14), 0|menu[6].value);
  8906  001DB6  0E0E               	movlw	14
  8907  001DB8  0101               	movlb	1	; () banked
  8908  001DBA  6F31               	movwf	display_num@x& (0+255),b
  8909  001DBC  C035  F132         	movff	_menu+52,display_num@mode
  8910  001DC0  0E03               	movlw	3
  8911  001DC2  ECF0  F006         	call	_display_num
  8912                           
  8913                           ;gui.c: 1767: }
  8914  001DC6  D034               	goto	l1946
  8915  001DC8                     l14979:
  8916                           
  8917                           ;gui.c: 1768: else if(hg_op.cur_working_mode == 0x01)
  8918  001DC8  0100               	movlb	0	; () banked
  8919  001DCA  0581               	decf	(_hg_op+1)& (0+255),w,b
  8920  001DCC  A4D8               	btfss	status,2,c
  8921  001DCE  D01D               	goto	l14995
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;gui.c: 1769: {
  8925                           ;gui.c: 1770: display_frame_fghi(3,0, 0);
  8926  001DD0  0E00               	movlw	0
  8927  001DD2  0101               	movlb	1	; () banked
  8928  001DD4  6F31               	movwf	display_frame_fghi@x& (0+255),b
  8929  001DD6  0E00               	movlw	0
  8930  001DD8  0101               	movlb	1	; () banked
  8931  001DDA  6F32               	movwf	display_frame_fghi@mode& (0+255),b
  8932  001DDC  0E03               	movlw	3
  8933  001DDE  ECCD  F008         	call	_display_frame_fghi
  8934                           
  8935                           ;gui.c: 1771: display_num(3,(0 + 17), 0|menu[6].value);
  8936  001DE2  0E11               	movlw	17
  8937  001DE4  0101               	movlb	1	; () banked
  8938  001DE6  6F31               	movwf	display_num@x& (0+255),b
  8939  001DE8  C035  F132         	movff	_menu+52,display_num@mode
  8940  001DEC  0E03               	movlw	3
  8941  001DEE  ECF0  F006         	call	_display_num
  8942                           
  8943                           ;gui.c: 1773: if(menu[6].value == 103)
  8944  001DF2  0E67               	movlw	103
  8945  001DF4  1835               	xorwf	_menu+52,w,c
  8946  001DF6  A4D8               	btfss	status,2,c
  8947  001DF8  D002               	goto	l14987
  8948  001DFA                     l14985:
  8949                           
  8950                           ;gui.c: 1774: {
  8951                           ;gui.c: 1775: menu[6].parameter =0;
  8952  001DFA  0E00               	movlw	0
  8953  001DFC  D018               	goto	L14
  8954  001DFE                     l14987:
  8955                           
  8956                           ;gui.c: 1777: else if(menu[6].value == 102)
  8957  001DFE  0E66               	movlw	102
  8958  001E00  1835               	xorwf	_menu+52,w,c
  8959  001E02  A4D8               	btfss	status,2,c
  8960  001E04  D00F               	goto	l15005
  8961  001E06                     l14989:
  8962                           
  8963                           ;gui.c: 1778: {
  8964                           ;gui.c: 1779: menu[6].parameter =1;
  8965  001E06  0E01               	movlw	1
  8966  001E08  D012               	goto	L14
  8967  001E0A                     l14995:
  8968                           
  8969                           ;gui.c: 1788: else if(hg_op.cur_working_mode == 0x02)
  8970  001E0A  0E02               	movlw	2
  8971  001E0C  0100               	movlb	0	; () banked
  8972  001E0E  1981               	xorwf	(_hg_op+1)& (0+255),w,b
  8973  001E10  A4D8               	btfss	status,2,c
  8974  001E12  D00E               	goto	l1946
  8975                           
  8976                           ; BSR set to: 0
  8977                           ;gui.c: 1789: {
  8978                           ;gui.c: 1791: if(menu[6].value == 103)
  8979  001E14  0E67               	movlw	103
  8980  001E16  1835               	xorwf	_menu+52,w,c
  8981  001E18  B4D8               	btfsc	status,2,c
  8982  001E1A  D7EF               	goto	l14985
  8983                           
  8984                           ; BSR set to: 0
  8985                           ;gui.c: 1795: else if(menu[6].value == 102)
  8986                           
  8987                           ; BSR set to: 0
  8988                           
  8989                           ;gui.c: 1794: }
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;gui.c: 1792: {
  8993                           ;gui.c: 1793: menu[6].parameter =0;
  8994  001E1C  0E66               	movlw	102
  8995  001E1E  1835               	xorwf	_menu+52,w,c
  8996  001E20  B4D8               	btfsc	status,2,c
  8997  001E22  D7F1               	goto	l14989
  8998  001E24                     l15005:
  8999                           
  9000                           ; BSR set to: 0
  9001                           ;gui.c: 1799: else if(menu[6].value == 101)
  9002  001E24  0E65               	movlw	101
  9003  001E26  1835               	xorwf	_menu+52,w,c
  9004  001E28  A4D8               	btfss	status,2,c
  9005  001E2A  D002               	goto	l1946
  9006                           
  9007                           ; BSR set to: 0
  9008                           ;gui.c: 1800: {
  9009                           ;gui.c: 1801: menu[6].parameter =2;
  9010  001E2C  0E02               	movlw	2
  9011  001E2E                     L14:
  9012  001E2E  6E36               	movwf	_menu+53,c
  9013  001E30                     l1946:
  9014                           
  9015                           ;gui.c: 1802: }
  9016                           ;gui.c: 1806: }
  9017                           ;gui.c: 1808: menu[6].mode = 0;
  9018  001E30  0E00               	movlw	0
  9019  001E32  6E32               	movwf	_menu+49,c
  9020                           
  9021                           ;gui.c: 1809: cnt_ui_check =0;
  9022  001E34  0E00               	movlw	0
  9023  001E36  6E41               	movwf	check_ui_status@cnt_ui_check,c
  9024  001E38  0E00               	movlw	0
  9025  001E3A  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  9026  001E3C  0E00               	movlw	0
  9027  001E3E  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  9028  001E40  0E00               	movlw	0
  9029  001E42  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  9030                           
  9031                           ;gui.c: 1810: }
  9032                           ;gui.c: 1811: }
  9033  001E44  0012               	return	
  9034  001E46                     l15009:
  9035                           
  9036                           ;gui.c: 1812: else
  9037                           ;gui.c: 1813: {
  9038                           ;gui.c: 1814: cnt_ui_check =0;
  9039  001E46  0E00               	movlw	0
  9040  001E48  6E41               	movwf	check_ui_status@cnt_ui_check,c
  9041  001E4A  0E00               	movlw	0
  9042  001E4C  6E42               	movwf	check_ui_status@cnt_ui_check+1,c
  9043  001E4E  0E00               	movlw	0
  9044  001E50  6E43               	movwf	check_ui_status@cnt_ui_check+2,c
  9045  001E52  0E00               	movlw	0
  9046  001E54  6E44               	movwf	check_ui_status@cnt_ui_check+3,c
  9047  001E56  0012               	return	
  9048  001E58                     __end_of_check_ui_status:
  9049                           	opt stack 0
  9050                           tblptru	equ	0xFF8
  9051                           tblptrh	equ	0xFF7
  9052                           tblptrl	equ	0xFF6
  9053                           tablat	equ	0xFF5
  9054                           prodh	equ	0xFF4
  9055                           prodl	equ	0xFF3
  9056                           intcon	equ	0xFF2
  9057                           intcon3	equ	0xFF0
  9058                           postinc0	equ	0xFEE
  9059                           wreg	equ	0xFE8
  9060                           postdec1	equ	0xFE5
  9061                           fsr1h	equ	0xFE2
  9062                           fsr1l	equ	0xFE1
  9063                           status	equ	0xFD8
  9064                           
  9065 ;; *************** function _check_ui_blink *****************
  9066 ;; Defined at:
  9067 ;;		line 2238 in file "../gui.c"
  9068 ;; Parameters:    Size  Location     Type
  9069 ;;		None
  9070 ;; Auto vars:     Size  Location     Type
  9071 ;;		None
  9072 ;; Return value:  Size  Location     Type
  9073 ;;                  1    wreg      void 
  9074 ;; Registers used:
  9075 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9076 ;; Tracked objects:
  9077 ;;		On entry : 0/0
  9078 ;;		On exit  : 0/0
  9079 ;;		Unchanged: 0/0
  9080 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9081 ;;      Params:         0       0       0       0       0       0       0
  9082 ;;      Locals:         0       0       0       0       0       0       0
  9083 ;;      Temps:          0       0       0       0       0       0       0
  9084 ;;      Totals:         0       0       0       0       0       0       0
  9085 ;;Total ram usage:        0 bytes
  9086 ;; Hardware stack levels used:    1
  9087 ;; Hardware stack levels required when called:    8
  9088 ;; This function calls:
  9089 ;;		_blink_mode
  9090 ;; This function is called by:
  9091 ;;		_main
  9092 ;; This function uses a non-reentrant model
  9093 ;;
  9094                           
  9095                           	psect	text16
  9096  004E40                     __ptext16:
  9097                           	opt stack 0
  9098  004E40                     _check_ui_blink:
  9099                           	opt stack 22
  9100                           
  9101                           ;gui.c: 2242: if(flag_blink)
  9102                           
  9103                           ;incstack = 0
  9104  004E40  5050               	movf	_flag_blink,w,c
  9105  004E42  B4D8               	btfsc	status,2,c
  9106  004E44  0012               	return	
  9107                           
  9108                           ;gui.c: 2243: {
  9109                           ;gui.c: 2244: blink_mode();
  9110  004E46  EC0F  F00C         	call	_blink_mode	;wreg free
  9111                           
  9112                           ;gui.c: 2245: flag_blink =0;
  9113  004E4A  0E00               	movlw	0
  9114  004E4C  6E50               	movwf	_flag_blink,c
  9115  004E4E  0012               	return	
  9116  004E50                     __end_of_check_ui_blink:
  9117                           	opt stack 0
  9118                           tblptru	equ	0xFF8
  9119                           tblptrh	equ	0xFF7
  9120                           tblptrl	equ	0xFF6
  9121                           tablat	equ	0xFF5
  9122                           prodh	equ	0xFF4
  9123                           prodl	equ	0xFF3
  9124                           intcon	equ	0xFF2
  9125                           intcon3	equ	0xFF0
  9126                           postinc0	equ	0xFEE
  9127                           wreg	equ	0xFE8
  9128                           postdec1	equ	0xFE5
  9129                           fsr1h	equ	0xFE2
  9130                           fsr1l	equ	0xFE1
  9131                           status	equ	0xFD8
  9132                           
  9133 ;; *************** function _blink_mode *****************
  9134 ;; Defined at:
  9135 ;;		line 2027 in file "../gui.c"
  9136 ;; Parameters:    Size  Location     Type
  9137 ;;		None
  9138 ;; Auto vars:     Size  Location     Type
  9139 ;;		None
  9140 ;; Return value:  Size  Location     Type
  9141 ;;                  1    wreg      void 
  9142 ;; Registers used:
  9143 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9144 ;; Tracked objects:
  9145 ;;		On entry : 0/0
  9146 ;;		On exit  : 0/0
  9147 ;;		Unchanged: 0/0
  9148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9149 ;;      Params:         0       0       0       0       0       0       0
  9150 ;;      Locals:         0       0       0       0       0       0       0
  9151 ;;      Temps:          0       0       0       0       0       0       0
  9152 ;;      Totals:         0       0       0       0       0       0       0
  9153 ;;Total ram usage:        0 bytes
  9154 ;; Hardware stack levels used:    1
  9155 ;; Hardware stack levels required when called:    7
  9156 ;; This function calls:
  9157 ;;		_display_blank_mode_pa
  9158 ;;		_display_cmode
  9159 ;;		_display_drop
  9160 ;;		_display_drops
  9161 ;;		_display_n_blank
  9162 ;;		_display_num
  9163 ;; This function is called by:
  9164 ;;		_check_ui_blink
  9165 ;; This function uses a non-reentrant model
  9166 ;;
  9167                           
  9168                           	psect	text17
  9169  00181E                     __ptext17:
  9170                           	opt stack 0
  9171  00181E                     _blink_mode:
  9172                           	opt stack 22
  9173                           
  9174                           ;gui.c: 2043: if(menu[0].mode == 3)
  9175                           
  9176                           ;incstack = 0
  9177  00181E  0E03               	movlw	3
  9178  001820  1802               	xorwf	_menu+1,w,c
  9179  001822  A4D8               	btfss	status,2,c
  9180  001824  D03C               	goto	l14223
  9181                           
  9182                           ;gui.c: 2044: {
  9183                           ;gui.c: 2045: if(flip == 1)
  9184  001826  044E               	decf	_flip,w,c
  9185  001828  A4D8               	btfss	status,2,c
  9186  00182A  D00C               	goto	l14209
  9187                           
  9188                           ;gui.c: 2046: {
  9189                           ;gui.c: 2047: display_blank_mode_pa(0,(71 + 2),0x80);
  9190  00182C  0E49               	movlw	73
  9191  00182E  0101               	movlb	1	; () banked
  9192  001830  6F31               	movwf	display_blank_mode_pa@x& (0+255),b
  9193  001832  0E80               	movlw	128
  9194  001834  0101               	movlb	1	; () banked
  9195  001836  6F32               	movwf	display_blank_mode_pa@mode& (0+255),b
  9196  001838  0E00               	movlw	0
  9197  00183A  ECD5  F01C         	call	_display_blank_mode_pa
  9198                           
  9199                           ;gui.c: 2048: flip =0;
  9200  00183E  0E00               	movlw	0
  9201  001840  6E4E               	movwf	_flip,c
  9202                           
  9203                           ;gui.c: 2049: }
  9204  001842  0012               	return	
  9205  001844                     l14209:
  9206                           
  9207                           ;gui.c: 2050: else if(flip == 0)
  9208  001844  504E               	movf	_flip,w,c
  9209  001846  A4D8               	btfss	status,2,c
  9210  001848  0012               	return	
  9211                           
  9212                           ;gui.c: 2051: {
  9213                           ;gui.c: 2052: flip =1;
  9214  00184A  0E01               	movlw	1
  9215  00184C  6E4E               	movwf	_flip,c
  9216                           
  9217                           ;gui.c: 2053: if(work_mode == 0x00)
  9218  00184E  504D               	movf	_work_mode,w,c
  9219  001850  A4D8               	btfss	status,2,c
  9220  001852  D00A               	goto	l14215
  9221                           
  9222                           ;gui.c: 2054: {
  9223                           ;gui.c: 2055: display_cmode(0,(71 + 2), 0x80);
  9224  001854  0E49               	movlw	73
  9225  001856  0101               	movlb	1	; () banked
  9226  001858  6F31               	movwf	display_cmode@x& (0+255),b
  9227  00185A  0E80               	movlw	128
  9228  00185C  0101               	movlb	1	; () banked
  9229  00185E  6F32               	movwf	display_cmode@mode& (0+255),b
  9230  001860  0E00               	movlw	0
  9231  001862  EC15  F01F         	call	_display_cmode
  9232                           
  9233                           ;gui.c: 2056: }
  9234  001866  0012               	return	
  9235  001868                     l14215:
  9236                           
  9237                           ;gui.c: 2057: else if(work_mode == 0x01)
  9238  001868  044D               	decf	_work_mode,w,c
  9239  00186A  A4D8               	btfss	status,2,c
  9240  00186C  D00A               	goto	l14219
  9241                           
  9242                           ;gui.c: 2058: {
  9243                           ;gui.c: 2059: display_drops(0,(71 + 2), 0x80);
  9244  00186E  0E49               	movlw	73
  9245  001870  0101               	movlb	1	; () banked
  9246  001872  6F31               	movwf	display_drops@x& (0+255),b
  9247  001874  0E80               	movlw	128
  9248  001876  0101               	movlb	1	; () banked
  9249  001878  6F32               	movwf	display_drops@mode& (0+255),b
  9250  00187A  0E00               	movlw	0
  9251  00187C  EC95  F01D         	call	_display_drops
  9252                           
  9253                           ;gui.c: 2060: }
  9254  001880  0012               	return	
  9255  001882                     l14219:
  9256                           
  9257                           ;gui.c: 2061: else if(work_mode == 0x02)
  9258  001882  0E02               	movlw	2
  9259  001884  184D               	xorwf	_work_mode,w,c
  9260  001886  A4D8               	btfss	status,2,c
  9261  001888  0012               	return	
  9262                           
  9263                           ;gui.c: 2062: {
  9264                           ;gui.c: 2063: display_drop(0,(71 + 2), 0x80);
  9265  00188A  0E49               	movlw	73
  9266  00188C  0101               	movlb	1	; () banked
  9267  00188E  6F31               	movwf	display_drop@x& (0+255),b
  9268  001890  0E80               	movlw	128
  9269  001892  0101               	movlb	1	; () banked
  9270  001894  6F32               	movwf	display_drop@mode& (0+255),b
  9271  001896  0E00               	movlw	0
  9272  001898  EC55  F01E         	call	_display_drop
  9273                           
  9274                           ;gui.c: 2064: }
  9275                           ;gui.c: 2065: }
  9276                           ;gui.c: 2066: }
  9277  00189C  0012               	return	
  9278  00189E                     l14223:
  9279                           
  9280                           ;gui.c: 2067: else if(menu[3].mode == 3)
  9281  00189E  0E03               	movlw	3
  9282  0018A0  181A               	xorwf	_menu+25,w,c
  9283  0018A2  A4D8               	btfss	status,2,c
  9284  0018A4  D03C               	goto	l14245
  9285                           
  9286                           ;gui.c: 2068: {
  9287                           ;gui.c: 2070: if(flip == 1)
  9288  0018A6  044E               	decf	_flip,w,c
  9289  0018A8  A4D8               	btfss	status,2,c
  9290  0018AA  D00C               	goto	l14231
  9291                           
  9292                           ;gui.c: 2071: {
  9293                           ;gui.c: 2072: display_n_blank(1,(49 + 14), 0x80);
  9294  0018AC  0E3F               	movlw	63
  9295  0018AE  0101               	movlb	1	; () banked
  9296  0018B0  6F31               	movwf	display_n_blank@x& (0+255),b
  9297  0018B2  0E80               	movlw	128
  9298  0018B4  0101               	movlb	1	; () banked
  9299  0018B6  6F32               	movwf	display_n_blank@mode& (0+255),b
  9300  0018B8  0E01               	movlw	1
  9301  0018BA  ECAE  F002         	call	_display_n_blank
  9302                           
  9303                           ;gui.c: 2073: flip =0;
  9304  0018BE  0E00               	movlw	0
  9305  0018C0  6E4E               	movwf	_flip,c
  9306                           
  9307                           ;gui.c: 2074: }
  9308  0018C2  0012               	return	
  9309  0018C4                     l14231:
  9310                           
  9311                           ;gui.c: 2075: else if(flip == 0)
  9312  0018C4  504E               	movf	_flip,w,c
  9313  0018C6  A4D8               	btfss	status,2,c
  9314  0018C8  0012               	return	
  9315                           
  9316                           ;gui.c: 2076: {
  9317                           ;gui.c: 2077: flip =1;
  9318  0018CA  0E01               	movlw	1
  9319  0018CC  6E4E               	movwf	_flip,c
  9320                           
  9321                           ;gui.c: 2078: if(menu[3].parameter == 0)
  9322  0018CE  501E               	movf	_menu+29,w,c
  9323  0018D0  A4D8               	btfss	status,2,c
  9324  0018D2  D00A               	goto	l14237
  9325                           
  9326                           ;gui.c: 2079: {
  9327                           ;gui.c: 2080: display_num(0,(49 + 14), 0x80 | 4);
  9328  0018D4  0E3F               	movlw	63
  9329  0018D6  0101               	movlb	1	; () banked
  9330  0018D8  6F31               	movwf	display_num@x& (0+255),b
  9331  0018DA  0E84               	movlw	132
  9332  0018DC  0101               	movlb	1	; () banked
  9333  0018DE  6F32               	movwf	display_num@mode& (0+255),b
  9334  0018E0  0E00               	movlw	0
  9335  0018E2  ECF0  F006         	call	_display_num
  9336                           
  9337                           ;gui.c: 2081: }
  9338  0018E6  0012               	return	
  9339  0018E8                     l14237:
  9340                           
  9341                           ;gui.c: 2082: else if(menu[3].parameter == 1)
  9342  0018E8  041E               	decf	_menu+29,w,c
  9343  0018EA  A4D8               	btfss	status,2,c
  9344  0018EC  D00A               	goto	l14241
  9345                           
  9346                           ;gui.c: 2083: {
  9347                           ;gui.c: 2084: display_num(0,(49 + 14), 0x80 | 6);
  9348  0018EE  0E3F               	movlw	63
  9349  0018F0  0101               	movlb	1	; () banked
  9350  0018F2  6F31               	movwf	display_num@x& (0+255),b
  9351  0018F4  0E86               	movlw	134
  9352  0018F6  0101               	movlb	1	; () banked
  9353  0018F8  6F32               	movwf	display_num@mode& (0+255),b
  9354  0018FA  0E00               	movlw	0
  9355  0018FC  ECF0  F006         	call	_display_num
  9356                           
  9357                           ;gui.c: 2085: }
  9358  001900  0012               	return	
  9359  001902                     l14241:
  9360                           
  9361                           ;gui.c: 2086: else if(menu[3].parameter == 2)
  9362  001902  0E02               	movlw	2
  9363  001904  181E               	xorwf	_menu+29,w,c
  9364  001906  A4D8               	btfss	status,2,c
  9365  001908  0012               	return	
  9366                           
  9367                           ;gui.c: 2087: {
  9368                           ;gui.c: 2088: display_num(0,(49 + 14), 0x80 | 13);
  9369  00190A  0E3F               	movlw	63
  9370  00190C  0101               	movlb	1	; () banked
  9371  00190E  6F31               	movwf	display_num@x& (0+255),b
  9372  001910  0E8D               	movlw	141
  9373  001912  0101               	movlb	1	; () banked
  9374  001914  6F32               	movwf	display_num@mode& (0+255),b
  9375  001916  0E00               	movlw	0
  9376  001918  ECF0  F006         	call	_display_num
  9377                           
  9378                           ;gui.c: 2089: }
  9379                           ;gui.c: 2091: }
  9380                           ;gui.c: 2092: }
  9381  00191C  0012               	return	
  9382  00191E                     l14245:
  9383                           
  9384                           ;gui.c: 2093: else if(menu[4].mode == 3)
  9385  00191E  0E03               	movlw	3
  9386  001920  1822               	xorwf	_menu+33,w,c
  9387  001922  A4D8               	btfss	status,2,c
  9388  001924  D03C               	goto	l14267
  9389                           
  9390                           ;gui.c: 2094: {
  9391                           ;gui.c: 2096: if(flip == 1)
  9392  001926  044E               	decf	_flip,w,c
  9393  001928  A4D8               	btfss	status,2,c
  9394  00192A  D00C               	goto	l14253
  9395                           
  9396                           ;gui.c: 2097: {
  9397                           ;gui.c: 2098: display_n_blank(1,(0 + 14), 0x80);
  9398  00192C  0E0E               	movlw	14
  9399  00192E  0101               	movlb	1	; () banked
  9400  001930  6F31               	movwf	display_n_blank@x& (0+255),b
  9401  001932  0E80               	movlw	128
  9402  001934  0101               	movlb	1	; () banked
  9403  001936  6F32               	movwf	display_n_blank@mode& (0+255),b
  9404  001938  0E01               	movlw	1
  9405  00193A  ECAE  F002         	call	_display_n_blank
  9406                           
  9407                           ;gui.c: 2099: flip =0;
  9408  00193E  0E00               	movlw	0
  9409  001940  6E4E               	movwf	_flip,c
  9410                           
  9411                           ;gui.c: 2100: }
  9412  001942  0012               	return	
  9413  001944                     l14253:
  9414                           
  9415                           ;gui.c: 2101: else if(flip == 0)
  9416  001944  504E               	movf	_flip,w,c
  9417  001946  A4D8               	btfss	status,2,c
  9418  001948  0012               	return	
  9419                           
  9420                           ;gui.c: 2102: {
  9421                           ;gui.c: 2103: flip =1;
  9422  00194A  0E01               	movlw	1
  9423  00194C  6E4E               	movwf	_flip,c
  9424                           
  9425                           ;gui.c: 2104: if(menu[4].parameter == 0)
  9426  00194E  5026               	movf	_menu+37,w,c
  9427  001950  A4D8               	btfss	status,2,c
  9428  001952  D00A               	goto	l14259
  9429                           
  9430                           ;gui.c: 2105: {
  9431                           ;gui.c: 2106: display_num(0,(0 + 14), 0x80 | 1);
  9432  001954  0E0E               	movlw	14
  9433  001956  0101               	movlb	1	; () banked
  9434  001958  6F31               	movwf	display_num@x& (0+255),b
  9435  00195A  0E81               	movlw	129
  9436  00195C  0101               	movlb	1	; () banked
  9437  00195E  6F32               	movwf	display_num@mode& (0+255),b
  9438  001960  0E00               	movlw	0
  9439  001962  ECF0  F006         	call	_display_num
  9440                           
  9441                           ;gui.c: 2107: }
  9442  001966  0012               	return	
  9443  001968                     l14259:
  9444                           
  9445                           ;gui.c: 2108: else if(menu[4].parameter == 1)
  9446  001968  0426               	decf	_menu+37,w,c
  9447  00196A  A4D8               	btfss	status,2,c
  9448  00196C  D00A               	goto	l14263
  9449                           
  9450                           ;gui.c: 2109: {
  9451                           ;gui.c: 2110: display_num(0,(0 + 14), 0x80 | 2);
  9452  00196E  0E0E               	movlw	14
  9453  001970  0101               	movlb	1	; () banked
  9454  001972  6F31               	movwf	display_num@x& (0+255),b
  9455  001974  0E82               	movlw	130
  9456  001976  0101               	movlb	1	; () banked
  9457  001978  6F32               	movwf	display_num@mode& (0+255),b
  9458  00197A  0E00               	movlw	0
  9459  00197C  ECF0  F006         	call	_display_num
  9460                           
  9461                           ;gui.c: 2111: }
  9462  001980  0012               	return	
  9463  001982                     l14263:
  9464                           
  9465                           ;gui.c: 2112: else if(menu[4].parameter == 2)
  9466  001982  0E02               	movlw	2
  9467  001984  1826               	xorwf	_menu+37,w,c
  9468  001986  A4D8               	btfss	status,2,c
  9469  001988  0012               	return	
  9470                           
  9471                           ;gui.c: 2113: {
  9472                           ;gui.c: 2114: display_num(0,(0 + 14), 0x80 | 0);
  9473  00198A  0E0E               	movlw	14
  9474  00198C  0101               	movlb	1	; () banked
  9475  00198E  6F31               	movwf	display_num@x& (0+255),b
  9476  001990  0E80               	movlw	128
  9477  001992  0101               	movlb	1	; () banked
  9478  001994  6F32               	movwf	display_num@mode& (0+255),b
  9479  001996  0E00               	movlw	0
  9480  001998  ECF0  F006         	call	_display_num
  9481                           
  9482                           ;gui.c: 2115: }
  9483                           ;gui.c: 2117: }
  9484                           ;gui.c: 2118: }
  9485  00199C  0012               	return	
  9486  00199E                     l14267:
  9487                           
  9488                           ;gui.c: 2119: else if(menu[5].mode == 3)
  9489  00199E  0E03               	movlw	3
  9490  0019A0  182A               	xorwf	_menu+41,w,c
  9491  0019A2  A4D8               	btfss	status,2,c
  9492  0019A4  D03C               	goto	l14289
  9493                           
  9494                           ;gui.c: 2120: {
  9495                           ;gui.c: 2122: if(flip == 1)
  9496  0019A6  044E               	decf	_flip,w,c
  9497  0019A8  A4D8               	btfss	status,2,c
  9498  0019AA  D00C               	goto	l14275
  9499                           
  9500                           ;gui.c: 2123: {
  9501                           ;gui.c: 2124: display_n_blank(2,(49 + 14), 0x80);
  9502  0019AC  0E3F               	movlw	63
  9503  0019AE  0101               	movlb	1	; () banked
  9504  0019B0  6F31               	movwf	display_n_blank@x& (0+255),b
  9505  0019B2  0E80               	movlw	128
  9506  0019B4  0101               	movlb	1	; () banked
  9507  0019B6  6F32               	movwf	display_n_blank@mode& (0+255),b
  9508  0019B8  0E02               	movlw	2
  9509  0019BA  ECAE  F002         	call	_display_n_blank
  9510                           
  9511                           ;gui.c: 2125: flip =0;
  9512  0019BE  0E00               	movlw	0
  9513  0019C0  6E4E               	movwf	_flip,c
  9514                           
  9515                           ;gui.c: 2126: }
  9516  0019C2  0012               	return	
  9517  0019C4                     l14275:
  9518                           
  9519                           ;gui.c: 2127: else if(flip == 0)
  9520  0019C4  504E               	movf	_flip,w,c
  9521  0019C6  A4D8               	btfss	status,2,c
  9522  0019C8  0012               	return	
  9523                           
  9524                           ;gui.c: 2128: {
  9525                           ;gui.c: 2129: flip =1;
  9526  0019CA  0E01               	movlw	1
  9527  0019CC  6E4E               	movwf	_flip,c
  9528                           
  9529                           ;gui.c: 2130: if(menu[5].parameter == 0)
  9530  0019CE  502E               	movf	_menu+45,w,c
  9531  0019D0  A4D8               	btfss	status,2,c
  9532  0019D2  D00A               	goto	l14281
  9533                           
  9534                           ;gui.c: 2131: {
  9535                           ;gui.c: 2133: display_num(3,(49 + 14), 0x80 | 1);
  9536  0019D4  0E3F               	movlw	63
  9537  0019D6  0101               	movlb	1	; () banked
  9538  0019D8  6F31               	movwf	display_num@x& (0+255),b
  9539  0019DA  0E81               	movlw	129
  9540  0019DC  0101               	movlb	1	; () banked
  9541  0019DE  6F32               	movwf	display_num@mode& (0+255),b
  9542  0019E0  0E03               	movlw	3
  9543  0019E2  ECF0  F006         	call	_display_num
  9544                           
  9545                           ;gui.c: 2134: }
  9546  0019E6  0012               	return	
  9547  0019E8                     l14281:
  9548                           
  9549                           ;gui.c: 2135: else if(menu[5].parameter == 1)
  9550  0019E8  042E               	decf	_menu+45,w,c
  9551  0019EA  A4D8               	btfss	status,2,c
  9552  0019EC  D00A               	goto	l14285
  9553                           
  9554                           ;gui.c: 2136: {
  9555                           ;gui.c: 2138: display_num(3,(49 + 14), 0x80 | 106);
  9556  0019EE  0E3F               	movlw	63
  9557  0019F0  0101               	movlb	1	; () banked
  9558  0019F2  6F31               	movwf	display_num@x& (0+255),b
  9559  0019F4  0EEA               	movlw	234
  9560  0019F6  0101               	movlb	1	; () banked
  9561  0019F8  6F32               	movwf	display_num@mode& (0+255),b
  9562  0019FA  0E03               	movlw	3
  9563  0019FC  ECF0  F006         	call	_display_num
  9564                           
  9565                           ;gui.c: 2139: }
  9566  001A00  0012               	return	
  9567  001A02                     l14285:
  9568                           
  9569                           ;gui.c: 2140: else if(menu[5].parameter == 2)
  9570  001A02  0E02               	movlw	2
  9571  001A04  182E               	xorwf	_menu+45,w,c
  9572  001A06  A4D8               	btfss	status,2,c
  9573  001A08  0012               	return	
  9574                           
  9575                           ;gui.c: 2141: {
  9576                           ;gui.c: 2142: display_num(3,(49 + 14), 0x80 | 5);
  9577  001A0A  0E3F               	movlw	63
  9578  001A0C  0101               	movlb	1	; () banked
  9579  001A0E  6F31               	movwf	display_num@x& (0+255),b
  9580  001A10  0E85               	movlw	133
  9581  001A12  0101               	movlb	1	; () banked
  9582  001A14  6F32               	movwf	display_num@mode& (0+255),b
  9583  001A16  0E03               	movlw	3
  9584  001A18  ECF0  F006         	call	_display_num
  9585                           
  9586                           ;gui.c: 2143: }
  9587                           ;gui.c: 2144: }
  9588                           ;gui.c: 2145: }
  9589  001A1C  0012               	return	
  9590  001A1E                     l14289:
  9591                           
  9592                           ;gui.c: 2146: else if(menu[6].mode == 3)
  9593  001A1E  0E03               	movlw	3
  9594  001A20  1832               	xorwf	_menu+49,w,c
  9595  001A22  A4D8               	btfss	status,2,c
  9596  001A24  0012               	return	
  9597                           
  9598                           ;gui.c: 2147: {
  9599                           ;gui.c: 2149: if(flip == 1)
  9600  001A26  044E               	decf	_flip,w,c
  9601  001A28  A4D8               	btfss	status,2,c
  9602  001A2A  D020               	goto	l14305
  9603                           
  9604                           ;gui.c: 2150: {
  9605                           ;gui.c: 2153: if(work_mode == 0x00 || work_mode == 0x02)
  9606  001A2C  504D               	movf	_work_mode,w,c
  9607  001A2E  B4D8               	btfsc	status,2,c
  9608  001A30  D004               	goto	l14297
  9609  001A32  0E02               	movlw	2
  9610  001A34  184D               	xorwf	_work_mode,w,c
  9611  001A36  A4D8               	btfss	status,2,c
  9612  001A38  D00A               	goto	l14299
  9613  001A3A                     l14297:
  9614                           
  9615                           ;gui.c: 2154: {
  9616                           ;gui.c: 2155: display_n_blank(2,(0 + 14), 0x80);
  9617  001A3A  0E0E               	movlw	14
  9618  001A3C  0101               	movlb	1	; () banked
  9619  001A3E  6F31               	movwf	display_n_blank@x& (0+255),b
  9620  001A40  0E80               	movlw	128
  9621  001A42  0101               	movlb	1	; () banked
  9622  001A44  6F32               	movwf	display_n_blank@mode& (0+255),b
  9623  001A46  0E02               	movlw	2
  9624  001A48  ECAE  F002         	call	_display_n_blank
  9625                           
  9626                           ;gui.c: 2156: }
  9627  001A4C  D00C               	goto	l14303
  9628  001A4E                     l14299:
  9629                           
  9630                           ;gui.c: 2157: else if(work_mode == 0x01)
  9631  001A4E  044D               	decf	_work_mode,w,c
  9632  001A50  A4D8               	btfss	status,2,c
  9633  001A52  D009               	goto	l14303
  9634                           
  9635                           ;gui.c: 2158: {
  9636                           ;gui.c: 2159: display_n_blank(2,(0 + 17), 0x80);
  9637  001A54  0E11               	movlw	17
  9638  001A56  0101               	movlb	1	; () banked
  9639  001A58  6F31               	movwf	display_n_blank@x& (0+255),b
  9640  001A5A  0E80               	movlw	128
  9641  001A5C  0101               	movlb	1	; () banked
  9642  001A5E  6F32               	movwf	display_n_blank@mode& (0+255),b
  9643  001A60  0E02               	movlw	2
  9644  001A62  ECAE  F002         	call	_display_n_blank
  9645  001A66                     l14303:
  9646                           
  9647                           ;gui.c: 2160: }
  9648                           ;gui.c: 2161: flip =0;
  9649  001A66  0E00               	movlw	0
  9650  001A68  6E4E               	movwf	_flip,c
  9651                           
  9652                           ;gui.c: 2162: }
  9653  001A6A  0012               	return	
  9654  001A6C                     l14305:
  9655                           
  9656                           ;gui.c: 2163: else if(flip == 0)
  9657  001A6C  504E               	movf	_flip,w,c
  9658  001A6E  A4D8               	btfss	status,2,c
  9659  001A70  0012               	return	
  9660                           
  9661                           ;gui.c: 2164: {
  9662                           ;gui.c: 2165: flip =1;
  9663  001A72  0E01               	movlw	1
  9664  001A74  6E4E               	movwf	_flip,c
  9665                           
  9666                           ;gui.c: 2166: if(menu[6].parameter == 0)
  9667  001A76  5036               	movf	_menu+53,w,c
  9668  001A78  A4D8               	btfss	status,2,c
  9669  001A7A  D01E               	goto	l14319
  9670                           
  9671                           ;gui.c: 2167: {
  9672                           ;gui.c: 2168: if(work_mode == 0x00 || work_mode == 0x02)
  9673  001A7C  504D               	movf	_work_mode,w,c
  9674  001A7E  B4D8               	btfsc	status,2,c
  9675  001A80  D004               	goto	l14313
  9676  001A82  0E02               	movlw	2
  9677  001A84  184D               	xorwf	_work_mode,w,c
  9678  001A86  A4D8               	btfss	status,2,c
  9679  001A88  D00A               	goto	l14315
  9680  001A8A                     l14313:
  9681                           
  9682                           ;gui.c: 2169: {
  9683                           ;gui.c: 2170: display_num(3,(0 + 14), 0x80 | 3);
  9684  001A8A  0E0E               	movlw	14
  9685  001A8C  0101               	movlb	1	; () banked
  9686  001A8E  6F31               	movwf	display_num@x& (0+255),b
  9687  001A90  0E83               	movlw	131
  9688  001A92  0101               	movlb	1	; () banked
  9689  001A94  6F32               	movwf	display_num@mode& (0+255),b
  9690  001A96  0E03               	movlw	3
  9691  001A98  ECF0  F006         	call	_display_num
  9692                           
  9693                           ;gui.c: 2171: }
  9694  001A9C  0012               	return	
  9695  001A9E                     l14315:
  9696                           
  9697                           ;gui.c: 2172: else if(work_mode == 0x01)
  9698  001A9E  044D               	decf	_work_mode,w,c
  9699  001AA0  A4D8               	btfss	status,2,c
  9700  001AA2  0012               	return	
  9701                           
  9702                           ;gui.c: 2173: {
  9703                           ;gui.c: 2174: display_num(3,(0 + 17), 0x80 | 103);
  9704  001AA4  0E11               	movlw	17
  9705  001AA6  0101               	movlb	1	; () banked
  9706  001AA8  6F31               	movwf	display_num@x& (0+255),b
  9707  001AAA  0EE7               	movlw	231
  9708  001AAC  0101               	movlb	1	; () banked
  9709  001AAE  6F32               	movwf	display_num@mode& (0+255),b
  9710  001AB0  0E03               	movlw	3
  9711  001AB2  ECF0  F006         	call	_display_num
  9712                           
  9713                           ;gui.c: 2175: }
  9714                           ;gui.c: 2176: }
  9715  001AB6  0012               	return	
  9716  001AB8                     l14319:
  9717                           
  9718                           ;gui.c: 2177: else if(menu[6].parameter == 1)
  9719  001AB8  0436               	decf	_menu+53,w,c
  9720  001ABA  A4D8               	btfss	status,2,c
  9721  001ABC  D01E               	goto	l14331
  9722                           
  9723                           ;gui.c: 2178: {
  9724                           ;gui.c: 2179: if(work_mode == 0x00 || work_mode == 0x02)
  9725  001ABE  504D               	movf	_work_mode,w,c
  9726  001AC0  B4D8               	btfsc	status,2,c
  9727  001AC2  D004               	goto	l14325
  9728  001AC4  0E02               	movlw	2
  9729  001AC6  184D               	xorwf	_work_mode,w,c
  9730  001AC8  A4D8               	btfss	status,2,c
  9731  001ACA  D00A               	goto	l14327
  9732  001ACC                     l14325:
  9733                           
  9734                           ;gui.c: 2180: {
  9735                           ;gui.c: 2181: display_num(3,(0 + 14), 0x80 | 3);
  9736  001ACC  0E0E               	movlw	14
  9737  001ACE  0101               	movlb	1	; () banked
  9738  001AD0  6F31               	movwf	display_num@x& (0+255),b
  9739  001AD2  0E83               	movlw	131
  9740  001AD4  0101               	movlb	1	; () banked
  9741  001AD6  6F32               	movwf	display_num@mode& (0+255),b
  9742  001AD8  0E03               	movlw	3
  9743  001ADA  ECF0  F006         	call	_display_num
  9744                           
  9745                           ;gui.c: 2182: }
  9746  001ADE  0012               	return	
  9747  001AE0                     l14327:
  9748                           
  9749                           ;gui.c: 2183: else if(work_mode == 0x01)
  9750  001AE0  044D               	decf	_work_mode,w,c
  9751  001AE2  A4D8               	btfss	status,2,c
  9752  001AE4  0012               	return	
  9753                           
  9754                           ;gui.c: 2184: {
  9755                           ;gui.c: 2185: display_num(3,(0 + 17), 0x80 | 102);
  9756  001AE6  0E11               	movlw	17
  9757  001AE8  0101               	movlb	1	; () banked
  9758  001AEA  6F31               	movwf	display_num@x& (0+255),b
  9759  001AEC  0EE6               	movlw	230
  9760  001AEE  0101               	movlb	1	; () banked
  9761  001AF0  6F32               	movwf	display_num@mode& (0+255),b
  9762  001AF2  0E03               	movlw	3
  9763  001AF4  ECF0  F006         	call	_display_num
  9764                           
  9765                           ;gui.c: 2186: }
  9766                           ;gui.c: 2187: }
  9767  001AF8  0012               	return	
  9768  001AFA                     l14331:
  9769                           
  9770                           ;gui.c: 2188: else if(menu[6].parameter == 2)
  9771  001AFA  0E02               	movlw	2
  9772  001AFC  1836               	xorwf	_menu+53,w,c
  9773  001AFE  A4D8               	btfss	status,2,c
  9774  001B00  0012               	return	
  9775                           
  9776                           ;gui.c: 2189: {
  9777                           ;gui.c: 2190: if(work_mode == 0x00 || work_mode == 0x02)
  9778  001B02  504D               	movf	_work_mode,w,c
  9779  001B04  B4D8               	btfsc	status,2,c
  9780  001B06  D004               	goto	l14337
  9781  001B08  0E02               	movlw	2
  9782  001B0A  184D               	xorwf	_work_mode,w,c
  9783  001B0C  A4D8               	btfss	status,2,c
  9784  001B0E  D00A               	goto	l14339
  9785  001B10                     l14337:
  9786                           
  9787                           ;gui.c: 2191: {
  9788                           ;gui.c: 2192: display_num(3,(0 + 14), 0x80 | 3);
  9789  001B10  0E0E               	movlw	14
  9790  001B12  0101               	movlb	1	; () banked
  9791  001B14  6F31               	movwf	display_num@x& (0+255),b
  9792  001B16  0E83               	movlw	131
  9793  001B18  0101               	movlb	1	; () banked
  9794  001B1A  6F32               	movwf	display_num@mode& (0+255),b
  9795  001B1C  0E03               	movlw	3
  9796  001B1E  ECF0  F006         	call	_display_num
  9797                           
  9798                           ;gui.c: 2193: }
  9799  001B22  0012               	return	
  9800  001B24                     l14339:
  9801                           
  9802                           ;gui.c: 2194: else if(work_mode == 0x01)
  9803  001B24  044D               	decf	_work_mode,w,c
  9804  001B26  A4D8               	btfss	status,2,c
  9805  001B28  0012               	return	
  9806                           
  9807                           ;gui.c: 2195: {
  9808                           ;gui.c: 2196: display_num(3,(0 + 17), 0x80 | 101);
  9809  001B2A  0E11               	movlw	17
  9810  001B2C  0101               	movlb	1	; () banked
  9811  001B2E  6F31               	movwf	display_num@x& (0+255),b
  9812  001B30  0EE5               	movlw	229
  9813  001B32  0101               	movlb	1	; () banked
  9814  001B34  6F32               	movwf	display_num@mode& (0+255),b
  9815  001B36  0E03               	movlw	3
  9816  001B38  ECF0  F006         	call	_display_num
  9817  001B3C  0012               	return	
  9818  001B3E                     __end_of_blink_mode:
  9819                           	opt stack 0
  9820                           tblptru	equ	0xFF8
  9821                           tblptrh	equ	0xFF7
  9822                           tblptrl	equ	0xFF6
  9823                           tablat	equ	0xFF5
  9824                           prodh	equ	0xFF4
  9825                           prodl	equ	0xFF3
  9826                           intcon	equ	0xFF2
  9827                           intcon3	equ	0xFF0
  9828                           postinc0	equ	0xFEE
  9829                           wreg	equ	0xFE8
  9830                           postdec1	equ	0xFE5
  9831                           fsr1h	equ	0xFE2
  9832                           fsr1l	equ	0xFE1
  9833                           status	equ	0xFD8
  9834                           
  9835 ;; *************** function _display_n_blank *****************
  9836 ;; Defined at:
  9837 ;;		line 1343 in file "../Oled.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;  y               1    wreg     unsigned char 
  9840 ;;  x               1    9[BANK1 ] unsigned char 
  9841 ;;  mode            1   10[BANK1 ] unsigned char 
  9842 ;; Auto vars:     Size  Location     Type
  9843 ;;  y               1   11[BANK1 ] unsigned char 
  9844 ;;  temp            1   13[BANK1 ] unsigned char 
  9845 ;;  tori            1   12[BANK1 ] unsigned char 
  9846 ;; Return value:  Size  Location     Type
  9847 ;;                  1    wreg      unsigned char 
  9848 ;; Registers used:
  9849 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9850 ;; Tracked objects:
  9851 ;;		On entry : 0/0
  9852 ;;		On exit  : 0/0
  9853 ;;		Unchanged: 0/0
  9854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9855 ;;      Params:         0       0       2       0       0       0       0
  9856 ;;      Locals:         0       0       3       0       0       0       0
  9857 ;;      Temps:          0       0       0       0       0       0       0
  9858 ;;      Totals:         0       0       5       0       0       0       0
  9859 ;;Total ram usage:        5 bytes
  9860 ;; Hardware stack levels used:    1
  9861 ;; Hardware stack levels required when called:    6
  9862 ;; This function calls:
  9863 ;;		_ee_WriteBytes
  9864 ;;		_setYX_LCD
  9865 ;; This function is called by:
  9866 ;;		_blink_mode
  9867 ;; This function uses a non-reentrant model
  9868 ;;
  9869                           
  9870                           	psect	text18
  9871  00055C                     __ptext18:
  9872                           	opt stack 0
  9873  00055C                     _display_n_blank:
  9874                           	opt stack 22
  9875                           
  9876                           ;incstack = 0
  9877                           ;display_n_blank@y stored from wreg
  9878  00055C  0101               	movlb	1	; () banked
  9879  00055E  6F33               	movwf	display_n_blank@y& (0+255),b
  9880                           
  9881                           ;Oled.c: 1345: uint8_t temp =0;
  9882  000560  0E00               	movlw	0
  9883  000562  0101               	movlb	1	; () banked
  9884  000564  6F35               	movwf	display_n_blank@temp& (0+255),b
  9885                           
  9886                           ;Oled.c: 1346: uint8_t tori =0;
  9887  000566  0E00               	movlw	0
  9888  000568  0101               	movlb	1	; () banked
  9889  00056A  6F34               	movwf	display_n_blank@tori& (0+255),b
  9890                           
  9891                           ; BSR set to: 1
  9892                           ;Oled.c: 1347: if(y==1)
  9893  00056C  0101               	movlb	1	; () banked
  9894  00056E  0533               	decf	display_n_blank@y& (0+255),w,b
  9895  000570  A4D8               	btfss	status,2,c
  9896  000572  D11A               	goto	l12507
  9897                           
  9898                           ; BSR set to: 1
  9899                           ;Oled.c: 1348: {
  9900                           ;Oled.c: 1349: if(mode == 0)
  9901  000574  0101               	movlb	1	; () banked
  9902  000576  5132               	movf	display_n_blank@mode& (0+255),w,b
  9903  000578  0101               	movlb	1	; () banked
  9904  00057A  A4D8               	btfss	status,2,c
  9905  00057C  D080               	goto	l12443
  9906                           
  9907                           ; BSR set to: 1
  9908                           ;Oled.c: 1350: {
  9909                           ;Oled.c: 1351: setYX_LCD(2,x);
  9910  00057E  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9911  000582  0E02               	movlw	2
  9912  000584  EC8E  F024         	call	_setYX_LCD
  9913                           
  9914                           ;Oled.c: 1352: for(ms=0;ms<19;ms++)
  9915  000588  0E00               	movlw	0
  9916  00058A  6E69               	movwf	_ms,c
  9917  00058C                     l12399:
  9918  00058C  0E12               	movlw	18
  9919  00058E  6469               	cpfsgt	_ms,c
  9920  000590  D001               	goto	l12403
  9921  000592  D01D               	goto	l12411
  9922  000594                     l12403:
  9923                           
  9924                           ;Oled.c: 1353: {
  9925                           ;Oled.c: 1354: temp = n_blank_m[0][ms];
  9926  000594  5069               	movf	_ms,w,c
  9927  000596  0D01               	mullw	1
  9928  000598  0EA5               	movlw	low _n_blank_m
  9929  00059A  24F3               	addwf	prodl,w,c
  9930  00059C  6EF6               	movwf	tblptrl,c
  9931  00059E  0E74               	movlw	high _n_blank_m
  9932  0005A0  20F4               	addwfc	prodh,w,c
  9933  0005A2  6EF7               	movwf	tblptrh,c
  9934  0005A4                     	if	0	;There are less than 3 active tblptr bytes
  9935  0005A4                     	endif
  9936  0005A4  0008               	tblrd		*
  9937  0005A6  CFF5 F135          	movff	tablat,display_n_blank@temp
  9938                           
  9939                           ;Oled.c: 1355: ee_WriteBytes(&temp, 0x40, 1);
  9940  0005AA  0E35               	movlw	low display_n_blank@temp
  9941  0005AC  0101               	movlb	1	; () banked
  9942  0005AE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  9943  0005B0  0E01               	movlw	high display_n_blank@temp
  9944  0005B2  0101               	movlb	1	; () banked
  9945  0005B4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
  9946  0005B6  0E40               	movlw	64
  9947  0005B8  0101               	movlb	1	; () banked
  9948  0005BA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
  9949  0005BC  0E00               	movlw	0
  9950  0005BE  0101               	movlb	1	; () banked
  9951  0005C0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
  9952  0005C2  0E01               	movlw	1
  9953  0005C4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
  9954  0005C6  EC88  F025         	call	_ee_WriteBytes	;wreg free
  9955  0005CA  2A69               	incf	_ms,f,c
  9956  0005CC  D7DF               	goto	l12399
  9957  0005CE                     l12411:
  9958                           
  9959                           ;Oled.c: 1356: }
  9960                           ;Oled.c: 1358: setYX_LCD(3,x);
  9961  0005CE  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
  9962  0005D2  0E03               	movlw	3
  9963  0005D4  EC8E  F024         	call	_setYX_LCD
  9964                           
  9965                           ;Oled.c: 1359: for(ms=0;ms<19;ms++)
  9966  0005D8  0E00               	movlw	0
  9967  0005DA  6E69               	movwf	_ms,c
  9968  0005DC                     l12415:
  9969  0005DC  0E12               	movlw	18
  9970  0005DE  6469               	cpfsgt	_ms,c
  9971  0005E0  D001               	goto	l12419
  9972  0005E2  D021               	goto	l12427
  9973  0005E4                     l12419:
  9974                           
  9975                           ;Oled.c: 1360: {
  9976                           ;Oled.c: 1361: temp = n_blank_m[1][ms];
  9977  0005E4  5069               	movf	_ms,w,c
  9978  0005E6  0D01               	mullw	1
  9979  0005E8  0E13               	movlw	19
  9980  0005EA  26F3               	addwf	prodl,f,c
  9981  0005EC  0E00               	movlw	0
  9982  0005EE  22F4               	addwfc	prodh,f,c
  9983  0005F0  0EA5               	movlw	low _n_blank_m
  9984  0005F2  24F3               	addwf	prodl,w,c
  9985  0005F4  6EF6               	movwf	tblptrl,c
  9986  0005F6  0E74               	movlw	high _n_blank_m
  9987  0005F8  20F4               	addwfc	prodh,w,c
  9988  0005FA  6EF7               	movwf	tblptrh,c
  9989  0005FC                     	if	0	;There are less than 3 active tblptr bytes
  9990  0005FC                     	endif
  9991  0005FC  0008               	tblrd		*
  9992  0005FE  CFF5 F135          	movff	tablat,display_n_blank@temp
  9993                           
  9994                           ;Oled.c: 1362: ee_WriteBytes(&temp, 0x40, 1);
  9995  000602  0E35               	movlw	low display_n_blank@temp
  9996  000604  0101               	movlb	1	; () banked
  9997  000606  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
  9998  000608  0E01               	movlw	high display_n_blank@temp
  9999  00060A  0101               	movlb	1	; () banked
 10000  00060C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10001  00060E  0E40               	movlw	64
 10002  000610  0101               	movlb	1	; () banked
 10003  000612  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10004  000614  0E00               	movlw	0
 10005  000616  0101               	movlb	1	; () banked
 10006  000618  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10007  00061A  0E01               	movlw	1
 10008  00061C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10009  00061E  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10010  000622  2A69               	incf	_ms,f,c
 10011  000624  D7DB               	goto	l12415
 10012  000626                     l12427:
 10013                           
 10014                           ;Oled.c: 1363: }
 10015                           ;Oled.c: 1365: setYX_LCD(4,x);
 10016  000626  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10017  00062A  0E04               	movlw	4
 10018  00062C  EC8E  F024         	call	_setYX_LCD
 10019                           
 10020                           ;Oled.c: 1366: for(ms=0;ms<19;ms++)
 10021  000630  0E00               	movlw	0
 10022  000632  6E69               	movwf	_ms,c
 10023  000634                     l12431:
 10024  000634  0E12               	movlw	18
 10025  000636  6469               	cpfsgt	_ms,c
 10026  000638  D001               	goto	l12435
 10027  00063A  0012               	return	
 10028  00063C                     l12435:
 10029                           
 10030                           ;Oled.c: 1367: {
 10031                           ;Oled.c: 1368: temp = n_blank_m[2][ms];
 10032  00063C  5069               	movf	_ms,w,c
 10033  00063E  0D01               	mullw	1
 10034  000640  0E26               	movlw	38
 10035  000642  26F3               	addwf	prodl,f,c
 10036  000644  0E00               	movlw	0
 10037  000646  22F4               	addwfc	prodh,f,c
 10038  000648  0EA5               	movlw	low _n_blank_m
 10039  00064A  24F3               	addwf	prodl,w,c
 10040  00064C  6EF6               	movwf	tblptrl,c
 10041  00064E  0E74               	movlw	high _n_blank_m
 10042  000650  20F4               	addwfc	prodh,w,c
 10043  000652  6EF7               	movwf	tblptrh,c
 10044  000654                     	if	0	;There are less than 3 active tblptr bytes
 10045  000654                     	endif
 10046  000654  0008               	tblrd		*
 10047  000656  CFF5 F135          	movff	tablat,display_n_blank@temp
 10048                           
 10049                           ;Oled.c: 1369: ee_WriteBytes(&temp, 0x40, 1);
 10050  00065A  0E35               	movlw	low display_n_blank@temp
 10051  00065C  0101               	movlb	1	; () banked
 10052  00065E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10053  000660  0E01               	movlw	high display_n_blank@temp
 10054  000662  0101               	movlb	1	; () banked
 10055  000664  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10056  000666  0E40               	movlw	64
 10057  000668  0101               	movlb	1	; () banked
 10058  00066A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10059  00066C  0E00               	movlw	0
 10060  00066E  0101               	movlb	1	; () banked
 10061  000670  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10062  000672  0E01               	movlw	1
 10063  000674  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10064  000676  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10065  00067A  2A69               	incf	_ms,f,c
 10066  00067C  D7DB               	goto	l12431
 10067  00067E                     l12443:
 10068                           
 10069                           ;Oled.c: 1372: else if(mode == 0x80)
 10070  00067E  0E80               	movlw	128
 10071  000680  0101               	movlb	1	; () banked
 10072  000682  1932               	xorwf	display_n_blank@mode& (0+255),w,b
 10073  000684  A4D8               	btfss	status,2,c
 10074  000686  0012               	return	
 10075                           
 10076                           ; BSR set to: 1
 10077                           ;Oled.c: 1373: {
 10078                           ;Oled.c: 1375: setYX_LCD(2,x);
 10079  000688  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10080  00068C  0E02               	movlw	2
 10081  00068E  EC8E  F024         	call	_setYX_LCD
 10082                           
 10083                           ;Oled.c: 1376: for(ms=0;ms<19;ms++)
 10084  000692  0E00               	movlw	0
 10085  000694  6E69               	movwf	_ms,c
 10086  000696                     l12449:
 10087  000696  0E12               	movlw	18
 10088  000698  6469               	cpfsgt	_ms,c
 10089  00069A  D001               	goto	l12453
 10090  00069C  D024               	goto	l12467
 10091  00069E                     l12453:
 10092                           
 10093                           ;Oled.c: 1377: {
 10094                           ;Oled.c: 1378: temp = n_blank_m[0][ms];
 10095  00069E  5069               	movf	_ms,w,c
 10096  0006A0  0D01               	mullw	1
 10097  0006A2  0EA5               	movlw	low _n_blank_m
 10098  0006A4  24F3               	addwf	prodl,w,c
 10099  0006A6  6EF6               	movwf	tblptrl,c
 10100  0006A8  0E74               	movlw	high _n_blank_m
 10101  0006AA  20F4               	addwfc	prodh,w,c
 10102  0006AC  6EF7               	movwf	tblptrh,c
 10103  0006AE                     	if	0	;There are less than 3 active tblptr bytes
 10104  0006AE                     	endif
 10105  0006AE  0008               	tblrd		*
 10106  0006B0  CFF5 F135          	movff	tablat,display_n_blank@temp
 10107                           
 10108                           ;Oled.c: 1379: tori = temp;
 10109  0006B4  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10110                           
 10111                           ;Oled.c: 1381: temp = ~temp;
 10112  0006B8  0101               	movlb	1	; () banked
 10113  0006BA  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10114                           
 10115                           ; BSR set to: 1
 10116                           ;Oled.c: 1382: temp &= 0x3f;
 10117  0006BC  0E3F               	movlw	63
 10118  0006BE  0101               	movlb	1	; () banked
 10119  0006C0  1735               	andwf	display_n_blank@temp& (0+255),f,b
 10120                           
 10121                           ; BSR set to: 1
 10122                           ;Oled.c: 1384: ee_WriteBytes(&temp, 0x40, 1);
 10123  0006C2  0E35               	movlw	low display_n_blank@temp
 10124  0006C4  0101               	movlb	1	; () banked
 10125  0006C6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10126  0006C8  0E01               	movlw	high display_n_blank@temp
 10127  0006CA  0101               	movlb	1	; () banked
 10128  0006CC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10129  0006CE  0E40               	movlw	64
 10130  0006D0  0101               	movlb	1	; () banked
 10131  0006D2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10132  0006D4  0E00               	movlw	0
 10133  0006D6  0101               	movlb	1	; () banked
 10134  0006D8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10135  0006DA  0E01               	movlw	1
 10136  0006DC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10137  0006DE  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10138  0006E2  2A69               	incf	_ms,f,c
 10139  0006E4  D7D8               	goto	l12449
 10140  0006E6                     l12467:
 10141                           
 10142                           ;Oled.c: 1385: }
 10143                           ;Oled.c: 1387: setYX_LCD(3,x);
 10144  0006E6  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10145  0006EA  0E03               	movlw	3
 10146  0006EC  EC8E  F024         	call	_setYX_LCD
 10147                           
 10148                           ;Oled.c: 1388: for(ms=0;ms<19;ms++)
 10149  0006F0  0E00               	movlw	0
 10150  0006F2  6E69               	movwf	_ms,c
 10151  0006F4                     l12471:
 10152  0006F4  0E12               	movlw	18
 10153  0006F6  6469               	cpfsgt	_ms,c
 10154  0006F8  D001               	goto	l12475
 10155  0006FA  D025               	goto	l12487
 10156  0006FC                     l12475:
 10157                           
 10158                           ;Oled.c: 1389: {
 10159                           ;Oled.c: 1390: temp = n_blank_m[1][ms];
 10160  0006FC  5069               	movf	_ms,w,c
 10161  0006FE  0D01               	mullw	1
 10162  000700  0E13               	movlw	19
 10163  000702  26F3               	addwf	prodl,f,c
 10164  000704  0E00               	movlw	0
 10165  000706  22F4               	addwfc	prodh,f,c
 10166  000708  0EA5               	movlw	low _n_blank_m
 10167  00070A  24F3               	addwf	prodl,w,c
 10168  00070C  6EF6               	movwf	tblptrl,c
 10169  00070E  0E74               	movlw	high _n_blank_m
 10170  000710  20F4               	addwfc	prodh,w,c
 10171  000712  6EF7               	movwf	tblptrh,c
 10172  000714                     	if	0	;There are less than 3 active tblptr bytes
 10173  000714                     	endif
 10174  000714  0008               	tblrd		*
 10175  000716  CFF5 F135          	movff	tablat,display_n_blank@temp
 10176                           
 10177                           ;Oled.c: 1391: tori = temp;
 10178  00071A  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10179                           
 10180                           ;Oled.c: 1393: temp = ~temp;
 10181  00071E  0101               	movlb	1	; () banked
 10182  000720  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10183                           
 10184                           ; BSR set to: 1
 10185                           ;Oled.c: 1395: ee_WriteBytes(&temp, 0x40, 1);
 10186  000722  0E35               	movlw	low display_n_blank@temp
 10187  000724  0101               	movlb	1	; () banked
 10188  000726  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10189  000728  0E01               	movlw	high display_n_blank@temp
 10190  00072A  0101               	movlb	1	; () banked
 10191  00072C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10192  00072E  0E40               	movlw	64
 10193  000730  0101               	movlb	1	; () banked
 10194  000732  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10195  000734  0E00               	movlw	0
 10196  000736  0101               	movlb	1	; () banked
 10197  000738  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10198  00073A  0E01               	movlw	1
 10199  00073C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10200  00073E  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10201  000742  2A69               	incf	_ms,f,c
 10202  000744  D7D7               	goto	l12471
 10203  000746                     l12487:
 10204                           
 10205                           ;Oled.c: 1396: }
 10206                           ;Oled.c: 1398: setYX_LCD(4,x);
 10207  000746  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10208  00074A  0E04               	movlw	4
 10209  00074C  EC8E  F024         	call	_setYX_LCD
 10210                           
 10211                           ;Oled.c: 1399: for(ms=0;ms<19;ms++)
 10212  000750  0E00               	movlw	0
 10213  000752  6E69               	movwf	_ms,c
 10214  000754                     l12491:
 10215  000754  0E12               	movlw	18
 10216  000756  6469               	cpfsgt	_ms,c
 10217  000758  D001               	goto	l12495
 10218  00075A  0012               	return	
 10219  00075C                     l12495:
 10220                           
 10221                           ;Oled.c: 1400: {
 10222                           ;Oled.c: 1401: temp = n_blank_m[2][ms];
 10223  00075C  5069               	movf	_ms,w,c
 10224  00075E  0D01               	mullw	1
 10225  000760  0E26               	movlw	38
 10226  000762  26F3               	addwf	prodl,f,c
 10227  000764  0E00               	movlw	0
 10228  000766  22F4               	addwfc	prodh,f,c
 10229  000768  0EA5               	movlw	low _n_blank_m
 10230  00076A  24F3               	addwf	prodl,w,c
 10231  00076C  6EF6               	movwf	tblptrl,c
 10232  00076E  0E74               	movlw	high _n_blank_m
 10233  000770  20F4               	addwfc	prodh,w,c
 10234  000772  6EF7               	movwf	tblptrh,c
 10235  000774                     	if	0	;There are less than 3 active tblptr bytes
 10236  000774                     	endif
 10237  000774  0008               	tblrd		*
 10238  000776  CFF5 F135          	movff	tablat,display_n_blank@temp
 10239                           
 10240                           ;Oled.c: 1402: tori = temp;
 10241  00077A  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10242                           
 10243                           ;Oled.c: 1403: temp = 0xf0;
 10244  00077E  0EF0               	movlw	240
 10245  000780  0101               	movlb	1	; () banked
 10246  000782  6F35               	movwf	display_n_blank@temp& (0+255),b
 10247                           
 10248                           ; BSR set to: 1
 10249                           ;Oled.c: 1404: ee_WriteBytes(&temp, 0x40, 1);
 10250  000784  0E35               	movlw	low display_n_blank@temp
 10251  000786  0101               	movlb	1	; () banked
 10252  000788  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10253  00078A  0E01               	movlw	high display_n_blank@temp
 10254  00078C  0101               	movlb	1	; () banked
 10255  00078E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10256  000790  0E40               	movlw	64
 10257  000792  0101               	movlb	1	; () banked
 10258  000794  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10259  000796  0E00               	movlw	0
 10260  000798  0101               	movlb	1	; () banked
 10261  00079A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10262  00079C  0E01               	movlw	1
 10263  00079E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10264  0007A0  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10265  0007A4  2A69               	incf	_ms,f,c
 10266  0007A6  D7D6               	goto	l12491
 10267  0007A8                     l12507:
 10268                           
 10269                           ;Oled.c: 1409: else if(y ==2)
 10270  0007A8  0E02               	movlw	2
 10271  0007AA  0101               	movlb	1	; () banked
 10272  0007AC  1933               	xorwf	display_n_blank@y& (0+255),w,b
 10273  0007AE  A4D8               	btfss	status,2,c
 10274  0007B0  0012               	return	
 10275                           
 10276                           ; BSR set to: 1
 10277                           ;Oled.c: 1410: {
 10278                           ;Oled.c: 1412: if(mode == 0)
 10279  0007B2  0101               	movlb	1	; () banked
 10280  0007B4  5132               	movf	display_n_blank@mode& (0+255),w,b
 10281  0007B6  0101               	movlb	1	; () banked
 10282  0007B8  A4D8               	btfss	status,2,c
 10283  0007BA  D080               	goto	l12559
 10284                           
 10285                           ; BSR set to: 1
 10286                           ;Oled.c: 1413: {
 10287                           ;Oled.c: 1414: setYX_LCD(5,x);
 10288  0007BC  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10289  0007C0  0E05               	movlw	5
 10290  0007C2  EC8E  F024         	call	_setYX_LCD
 10291                           
 10292                           ;Oled.c: 1415: for(ms=0;ms<19;ms++)
 10293  0007C6  0E00               	movlw	0
 10294  0007C8  6E69               	movwf	_ms,c
 10295  0007CA                     l12515:
 10296  0007CA  0E12               	movlw	18
 10297  0007CC  6469               	cpfsgt	_ms,c
 10298  0007CE  D001               	goto	l12519
 10299  0007D0  D01D               	goto	l12527
 10300  0007D2                     l12519:
 10301                           
 10302                           ;Oled.c: 1416: {
 10303                           ;Oled.c: 1417: temp = n_blank_m[0][ms];
 10304  0007D2  5069               	movf	_ms,w,c
 10305  0007D4  0D01               	mullw	1
 10306  0007D6  0EA5               	movlw	low _n_blank_m
 10307  0007D8  24F3               	addwf	prodl,w,c
 10308  0007DA  6EF6               	movwf	tblptrl,c
 10309  0007DC  0E74               	movlw	high _n_blank_m
 10310  0007DE  20F4               	addwfc	prodh,w,c
 10311  0007E0  6EF7               	movwf	tblptrh,c
 10312  0007E2                     	if	0	;There are less than 3 active tblptr bytes
 10313  0007E2                     	endif
 10314  0007E2  0008               	tblrd		*
 10315  0007E4  CFF5 F135          	movff	tablat,display_n_blank@temp
 10316                           
 10317                           ;Oled.c: 1418: ee_WriteBytes(&temp, 0x40, 1);
 10318  0007E8  0E35               	movlw	low display_n_blank@temp
 10319  0007EA  0101               	movlb	1	; () banked
 10320  0007EC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10321  0007EE  0E01               	movlw	high display_n_blank@temp
 10322  0007F0  0101               	movlb	1	; () banked
 10323  0007F2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10324  0007F4  0E40               	movlw	64
 10325  0007F6  0101               	movlb	1	; () banked
 10326  0007F8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10327  0007FA  0E00               	movlw	0
 10328  0007FC  0101               	movlb	1	; () banked
 10329  0007FE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10330  000800  0E01               	movlw	1
 10331  000802  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10332  000804  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10333  000808  2A69               	incf	_ms,f,c
 10334  00080A  D7DF               	goto	l12515
 10335  00080C                     l12527:
 10336                           
 10337                           ;Oled.c: 1419: }
 10338                           ;Oled.c: 1421: setYX_LCD(6,x);
 10339  00080C  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10340  000810  0E06               	movlw	6
 10341  000812  EC8E  F024         	call	_setYX_LCD
 10342                           
 10343                           ;Oled.c: 1422: for(ms=0;ms<19;ms++)
 10344  000816  0E00               	movlw	0
 10345  000818  6E69               	movwf	_ms,c
 10346  00081A                     l12531:
 10347  00081A  0E12               	movlw	18
 10348  00081C  6469               	cpfsgt	_ms,c
 10349  00081E  D001               	goto	l12535
 10350  000820  D021               	goto	l12543
 10351  000822                     l12535:
 10352                           
 10353                           ;Oled.c: 1423: {
 10354                           ;Oled.c: 1424: temp = n_blank_m[1][ms];
 10355  000822  5069               	movf	_ms,w,c
 10356  000824  0D01               	mullw	1
 10357  000826  0E13               	movlw	19
 10358  000828  26F3               	addwf	prodl,f,c
 10359  00082A  0E00               	movlw	0
 10360  00082C  22F4               	addwfc	prodh,f,c
 10361  00082E  0EA5               	movlw	low _n_blank_m
 10362  000830  24F3               	addwf	prodl,w,c
 10363  000832  6EF6               	movwf	tblptrl,c
 10364  000834  0E74               	movlw	high _n_blank_m
 10365  000836  20F4               	addwfc	prodh,w,c
 10366  000838  6EF7               	movwf	tblptrh,c
 10367  00083A                     	if	0	;There are less than 3 active tblptr bytes
 10368  00083A                     	endif
 10369  00083A  0008               	tblrd		*
 10370  00083C  CFF5 F135          	movff	tablat,display_n_blank@temp
 10371                           
 10372                           ;Oled.c: 1425: ee_WriteBytes(&temp, 0x40, 1);
 10373  000840  0E35               	movlw	low display_n_blank@temp
 10374  000842  0101               	movlb	1	; () banked
 10375  000844  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10376  000846  0E01               	movlw	high display_n_blank@temp
 10377  000848  0101               	movlb	1	; () banked
 10378  00084A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10379  00084C  0E40               	movlw	64
 10380  00084E  0101               	movlb	1	; () banked
 10381  000850  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10382  000852  0E00               	movlw	0
 10383  000854  0101               	movlb	1	; () banked
 10384  000856  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10385  000858  0E01               	movlw	1
 10386  00085A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10387  00085C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10388  000860  2A69               	incf	_ms,f,c
 10389  000862  D7DB               	goto	l12531
 10390  000864                     l12543:
 10391                           
 10392                           ;Oled.c: 1426: }
 10393                           ;Oled.c: 1428: setYX_LCD(7,x);
 10394  000864  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10395  000868  0E07               	movlw	7
 10396  00086A  EC8E  F024         	call	_setYX_LCD
 10397                           
 10398                           ;Oled.c: 1429: for(ms=0;ms<19;ms++)
 10399  00086E  0E00               	movlw	0
 10400  000870  6E69               	movwf	_ms,c
 10401  000872                     l12547:
 10402  000872  0E12               	movlw	18
 10403  000874  6469               	cpfsgt	_ms,c
 10404  000876  D001               	goto	l12551
 10405  000878  0012               	return	
 10406  00087A                     l12551:
 10407                           
 10408                           ;Oled.c: 1430: {
 10409                           ;Oled.c: 1431: temp = n_blank_m[2][ms];
 10410  00087A  5069               	movf	_ms,w,c
 10411  00087C  0D01               	mullw	1
 10412  00087E  0E26               	movlw	38
 10413  000880  26F3               	addwf	prodl,f,c
 10414  000882  0E00               	movlw	0
 10415  000884  22F4               	addwfc	prodh,f,c
 10416  000886  0EA5               	movlw	low _n_blank_m
 10417  000888  24F3               	addwf	prodl,w,c
 10418  00088A  6EF6               	movwf	tblptrl,c
 10419  00088C  0E74               	movlw	high _n_blank_m
 10420  00088E  20F4               	addwfc	prodh,w,c
 10421  000890  6EF7               	movwf	tblptrh,c
 10422  000892                     	if	0	;There are less than 3 active tblptr bytes
 10423  000892                     	endif
 10424  000892  0008               	tblrd		*
 10425  000894  CFF5 F135          	movff	tablat,display_n_blank@temp
 10426                           
 10427                           ;Oled.c: 1432: ee_WriteBytes(&temp, 0x40, 1);
 10428  000898  0E35               	movlw	low display_n_blank@temp
 10429  00089A  0101               	movlb	1	; () banked
 10430  00089C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10431  00089E  0E01               	movlw	high display_n_blank@temp
 10432  0008A0  0101               	movlb	1	; () banked
 10433  0008A2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10434  0008A4  0E40               	movlw	64
 10435  0008A6  0101               	movlb	1	; () banked
 10436  0008A8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10437  0008AA  0E00               	movlw	0
 10438  0008AC  0101               	movlb	1	; () banked
 10439  0008AE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10440  0008B0  0E01               	movlw	1
 10441  0008B2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10442  0008B4  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10443  0008B8  2A69               	incf	_ms,f,c
 10444  0008BA  D7DB               	goto	l12547
 10445  0008BC                     l12559:
 10446                           
 10447                           ;Oled.c: 1435: else if(mode == 0x80)
 10448  0008BC  0E80               	movlw	128
 10449  0008BE  0101               	movlb	1	; () banked
 10450  0008C0  1932               	xorwf	display_n_blank@mode& (0+255),w,b
 10451  0008C2  A4D8               	btfss	status,2,c
 10452  0008C4  0012               	return	
 10453                           
 10454                           ; BSR set to: 1
 10455                           ;Oled.c: 1436: {
 10456                           ;Oled.c: 1438: setYX_LCD(5,x);
 10457  0008C6  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10458  0008CA  0E05               	movlw	5
 10459  0008CC  EC8E  F024         	call	_setYX_LCD
 10460                           
 10461                           ;Oled.c: 1439: for(ms=0;ms<19;ms++)
 10462  0008D0  0E00               	movlw	0
 10463  0008D2  6E69               	movwf	_ms,c
 10464  0008D4                     l12565:
 10465  0008D4  0E12               	movlw	18
 10466  0008D6  6469               	cpfsgt	_ms,c
 10467  0008D8  D001               	goto	l12569
 10468  0008DA  D024               	goto	l12583
 10469  0008DC                     l12569:
 10470                           
 10471                           ;Oled.c: 1440: {
 10472                           ;Oled.c: 1441: temp = n_blank_m[0][ms];
 10473  0008DC  5069               	movf	_ms,w,c
 10474  0008DE  0D01               	mullw	1
 10475  0008E0  0EA5               	movlw	low _n_blank_m
 10476  0008E2  24F3               	addwf	prodl,w,c
 10477  0008E4  6EF6               	movwf	tblptrl,c
 10478  0008E6  0E74               	movlw	high _n_blank_m
 10479  0008E8  20F4               	addwfc	prodh,w,c
 10480  0008EA  6EF7               	movwf	tblptrh,c
 10481  0008EC                     	if	0	;There are less than 3 active tblptr bytes
 10482  0008EC                     	endif
 10483  0008EC  0008               	tblrd		*
 10484  0008EE  CFF5 F135          	movff	tablat,display_n_blank@temp
 10485                           
 10486                           ;Oled.c: 1442: tori = temp;
 10487  0008F2  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10488                           
 10489                           ;Oled.c: 1444: temp = ~temp;
 10490  0008F6  0101               	movlb	1	; () banked
 10491  0008F8  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10492                           
 10493                           ; BSR set to: 1
 10494                           ;Oled.c: 1445: temp &= 0x3f;
 10495  0008FA  0E3F               	movlw	63
 10496  0008FC  0101               	movlb	1	; () banked
 10497  0008FE  1735               	andwf	display_n_blank@temp& (0+255),f,b
 10498                           
 10499                           ; BSR set to: 1
 10500                           ;Oled.c: 1447: ee_WriteBytes(&temp, 0x40, 1);
 10501  000900  0E35               	movlw	low display_n_blank@temp
 10502  000902  0101               	movlb	1	; () banked
 10503  000904  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10504  000906  0E01               	movlw	high display_n_blank@temp
 10505  000908  0101               	movlb	1	; () banked
 10506  00090A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10507  00090C  0E40               	movlw	64
 10508  00090E  0101               	movlb	1	; () banked
 10509  000910  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10510  000912  0E00               	movlw	0
 10511  000914  0101               	movlb	1	; () banked
 10512  000916  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10513  000918  0E01               	movlw	1
 10514  00091A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10515  00091C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10516  000920  2A69               	incf	_ms,f,c
 10517  000922  D7D8               	goto	l12565
 10518  000924                     l12583:
 10519                           
 10520                           ;Oled.c: 1448: }
 10521                           ;Oled.c: 1450: setYX_LCD(6,x);
 10522  000924  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10523  000928  0E06               	movlw	6
 10524  00092A  EC8E  F024         	call	_setYX_LCD
 10525                           
 10526                           ;Oled.c: 1451: for(ms=0;ms<19;ms++)
 10527  00092E  0E00               	movlw	0
 10528  000930  6E69               	movwf	_ms,c
 10529  000932                     l12587:
 10530  000932  0E12               	movlw	18
 10531  000934  6469               	cpfsgt	_ms,c
 10532  000936  D001               	goto	l12591
 10533  000938  D025               	goto	l12603
 10534  00093A                     l12591:
 10535                           
 10536                           ;Oled.c: 1452: {
 10537                           ;Oled.c: 1453: temp = n_blank_m[1][ms];
 10538  00093A  5069               	movf	_ms,w,c
 10539  00093C  0D01               	mullw	1
 10540  00093E  0E13               	movlw	19
 10541  000940  26F3               	addwf	prodl,f,c
 10542  000942  0E00               	movlw	0
 10543  000944  22F4               	addwfc	prodh,f,c
 10544  000946  0EA5               	movlw	low _n_blank_m
 10545  000948  24F3               	addwf	prodl,w,c
 10546  00094A  6EF6               	movwf	tblptrl,c
 10547  00094C  0E74               	movlw	high _n_blank_m
 10548  00094E  20F4               	addwfc	prodh,w,c
 10549  000950  6EF7               	movwf	tblptrh,c
 10550  000952                     	if	0	;There are less than 3 active tblptr bytes
 10551  000952                     	endif
 10552  000952  0008               	tblrd		*
 10553  000954  CFF5 F135          	movff	tablat,display_n_blank@temp
 10554                           
 10555                           ;Oled.c: 1454: tori = temp;
 10556  000958  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10557                           
 10558                           ;Oled.c: 1456: temp = ~temp;
 10559  00095C  0101               	movlb	1	; () banked
 10560  00095E  1F35               	comf	display_n_blank@temp& (0+255),f,b
 10561                           
 10562                           ; BSR set to: 1
 10563                           ;Oled.c: 1458: ee_WriteBytes(&temp, 0x40, 1);
 10564  000960  0E35               	movlw	low display_n_blank@temp
 10565  000962  0101               	movlb	1	; () banked
 10566  000964  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10567  000966  0E01               	movlw	high display_n_blank@temp
 10568  000968  0101               	movlb	1	; () banked
 10569  00096A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10570  00096C  0E40               	movlw	64
 10571  00096E  0101               	movlb	1	; () banked
 10572  000970  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10573  000972  0E00               	movlw	0
 10574  000974  0101               	movlb	1	; () banked
 10575  000976  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10576  000978  0E01               	movlw	1
 10577  00097A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10578  00097C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10579  000980  2A69               	incf	_ms,f,c
 10580  000982  D7D7               	goto	l12587
 10581  000984                     l12603:
 10582                           
 10583                           ;Oled.c: 1459: }
 10584                           ;Oled.c: 1461: setYX_LCD(7,x);
 10585  000984  C131  F0FF         	movff	display_n_blank@x,setYX_LCD@px
 10586  000988  0E07               	movlw	7
 10587  00098A  EC8E  F024         	call	_setYX_LCD
 10588                           
 10589                           ;Oled.c: 1462: for(ms=0;ms<19;ms++)
 10590  00098E  0E00               	movlw	0
 10591  000990  6E69               	movwf	_ms,c
 10592  000992                     l12607:
 10593  000992  0E12               	movlw	18
 10594  000994  6469               	cpfsgt	_ms,c
 10595  000996  D001               	goto	l12611
 10596  000998  0012               	return	
 10597  00099A                     l12611:
 10598                           
 10599                           ;Oled.c: 1463: {
 10600                           ;Oled.c: 1464: temp = n_blank_m[2][ms];
 10601  00099A  5069               	movf	_ms,w,c
 10602  00099C  0D01               	mullw	1
 10603  00099E  0E26               	movlw	38
 10604  0009A0  26F3               	addwf	prodl,f,c
 10605  0009A2  0E00               	movlw	0
 10606  0009A4  22F4               	addwfc	prodh,f,c
 10607  0009A6  0EA5               	movlw	low _n_blank_m
 10608  0009A8  24F3               	addwf	prodl,w,c
 10609  0009AA  6EF6               	movwf	tblptrl,c
 10610  0009AC  0E74               	movlw	high _n_blank_m
 10611  0009AE  20F4               	addwfc	prodh,w,c
 10612  0009B0  6EF7               	movwf	tblptrh,c
 10613  0009B2                     	if	0	;There are less than 3 active tblptr bytes
 10614  0009B2                     	endif
 10615  0009B2  0008               	tblrd		*
 10616  0009B4  CFF5 F135          	movff	tablat,display_n_blank@temp
 10617                           
 10618                           ;Oled.c: 1465: tori = temp;
 10619  0009B8  C135  F134         	movff	display_n_blank@temp,display_n_blank@tori
 10620                           
 10621                           ;Oled.c: 1466: temp = 0xf0;
 10622  0009BC  0EF0               	movlw	240
 10623  0009BE  0101               	movlb	1	; () banked
 10624  0009C0  6F35               	movwf	display_n_blank@temp& (0+255),b
 10625                           
 10626                           ; BSR set to: 1
 10627                           ;Oled.c: 1469: ee_WriteBytes(&temp, 0x40, 1);
 10628  0009C2  0E35               	movlw	low display_n_blank@temp
 10629  0009C4  0101               	movlb	1	; () banked
 10630  0009C6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10631  0009C8  0E01               	movlw	high display_n_blank@temp
 10632  0009CA  0101               	movlb	1	; () banked
 10633  0009CC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10634  0009CE  0E40               	movlw	64
 10635  0009D0  0101               	movlb	1	; () banked
 10636  0009D2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10637  0009D4  0E00               	movlw	0
 10638  0009D6  0101               	movlb	1	; () banked
 10639  0009D8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10640  0009DA  0E01               	movlw	1
 10641  0009DC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10642  0009DE  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10643  0009E2  2A69               	incf	_ms,f,c
 10644  0009E4  D7D6               	goto	l12607
 10645  0009E6                     __end_of_display_n_blank:
 10646                           	opt stack 0
 10647                           tblptru	equ	0xFF8
 10648                           tblptrh	equ	0xFF7
 10649                           tblptrl	equ	0xFF6
 10650                           tablat	equ	0xFF5
 10651                           prodh	equ	0xFF4
 10652                           prodl	equ	0xFF3
 10653                           intcon	equ	0xFF2
 10654                           intcon3	equ	0xFF0
 10655                           postinc0	equ	0xFEE
 10656                           wreg	equ	0xFE8
 10657                           postdec1	equ	0xFE5
 10658                           fsr1h	equ	0xFE2
 10659                           fsr1l	equ	0xFE1
 10660                           status	equ	0xFD8
 10661                           
 10662 ;; *************** function _display_blank_mode_pa *****************
 10663 ;; Defined at:
 10664 ;;		line 1952 in file "../Oled.c"
 10665 ;; Parameters:    Size  Location     Type
 10666 ;;  y               1    wreg     unsigned char 
 10667 ;;  x               1    9[BANK1 ] unsigned char 
 10668 ;;  mode            1   10[BANK1 ] unsigned char 
 10669 ;; Auto vars:     Size  Location     Type
 10670 ;;  y               1    0[COMRAM] unsigned char 
 10671 ;;  temp            1   12[BANK1 ] unsigned char 
 10672 ;;  tori            1   11[BANK1 ] unsigned char 
 10673 ;; Return value:  Size  Location     Type
 10674 ;;                  1    wreg      void 
 10675 ;; Registers used:
 10676 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10677 ;; Tracked objects:
 10678 ;;		On entry : 0/0
 10679 ;;		On exit  : 0/0
 10680 ;;		Unchanged: 0/0
 10681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10682 ;;      Params:         0       0       2       0       0       0       0
 10683 ;;      Locals:         0       0       2       0       0       0       0
 10684 ;;      Temps:          0       0       0       0       0       0       0
 10685 ;;      Totals:         0       0       4       0       0       0       0
 10686 ;;Total ram usage:        4 bytes
 10687 ;; Hardware stack levels used:    1
 10688 ;; Hardware stack levels required when called:    6
 10689 ;; This function calls:
 10690 ;;		_ee_WriteBytes
 10691 ;;		_setYX_LCD
 10692 ;; This function is called by:
 10693 ;;		_blink_mode
 10694 ;; This function uses a non-reentrant model
 10695 ;;
 10696                           
 10697                           	psect	text19
 10698  0039AA                     __ptext19:
 10699                           	opt stack 0
 10700  0039AA                     _display_blank_mode_pa:
 10701                           	opt stack 22
 10702                           
 10703                           ;Oled.c: 1955: uint8_t temp =0;
 10704                           
 10705                           ;incstack = 0
 10706  0039AA  0E00               	movlw	0
 10707  0039AC  0101               	movlb	1	; () banked
 10708  0039AE  6F34               	movwf	display_blank_mode_pa@temp& (0+255),b
 10709                           
 10710                           ;Oled.c: 1956: uint8_t tori =0;
 10711  0039B0  0E00               	movlw	0
 10712  0039B2  0101               	movlb	1	; () banked
 10713  0039B4  6F33               	movwf	display_blank_mode_pa@tori& (0+255),b
 10714                           
 10715                           ;Oled.c: 1957: switch(mode)
 10716  0039B6  D0B0               	goto	l12699
 10717  0039B8                     l12625:
 10718                           
 10719                           ; BSR set to: 1
 10720                           ;Oled.c: 1963: setYX_LCD(0,x);
 10721  0039B8  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10722  0039BC  0E00               	movlw	0
 10723  0039BE  EC8E  F024         	call	_setYX_LCD
 10724                           
 10725                           ;Oled.c: 1964: for(ms=0;ms<23;ms++)
 10726  0039C2  0E00               	movlw	0
 10727  0039C4  6E69               	movwf	_ms,c
 10728  0039C6                     l12629:
 10729  0039C6  0E16               	movlw	22
 10730  0039C8  6469               	cpfsgt	_ms,c
 10731  0039CA  D001               	goto	l12633
 10732  0039CC  D01D               	goto	l12641
 10733  0039CE                     l12633:
 10734                           
 10735                           ;Oled.c: 1965: {
 10736                           ;Oled.c: 1967: temp =blank_m[0][ms];
 10737  0039CE  5069               	movf	_ms,w,c
 10738  0039D0  0D01               	mullw	1
 10739  0039D2  0ECC               	movlw	low _blank_m
 10740  0039D4  24F3               	addwf	prodl,w,c
 10741  0039D6  6EF6               	movwf	tblptrl,c
 10742  0039D8  0E75               	movlw	high _blank_m
 10743  0039DA  20F4               	addwfc	prodh,w,c
 10744  0039DC  6EF7               	movwf	tblptrh,c
 10745  0039DE                     	if	0	;There are less than 3 active tblptr bytes
 10746  0039DE                     	endif
 10747  0039DE  0008               	tblrd		*
 10748  0039E0  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10749                           
 10750                           ;Oled.c: 1969: ee_WriteBytes(&temp, 0x40, 1);
 10751  0039E4  0E34               	movlw	low display_blank_mode_pa@temp
 10752  0039E6  0101               	movlb	1	; () banked
 10753  0039E8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10754  0039EA  0E01               	movlw	high display_blank_mode_pa@temp
 10755  0039EC  0101               	movlb	1	; () banked
 10756  0039EE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10757  0039F0  0E40               	movlw	64
 10758  0039F2  0101               	movlb	1	; () banked
 10759  0039F4  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10760  0039F6  0E00               	movlw	0
 10761  0039F8  0101               	movlb	1	; () banked
 10762  0039FA  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10763  0039FC  0E01               	movlw	1
 10764  0039FE  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10765  003A00  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10766  003A04  2A69               	incf	_ms,f,c
 10767  003A06  D7DF               	goto	l12629
 10768  003A08                     l12641:
 10769                           
 10770                           ;Oled.c: 1970: }
 10771                           ;Oled.c: 1973: setYX_LCD(1,x);
 10772  003A08  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10773  003A0C  0E01               	movlw	1
 10774  003A0E  EC8E  F024         	call	_setYX_LCD
 10775                           
 10776                           ;Oled.c: 1974: for(ms=0;ms<23;ms++)
 10777  003A12  0E00               	movlw	0
 10778  003A14  6E69               	movwf	_ms,c
 10779  003A16                     l12645:
 10780  003A16  0E16               	movlw	22
 10781  003A18  6469               	cpfsgt	_ms,c
 10782  003A1A  D001               	goto	l12649
 10783  003A1C  0012               	return	
 10784  003A1E                     l12649:
 10785                           
 10786                           ;Oled.c: 1975: {
 10787                           ;Oled.c: 1976: temp = blank_m[1][ms];
 10788  003A1E  5069               	movf	_ms,w,c
 10789  003A20  0D01               	mullw	1
 10790  003A22  0E17               	movlw	23
 10791  003A24  26F3               	addwf	prodl,f,c
 10792  003A26  0E00               	movlw	0
 10793  003A28  22F4               	addwfc	prodh,f,c
 10794  003A2A  0ECC               	movlw	low _blank_m
 10795  003A2C  24F3               	addwf	prodl,w,c
 10796  003A2E  6EF6               	movwf	tblptrl,c
 10797  003A30  0E75               	movlw	high _blank_m
 10798  003A32  20F4               	addwfc	prodh,w,c
 10799  003A34  6EF7               	movwf	tblptrh,c
 10800  003A36                     	if	0	;There are less than 3 active tblptr bytes
 10801  003A36                     	endif
 10802  003A36  0008               	tblrd		*
 10803  003A38  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10804                           
 10805                           ;Oled.c: 1978: ee_WriteBytes(&temp, 0x40, 1);
 10806  003A3C  0E34               	movlw	low display_blank_mode_pa@temp
 10807  003A3E  0101               	movlb	1	; () banked
 10808  003A40  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10809  003A42  0E01               	movlw	high display_blank_mode_pa@temp
 10810  003A44  0101               	movlb	1	; () banked
 10811  003A46  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10812  003A48  0E40               	movlw	64
 10813  003A4A  0101               	movlb	1	; () banked
 10814  003A4C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10815  003A4E  0E00               	movlw	0
 10816  003A50  0101               	movlb	1	; () banked
 10817  003A52  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10818  003A54  0E01               	movlw	1
 10819  003A56  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10820  003A58  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10821  003A5C  2A69               	incf	_ms,f,c
 10822  003A5E  D7DB               	goto	l12645
 10823  003A60                     l12657:
 10824                           
 10825                           ;Oled.c: 1987: setYX_LCD(0,x);
 10826  003A60  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10827  003A64  0E00               	movlw	0
 10828  003A66  EC8E  F024         	call	_setYX_LCD
 10829                           
 10830                           ;Oled.c: 1988: for(ms=0;ms<23;ms++)
 10831  003A6A  0E00               	movlw	0
 10832  003A6C  6E69               	movwf	_ms,c
 10833  003A6E                     l12661:
 10834  003A6E  0E16               	movlw	22
 10835  003A70  6469               	cpfsgt	_ms,c
 10836  003A72  D001               	goto	l12665
 10837  003A74  D021               	goto	l12677
 10838  003A76                     l12665:
 10839                           
 10840                           ;Oled.c: 1989: {
 10841                           ;Oled.c: 1991: temp = blank_m[0][ms];
 10842  003A76  5069               	movf	_ms,w,c
 10843  003A78  0D01               	mullw	1
 10844  003A7A  0ECC               	movlw	low _blank_m
 10845  003A7C  24F3               	addwf	prodl,w,c
 10846  003A7E  6EF6               	movwf	tblptrl,c
 10847  003A80  0E75               	movlw	high _blank_m
 10848  003A82  20F4               	addwfc	prodh,w,c
 10849  003A84  6EF7               	movwf	tblptrh,c
 10850  003A86                     	if	0	;There are less than 3 active tblptr bytes
 10851  003A86                     	endif
 10852  003A86  0008               	tblrd		*
 10853  003A88  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10854                           
 10855                           ;Oled.c: 1992: tori = temp;
 10856  003A8C  C134  F133         	movff	display_blank_mode_pa@temp,display_blank_mode_pa@tori
 10857                           
 10858                           ;Oled.c: 1994: temp = ~temp;
 10859  003A90  0101               	movlb	1	; () banked
 10860  003A92  1F34               	comf	display_blank_mode_pa@temp& (0+255),f,b
 10861                           
 10862                           ; BSR set to: 1
 10863                           ;Oled.c: 1997: ee_WriteBytes(&temp, 0x40, 1);
 10864  003A94  0E34               	movlw	low display_blank_mode_pa@temp
 10865  003A96  0101               	movlb	1	; () banked
 10866  003A98  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10867  003A9A  0E01               	movlw	high display_blank_mode_pa@temp
 10868  003A9C  0101               	movlb	1	; () banked
 10869  003A9E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10870  003AA0  0E40               	movlw	64
 10871  003AA2  0101               	movlb	1	; () banked
 10872  003AA4  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10873  003AA6  0E00               	movlw	0
 10874  003AA8  0101               	movlb	1	; () banked
 10875  003AAA  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10876  003AAC  0E01               	movlw	1
 10877  003AAE  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10878  003AB0  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10879  003AB4  2A69               	incf	_ms,f,c
 10880  003AB6  D7DB               	goto	l12661
 10881  003AB8                     l12677:
 10882                           
 10883                           ;Oled.c: 1998: }
 10884                           ;Oled.c: 2001: setYX_LCD(1,x);
 10885  003AB8  C131  F0FF         	movff	display_blank_mode_pa@x,setYX_LCD@px
 10886  003ABC  0E01               	movlw	1
 10887  003ABE  EC8E  F024         	call	_setYX_LCD
 10888                           
 10889                           ;Oled.c: 2002: for(ms=0;ms<23;ms++)
 10890  003AC2  0E00               	movlw	0
 10891  003AC4  6E69               	movwf	_ms,c
 10892  003AC6                     l12681:
 10893  003AC6  0E16               	movlw	22
 10894  003AC8  6469               	cpfsgt	_ms,c
 10895  003ACA  D001               	goto	l12685
 10896  003ACC  0012               	return	
 10897  003ACE                     l12685:
 10898                           
 10899                           ;Oled.c: 2003: {
 10900                           ;Oled.c: 2004: temp = blank_m[1][ms];
 10901  003ACE  5069               	movf	_ms,w,c
 10902  003AD0  0D01               	mullw	1
 10903  003AD2  0E17               	movlw	23
 10904  003AD4  26F3               	addwf	prodl,f,c
 10905  003AD6  0E00               	movlw	0
 10906  003AD8  22F4               	addwfc	prodh,f,c
 10907  003ADA  0ECC               	movlw	low _blank_m
 10908  003ADC  24F3               	addwf	prodl,w,c
 10909  003ADE  6EF6               	movwf	tblptrl,c
 10910  003AE0  0E75               	movlw	high _blank_m
 10911  003AE2  20F4               	addwfc	prodh,w,c
 10912  003AE4  6EF7               	movwf	tblptrh,c
 10913  003AE6                     	if	0	;There are less than 3 active tblptr bytes
 10914  003AE6                     	endif
 10915  003AE6  0008               	tblrd		*
 10916  003AE8  CFF5 F134          	movff	tablat,display_blank_mode_pa@temp
 10917                           
 10918                           ;Oled.c: 2005: tori =temp;
 10919  003AEC  C134  F133         	movff	display_blank_mode_pa@temp,display_blank_mode_pa@tori
 10920                           
 10921                           ;Oled.c: 2007: temp = ~temp;
 10922  003AF0  0101               	movlb	1	; () banked
 10923  003AF2  1F34               	comf	display_blank_mode_pa@temp& (0+255),f,b
 10924                           
 10925                           ; BSR set to: 1
 10926                           ;Oled.c: 2010: ee_WriteBytes(&temp, 0x40, 1);
 10927  003AF4  0E34               	movlw	low display_blank_mode_pa@temp
 10928  003AF6  0101               	movlb	1	; () banked
 10929  003AF8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 10930  003AFA  0E01               	movlw	high display_blank_mode_pa@temp
 10931  003AFC  0101               	movlb	1	; () banked
 10932  003AFE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 10933  003B00  0E40               	movlw	64
 10934  003B02  0101               	movlb	1	; () banked
 10935  003B04  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 10936  003B06  0E00               	movlw	0
 10937  003B08  0101               	movlb	1	; () banked
 10938  003B0A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 10939  003B0C  0E01               	movlw	1
 10940  003B0E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 10941  003B10  EC88  F025         	call	_ee_WriteBytes	;wreg free
 10942  003B14  2A69               	incf	_ms,f,c
 10943  003B16  D7D7               	goto	l12681
 10944  003B18                     l12699:
 10945  003B18  0101               	movlb	1	; () banked
 10946  003B1A  5132               	movf	display_blank_mode_pa@mode& (0+255),w,b
 10947                           
 10948                           ; Switch size 1, requested type "space"
 10949                           ; Number of cases is 2, Range of values is 0 to 128
 10950                           ; switch strategies available:
 10951                           ; Name         Instructions Cycles
 10952                           ; simple_byte            7     4 (average)
 10953                           ;	Chosen strategy is simple_byte
 10954  003B1C  0A00               	xorlw	0	; case 0
 10955  003B1E  B4D8               	btfsc	status,2,c
 10956  003B20  D74B               	goto	l12625
 10957  003B22  0A80               	xorlw	128	; case 128
 10958  003B24  A4D8               	btfss	status,2,c
 10959  003B26  0012               	return	
 10960  003B28  D79B               	goto	l12657
 10961  003B2A                     __end_of_display_blank_mode_pa:
 10962                           	opt stack 0
 10963                           tblptru	equ	0xFF8
 10964                           tblptrh	equ	0xFF7
 10965                           tblptrl	equ	0xFF6
 10966                           tablat	equ	0xFF5
 10967                           prodh	equ	0xFF4
 10968                           prodl	equ	0xFF3
 10969                           intcon	equ	0xFF2
 10970                           intcon3	equ	0xFF0
 10971                           postinc0	equ	0xFEE
 10972                           wreg	equ	0xFE8
 10973                           postdec1	equ	0xFE5
 10974                           fsr1h	equ	0xFE2
 10975                           fsr1l	equ	0xFE1
 10976                           status	equ	0xFD8
 10977                           
 10978 ;; *************** function _check_shut_device *****************
 10979 ;; Defined at:
 10980 ;;		line 1871 in file "../gui.c"
 10981 ;; Parameters:    Size  Location     Type
 10982 ;;		None
 10983 ;; Auto vars:     Size  Location     Type
 10984 ;;		None
 10985 ;; Return value:  Size  Location     Type
 10986 ;;                  1    wreg      void 
 10987 ;; Registers used:
 10988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10989 ;; Tracked objects:
 10990 ;;		On entry : 0/0
 10991 ;;		On exit  : 0/0
 10992 ;;		Unchanged: 0/0
 10993 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10994 ;;      Params:         0       0       0       0       0       0       0
 10995 ;;      Locals:         0       0       0       0       0       0       0
 10996 ;;      Temps:          0       0       0       0       0       0       0
 10997 ;;      Totals:         0       0       0       0       0       0       0
 10998 ;;Total ram usage:        0 bytes
 10999 ;; Hardware stack levels used:    1
 11000 ;; Hardware stack levels required when called:    6
 11001 ;; This function calls:
 11002 ;;		_buzz
 11003 ;;		_delay_nms
 11004 ;;		_delay_pwm
 11005 ;;		_shut_device
 11006 ;; This function is called by:
 11007 ;;		_main
 11008 ;; This function uses a non-reentrant model
 11009 ;;
 11010                           
 11011                           	psect	text20
 11012  0046AC                     __ptext20:
 11013                           	opt stack 0
 11014  0046AC                     _check_shut_device:
 11015                           	opt stack 24
 11016                           
 11017                           ;gui.c: 1873: if(hg_op.flag_shut_device == 1)
 11018                           
 11019                           ;incstack = 0
 11020  0046AC  0100               	movlb	0	; () banked
 11021  0046AE  0592               	decf	(_hg_op+18)& (0+255),w,b
 11022  0046B0  A4D8               	btfss	status,2,c
 11023  0046B2  0012               	return	
 11024                           
 11025                           ; BSR set to: 0
 11026                           ;gui.c: 1874: {
 11027                           ;gui.c: 1877: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
 11028  0046B4  A881               	btfss	3969,4,c	;volatile
 11029                           
 11030                           ; BSR set to: 0
 11031  0046B6  AC83               	btfss	3971,6,c	;volatile
 11032  0046B8  D030               	goto	l15049
 11033                           
 11034                           ; BSR set to: 0
 11035  0046BA  BE83               	btfsc	3971,7,c	;volatile
 11036                           
 11037                           ; BSR set to: 0
 11038  0046BC  A681               	btfss	3969,3,c	;volatile
 11039  0046BE  D02D               	goto	l15049
 11040                           
 11041                           ; BSR set to: 0
 11042                           ;gui.c: 1878: {
 11043                           ;gui.c: 1879: delay_nms(4);
 11044  0046C0  0E04               	movlw	4
 11045  0046C2  0101               	movlb	1	; () banked
 11046  0046C4  6F28               	movwf	delay_nms@n& (0+255),b
 11047  0046C6  0E00               	movlw	0
 11048  0046C8  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 11049  0046CA  0E00               	movlw	0
 11050  0046CC  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 11051  0046CE  0E00               	movlw	0
 11052  0046D0  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 11053  0046D2  EC39  F025         	call	_delay_nms	;wreg free
 11054                           
 11055                           ;gui.c: 1880: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
 11056  0046D6  A881               	btfss	3969,4,c	;volatile
 11057  0046D8  AC83               	btfss	3971,6,c	;volatile
 11058  0046DA  D01F               	goto	l15049
 11059  0046DC  BE83               	btfsc	3971,7,c	;volatile
 11060  0046DE  A681               	btfss	3969,3,c	;volatile
 11061  0046E0  D01C               	goto	l15049
 11062                           
 11063                           ;gui.c: 1881: {
 11064                           ;gui.c: 1882: buzz();
 11065  0046E2  ECFE  F026         	call	_buzz	;wreg free
 11066                           
 11067                           ;gui.c: 1883: test_mode =0;
 11068  0046E6  0E00               	movlw	0
 11069  0046E8  0100               	movlb	0	; () banked
 11070  0046EA  6FF2               	movwf	_test_mode& (0+255),b
 11071                           
 11072                           ; BSR set to: 0
 11073                           ;gui.c: 1885: if(hg_op.status_powerup == 0x01)
 11074  0046EC  0100               	movlb	0	; () banked
 11075  0046EE  0583               	decf	(_hg_op+3)& (0+255),w,b
 11076  0046F0  A4D8               	btfss	status,2,c
 11077  0046F2  D013               	goto	l15049
 11078                           
 11079                           ; BSR set to: 0
 11080                           ;gui.c: 1886: {
 11081                           ;gui.c: 1888: delay_pwm(400000);
 11082  0046F4  0E80               	movlw	128
 11083  0046F6  0101               	movlb	1	; () banked
 11084  0046F8  6F2C               	movwf	delay_pwm@n& (0+255),b
 11085  0046FA  0E1A               	movlw	26
 11086  0046FC  6F2D               	movwf	(delay_pwm@n+1)& (0+255),b
 11087  0046FE  0E06               	movlw	6
 11088  004700  6F2E               	movwf	(delay_pwm@n+2)& (0+255),b
 11089  004702  0E00               	movlw	0
 11090  004704  6F2F               	movwf	(delay_pwm@n+3)& (0+255),b
 11091  004706  EC73  F026         	call	_delay_pwm	;wreg free
 11092                           
 11093                           ;gui.c: 1889: if(PORTBbits.RB4 == 0 && PORTDbits.RD6 == 1 && PORTDbits.RD7 ==1 && PORTBb
      +                          its.RB3 ==1)
 11094  00470A  A881               	btfss	3969,4,c	;volatile
 11095  00470C  AC83               	btfss	3971,6,c	;volatile
 11096  00470E  D005               	goto	l15049
 11097  004710  BE83               	btfsc	3971,7,c	;volatile
 11098  004712  A681               	btfss	3969,3,c	;volatile
 11099  004714  D002               	goto	l15049
 11100                           
 11101                           ;gui.c: 1890: {
 11102                           ;gui.c: 1892: shut_device();
 11103  004716  ECAE  F025         	call	_shut_device	;wreg free
 11104  00471A                     l15049:
 11105                           
 11106                           ;gui.c: 1913: }
 11107                           ;gui.c: 1914: }
 11108                           ;gui.c: 1915: }
 11109                           ;gui.c: 1917: }
 11110                           ;gui.c: 1920: hg_op.flag_shut_device = 0;
 11111  00471A  0E00               	movlw	0
 11112  00471C  0100               	movlb	0	; () banked
 11113  00471E  6F92               	movwf	(_hg_op+18)& (0+255),b
 11114  004720  0012               	return	
 11115  004722                     __end_of_check_shut_device:
 11116                           	opt stack 0
 11117                           tblptru	equ	0xFF8
 11118                           tblptrh	equ	0xFF7
 11119                           tblptrl	equ	0xFF6
 11120                           tablat	equ	0xFF5
 11121                           prodh	equ	0xFF4
 11122                           prodl	equ	0xFF3
 11123                           intcon	equ	0xFF2
 11124                           intcon3	equ	0xFF0
 11125                           postinc0	equ	0xFEE
 11126                           wreg	equ	0xFE8
 11127                           postdec1	equ	0xFE5
 11128                           fsr1h	equ	0xFE2
 11129                           fsr1l	equ	0xFE1
 11130                           status	equ	0xFD8
 11131                           
 11132 ;; *************** function _check_device_idle *****************
 11133 ;; Defined at:
 11134 ;;		line 1847 in file "../gui.c"
 11135 ;; Parameters:    Size  Location     Type
 11136 ;;		None
 11137 ;; Auto vars:     Size  Location     Type
 11138 ;;		None
 11139 ;; Return value:  Size  Location     Type
 11140 ;;                  2  152[None  ] int 
 11141 ;; Registers used:
 11142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11143 ;; Tracked objects:
 11144 ;;		On entry : 0/0
 11145 ;;		On exit  : 0/0
 11146 ;;		Unchanged: 0/0
 11147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11148 ;;      Params:         0       0       0       0       0       0       0
 11149 ;;      Locals:         0       0       0       0       0       0       0
 11150 ;;      Temps:          0       0       0       0       0       0       0
 11151 ;;      Totals:         0       0       0       0       0       0       0
 11152 ;;Total ram usage:        0 bytes
 11153 ;; Hardware stack levels used:    1
 11154 ;; Hardware stack levels required when called:    6
 11155 ;; This function calls:
 11156 ;;		_delay_nms
 11157 ;;		_shut_device
 11158 ;; This function is called by:
 11159 ;;		_main
 11160 ;; This function uses a non-reentrant model
 11161 ;;
 11162                           
 11163                           	psect	text21
 11164  004722                     __ptext21:
 11165                           	opt stack 0
 11166  004722                     _check_device_idle:
 11167                           	opt stack 24
 11168                           
 11169                           ;gui.c: 1851: if(hg_op.working_mode == 0x03)
 11170                           
 11171                           ; BSR set to: 0
 11172                           ;incstack = 0
 11173  004722  0E03               	movlw	3
 11174  004724  0100               	movlb	0	; () banked
 11175  004726  1980               	xorwf	_hg_op& (0+255),w,b
 11176  004728  A4D8               	btfss	status,2,c
 11177  00472A  D02C               	goto	l15103
 11178                           
 11179                           ; BSR set to: 0
 11180                           ;gui.c: 1852: {
 11181                           ;gui.c: 1853: hg_op.cnt_device_idle ++;
 11182  00472C  0E01               	movlw	1
 11183  00472E  0100               	movlb	0	; () banked
 11184  004730  2793               	addwf	(_hg_op+19)& (0+255),f,b
 11185  004732  0E00               	movlw	0
 11186  004734  2394               	addwfc	(_hg_op+20)& (0+255),f,b
 11187  004736  2395               	addwfc	(_hg_op+21)& (0+255),f,b
 11188  004738  2396               	addwfc	(_hg_op+22)& (0+255),f,b
 11189                           
 11190                           ; BSR set to: 0
 11191                           ;gui.c: 1854: delay_nms(1);
 11192  00473A  0E01               	movlw	1
 11193  00473C  0101               	movlb	1	; () banked
 11194  00473E  6F28               	movwf	delay_nms@n& (0+255),b
 11195  004740  0E00               	movlw	0
 11196  004742  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 11197  004744  0E00               	movlw	0
 11198  004746  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 11199  004748  0E00               	movlw	0
 11200  00474A  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 11201  00474C  EC39  F025         	call	_delay_nms	;wreg free
 11202                           
 11203                           ;gui.c: 1855: if(hg_op.cnt_device_idle > (100000))
 11204  004750  0100               	movlb	0	; () banked
 11205  004752  5196               	movf	(_hg_op+22)& (0+255),w,b
 11206  004754  E10B               	bnz	u19280
 11207  004756  0EA1               	movlw	161
 11208  004758  0100               	movlb	0	; () banked
 11209  00475A  5D93               	subwf	(_hg_op+19)& (0+255),w,b
 11210  00475C  0E86               	movlw	134
 11211  00475E  0100               	movlb	0	; () banked
 11212  004760  5994               	subwfb	(_hg_op+20)& (0+255),w,b
 11213  004762  0E01               	movlw	1
 11214  004764  0100               	movlb	0	; () banked
 11215  004766  5995               	subwfb	(_hg_op+21)& (0+255),w,b
 11216  004768  A0D8               	btfss	status,0,c
 11217  00476A  0012               	return	
 11218  00476C                     u19280:
 11219                           
 11220                           ; BSR set to: 0
 11221                           ;gui.c: 1856: {
 11222                           ;gui.c: 1857: hg_op.cnt_device_idle = 0;
 11223  00476C  0E00               	movlw	0
 11224  00476E  0100               	movlb	0	; () banked
 11225  004770  6F93               	movwf	(_hg_op+19)& (0+255),b
 11226  004772  0E00               	movlw	0
 11227  004774  6F94               	movwf	(_hg_op+20)& (0+255),b
 11228  004776  0E00               	movlw	0
 11229  004778  6F95               	movwf	(_hg_op+21)& (0+255),b
 11230  00477A  0E00               	movlw	0
 11231  00477C  6F96               	movwf	(_hg_op+22)& (0+255),b
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;gui.c: 1858: shut_device();
 11235  00477E  ECAE  F025         	call	_shut_device	;wreg free
 11236                           
 11237                           ;gui.c: 1859: }
 11238                           ;gui.c: 1860: }
 11239  004782  0012               	return	
 11240  004784                     l15103:
 11241                           
 11242                           ;gui.c: 1861: else
 11243                           ;gui.c: 1862: {
 11244                           ;gui.c: 1863: hg_op.cnt_device_idle = 0;
 11245  004784  0E00               	movlw	0
 11246  004786  0100               	movlb	0	; () banked
 11247  004788  6F93               	movwf	(_hg_op+19)& (0+255),b
 11248  00478A  0E00               	movlw	0
 11249  00478C  6F94               	movwf	(_hg_op+20)& (0+255),b
 11250  00478E  0E00               	movlw	0
 11251  004790  6F95               	movwf	(_hg_op+21)& (0+255),b
 11252  004792  0E00               	movlw	0
 11253  004794  6F96               	movwf	(_hg_op+22)& (0+255),b
 11254  004796  0012               	return	
 11255  004798                     __end_of_check_device_idle:
 11256                           	opt stack 0
 11257                           tblptru	equ	0xFF8
 11258                           tblptrh	equ	0xFF7
 11259                           tblptrl	equ	0xFF6
 11260                           tablat	equ	0xFF5
 11261                           prodh	equ	0xFF4
 11262                           prodl	equ	0xFF3
 11263                           intcon	equ	0xFF2
 11264                           intcon3	equ	0xFF0
 11265                           postinc0	equ	0xFEE
 11266                           wreg	equ	0xFE8
 11267                           postdec1	equ	0xFE5
 11268                           fsr1h	equ	0xFE2
 11269                           fsr1l	equ	0xFE1
 11270                           status	equ	0xFD8
 11271                           
 11272 ;; *************** function _shut_device *****************
 11273 ;; Defined at:
 11274 ;;		line 1821 in file "../gui.c"
 11275 ;; Parameters:    Size  Location     Type
 11276 ;;		None
 11277 ;; Auto vars:     Size  Location     Type
 11278 ;;		None
 11279 ;; Return value:  Size  Location     Type
 11280 ;;                  1    wreg      void 
 11281 ;; Registers used:
 11282 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11283 ;; Tracked objects:
 11284 ;;		On entry : 0/0
 11285 ;;		On exit  : 0/0
 11286 ;;		Unchanged: 0/0
 11287 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11288 ;;      Params:         0       0       0       0       0       0       0
 11289 ;;      Locals:         0       0       0       0       0       0       0
 11290 ;;      Temps:          0       0       0       0       0       0       0
 11291 ;;      Totals:         0       0       0       0       0       0       0
 11292 ;;Total ram usage:        0 bytes
 11293 ;; Hardware stack levels used:    1
 11294 ;; Hardware stack levels required when called:    5
 11295 ;; This function calls:
 11296 ;;		_LCD_Off
 11297 ;;		_ee_WriteBytes
 11298 ;; This function is called by:
 11299 ;;		_check_device_idle
 11300 ;;		_check_shut_device
 11301 ;; This function uses a non-reentrant model
 11302 ;;
 11303                           
 11304                           	psect	text22
 11305  004B5C                     __ptext22:
 11306                           	opt stack 0
 11307  004B5C                     _shut_device:
 11308                           	opt stack 24
 11309                           
 11310                           ;gui.c: 1824: hg_op.status_powerup = 0x00;
 11311                           
 11312                           ;incstack = 0
 11313  004B5C  0E00               	movlw	0
 11314  004B5E  0100               	movlb	0	; () banked
 11315  004B60  6F83               	movwf	(_hg_op+3)& (0+255),b
 11316                           
 11317                           ; BSR set to: 0
 11318                           ;gui.c: 1826: LCD_Off();
 11319  004B62  EC58  F027         	call	_LCD_Off	;wreg free
 11320                           
 11321                           ;gui.c: 1828: write_buf[0]=0x25;
 11322  004B66  0E25               	movlw	37
 11323  004B68  0102               	movlb	2	; () banked
 11324  004B6A  6F00               	movwf	_write_buf& (0+255),b
 11325                           
 11326                           ; BSR set to: 2
 11327                           ;gui.c: 1829: ee_WriteBytes(write_buf, 0x00, 1);
 11328  004B6C  0E00               	movlw	low _write_buf
 11329  004B6E  0101               	movlb	1	; () banked
 11330  004B70  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11331  004B72  0E02               	movlw	high _write_buf
 11332  004B74  0101               	movlb	1	; () banked
 11333  004B76  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11334  004B78  0E00               	movlw	0
 11335  004B7A  0101               	movlb	1	; () banked
 11336  004B7C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11337  004B7E  0E00               	movlw	0
 11338  004B80  0101               	movlb	1	; () banked
 11339  004B82  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11340  004B84  0E01               	movlw	1
 11341  004B86  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11342  004B88  EC88  F025         	call	_ee_WriteBytes	;wreg free
 11343                           
 11344                           ;gui.c: 1831: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 11345  004B8C  848B               	bsf	3979,2,c	;volatile
 11346  004B8E  908C               	bcf	3980,0,c	;volatile
 11347  004B90  928C               	bcf	3980,1,c	;volatile
 11348                           
 11349                           ;gui.c: 1832: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 11350  004B92  888C               	bsf	3980,4,c	;volatile
 11351  004B94  948C               	bcf	3980,2,c	;volatile
 11352  004B96  968C               	bcf	3980,3,c	;volatile
 11353                           
 11354                           ;gui.c: 1837: hg_op.working_mode = 0x03;
 11355  004B98  0E03               	movlw	3
 11356  004B9A  0100               	movlb	0	; () banked
 11357  004B9C  6F80               	movwf	_hg_op& (0+255),b
 11358                           
 11359                           ; BSR set to: 0
 11360                           ;gui.c: 1838: hg_op.need_reset =0;
 11361  004B9E  0E00               	movlw	0
 11362  004BA0  0100               	movlb	0	; () banked
 11363  004BA2  6F85               	movwf	(_hg_op+5)& (0+255),b
 11364                           
 11365                           ; BSR set to: 0
 11366  004BA4  0012               	return		;funcret
 11367  004BA6                     __end_of_shut_device:
 11368                           	opt stack 0
 11369                           tblptru	equ	0xFF8
 11370                           tblptrh	equ	0xFF7
 11371                           tblptrl	equ	0xFF6
 11372                           tablat	equ	0xFF5
 11373                           prodh	equ	0xFF4
 11374                           prodl	equ	0xFF3
 11375                           intcon	equ	0xFF2
 11376                           intcon3	equ	0xFF0
 11377                           postinc0	equ	0xFEE
 11378                           wreg	equ	0xFE8
 11379                           postdec1	equ	0xFE5
 11380                           fsr1h	equ	0xFE2
 11381                           fsr1l	equ	0xFE1
 11382                           status	equ	0xFD8
 11383                           
 11384 ;; *************** function _check_bat *****************
 11385 ;; Defined at:
 11386 ;;		line 1661 in file "../Oled.c"
 11387 ;; Parameters:    Size  Location     Type
 11388 ;;		None
 11389 ;; Auto vars:     Size  Location     Type
 11390 ;;		None
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  1    wreg      void 
 11393 ;; Registers used:
 11394 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11400 ;;      Params:         0       0       0       0       0       0       0
 11401 ;;      Locals:         0       0       0       0       0       0       0
 11402 ;;      Temps:          0       0       0       0       0       0       0
 11403 ;;      Totals:         0       0       0       0       0       0       0
 11404 ;;Total ram usage:        0 bytes
 11405 ;; Hardware stack levels used:    1
 11406 ;; Hardware stack levels required when called:    7
 11407 ;; This function calls:
 11408 ;;		_display_bat
 11409 ;;		_display_bat_blank
 11410 ;; This function is called by:
 11411 ;;		_main
 11412 ;; This function uses a non-reentrant model
 11413 ;;
 11414                           
 11415                           	psect	text23
 11416  004BF0                     __ptext23:
 11417                           	opt stack 0
 11418  004BF0                     _check_bat:
 11419                           	opt stack 23
 11420                           
 11421                           ;Oled.c: 1663: static uint8_t bat_flip =1;
 11422                           ;Oled.c: 1664: if( hg_op.bat_volume == 1)
 11423                           
 11424                           ; BSR set to: 0
 11425                           ;incstack = 0
 11426  004BF0  0100               	movlb	0	; () banked
 11427  004BF2  0587               	decf	(_hg_op+7)& (0+255),w,b
 11428  004BF4  A4D8               	btfss	status,2,c
 11429  004BF6  0012               	return	
 11430                           
 11431                           ; BSR set to: 0
 11432                           ;Oled.c: 1665: {
 11433                           ;Oled.c: 1667: if(bat_flip)
 11434  004BF8  5068               	movf	check_bat@bat_flip,w,c
 11435  004BFA  B4D8               	btfsc	status,2,c
 11436  004BFC  D00B               	goto	l940
 11437                           
 11438                           ; BSR set to: 0
 11439                           ;Oled.c: 1668: {
 11440                           ;Oled.c: 1669: display_bat(1,(0 + 2),0);
 11441  004BFE  0E02               	movlw	2
 11442  004C00  0101               	movlb	1	; () banked
 11443  004C02  6F31               	movwf	display_bat@x& (0+255),b
 11444  004C04  0E00               	movlw	0
 11445  004C06  0101               	movlb	1	; () banked
 11446  004C08  6F32               	movwf	display_bat@mode& (0+255),b
 11447  004C0A  0E01               	movlw	1
 11448  004C0C  ECAA  F010         	call	_display_bat
 11449                           
 11450                           ;Oled.c: 1670: bat_flip =0;
 11451  004C10  0E00               	movlw	0
 11452  004C12  D00C               	goto	L15
 11453  004C14                     l940:
 11454                           
 11455                           ; BSR set to: 0
 11456                           ;Oled.c: 1672: else
 11457                           ;Oled.c: 1673: {
 11458                           ;Oled.c: 1674: if(PORTAbits.RA3 == 0)
 11459  004C14  B680               	btfsc	3968,3,c	;volatile
 11460  004C16  D009               	goto	l14881
 11461                           
 11462                           ; BSR set to: 0
 11463                           ;Oled.c: 1675: {
 11464                           ;Oled.c: 1676: display_bat_blank(1,(0 + 2),0);
 11465  004C18  0E02               	movlw	2
 11466  004C1A  0101               	movlb	1	; () banked
 11467  004C1C  6F31               	movwf	display_bat_blank@x& (0+255),b
 11468  004C1E  0E00               	movlw	0
 11469  004C20  0101               	movlb	1	; () banked
 11470  004C22  6F32               	movwf	display_bat_blank@mode& (0+255),b
 11471  004C24  0E01               	movlw	1
 11472  004C26  EC57  F01A         	call	_display_bat_blank
 11473  004C2A                     l14881:
 11474                           
 11475                           ;Oled.c: 1677: }
 11476                           ;Oled.c: 1679: bat_flip =1;
 11477  004C2A  0E01               	movlw	1
 11478  004C2C                     L15:
 11479  004C2C  6E68               	movwf	check_bat@bat_flip,c
 11480                           
 11481                           ;Oled.c: 1680: }
 11482                           ;Oled.c: 1681: hg_op.bat_volume =0;
 11483  004C2E  0E00               	movlw	0
 11484  004C30  0100               	movlb	0	; () banked
 11485  004C32  6F87               	movwf	(_hg_op+7)& (0+255),b
 11486  004C34  0012               	return	
 11487  004C36                     __end_of_check_bat:
 11488                           	opt stack 0
 11489                           tblptru	equ	0xFF8
 11490                           tblptrh	equ	0xFF7
 11491                           tblptrl	equ	0xFF6
 11492                           tablat	equ	0xFF5
 11493                           prodh	equ	0xFF4
 11494                           prodl	equ	0xFF3
 11495                           intcon	equ	0xFF2
 11496                           intcon3	equ	0xFF0
 11497                           postinc0	equ	0xFEE
 11498                           wreg	equ	0xFE8
 11499                           postdec1	equ	0xFE5
 11500                           fsr1h	equ	0xFE2
 11501                           fsr1l	equ	0xFE1
 11502                           status	equ	0xFD8
 11503                           
 11504 ;; *************** function _display_bat_blank *****************
 11505 ;; Defined at:
 11506 ;;		line 1692 in file "../Oled.c"
 11507 ;; Parameters:    Size  Location     Type
 11508 ;;  y               1    wreg     unsigned char 
 11509 ;;  x               1    9[BANK1 ] unsigned char 
 11510 ;;  mode            1   10[BANK1 ] unsigned char 
 11511 ;; Auto vars:     Size  Location     Type
 11512 ;;  y               1    0[COMRAM] unsigned char 
 11513 ;;  temp            1   14[BANK1 ] unsigned char 
 11514 ;;  tori            1   13[BANK1 ] unsigned char 
 11515 ;; Return value:  Size  Location     Type
 11516 ;;                  1    wreg      void 
 11517 ;; Registers used:
 11518 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11519 ;; Tracked objects:
 11520 ;;		On entry : 0/0
 11521 ;;		On exit  : 0/0
 11522 ;;		Unchanged: 0/0
 11523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11524 ;;      Params:         0       0       2       0       0       0       0
 11525 ;;      Locals:         0       0       2       0       0       0       0
 11526 ;;      Temps:          0       0       2       0       0       0       0
 11527 ;;      Totals:         0       0       6       0       0       0       0
 11528 ;;Total ram usage:        6 bytes
 11529 ;; Hardware stack levels used:    1
 11530 ;; Hardware stack levels required when called:    6
 11531 ;; This function calls:
 11532 ;;		_ee_WriteBytes
 11533 ;;		_setYX_LCD
 11534 ;; This function is called by:
 11535 ;;		_check_bat
 11536 ;; This function uses a non-reentrant model
 11537 ;;
 11538                           
 11539                           	psect	text24
 11540  0034AE                     __ptext24:
 11541                           	opt stack 0
 11542  0034AE                     _display_bat_blank:
 11543                           	opt stack 23
 11544                           
 11545                           ;Oled.c: 1694: uint8_t temp =0;
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;incstack = 0
 11549  0034AE  0E00               	movlw	0
 11550  0034B0  0101               	movlb	1	; () banked
 11551  0034B2  6F36               	movwf	display_bat_blank@temp& (0+255),b
 11552                           
 11553                           ;Oled.c: 1695: uint8_t tori =0;
 11554  0034B4  0E00               	movlw	0
 11555  0034B6  0101               	movlb	1	; () banked
 11556  0034B8  6F35               	movwf	display_bat_blank@tori& (0+255),b
 11557                           
 11558                           ;Oled.c: 1698: bat_x_m = bat00_m;
 11559  0034BA  0EC2               	movlw	low _bat00_m
 11560  0034BC  6E49               	movwf	_bat_x_m,c
 11561  0034BE  0E7F               	movlw	high _bat00_m
 11562  0034C0  6E4A               	movwf	_bat_x_m+1,c
 11563                           
 11564                           ;Oled.c: 1699: switch(mode)
 11565  0034C2  D0D2               	goto	l13167
 11566  0034C4                     l13093:
 11567                           
 11568                           ; BSR set to: 1
 11569                           ;Oled.c: 1705: setYX_LCD(0,x);
 11570  0034C4  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11571  0034C8  0E00               	movlw	0
 11572  0034CA  EC8E  F024         	call	_setYX_LCD
 11573                           
 11574                           ;Oled.c: 1706: for(ms=0;ms<23;ms++)
 11575  0034CE  0E00               	movlw	0
 11576  0034D0  6E69               	movwf	_ms,c
 11577  0034D2                     l13097:
 11578  0034D2  0E16               	movlw	22
 11579  0034D4  6469               	cpfsgt	_ms,c
 11580  0034D6  D001               	goto	l13101
 11581  0034D8  D025               	goto	l13109
 11582  0034DA                     l13101:
 11583                           
 11584                           ;Oled.c: 1707: {
 11585                           ;Oled.c: 1709: temp =bat_x_m[0][ms];
 11586  0034DA  5069               	movf	_ms,w,c
 11587  0034DC  0D01               	mullw	1
 11588  0034DE  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11589  0034E2  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11590  0034E6  50F3               	movf	prodl,w,c
 11591  0034E8  0101               	movlb	1	; () banked
 11592  0034EA  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11593  0034EC  50F4               	movf	prodh,w,c
 11594  0034EE  0101               	movlb	1	; () banked
 11595  0034F0  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11596  0034F2  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11597  0034F6  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11598  0034FA                     	if	0	;tblptru may be non-zero
 11599  0034FA                     	endif
 11600  0034FA                     	if	0	;tblptru may be non-zero
 11601  0034FA                     	endif
 11602  0034FA  0008               	tblrd		*
 11603  0034FC  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11604                           
 11605                           ; BSR set to: 1
 11606                           ;Oled.c: 1711: ee_WriteBytes(&temp, 0x40, 1);
 11607  003500  0E36               	movlw	low display_bat_blank@temp
 11608  003502  0101               	movlb	1	; () banked
 11609  003504  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11610  003506  0E01               	movlw	high display_bat_blank@temp
 11611  003508  0101               	movlb	1	; () banked
 11612  00350A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11613  00350C  0E40               	movlw	64
 11614  00350E  0101               	movlb	1	; () banked
 11615  003510  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11616  003512  0E00               	movlw	0
 11617  003514  0101               	movlb	1	; () banked
 11618  003516  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11619  003518  0E01               	movlw	1
 11620  00351A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11621  00351C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 11622  003520  2A69               	incf	_ms,f,c
 11623  003522  D7D7               	goto	l13097
 11624  003524                     l13109:
 11625                           
 11626                           ;Oled.c: 1712: }
 11627                           ;Oled.c: 1715: setYX_LCD(1,x);
 11628  003524  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11629  003528  0E01               	movlw	1
 11630  00352A  EC8E  F024         	call	_setYX_LCD
 11631                           
 11632                           ;Oled.c: 1716: for(ms=0;ms<23;ms++)
 11633  00352E  0E00               	movlw	0
 11634  003530  6E69               	movwf	_ms,c
 11635  003532                     l13113:
 11636  003532  0E16               	movlw	22
 11637  003534  6469               	cpfsgt	_ms,c
 11638  003536  D001               	goto	l13117
 11639  003538  0012               	return	
 11640  00353A                     l13117:
 11641                           
 11642                           ;Oled.c: 1717: {
 11643                           ;Oled.c: 1718: temp = bat_x_m[1][ms];
 11644  00353A  5069               	movf	_ms,w,c
 11645  00353C  0D01               	mullw	1
 11646  00353E  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11647  003542  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11648  003546  50F3               	movf	prodl,w,c
 11649  003548  0101               	movlb	1	; () banked
 11650  00354A  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11651  00354C  50F4               	movf	prodh,w,c
 11652  00354E  0101               	movlb	1	; () banked
 11653  003550  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11654  003552  0E17               	movlw	23
 11655  003554  0101               	movlb	1	; () banked
 11656  003556  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11657  003558  0E00               	movlw	0
 11658  00355A  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11659  00355C  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11660  003560  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11661  003564                     	if	0	;tblptru may be non-zero
 11662  003564                     	endif
 11663  003564                     	if	0	;tblptru may be non-zero
 11664  003564                     	endif
 11665  003564  0008               	tblrd		*
 11666  003566  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11667                           
 11668                           ; BSR set to: 1
 11669                           ;Oled.c: 1720: ee_WriteBytes(&temp, 0x40, 1);
 11670  00356A  0E36               	movlw	low display_bat_blank@temp
 11671  00356C  0101               	movlb	1	; () banked
 11672  00356E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11673  003570  0E01               	movlw	high display_bat_blank@temp
 11674  003572  0101               	movlb	1	; () banked
 11675  003574  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11676  003576  0E40               	movlw	64
 11677  003578  0101               	movlb	1	; () banked
 11678  00357A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11679  00357C  0E00               	movlw	0
 11680  00357E  0101               	movlb	1	; () banked
 11681  003580  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11682  003582  0E01               	movlw	1
 11683  003584  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11684  003586  EC88  F025         	call	_ee_WriteBytes	;wreg free
 11685  00358A  2A69               	incf	_ms,f,c
 11686  00358C  D7D2               	goto	l13113
 11687  00358E                     l13125:
 11688                           
 11689                           ;Oled.c: 1729: setYX_LCD(0,x);
 11690  00358E  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11691  003592  0E00               	movlw	0
 11692  003594  EC8E  F024         	call	_setYX_LCD
 11693                           
 11694                           ;Oled.c: 1730: for(ms=0;ms<23;ms++)
 11695  003598  0E00               	movlw	0
 11696  00359A  6E69               	movwf	_ms,c
 11697  00359C                     l13129:
 11698  00359C  0E16               	movlw	22
 11699  00359E  6469               	cpfsgt	_ms,c
 11700  0035A0  D001               	goto	l13133
 11701  0035A2  D029               	goto	l13145
 11702  0035A4                     l13133:
 11703                           
 11704                           ;Oled.c: 1731: {
 11705                           ;Oled.c: 1733: temp = bat_x_m[0][ms];
 11706  0035A4  5069               	movf	_ms,w,c
 11707  0035A6  0D01               	mullw	1
 11708  0035A8  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11709  0035AC  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11710  0035B0  50F3               	movf	prodl,w,c
 11711  0035B2  0101               	movlb	1	; () banked
 11712  0035B4  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11713  0035B6  50F4               	movf	prodh,w,c
 11714  0035B8  0101               	movlb	1	; () banked
 11715  0035BA  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11716  0035BC  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11717  0035C0  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11718  0035C4                     	if	0	;tblptru may be non-zero
 11719  0035C4                     	endif
 11720  0035C4                     	if	0	;tblptru may be non-zero
 11721  0035C4                     	endif
 11722  0035C4  0008               	tblrd		*
 11723  0035C6  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11724                           
 11725                           ; BSR set to: 1
 11726                           ;Oled.c: 1734: tori = temp;
 11727  0035CA  C136  F135         	movff	display_bat_blank@temp,display_bat_blank@tori
 11728                           
 11729                           ; BSR set to: 1
 11730                           ;Oled.c: 1736: temp = ~temp;
 11731  0035CE  0101               	movlb	1	; () banked
 11732  0035D0  1F36               	comf	display_bat_blank@temp& (0+255),f,b
 11733                           
 11734                           ; BSR set to: 1
 11735                           ;Oled.c: 1739: ee_WriteBytes(&temp, 0x40, 1);
 11736  0035D2  0E36               	movlw	low display_bat_blank@temp
 11737  0035D4  0101               	movlb	1	; () banked
 11738  0035D6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11739  0035D8  0E01               	movlw	high display_bat_blank@temp
 11740  0035DA  0101               	movlb	1	; () banked
 11741  0035DC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11742  0035DE  0E40               	movlw	64
 11743  0035E0  0101               	movlb	1	; () banked
 11744  0035E2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11745  0035E4  0E00               	movlw	0
 11746  0035E6  0101               	movlb	1	; () banked
 11747  0035E8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11748  0035EA  0E01               	movlw	1
 11749  0035EC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11750  0035EE  EC88  F025         	call	_ee_WriteBytes	;wreg free
 11751  0035F2  2A69               	incf	_ms,f,c
 11752  0035F4  D7D3               	goto	l13129
 11753  0035F6                     l13145:
 11754                           
 11755                           ;Oled.c: 1740: }
 11756                           ;Oled.c: 1743: setYX_LCD(1,x);
 11757  0035F6  C131  F0FF         	movff	display_bat_blank@x,setYX_LCD@px
 11758  0035FA  0E01               	movlw	1
 11759  0035FC  EC8E  F024         	call	_setYX_LCD
 11760                           
 11761                           ;Oled.c: 1744: for(ms=0;ms<23;ms++)
 11762  003600  0E00               	movlw	0
 11763  003602  6E69               	movwf	_ms,c
 11764  003604                     l13149:
 11765  003604  0E16               	movlw	22
 11766  003606  6469               	cpfsgt	_ms,c
 11767  003608  D001               	goto	l13153
 11768  00360A  0012               	return	
 11769  00360C                     l13153:
 11770                           
 11771                           ;Oled.c: 1745: {
 11772                           ;Oled.c: 1746: temp = bat_x_m[1][ms];
 11773  00360C  5069               	movf	_ms,w,c
 11774  00360E  0D01               	mullw	1
 11775  003610  C049  F133         	movff	_bat_x_m,??_display_bat_blank
 11776  003614  C04A  F134         	movff	_bat_x_m+1,??_display_bat_blank+1
 11777  003618  50F3               	movf	prodl,w,c
 11778  00361A  0101               	movlb	1	; () banked
 11779  00361C  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11780  00361E  50F4               	movf	prodh,w,c
 11781  003620  0101               	movlb	1	; () banked
 11782  003622  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11783  003624  0E17               	movlw	23
 11784  003626  0101               	movlb	1	; () banked
 11785  003628  2733               	addwf	??_display_bat_blank& (0+255),f,b
 11786  00362A  0E00               	movlw	0
 11787  00362C  2334               	addwfc	(??_display_bat_blank+1)& (0+255),f,b
 11788  00362E  C133  FFF6         	movff	??_display_bat_blank,tblptrl
 11789  003632  C134  FFF7         	movff	??_display_bat_blank+1,tblptrh
 11790  003636                     	if	0	;tblptru may be non-zero
 11791  003636                     	endif
 11792  003636                     	if	0	;tblptru may be non-zero
 11793  003636                     	endif
 11794  003636  0008               	tblrd		*
 11795  003638  CFF5 F136          	movff	tablat,display_bat_blank@temp
 11796                           
 11797                           ; BSR set to: 1
 11798                           ;Oled.c: 1747: tori =temp;
 11799  00363C  C136  F135         	movff	display_bat_blank@temp,display_bat_blank@tori
 11800                           
 11801                           ; BSR set to: 1
 11802                           ;Oled.c: 1749: temp = ~temp;
 11803  003640  0101               	movlb	1	; () banked
 11804  003642  1F36               	comf	display_bat_blank@temp& (0+255),f,b
 11805                           
 11806                           ; BSR set to: 1
 11807                           ;Oled.c: 1752: ee_WriteBytes(&temp, 0x40, 1);
 11808  003644  0E36               	movlw	low display_bat_blank@temp
 11809  003646  0101               	movlb	1	; () banked
 11810  003648  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 11811  00364A  0E01               	movlw	high display_bat_blank@temp
 11812  00364C  0101               	movlb	1	; () banked
 11813  00364E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 11814  003650  0E40               	movlw	64
 11815  003652  0101               	movlb	1	; () banked
 11816  003654  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 11817  003656  0E00               	movlw	0
 11818  003658  0101               	movlb	1	; () banked
 11819  00365A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 11820  00365C  0E01               	movlw	1
 11821  00365E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 11822  003660  EC88  F025         	call	_ee_WriteBytes	;wreg free
 11823  003664  2A69               	incf	_ms,f,c
 11824  003666  D7CE               	goto	l13149
 11825  003668                     l13167:
 11826  003668  0101               	movlb	1	; () banked
 11827  00366A  5132               	movf	display_bat_blank@mode& (0+255),w,b
 11828                           
 11829                           ; Switch size 1, requested type "space"
 11830                           ; Number of cases is 2, Range of values is 0 to 128
 11831                           ; switch strategies available:
 11832                           ; Name         Instructions Cycles
 11833                           ; simple_byte            7     4 (average)
 11834                           ;	Chosen strategy is simple_byte
 11835  00366C  0A00               	xorlw	0	; case 0
 11836  00366E  B4D8               	btfsc	status,2,c
 11837  003670  D729               	goto	l13093
 11838  003672  0A80               	xorlw	128	; case 128
 11839  003674  A4D8               	btfss	status,2,c
 11840  003676  0012               	return	
 11841  003678  D78A               	goto	l13125
 11842  00367A                     __end_of_display_bat_blank:
 11843                           	opt stack 0
 11844                           tblptru	equ	0xFF8
 11845                           tblptrh	equ	0xFF7
 11846                           tblptrl	equ	0xFF6
 11847                           tablat	equ	0xFF5
 11848                           prodh	equ	0xFF4
 11849                           prodl	equ	0xFF3
 11850                           intcon	equ	0xFF2
 11851                           intcon3	equ	0xFF0
 11852                           postinc0	equ	0xFEE
 11853                           wreg	equ	0xFE8
 11854                           postdec1	equ	0xFE5
 11855                           fsr1h	equ	0xFE2
 11856                           fsr1l	equ	0xFE1
 11857                           status	equ	0xFD8
 11858                           
 11859 ;; *************** function _display_bat *****************
 11860 ;; Defined at:
 11861 ;;		line 1770 in file "../Oled.c"
 11862 ;; Parameters:    Size  Location     Type
 11863 ;;  y               1    wreg     unsigned char 
 11864 ;;  x               1    9[BANK1 ] unsigned char 
 11865 ;;  mode            1   10[BANK1 ] unsigned char 
 11866 ;; Auto vars:     Size  Location     Type
 11867 ;;  y               1    0[COMRAM] unsigned char 
 11868 ;;  temp            1   14[BANK1 ] unsigned char 
 11869 ;;  tori            1   13[BANK1 ] unsigned char 
 11870 ;; Return value:  Size  Location     Type
 11871 ;;                  1    wreg      void 
 11872 ;; Registers used:
 11873 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11874 ;; Tracked objects:
 11875 ;;		On entry : 0/0
 11876 ;;		On exit  : 0/0
 11877 ;;		Unchanged: 0/0
 11878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11879 ;;      Params:         0       0       2       0       0       0       0
 11880 ;;      Locals:         0       0       2       0       0       0       0
 11881 ;;      Temps:          0       0       2       0       0       0       0
 11882 ;;      Totals:         0       0       6       0       0       0       0
 11883 ;;Total ram usage:        6 bytes
 11884 ;; Hardware stack levels used:    1
 11885 ;; Hardware stack levels required when called:    6
 11886 ;; This function calls:
 11887 ;;		_ee_WriteBytes
 11888 ;;		_get_AD_vaule
 11889 ;;		_setYX_LCD
 11890 ;; This function is called by:
 11891 ;;		_check_bat
 11892 ;;		_initial_ui_setting
 11893 ;; This function uses a non-reentrant model
 11894 ;;
 11895                           
 11896                           	psect	text25
 11897  002154                     __ptext25:
 11898                           	opt stack 0
 11899  002154                     _display_bat:
 11900                           	opt stack 21
 11901                           
 11902                           ;Oled.c: 1773: uint8_t temp =0;
 11903                           
 11904                           ;incstack = 0
 11905  002154  0E00               	movlw	0
 11906  002156  0101               	movlb	1	; () banked
 11907  002158  6F36               	movwf	display_bat@temp& (0+255),b
 11908                           
 11909                           ;Oled.c: 1774: uint8_t tori =0;
 11910  00215A  0E00               	movlw	0
 11911  00215C  0101               	movlb	1	; () banked
 11912  00215E  6F35               	movwf	display_bat@tori& (0+255),b
 11913                           
 11914                           ; BSR set to: 1
 11915                           ;Oled.c: 1777: bat_vol = get_AD_vaule();
 11916  002160  ECD7  F022         	call	_get_AD_vaule	;wreg free
 11917  002164  C0FD  F047         	movff	?_get_AD_vaule,_bat_vol
 11918  002168  C0FE  F048         	movff	?_get_AD_vaule+1,_bat_vol+1
 11919                           
 11920                           ;Oled.c: 1780: if(bat_vol > 730)
 11921  00216C  0EDB               	movlw	219
 11922  00216E  5C47               	subwf	_bat_vol,w,c
 11923  002170  0E02               	movlw	2
 11924  002172  5848               	subwfb	_bat_vol+1,w,c
 11925  002174  A0D8               	btfss	status,0,c
 11926  002176  D004               	goto	l11485
 11927                           
 11928                           ;Oled.c: 1781: {
 11929                           ;Oled.c: 1782: bat_x_m = bat100_m;
 11930  002178  0EDC               	movlw	low _bat100_m
 11931  00217A  6E49               	movwf	_bat_x_m,c
 11932  00217C  0E7E               	movlw	high _bat100_m
 11933  00217E  D049               	goto	L20
 11934  002180                     l11485:
 11935                           
 11936                           ;Oled.c: 1784: else if(bat_vol > 720 && bat_vol <= 730)
 11937  002180  0ED1               	movlw	209
 11938  002182  5C47               	subwf	_bat_vol,w,c
 11939  002184  0E02               	movlw	2
 11940  002186  5848               	subwfb	_bat_vol+1,w,c
 11941  002188  A0D8               	btfss	status,0,c
 11942  00218A  D00A               	goto	l11491
 11943  00218C  0EDB               	movlw	219
 11944  00218E  5C47               	subwf	_bat_vol,w,c
 11945  002190  0E02               	movlw	2
 11946  002192  5848               	subwfb	_bat_vol+1,w,c
 11947  002194  B0D8               	btfsc	status,0,c
 11948  002196  D004               	goto	l11491
 11949                           
 11950                           ;Oled.c: 1785: {
 11951                           ;Oled.c: 1786: bat_x_m = bat80_m;
 11952  002198  0E0A               	movlw	low _bat80_m
 11953  00219A  6E49               	movwf	_bat_x_m,c
 11954  00219C  0E7F               	movlw	high _bat80_m
 11955  00219E  D039               	goto	L20
 11956  0021A0                     l11491:
 11957                           
 11958                           ;Oled.c: 1788: else if(bat_vol > 710 && bat_vol <= 720)
 11959  0021A0  0EC7               	movlw	199
 11960  0021A2  5C47               	subwf	_bat_vol,w,c
 11961  0021A4  0E02               	movlw	2
 11962  0021A6  5848               	subwfb	_bat_vol+1,w,c
 11963  0021A8  A0D8               	btfss	status,0,c
 11964  0021AA  D00A               	goto	l11497
 11965  0021AC  0ED1               	movlw	209
 11966  0021AE  5C47               	subwf	_bat_vol,w,c
 11967  0021B0  0E02               	movlw	2
 11968  0021B2  5848               	subwfb	_bat_vol+1,w,c
 11969  0021B4  B0D8               	btfsc	status,0,c
 11970  0021B6  D004               	goto	l11497
 11971                           
 11972                           ;Oled.c: 1789: {
 11973                           ;Oled.c: 1790: bat_x_m = bat60_m;
 11974  0021B8  0E38               	movlw	low _bat60_m
 11975  0021BA  6E49               	movwf	_bat_x_m,c
 11976  0021BC  0E7F               	movlw	high _bat60_m
 11977  0021BE  D029               	goto	L20
 11978  0021C0                     l11497:
 11979                           
 11980                           ;Oled.c: 1792: else if(bat_vol > 700 && bat_vol <= 710)
 11981  0021C0  0EBD               	movlw	189
 11982  0021C2  5C47               	subwf	_bat_vol,w,c
 11983  0021C4  0E02               	movlw	2
 11984  0021C6  5848               	subwfb	_bat_vol+1,w,c
 11985  0021C8  A0D8               	btfss	status,0,c
 11986  0021CA  D00A               	goto	l11503
 11987  0021CC  0EC7               	movlw	199
 11988  0021CE  5C47               	subwf	_bat_vol,w,c
 11989  0021D0  0E02               	movlw	2
 11990  0021D2  5848               	subwfb	_bat_vol+1,w,c
 11991  0021D4  B0D8               	btfsc	status,0,c
 11992  0021D6  D004               	goto	l11503
 11993                           
 11994                           ;Oled.c: 1793: {
 11995                           ;Oled.c: 1794: bat_x_m = bat40_m;
 11996  0021D8  0E66               	movlw	low _bat40_m
 11997  0021DA  6E49               	movwf	_bat_x_m,c
 11998  0021DC  0E7F               	movlw	high _bat40_m
 11999  0021DE  D019               	goto	L20
 12000  0021E0                     l11503:
 12001                           
 12002                           ;Oled.c: 1796: else if(bat_vol > 690 && bat_vol <= 700)
 12003  0021E0  0EB3               	movlw	179
 12004  0021E2  5C47               	subwf	_bat_vol,w,c
 12005  0021E4  0E02               	movlw	2
 12006  0021E6  5848               	subwfb	_bat_vol+1,w,c
 12007  0021E8  A0D8               	btfss	status,0,c
 12008  0021EA  D00A               	goto	l11509
 12009  0021EC  0EBD               	movlw	189
 12010  0021EE  5C47               	subwf	_bat_vol,w,c
 12011  0021F0  0E02               	movlw	2
 12012  0021F2  5848               	subwfb	_bat_vol+1,w,c
 12013  0021F4  B0D8               	btfsc	status,0,c
 12014  0021F6  D004               	goto	l11509
 12015                           
 12016                           ;Oled.c: 1797: {
 12017                           ;Oled.c: 1798: bat_x_m = bat20_m;
 12018  0021F8  0E94               	movlw	low _bat20_m
 12019  0021FA  6E49               	movwf	_bat_x_m,c
 12020  0021FC  0E7F               	movlw	high _bat20_m
 12021  0021FE  D009               	goto	L20
 12022  002200                     l11509:
 12023                           
 12024                           ;Oled.c: 1800: else if(bat_vol <= 690)
 12025  002200  0EB3               	movlw	179
 12026  002202  5C47               	subwf	_bat_vol,w,c
 12027  002204  0E02               	movlw	2
 12028  002206  5848               	subwfb	_bat_vol+1,w,c
 12029  002208  B0D8               	btfsc	status,0,c
 12030  00220A  D0D7               	goto	l11587
 12031                           
 12032                           ;Oled.c: 1801: {
 12033                           ;Oled.c: 1802: bat_x_m = bat00_m;
 12034  00220C  0EC2               	movlw	low _bat00_m
 12035  00220E  6E49               	movwf	_bat_x_m,c
 12036  002210  0E7F               	movlw	high _bat00_m
 12037  002212                     L20:
 12038  002212  6E4A               	movwf	_bat_x_m+1,c
 12039                           
 12040                           ;Oled.c: 1807: }
 12041                           ;Oled.c: 1811: switch(mode)
 12042                           
 12043                           ;Oled.c: 1804: else
 12044                           ;Oled.c: 1805: {
 12045                           
 12046                           ;Oled.c: 1803: }
 12047  002214  D0D2               	goto	l11587
 12048  002216                     l11513:
 12049                           
 12050                           ;Oled.c: 1817: setYX_LCD(0,x);
 12051  002216  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 12052  00221A  0E00               	movlw	0
 12053  00221C  EC8E  F024         	call	_setYX_LCD
 12054                           
 12055                           ;Oled.c: 1818: for(ms=0;ms<23;ms++)
 12056  002220  0E00               	movlw	0
 12057  002222  6E69               	movwf	_ms,c
 12058  002224                     l11517:
 12059  002224  0E16               	movlw	22
 12060  002226  6469               	cpfsgt	_ms,c
 12061  002228  D001               	goto	l11521
 12062  00222A  D025               	goto	l11529
 12063  00222C                     l11521:
 12064                           
 12065                           ;Oled.c: 1819: {
 12066                           ;Oled.c: 1821: temp =bat_x_m[0][ms];
 12067  00222C  5069               	movf	_ms,w,c
 12068  00222E  0D01               	mullw	1
 12069  002230  C049  F133         	movff	_bat_x_m,??_display_bat
 12070  002234  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 12071  002238  50F3               	movf	prodl,w,c
 12072  00223A  0101               	movlb	1	; () banked
 12073  00223C  2733               	addwf	??_display_bat& (0+255),f,b
 12074  00223E  50F4               	movf	prodh,w,c
 12075  002240  0101               	movlb	1	; () banked
 12076  002242  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12077  002244  C133  FFF6         	movff	??_display_bat,tblptrl
 12078  002248  C134  FFF7         	movff	??_display_bat+1,tblptrh
 12079  00224C                     	if	0	;tblptru may be non-zero
 12080  00224C                     	endif
 12081  00224C                     	if	0	;tblptru may be non-zero
 12082  00224C                     	endif
 12083  00224C  0008               	tblrd		*
 12084  00224E  CFF5 F136          	movff	tablat,display_bat@temp
 12085                           
 12086                           ; BSR set to: 1
 12087                           ;Oled.c: 1823: ee_WriteBytes(&temp, 0x40, 1);
 12088  002252  0E36               	movlw	low display_bat@temp
 12089  002254  0101               	movlb	1	; () banked
 12090  002256  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 12091  002258  0E01               	movlw	high display_bat@temp
 12092  00225A  0101               	movlb	1	; () banked
 12093  00225C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 12094  00225E  0E40               	movlw	64
 12095  002260  0101               	movlb	1	; () banked
 12096  002262  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 12097  002264  0E00               	movlw	0
 12098  002266  0101               	movlb	1	; () banked
 12099  002268  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 12100  00226A  0E01               	movlw	1
 12101  00226C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 12102  00226E  EC88  F025         	call	_ee_WriteBytes	;wreg free
 12103  002272  2A69               	incf	_ms,f,c
 12104  002274  D7D7               	goto	l11517
 12105  002276                     l11529:
 12106                           
 12107                           ;Oled.c: 1824: }
 12108                           ;Oled.c: 1827: setYX_LCD(1,x);
 12109  002276  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 12110  00227A  0E01               	movlw	1
 12111  00227C  EC8E  F024         	call	_setYX_LCD
 12112                           
 12113                           ;Oled.c: 1828: for(ms=0;ms<23;ms++)
 12114  002280  0E00               	movlw	0
 12115  002282  6E69               	movwf	_ms,c
 12116  002284                     l11533:
 12117  002284  0E16               	movlw	22
 12118  002286  6469               	cpfsgt	_ms,c
 12119  002288  D001               	goto	l11537
 12120  00228A  0012               	return	
 12121  00228C                     l11537:
 12122                           
 12123                           ;Oled.c: 1829: {
 12124                           ;Oled.c: 1830: temp = bat_x_m[1][ms];
 12125  00228C  5069               	movf	_ms,w,c
 12126  00228E  0D01               	mullw	1
 12127  002290  C049  F133         	movff	_bat_x_m,??_display_bat
 12128  002294  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 12129  002298  50F3               	movf	prodl,w,c
 12130  00229A  0101               	movlb	1	; () banked
 12131  00229C  2733               	addwf	??_display_bat& (0+255),f,b
 12132  00229E  50F4               	movf	prodh,w,c
 12133  0022A0  0101               	movlb	1	; () banked
 12134  0022A2  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12135  0022A4  0E17               	movlw	23
 12136  0022A6  0101               	movlb	1	; () banked
 12137  0022A8  2733               	addwf	??_display_bat& (0+255),f,b
 12138  0022AA  0E00               	movlw	0
 12139  0022AC  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12140  0022AE  C133  FFF6         	movff	??_display_bat,tblptrl
 12141  0022B2  C134  FFF7         	movff	??_display_bat+1,tblptrh
 12142  0022B6                     	if	0	;tblptru may be non-zero
 12143  0022B6                     	endif
 12144  0022B6                     	if	0	;tblptru may be non-zero
 12145  0022B6                     	endif
 12146  0022B6  0008               	tblrd		*
 12147  0022B8  CFF5 F136          	movff	tablat,display_bat@temp
 12148                           
 12149                           ; BSR set to: 1
 12150                           ;Oled.c: 1832: ee_WriteBytes(&temp, 0x40, 1);
 12151  0022BC  0E36               	movlw	low display_bat@temp
 12152  0022BE  0101               	movlb	1	; () banked
 12153  0022C0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 12154  0022C2  0E01               	movlw	high display_bat@temp
 12155  0022C4  0101               	movlb	1	; () banked
 12156  0022C6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 12157  0022C8  0E40               	movlw	64
 12158  0022CA  0101               	movlb	1	; () banked
 12159  0022CC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 12160  0022CE  0E00               	movlw	0
 12161  0022D0  0101               	movlb	1	; () banked
 12162  0022D2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 12163  0022D4  0E01               	movlw	1
 12164  0022D6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 12165  0022D8  EC88  F025         	call	_ee_WriteBytes	;wreg free
 12166  0022DC  2A69               	incf	_ms,f,c
 12167  0022DE  D7D2               	goto	l11533
 12168  0022E0                     l11545:
 12169                           
 12170                           ;Oled.c: 1841: setYX_LCD(0,x);
 12171  0022E0  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 12172  0022E4  0E00               	movlw	0
 12173  0022E6  EC8E  F024         	call	_setYX_LCD
 12174                           
 12175                           ;Oled.c: 1842: for(ms=0;ms<23;ms++)
 12176  0022EA  0E00               	movlw	0
 12177  0022EC  6E69               	movwf	_ms,c
 12178  0022EE                     l11549:
 12179  0022EE  0E16               	movlw	22
 12180  0022F0  6469               	cpfsgt	_ms,c
 12181  0022F2  D001               	goto	l11553
 12182  0022F4  D029               	goto	l11565
 12183  0022F6                     l11553:
 12184                           
 12185                           ;Oled.c: 1843: {
 12186                           ;Oled.c: 1845: temp = bat_x_m[0][ms];
 12187  0022F6  5069               	movf	_ms,w,c
 12188  0022F8  0D01               	mullw	1
 12189  0022FA  C049  F133         	movff	_bat_x_m,??_display_bat
 12190  0022FE  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 12191  002302  50F3               	movf	prodl,w,c
 12192  002304  0101               	movlb	1	; () banked
 12193  002306  2733               	addwf	??_display_bat& (0+255),f,b
 12194  002308  50F4               	movf	prodh,w,c
 12195  00230A  0101               	movlb	1	; () banked
 12196  00230C  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12197  00230E  C133  FFF6         	movff	??_display_bat,tblptrl
 12198  002312  C134  FFF7         	movff	??_display_bat+1,tblptrh
 12199  002316                     	if	0	;tblptru may be non-zero
 12200  002316                     	endif
 12201  002316                     	if	0	;tblptru may be non-zero
 12202  002316                     	endif
 12203  002316  0008               	tblrd		*
 12204  002318  CFF5 F136          	movff	tablat,display_bat@temp
 12205                           
 12206                           ; BSR set to: 1
 12207                           ;Oled.c: 1846: tori = temp;
 12208  00231C  C136  F135         	movff	display_bat@temp,display_bat@tori
 12209                           
 12210                           ; BSR set to: 1
 12211                           ;Oled.c: 1848: temp = ~temp;
 12212  002320  0101               	movlb	1	; () banked
 12213  002322  1F36               	comf	display_bat@temp& (0+255),f,b
 12214                           
 12215                           ; BSR set to: 1
 12216                           ;Oled.c: 1851: ee_WriteBytes(&temp, 0x40, 1);
 12217  002324  0E36               	movlw	low display_bat@temp
 12218  002326  0101               	movlb	1	; () banked
 12219  002328  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 12220  00232A  0E01               	movlw	high display_bat@temp
 12221  00232C  0101               	movlb	1	; () banked
 12222  00232E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 12223  002330  0E40               	movlw	64
 12224  002332  0101               	movlb	1	; () banked
 12225  002334  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 12226  002336  0E00               	movlw	0
 12227  002338  0101               	movlb	1	; () banked
 12228  00233A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 12229  00233C  0E01               	movlw	1
 12230  00233E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 12231  002340  EC88  F025         	call	_ee_WriteBytes	;wreg free
 12232  002344  2A69               	incf	_ms,f,c
 12233  002346  D7D3               	goto	l11549
 12234  002348                     l11565:
 12235                           
 12236                           ;Oled.c: 1852: }
 12237                           ;Oled.c: 1855: setYX_LCD(1,x);
 12238  002348  C131  F0FF         	movff	display_bat@x,setYX_LCD@px
 12239  00234C  0E01               	movlw	1
 12240  00234E  EC8E  F024         	call	_setYX_LCD
 12241                           
 12242                           ;Oled.c: 1856: for(ms=0;ms<23;ms++)
 12243  002352  0E00               	movlw	0
 12244  002354  6E69               	movwf	_ms,c
 12245  002356                     l11569:
 12246  002356  0E16               	movlw	22
 12247  002358  6469               	cpfsgt	_ms,c
 12248  00235A  D001               	goto	l11573
 12249  00235C  0012               	return	
 12250  00235E                     l11573:
 12251                           
 12252                           ;Oled.c: 1857: {
 12253                           ;Oled.c: 1858: temp = bat_x_m[1][ms];
 12254  00235E  5069               	movf	_ms,w,c
 12255  002360  0D01               	mullw	1
 12256  002362  C049  F133         	movff	_bat_x_m,??_display_bat
 12257  002366  C04A  F134         	movff	_bat_x_m+1,??_display_bat+1
 12258  00236A  50F3               	movf	prodl,w,c
 12259  00236C  0101               	movlb	1	; () banked
 12260  00236E  2733               	addwf	??_display_bat& (0+255),f,b
 12261  002370  50F4               	movf	prodh,w,c
 12262  002372  0101               	movlb	1	; () banked
 12263  002374  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12264  002376  0E17               	movlw	23
 12265  002378  0101               	movlb	1	; () banked
 12266  00237A  2733               	addwf	??_display_bat& (0+255),f,b
 12267  00237C  0E00               	movlw	0
 12268  00237E  2334               	addwfc	(??_display_bat+1)& (0+255),f,b
 12269  002380  C133  FFF6         	movff	??_display_bat,tblptrl
 12270  002384  C134  FFF7         	movff	??_display_bat+1,tblptrh
 12271  002388                     	if	0	;tblptru may be non-zero
 12272  002388                     	endif
 12273  002388                     	if	0	;tblptru may be non-zero
 12274  002388                     	endif
 12275  002388  0008               	tblrd		*
 12276  00238A  CFF5 F136          	movff	tablat,display_bat@temp
 12277                           
 12278                           ; BSR set to: 1
 12279                           ;Oled.c: 1859: tori =temp;
 12280  00238E  C136  F135         	movff	display_bat@temp,display_bat@tori
 12281                           
 12282                           ; BSR set to: 1
 12283                           ;Oled.c: 1861: temp = ~temp;
 12284  002392  0101               	movlb	1	; () banked
 12285  002394  1F36               	comf	display_bat@temp& (0+255),f,b
 12286                           
 12287                           ; BSR set to: 1
 12288                           ;Oled.c: 1864: ee_WriteBytes(&temp, 0x40, 1);
 12289  002396  0E36               	movlw	low display_bat@temp
 12290  002398  0101               	movlb	1	; () banked
 12291  00239A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 12292  00239C  0E01               	movlw	high display_bat@temp
 12293  00239E  0101               	movlb	1	; () banked
 12294  0023A0  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 12295  0023A2  0E40               	movlw	64
 12296  0023A4  0101               	movlb	1	; () banked
 12297  0023A6  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 12298  0023A8  0E00               	movlw	0
 12299  0023AA  0101               	movlb	1	; () banked
 12300  0023AC  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 12301  0023AE  0E01               	movlw	1
 12302  0023B0  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 12303  0023B2  EC88  F025         	call	_ee_WriteBytes	;wreg free
 12304  0023B6  2A69               	incf	_ms,f,c
 12305  0023B8  D7CE               	goto	l11569
 12306  0023BA                     l11587:
 12307  0023BA  0101               	movlb	1	; () banked
 12308  0023BC  5132               	movf	display_bat@mode& (0+255),w,b
 12309                           
 12310                           ; Switch size 1, requested type "space"
 12311                           ; Number of cases is 2, Range of values is 0 to 128
 12312                           ; switch strategies available:
 12313                           ; Name         Instructions Cycles
 12314                           ; simple_byte            7     4 (average)
 12315                           ;	Chosen strategy is simple_byte
 12316  0023BE  0A00               	xorlw	0	; case 0
 12317  0023C0  B4D8               	btfsc	status,2,c
 12318  0023C2  D729               	goto	l11513
 12319  0023C4  0A80               	xorlw	128	; case 128
 12320  0023C6  A4D8               	btfss	status,2,c
 12321  0023C8  0012               	return	
 12322  0023CA  D78A               	goto	l11545
 12323  0023CC                     __end_of_display_bat:
 12324                           	opt stack 0
 12325                           tblptru	equ	0xFF8
 12326                           tblptrh	equ	0xFF7
 12327                           tblptrl	equ	0xFF6
 12328                           tablat	equ	0xFF5
 12329                           prodh	equ	0xFF4
 12330                           prodl	equ	0xFF3
 12331                           intcon	equ	0xFF2
 12332                           intcon3	equ	0xFF0
 12333                           postinc0	equ	0xFEE
 12334                           wreg	equ	0xFE8
 12335                           postdec1	equ	0xFE5
 12336                           fsr1h	equ	0xFE2
 12337                           fsr1l	equ	0xFE1
 12338                           status	equ	0xFD8
 12339                           
 12340 ;; *************** function _get_AD_vaule *****************
 12341 ;; Defined at:
 12342 ;;		line 294 in file "../Oled.c"
 12343 ;; Parameters:    Size  Location     Type
 12344 ;;		None
 12345 ;; Auto vars:     Size  Location     Type
 12346 ;;  rv              2    4[BANK1 ] unsigned int 
 12347 ;;  lv              1    7[BANK1 ] unsigned char 
 12348 ;;  hv              1    6[BANK1 ] unsigned char 
 12349 ;;  ts              1    3[BANK1 ] unsigned char 
 12350 ;; Return value:  Size  Location     Type
 12351 ;;                  2    0[BANK0 ] unsigned int 
 12352 ;; Registers used:
 12353 ;;		wreg, status,2, status,0
 12354 ;; Tracked objects:
 12355 ;;		On entry : 0/0
 12356 ;;		On exit  : 0/0
 12357 ;;		Unchanged: 0/0
 12358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12359 ;;      Params:         0       2       0       0       0       0       0
 12360 ;;      Locals:         0       0       5       0       0       0       0
 12361 ;;      Temps:          0       0       3       0       0       0       0
 12362 ;;      Totals:         0       2       8       0       0       0       0
 12363 ;;Total ram usage:       10 bytes
 12364 ;; Hardware stack levels used:    1
 12365 ;; Hardware stack levels required when called:    2
 12366 ;; This function calls:
 12367 ;;		Nothing
 12368 ;; This function is called by:
 12369 ;;		_display_bat
 12370 ;; This function uses a non-reentrant model
 12371 ;;
 12372                           
 12373                           	psect	text26
 12374  0045AE                     __ptext26:
 12375                           	opt stack 0
 12376  0045AE                     _get_AD_vaule:
 12377                           	opt stack 24
 12378                           
 12379                           ;Oled.c: 297: uint8_t hv=0;
 12380                           
 12381                           ;incstack = 0
 12382  0045AE  0E00               	movlw	0
 12383  0045B0  0101               	movlb	1	; () banked
 12384  0045B2  6F2E               	movwf	get_AD_vaule@hv& (0+255),b
 12385                           
 12386                           ;Oled.c: 298: uint8_t lv=0;
 12387  0045B4  0E00               	movlw	0
 12388  0045B6  0101               	movlb	1	; () banked
 12389  0045B8  6F2F               	movwf	get_AD_vaule@lv& (0+255),b
 12390                           
 12391                           ;Oled.c: 299: uint8_t ts=0;
 12392  0045BA  0E00               	movlw	0
 12393  0045BC  0101               	movlb	1	; () banked
 12394  0045BE  6F2B               	movwf	get_AD_vaule@ts& (0+255),b
 12395                           
 12396                           ;Oled.c: 300: uint16_t rv=0;
 12397  0045C0  0E00               	movlw	0
 12398  0045C2  0101               	movlb	1	; () banked
 12399  0045C4  6F2D               	movwf	(get_AD_vaule@rv+1)& (0+255),b
 12400  0045C6  0E00               	movlw	0
 12401  0045C8  6F2C               	movwf	get_AD_vaule@rv& (0+255),b
 12402                           
 12403                           ; BSR set to: 1
 12404                           ;Oled.c: 301: ADCON0bits.CHS = 0;
 12405  0045CA  94C2               	bcf	4034,2,c	;volatile
 12406  0045CC  96C2               	bcf	4034,3,c	;volatile
 12407  0045CE  98C2               	bcf	4034,4,c	;volatile
 12408  0045D0  9AC2               	bcf	4034,5,c	;volatile
 12409                           
 12410                           ; BSR set to: 1
 12411                           ;Oled.c: 302: ADCON0bits.GO =1;
 12412  0045D2  82C2               	bsf	4034,1,c	;volatile
 12413  0045D4                     l737:
 12414  0045D4  B2C2               	btfsc	4034,1,c	;volatile
 12415  0045D6  D7FE               	goto	l737
 12416                           
 12417                           ;Oled.c: 306: hv = ADRESH;
 12418  0045D8  CFC4 F12E          	movff	4036,get_AD_vaule@hv	;volatile
 12419                           
 12420                           ;Oled.c: 307: lv = ADRESL;
 12421  0045DC  CFC3 F12F          	movff	4035,get_AD_vaule@lv	;volatile
 12422                           
 12423                           ;Oled.c: 309: rv = ((uint16_t)(hv<<8 | lv) >>6)& 0x03ff;
 12424  0045E0  0101               	movlb	1	; () banked
 12425  0045E2  512F               	movf	get_AD_vaule@lv& (0+255),w,b
 12426  0045E4  C12E  F128         	movff	get_AD_vaule@hv,??_get_AD_vaule
 12427  0045E8  0101               	movlb	1	; () banked
 12428  0045EA  6B29               	clrf	(??_get_AD_vaule+1)& (0+255),b
 12429  0045EC  C128  F129         	movff	??_get_AD_vaule,??_get_AD_vaule+1
 12430  0045F0  0101               	movlb	1	; () banked
 12431  0045F2  6B28               	clrf	??_get_AD_vaule& (0+255),b
 12432  0045F4  0101               	movlb	1	; () banked
 12433  0045F6  1328               	iorwf	??_get_AD_vaule& (0+255),f,b
 12434  0045F8  0E00               	movlw	0
 12435  0045FA  1329               	iorwf	(??_get_AD_vaule+1)& (0+255),f,b
 12436  0045FC  0E06               	movlw	6
 12437  0045FE  0101               	movlb	1	; () banked
 12438  004600  6F2A               	movwf	(??_get_AD_vaule+2)& (0+255),b
 12439  004602                     u13425:
 12440  004602  0101               	movlb	1	; () banked
 12441  004604  90D8               	bcf	status,0,c
 12442  004606  3329               	rrcf	(??_get_AD_vaule+1)& (0+255),f,b
 12443  004608  3328               	rrcf	??_get_AD_vaule& (0+255),f,b
 12444  00460A  0101               	movlb	1	; () banked
 12445  00460C  2F2A               	decfsz	(??_get_AD_vaule+2)& (0+255),f,b
 12446  00460E  D7F9               	goto	u13425
 12447  004610  0EFF               	movlw	255
 12448  004612  0101               	movlb	1	; () banked
 12449  004614  1528               	andwf	??_get_AD_vaule& (0+255),w,b
 12450  004616  0101               	movlb	1	; () banked
 12451  004618  6F2C               	movwf	get_AD_vaule@rv& (0+255),b
 12452  00461A  0E03               	movlw	3
 12453  00461C  0101               	movlb	1	; () banked
 12454  00461E  1529               	andwf	(??_get_AD_vaule+1)& (0+255),w,b
 12455  004620  0101               	movlb	1	; () banked
 12456  004622  6F2D               	movwf	(get_AD_vaule@rv+1)& (0+255),b
 12457                           
 12458                           ; BSR set to: 1
 12459                           ;Oled.c: 312: return rv;
 12460  004624  C12C  F0FD         	movff	get_AD_vaule@rv,?_get_AD_vaule
 12461  004628  C12D  F0FE         	movff	get_AD_vaule@rv+1,?_get_AD_vaule+1
 12462  00462C  0012               	return	
 12463  00462E                     __end_of_get_AD_vaule:
 12464                           	opt stack 0
 12465                           tblptru	equ	0xFF8
 12466                           tblptrh	equ	0xFF7
 12467                           tblptrl	equ	0xFF6
 12468                           tablat	equ	0xFF5
 12469                           prodh	equ	0xFF4
 12470                           prodl	equ	0xFF3
 12471                           intcon	equ	0xFF2
 12472                           intcon3	equ	0xFF0
 12473                           postinc0	equ	0xFEE
 12474                           wreg	equ	0xFE8
 12475                           postdec1	equ	0xFE5
 12476                           fsr1h	equ	0xFE2
 12477                           fsr1l	equ	0xFE1
 12478                           status	equ	0xFD8
 12479                           
 12480 ;; *************** function _check_acting *****************
 12481 ;; Defined at:
 12482 ;;		line 884 in file "../MotorDrive.c"
 12483 ;; Parameters:    Size  Location     Type
 12484 ;;		None
 12485 ;; Auto vars:     Size  Location     Type
 12486 ;;		None
 12487 ;; Return value:  Size  Location     Type
 12488 ;;                  1    wreg      void 
 12489 ;; Registers used:
 12490 ;;		wreg, status,2, status,0, cstack
 12491 ;; Tracked objects:
 12492 ;;		On entry : 0/0
 12493 ;;		On exit  : 0/0
 12494 ;;		Unchanged: 0/0
 12495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12496 ;;      Params:         0       0       0       0       0       0       0
 12497 ;;      Locals:         0       0       0       0       0       0       0
 12498 ;;      Temps:          0       0       0       0       0       0       0
 12499 ;;      Totals:         0       0       0       0       0       0       0
 12500 ;;Total ram usage:        0 bytes
 12501 ;; Hardware stack levels used:    1
 12502 ;; Hardware stack levels required when called:    4
 12503 ;; This function calls:
 12504 ;;		_buzz
 12505 ;;		_delaynus
 12506 ;; This function is called by:
 12507 ;;		_main
 12508 ;; This function uses a non-reentrant model
 12509 ;;
 12510                           
 12511                           	psect	text27
 12512  004798                     __ptext27:
 12513                           	opt stack 0
 12514  004798                     _check_acting:
 12515                           	opt stack 26
 12516                           
 12517                           ;MotorDrive.c: 886: if(hg_op.acting_flag)
 12518                           
 12519                           ; BSR set to: 1
 12520                           ;incstack = 0
 12521  004798  0100               	movlb	0	; () banked
 12522  00479A  519E               	movf	(_hg_op+30)& (0+255),w,b
 12523  00479C  B4D8               	btfsc	status,2,c
 12524  00479E  0012               	return	
 12525                           
 12526                           ; BSR set to: 0
 12527                           ;MotorDrive.c: 887: {
 12528                           ;MotorDrive.c: 888: delaynus(20 * 1000);
 12529  0047A0  0E4E               	movlw	78
 12530  0047A2  0100               	movlb	0	; () banked
 12531  0047A4  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12532  0047A6  0E20               	movlw	32
 12533  0047A8  6FFD               	movwf	delaynus@n& (0+255),b
 12534  0047AA  ECE0  F026         	call	_delaynus	;wreg free
 12535                           
 12536                           ;MotorDrive.c: 889: if(PORTBbits.RB5 == 0)
 12537  0047AE  BA81               	btfsc	3969,5,c	;volatile
 12538  0047B0  D023               	goto	l622
 12539                           
 12540                           ;MotorDrive.c: 890: {
 12541                           ;MotorDrive.c: 891: do{T0IE=0;T0IF = 0;T0CONbits.TMR0ON =0;}while(0);
 12542  0047B2  9AF2               	bcf	intcon,5,c	;volatile
 12543  0047B4  94F2               	bcf	intcon,2,c	;volatile
 12544  0047B6  9ED5               	bcf	4053,7,c	;volatile
 12545                           
 12546                           ;MotorDrive.c: 895: if(1)
 12547  0047B8  ECFE  F026         	call	_buzz	;wreg free
 12548                           
 12549                           ;MotorDrive.c: 896: {
 12550                           ;MotorDrive.c: 899: if(hg_op.cur_working_mode == 0x01)
 12551  0047BC  0100               	movlb	0	; () banked
 12552  0047BE  0581               	decf	(_hg_op+1)& (0+255),w,b
 12553  0047C0  A4D8               	btfss	status,2,c
 12554  0047C2  D004               	goto	l15065
 12555  0047C4  D00F               	goto	l15075
 12556  0047C6                     l15063:
 12557                           
 12558                           ; BSR set to: 0
 12559                           ;MotorDrive.c: 908: hg_op.working_mode = hg_op.cur_working_mode;
 12560  0047C6  C081  F080         	movff	_hg_op+1,_hg_op
 12561                           
 12562                           ;MotorDrive.c: 909: }
 12563  0047CA  D018               	goto	l15083
 12564  0047CC                     l15065:
 12565                           
 12566                           ; BSR set to: 0
 12567                           ;MotorDrive.c: 910: else if(hg_op.cur_working_mode == 0x00)
 12568  0047CC  0100               	movlb	0	; () banked
 12569  0047CE  5181               	movf	(_hg_op+1)& (0+255),w,b
 12570  0047D0  B4D8               	btfsc	status,2,c
 12571  0047D2  D008               	goto	l15075
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;MotorDrive.c: 920: else if(hg_op.cur_working_mode == 0x04)
 12575                           
 12576                           ; BSR set to: 0
 12577                           
 12578                           ;MotorDrive.c: 919: }
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;MotorDrive.c: 917: hg_op.working_mode = hg_op.cur_working_mode;
 12582                           
 12583                           ;MotorDrive.c: 915: hg_op.drops_push =0;
 12584                           
 12585                           ;MotorDrive.c: 914: hg_op.drops_sb =0;
 12586                           
 12587                           ; BSR set to: 0
 12588                           ;MotorDrive.c: 911: {
 12589                           ;MotorDrive.c: 913: hg_op.drops_sa =1;
 12590  0047D4  0E04               	movlw	4
 12591  0047D6  0100               	movlb	0	; () banked
 12592  0047D8  1981               	xorwf	(_hg_op+1)& (0+255),w,b
 12593  0047DA  A4D8               	btfss	status,2,c
 12594  0047DC  D00F               	goto	l15083
 12595                           
 12596                           ; BSR set to: 0
 12597                           ;MotorDrive.c: 921: {
 12598                           ;MotorDrive.c: 922: action_btn_cnt ++;
 12599  0047DE  0100               	movlb	0	; () banked
 12600  0047E0  4BD1               	infsnz	_action_btn_cnt& (0+255),f,b
 12601  0047E2  2BD2               	incf	(_action_btn_cnt+1)& (0+255),f,b
 12602  0047E4                     l15075:
 12603                           
 12604                           ; BSR set to: 0
 12605                           ;MotorDrive.c: 924: hg_op.drops_sa =1;
 12606  0047E4  0E01               	movlw	1
 12607  0047E6  0100               	movlb	0	; () banked
 12608  0047E8  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12609                           
 12610                           ; BSR set to: 0
 12611                           ;MotorDrive.c: 925: hg_op.drops_sb =0;
 12612  0047EA  0E00               	movlw	0
 12613  0047EC  0100               	movlb	0	; () banked
 12614  0047EE  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12615                           
 12616                           ; BSR set to: 0
 12617                           ;MotorDrive.c: 926: hg_op.drops_push =0;
 12618  0047F0  0E00               	movlw	0
 12619  0047F2  0100               	movlb	0	; () banked
 12620  0047F4  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12621  0047F6  D7E7               	goto	l15063
 12622  0047F8                     l622:
 12623  0047F8  8AF2               	bsf	intcon,5,c	;volatile
 12624  0047FA  8ED5               	bsf	4053,7,c	;volatile
 12625  0047FC                     l15083:
 12626                           
 12627                           ;MotorDrive.c: 941: }
 12628                           ;MotorDrive.c: 945: hg_op.acting_flag = 0;
 12629  0047FC  0E00               	movlw	0
 12630  0047FE  0100               	movlb	0	; () banked
 12631  004800  6F9E               	movwf	(_hg_op+30)& (0+255),b
 12632  004802  0012               	return	
 12633  004804                     __end_of_check_acting:
 12634                           	opt stack 0
 12635                           tblptru	equ	0xFF8
 12636                           tblptrh	equ	0xFF7
 12637                           tblptrl	equ	0xFF6
 12638                           tablat	equ	0xFF5
 12639                           prodh	equ	0xFF4
 12640                           prodl	equ	0xFF3
 12641                           intcon	equ	0xFF2
 12642                           intcon3	equ	0xFF0
 12643                           postinc0	equ	0xFEE
 12644                           wreg	equ	0xFE8
 12645                           postdec1	equ	0xFE5
 12646                           fsr1h	equ	0xFE2
 12647                           fsr1l	equ	0xFE1
 12648                           status	equ	0xFD8
 12649                           
 12650 ;; *************** function _c_routine *****************
 12651 ;; Defined at:
 12652 ;;		line 519 in file "../MotorDrive.c"
 12653 ;; Parameters:    Size  Location     Type
 12654 ;;		None
 12655 ;; Auto vars:     Size  Location     Type
 12656 ;;  cnt_push        2    8[BANK1 ] unsigned int 
 12657 ;; Return value:  Size  Location     Type
 12658 ;;                  1    wreg      void 
 12659 ;; Registers used:
 12660 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12661 ;; Tracked objects:
 12662 ;;		On entry : 0/0
 12663 ;;		On exit  : 0/0
 12664 ;;		Unchanged: 0/0
 12665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12666 ;;      Params:         0       0       0       0       0       0       0
 12667 ;;      Locals:         0       0       2       0       0       0       0
 12668 ;;      Temps:          0       0       0       0       0       0       0
 12669 ;;      Totals:         0       0       2       0       0       0       0
 12670 ;;Total ram usage:        2 bytes
 12671 ;; Hardware stack levels used:    1
 12672 ;; Hardware stack levels required when called:    3
 12673 ;; This function calls:
 12674 ;;		___wmul
 12675 ;;		_delay_pwm
 12676 ;;		_delaynus
 12677 ;; This function is called by:
 12678 ;;		_main
 12679 ;; This function uses a non-reentrant model
 12680 ;;
 12681                           
 12682                           	psect	text28
 12683  002ECE                     __ptext28:
 12684                           	opt stack 0
 12685  002ECE                     _c_routine:
 12686                           	opt stack 27
 12687                           
 12688                           ;MotorDrive.c: 521: uint16_t cnt_push =0;
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;incstack = 0
 12692  002ECE  0E00               	movlw	0
 12693  002ED0  0101               	movlb	1	; () banked
 12694  002ED2  6F31               	movwf	(c_routine@cnt_push+1)& (0+255),b
 12695  002ED4  0E00               	movlw	0
 12696  002ED6  6F30               	movwf	c_routine@cnt_push& (0+255),b
 12697                           
 12698                           ;MotorDrive.c: 538: else
 12699                           ;MotorDrive.c: 539: {
 12700                           ;MotorDrive.c: 540: if(hg_op.drops_sa == 1)
 12701                           
 12702                           ; BSR set to: 0
 12703                           
 12704                           ;MotorDrive.c: 537: }
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;MotorDrive.c: 536: hg_op.need_reset =1;
 12708                           
 12709                           ; BSR set to: 0
 12710                           ;MotorDrive.c: 535: hg_op.working_mode = 0x03;
 12711                           
 12712                           ;MotorDrive.c: 534: hg_op.acting_flag =0;
 12713                           
 12714                           ;MotorDrive.c: 530: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 12715                           
 12716                           ; BSR set to: 1
 12717                           ;MotorDrive.c: 529: delaynus(30 * 1000);
 12718                           
 12719                           ; BSR set to: 1
 12720                           
 12721                           ; BSR set to: 1
 12722                           
 12723                           ; BSR set to: 1
 12724                           ;MotorDrive.c: 528: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
 12725                           
 12726                           ; BSR set to: 1
 12727                           
 12728                           ;MotorDrive.c: 525: {
 12729                           ;MotorDrive.c: 526: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 12730                           
 12731                           ;MotorDrive.c: 524: if(0)
 12732  002ED8  0100               	movlb	0	; () banked
 12733  002EDA  059F               	decf	(_hg_op+31)& (0+255),w,b
 12734  002EDC  A4D8               	btfss	status,2,c
 12735  002EDE  D038               	goto	l14687
 12736                           
 12737                           ; BSR set to: 0
 12738                           ;MotorDrive.c: 541: {
 12739                           ;MotorDrive.c: 542: hg_op.cnt_posa =0;
 12740  002EE0  0E00               	movlw	0
 12741  002EE2  0100               	movlb	0	; () banked
 12742  002EE4  6FA6               	movwf	(_hg_op+38)& (0+255),b
 12743  002EE6  0E00               	movlw	0
 12744  002EE8  6FA5               	movwf	(_hg_op+37)& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;MotorDrive.c: 544: if( hg_op.needle_len == 13)
 12748  002EEA  0E0D               	movlw	13
 12749  002EEC  0100               	movlb	0	; () banked
 12750  002EEE  1997               	xorwf	(_hg_op+23)& (0+255),w,b
 12751  002EF0  A4D8               	btfss	status,2,c
 12752  002EF2  D00B               	goto	l471
 12753                           
 12754                           ; BSR set to: 0
 12755                           ;MotorDrive.c: 545: {
 12756                           ;MotorDrive.c: 547: LATDbits.LD4 =1;LATDbits.LD2 =1;
 12757  002EF4  888C               	bsf	3980,4,c	;volatile
 12758  002EF6  848C               	bsf	3980,2,c	;volatile
 12759  002EF8                     l14671:
 12760                           
 12761                           ; BSR set to: 0
 12762  002EF8  0100               	movlb	0	; () banked
 12763  002EFA  51A6               	movf	(_hg_op+38)& (0+255),w,b
 12764  002EFC  E10F               	bnz	l14675
 12765  002EFE  0EBB               	movlw	187
 12766  002F00  0100               	movlb	0	; () banked
 12767  002F02  5DA5               	subwf	(_hg_op+37)& (0+255),w,b
 12768  002F04  B0D8               	btfsc	status,0,c
 12769  002F06  D00A               	goto	l14675
 12770  002F08  D7F7               	goto	l14671
 12771  002F0A                     l471:
 12772                           
 12773                           ; BSR set to: 0
 12774                           ;MotorDrive.c: 550: else
 12775                           ;MotorDrive.c: 551: {
 12776                           ;MotorDrive.c: 552: LATDbits.LD4 =1;LATDbits.LD2 =1;
 12777  002F0A  888C               	bsf	3980,4,c	;volatile
 12778  002F0C  848C               	bsf	3980,2,c	;volatile
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;MotorDrive.c: 553: delaynus(14 * 1000);
 12782  002F0E  0E36               	movlw	54
 12783  002F10  0100               	movlb	0	; () banked
 12784  002F12  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12785  002F14  0EB0               	movlw	176
 12786  002F16  6FFD               	movwf	delaynus@n& (0+255),b
 12787  002F18  ECE0  F026         	call	_delaynus	;wreg free
 12788  002F1C                     l14675:
 12789  002F1C  888C               	bsf	3980,4,c	;volatile
 12790  002F1E  948C               	bcf	3980,2,c	;volatile
 12791  002F20  968C               	bcf	3980,3,c	;volatile
 12792                           
 12793                           ;MotorDrive.c: 558: delaynus(50 * 1000);
 12794  002F22  0EC3               	movlw	195
 12795  002F24  0100               	movlb	0	; () banked
 12796  002F26  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12797  002F28  0E50               	movlw	80
 12798  002F2A  6FFD               	movwf	delaynus@n& (0+255),b
 12799  002F2C  ECE0  F026         	call	_delaynus	;wreg free
 12800                           
 12801                           ;MotorDrive.c: 559: delaynus(50 * 1000);
 12802  002F30  0EC3               	movlw	195
 12803  002F32  0100               	movlb	0	; () banked
 12804  002F34  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12805  002F36  0E50               	movlw	80
 12806  002F38  6FFD               	movwf	delaynus@n& (0+255),b
 12807  002F3A  ECE0  F026         	call	_delaynus	;wreg free
 12808                           
 12809                           ;MotorDrive.c: 561: hg_op.drops_sa = 0;
 12810  002F3E  0E00               	movlw	0
 12811  002F40  0100               	movlb	0	; () banked
 12812  002F42  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;MotorDrive.c: 562: hg_op.drops_sb = 0;
 12816  002F44  0E00               	movlw	0
 12817  002F46  0100               	movlb	0	; () banked
 12818  002F48  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12819                           
 12820                           ; BSR set to: 0
 12821                           ;MotorDrive.c: 563: hg_op.drops_push = 1;
 12822  002F4A  0E01               	movlw	1
 12823  002F4C  0100               	movlb	0	; () banked
 12824  002F4E  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12825  002F50                     l14687:
 12826                           
 12827                           ; BSR set to: 0
 12828                           ;MotorDrive.c: 564: }
 12829                           ;MotorDrive.c: 567: if(hg_op.drops_push == 1)
 12830  002F50  0100               	movlb	0	; () banked
 12831  002F52  05A1               	decf	(_hg_op+33)& (0+255),w,b
 12832  002F54  B4D8               	btfsc	status,2,c
 12833  002F56  D026               	goto	l14707
 12834  002F58  D03A               	goto	l14717
 12835  002F5A                     l14691:
 12836                           
 12837                           ;MotorDrive.c: 581: {
 12838                           ;MotorDrive.c: 582: cnt_push =0;
 12839  002F5A  0E00               	movlw	0
 12840  002F5C  0101               	movlb	1	; () banked
 12841  002F5E  6F31               	movwf	(c_routine@cnt_push+1)& (0+255),b
 12842  002F60  0E00               	movlw	0
 12843  002F62  6F30               	movwf	c_routine@cnt_push& (0+255),b
 12844                           
 12845                           ; BSR set to: 1
 12846                           
 12847                           ; BSR set to: 1
 12848                           
 12849                           ;MotorDrive.c: 583: do{LATDbits.LD0 =1;LATDbits.LD1 =0; LATCbits.LC2 =1; }while(0);
 12850  002F64  808C               	bsf	3980,0,c	;volatile
 12851                           
 12852                           ; BSR set to: 1
 12853  002F66  928C               	bcf	3980,1,c	;volatile
 12854                           
 12855                           ; BSR set to: 1
 12856  002F68  848B               	bsf	3979,2,c	;volatile
 12857                           
 12858                           ; BSR set to: 1
 12859                           ;MotorDrive.c: 585: while(cnt_push < 146)
 12860  002F6A  D00A               	goto	l14703
 12861  002F6C                     l485:
 12862  002F6C  A880               	btfss	3968,4,c	;volatile
 12863  002F6E  D7FE               	goto	l485
 12864                           
 12865                           ;MotorDrive.c: 588: cnt_push ++;
 12866  002F70  0101               	movlb	1	; () banked
 12867  002F72  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 12868  002F74  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 12869  002F76                     l488:
 12870  002F76  B880               	btfsc	3968,4,c	;volatile
 12871  002F78  D7FE               	goto	l488
 12872                           
 12873                           ;MotorDrive.c: 590: cnt_push ++;
 12874  002F7A  0101               	movlb	1	; () banked
 12875  002F7C  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 12876  002F7E  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 12877  002F80                     l14703:
 12878                           
 12879                           ; BSR set to: 1
 12880  002F80  0101               	movlb	1	; () banked
 12881  002F82  5131               	movf	(c_routine@cnt_push+1)& (0+255),w,b
 12882  002F84  E105               	bnz	l492
 12883  002F86  0E92               	movlw	146
 12884  002F88  0101               	movlb	1	; () banked
 12885  002F8A  5D30               	subwf	c_routine@cnt_push& (0+255),w,b
 12886  002F8C  A0D8               	btfss	status,0,c
 12887  002F8E  D7EE               	goto	l485
 12888  002F90                     l492:
 12889                           
 12890                           ; BSR set to: 1
 12891  002F90  848B               	bsf	3979,2,c	;volatile
 12892  002F92  908C               	bcf	3980,0,c	;volatile
 12893  002F94  928C               	bcf	3980,1,c	;volatile
 12894                           
 12895                           ; BSR set to: 1
 12896                           ;MotorDrive.c: 594: delaynus(50 * 1000);
 12897                           
 12898                           ; BSR set to: 1
 12899  002F96  0EC3               	movlw	195
 12900  002F98  0100               	movlb	0	; () banked
 12901  002F9A  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12902  002F9C  0E50               	movlw	80
 12903  002F9E  6FFD               	movwf	delaynus@n& (0+255),b
 12904  002FA0  ECE0  F026         	call	_delaynus	;wreg free
 12905  002FA4                     l14707:
 12906  002FA4  AA81               	btfss	3969,5,c	;volatile
 12907  002FA6  D7D9               	goto	l14691
 12908                           
 12909                           ;MotorDrive.c: 597: }
 12910                           ;MotorDrive.c: 600: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 12911  002FA8  848B               	bsf	3979,2,c	;volatile
 12912  002FAA  908C               	bcf	3980,0,c	;volatile
 12913  002FAC  928C               	bcf	3980,1,c	;volatile
 12914                           
 12915                           ;MotorDrive.c: 602: delaynus(50* 1000);
 12916  002FAE  0EC3               	movlw	195
 12917  002FB0  0100               	movlb	0	; () banked
 12918  002FB2  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12919  002FB4  0E50               	movlw	80
 12920  002FB6  6FFD               	movwf	delaynus@n& (0+255),b
 12921  002FB8  ECE0  F026         	call	_delaynus	;wreg free
 12922                           
 12923                           ;MotorDrive.c: 603: hg_op.drops_sa = 0;
 12924  002FBC  0E00               	movlw	0
 12925  002FBE  0100               	movlb	0	; () banked
 12926  002FC0  6F9F               	movwf	(_hg_op+31)& (0+255),b
 12927                           
 12928                           ; BSR set to: 0
 12929                           ;MotorDrive.c: 604: hg_op.drops_push = 0;
 12930  002FC2  0E00               	movlw	0
 12931  002FC4  0100               	movlb	0	; () banked
 12932  002FC6  6FA1               	movwf	(_hg_op+33)& (0+255),b
 12933                           
 12934                           ; BSR set to: 0
 12935                           ;MotorDrive.c: 605: hg_op.drops_sb = 1;
 12936  002FC8  0E01               	movlw	1
 12937  002FCA  0100               	movlb	0	; () banked
 12938  002FCC  6FA0               	movwf	(_hg_op+32)& (0+255),b
 12939  002FCE                     l14717:
 12940                           
 12941                           ; BSR set to: 0
 12942                           ;MotorDrive.c: 606: }
 12943                           ;MotorDrive.c: 608: if(hg_op.drops_sb == 1)
 12944  002FCE  0100               	movlb	0	; () banked
 12945  002FD0  05A0               	decf	(_hg_op+32)& (0+255),w,b
 12946  002FD2  A4D8               	btfss	status,2,c
 12947  002FD4  0012               	return	
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;MotorDrive.c: 609: {
 12951                           ;MotorDrive.c: 610: hg_op.cnt_posb =0;
 12952  002FD6  0E00               	movlw	0
 12953  002FD8  0100               	movlb	0	; () banked
 12954  002FDA  6FA8               	movwf	(_hg_op+40)& (0+255),b
 12955  002FDC  0E00               	movlw	0
 12956  002FDE  6FA7               	movwf	(_hg_op+39)& (0+255),b
 12957                           
 12958                           ; BSR set to: 0
 12959                           ;MotorDrive.c: 613: if(hg_op.needle_len == 13)
 12960  002FE0  0E0D               	movlw	13
 12961  002FE2  0100               	movlb	0	; () banked
 12962  002FE4  1997               	xorwf	(_hg_op+23)& (0+255),w,b
 12963  002FE6  A4D8               	btfss	status,2,c
 12964  002FE8  D005               	goto	l498
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;MotorDrive.c: 614: {
 12968                           ;MotorDrive.c: 615: LATDbits.LD4 =1;LATDbits.LD3 =1;
 12969  002FEA  888C               	bsf	3980,4,c	;volatile
 12970  002FEC  868C               	bsf	3980,3,c	;volatile
 12971  002FEE                     l499:
 12972  002FEE  A081               	btfss	3969,0,c	;volatile
 12973  002FF0  D00A               	goto	l14727
 12974  002FF2  D7FD               	goto	l499
 12975  002FF4                     l498:
 12976                           
 12977                           ; BSR set to: 0
 12978                           ;MotorDrive.c: 618: else
 12979                           ;MotorDrive.c: 619: {
 12980                           ;MotorDrive.c: 620: LATDbits.LD4 =1;
 12981  002FF4  888C               	bsf	3980,4,c	;volatile
 12982                           
 12983                           ;MotorDrive.c: 621: LATDbits.LD3 =1;
 12984  002FF6  868C               	bsf	3980,3,c	;volatile
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;MotorDrive.c: 623: delaynus(10 * 1000);
 12988  002FF8  0E27               	movlw	39
 12989  002FFA  0100               	movlb	0	; () banked
 12990  002FFC  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 12991  002FFE  0E10               	movlw	16
 12992  003000  6FFD               	movwf	delaynus@n& (0+255),b
 12993  003002  ECE0  F026         	call	_delaynus	;wreg free
 12994  003006                     l14727:
 12995  003006  888C               	bsf	3980,4,c	;volatile
 12996  003008  948C               	bcf	3980,2,c	;volatile
 12997  00300A  968C               	bcf	3980,3,c	;volatile
 12998                           
 12999                           ;MotorDrive.c: 632: delay_pwm(hg_op.work_freq * 300);
 13000  00300C  C09B  F128         	movff	_hg_op+27,___wmul@multiplier
 13001  003010  C09C  F129         	movff	_hg_op+28,___wmul@multiplier+1
 13002  003014  0E01               	movlw	1
 13003  003016  0101               	movlb	1	; () banked
 13004  003018  6F2B               	movwf	(___wmul@multiplicand+1)& (0+255),b
 13005  00301A  0E2C               	movlw	44
 13006  00301C  6F2A               	movwf	___wmul@multiplicand& (0+255),b
 13007  00301E  EC3E  F026         	call	___wmul	;wreg free
 13008  003022  0101               	movlb	1	; () banked
 13009  003024  C128  F12C         	movff	?___wmul,delay_pwm@n
 13010  003028  0101               	movlb	1	; () banked
 13011  00302A  C129  F12D         	movff	?___wmul+1,delay_pwm@n+1
 13012  00302E  0101               	movlb	1	; () banked
 13013  003030  6B2E               	clrf	(delay_pwm@n+2)& (0+255),b
 13014  003032  6B2F               	clrf	(delay_pwm@n+3)& (0+255),b
 13015  003034  EC73  F026         	call	_delay_pwm	;wreg free
 13016                           
 13017                           ;MotorDrive.c: 635: if(PORTBbits.RB5 == 1)
 13018  003038  AA81               	btfss	3969,5,c	;volatile
 13019  00303A  0012               	return	
 13020                           
 13021                           ;MotorDrive.c: 636: {
 13022                           ;MotorDrive.c: 637: delaynus(15 * 1000);
 13023  00303C  0E3A               	movlw	58
 13024  00303E  0100               	movlb	0	; () banked
 13025  003040  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 13026  003042  0E98               	movlw	152
 13027  003044  6FFD               	movwf	delaynus@n& (0+255),b
 13028  003046  ECE0  F026         	call	_delaynus	;wreg free
 13029                           
 13030                           ;MotorDrive.c: 638: if(PORTBbits.RB5 == 1)
 13031  00304A  AA81               	btfss	3969,5,c	;volatile
 13032  00304C  0012               	return	
 13033                           
 13034                           ;MotorDrive.c: 639: {
 13035                           ;MotorDrive.c: 640: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 13036  00304E  888C               	bsf	3980,4,c	;volatile
 13037  003050  948C               	bcf	3980,2,c	;volatile
 13038  003052  968C               	bcf	3980,3,c	;volatile
 13039                           
 13040                           ;MotorDrive.c: 641: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 13041  003054  848B               	bsf	3979,2,c	;volatile
 13042  003056  908C               	bcf	3980,0,c	;volatile
 13043  003058  928C               	bcf	3980,1,c	;volatile
 13044                           
 13045                           ;MotorDrive.c: 644: do{LATDbits.LD0 =0;LATDbits.LD1 =1; LATCbits.LC2 =1;}while(0);
 13046  00305A  908C               	bcf	3980,0,c	;volatile
 13047  00305C  828C               	bsf	3980,1,c	;volatile
 13048  00305E  848B               	bsf	3979,2,c	;volatile
 13049                           
 13050                           ;MotorDrive.c: 646: cnt_push = 0;
 13051  003060  0E00               	movlw	0
 13052  003062  0101               	movlb	1	; () banked
 13053  003064  6F31               	movwf	(c_routine@cnt_push+1)& (0+255),b
 13054  003066  0E00               	movlw	0
 13055  003068  6F30               	movwf	c_routine@cnt_push& (0+255),b
 13056                           
 13057                           ;MotorDrive.c: 648: while(cnt_push < 120)
 13058  00306A  D00A               	goto	l14747
 13059  00306C                     l515:
 13060  00306C  A880               	btfss	3968,4,c	;volatile
 13061  00306E  D7FE               	goto	l515
 13062                           
 13063                           ;MotorDrive.c: 651: cnt_push ++;
 13064  003070  0101               	movlb	1	; () banked
 13065  003072  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 13066  003074  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 13067  003076                     l518:
 13068  003076  B880               	btfsc	3968,4,c	;volatile
 13069  003078  D7FE               	goto	l518
 13070                           
 13071                           ;MotorDrive.c: 653: cnt_push ++;
 13072  00307A  0101               	movlb	1	; () banked
 13073  00307C  4B30               	infsnz	c_routine@cnt_push& (0+255),f,b
 13074  00307E  2B31               	incf	(c_routine@cnt_push+1)& (0+255),f,b
 13075  003080                     l14747:
 13076                           
 13077                           ; BSR set to: 1
 13078  003080  0101               	movlb	1	; () banked
 13079  003082  5131               	movf	(c_routine@cnt_push+1)& (0+255),w,b
 13080  003084  E105               	bnz	l522
 13081  003086  0E78               	movlw	120
 13082  003088  0101               	movlb	1	; () banked
 13083  00308A  5D30               	subwf	c_routine@cnt_push& (0+255),w,b
 13084  00308C  A0D8               	btfss	status,0,c
 13085  00308E  D7EE               	goto	l515
 13086  003090                     l522:
 13087                           
 13088                           ; BSR set to: 1
 13089  003090  848B               	bsf	3979,2,c	;volatile
 13090  003092  908C               	bcf	3980,0,c	;volatile
 13091  003094  928C               	bcf	3980,1,c	;volatile
 13092                           
 13093                           ; BSR set to: 1
 13094                           ;MotorDrive.c: 659: hg_op.drops_sa = 0;
 13095                           
 13096                           ; BSR set to: 1
 13097  003096  0E00               	movlw	0
 13098  003098  0100               	movlb	0	; () banked
 13099  00309A  6F9F               	movwf	(_hg_op+31)& (0+255),b
 13100                           
 13101                           ;MotorDrive.c: 660: hg_op.drops_sb = 0;
 13102  00309C  0E00               	movlw	0
 13103  00309E  0100               	movlb	0	; () banked
 13104  0030A0  6FA0               	movwf	(_hg_op+32)& (0+255),b
 13105                           
 13106                           ;MotorDrive.c: 661: hg_op.drops_push = 0;
 13107  0030A2  0E00               	movlw	0
 13108  0030A4  0100               	movlb	0	; () banked
 13109  0030A6  6FA1               	movwf	(_hg_op+33)& (0+255),b
 13110                           
 13111                           ;MotorDrive.c: 664: hg_op.acting_flag =0;
 13112  0030A8  0E00               	movlw	0
 13113  0030AA  0100               	movlb	0	; () banked
 13114  0030AC  6F9E               	movwf	(_hg_op+30)& (0+255),b
 13115                           
 13116                           ; BSR set to: 0
 13117                           ;MotorDrive.c: 667: if(hg_op.needle_len == 13)
 13118  0030AE  0E0D               	movlw	13
 13119  0030B0  0100               	movlb	0	; () banked
 13120  0030B2  1997               	xorwf	(_hg_op+23)& (0+255),w,b
 13121  0030B4  A4D8               	btfss	status,2,c
 13122  0030B6  D002               	goto	l14755
 13123                           
 13124                           ; BSR set to: 0
 13125                           ;MotorDrive.c: 668: {
 13126                           ;MotorDrive.c: 669: hg_op.need_reset =0;
 13127  0030B8  0E00               	movlw	0
 13128  0030BA  D001               	goto	L21
 13129  0030BC                     l14755:
 13130                           
 13131                           ; BSR set to: 0
 13132                           ;MotorDrive.c: 671: else
 13133                           ;MotorDrive.c: 672: {
 13134                           ;MotorDrive.c: 673: hg_op.need_reset =1;
 13135  0030BC  0E01               	movlw	1
 13136  0030BE                     L21:
 13137  0030BE  0100               	movlb	0	; () banked
 13138  0030C0  6F85               	movwf	(_hg_op+5)& (0+255),b
 13139                           
 13140                           ; BSR set to: 0
 13141                           ;MotorDrive.c: 674: }
 13142                           ;MotorDrive.c: 676: hg_op.working_mode = 0x03;
 13143  0030C2  0E03               	movlw	3
 13144  0030C4  0100               	movlb	0	; () banked
 13145  0030C6  6F80               	movwf	_hg_op& (0+255),b
 13146                           
 13147                           ; BSR set to: 0
 13148                           
 13149                           ; BSR set to: 0
 13150                           
 13151                           ; BSR set to: 0
 13152  0030C8  0012               	return	
 13153  0030CA                     __end_of_c_routine:
 13154                           	opt stack 0
 13155                           tblptru	equ	0xFF8
 13156                           tblptrh	equ	0xFF7
 13157                           tblptrl	equ	0xFF6
 13158                           tablat	equ	0xFF5
 13159                           prodh	equ	0xFF4
 13160                           prodl	equ	0xFF3
 13161                           intcon	equ	0xFF2
 13162                           intcon3	equ	0xFF0
 13163                           postinc0	equ	0xFEE
 13164                           wreg	equ	0xFE8
 13165                           postdec1	equ	0xFE5
 13166                           fsr1h	equ	0xFE2
 13167                           fsr1l	equ	0xFE1
 13168                           status	equ	0xFD8
 13169                           
 13170 ;; *************** function _delay_pwm *****************
 13171 ;; Defined at:
 13172 ;;		line 45 in file "../Oled.c"
 13173 ;; Parameters:    Size  Location     Type
 13174 ;;  n               4    4[BANK1 ] unsigned long 
 13175 ;; Auto vars:     Size  Location     Type
 13176 ;;		None
 13177 ;; Return value:  Size  Location     Type
 13178 ;;                  1    wreg      void 
 13179 ;; Registers used:
 13180 ;;		wreg, status,2, status,0
 13181 ;; Tracked objects:
 13182 ;;		On entry : 0/0
 13183 ;;		On exit  : 0/0
 13184 ;;		Unchanged: 0/0
 13185 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13186 ;;      Params:         0       0       4       0       0       0       0
 13187 ;;      Locals:         0       0       0       0       0       0       0
 13188 ;;      Temps:          0       0       0       0       0       0       0
 13189 ;;      Totals:         0       0       4       0       0       0       0
 13190 ;;Total ram usage:        4 bytes
 13191 ;; Hardware stack levels used:    1
 13192 ;; Hardware stack levels required when called:    2
 13193 ;; This function calls:
 13194 ;;		Nothing
 13195 ;; This function is called by:
 13196 ;;		_c_routine
 13197 ;;		_test_routine
 13198 ;;		_check_shut_device
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text29
 13203  004CE6                     __ptext29:
 13204                           	opt stack 0
 13205  004CE6                     _delay_pwm:
 13206                           	opt stack 27
 13207                           
 13208                           ;Oled.c: 47: while(n)
 13209                           
 13210                           ;incstack = 0
 13211  004CE6  D00D               	goto	l677
 13212  004CE8                     l678:
 13213                           
 13214                           ; BSR set to: 1
 13215                           ;Oled.c: 48: {
 13216                           ;Oled.c: 49: __nop(); __nop(); __nop(); __nop(); __nop(); __nop(); __nop();
 13217  004CE8  F000               	nop	
 13218  004CEA  F000               	nop	
 13219  004CEC  F000               	nop	
 13220  004CEE  F000               	nop	
 13221  004CF0  F000               	nop	
 13222  004CF2  F000               	nop	
 13223  004CF4  F000               	nop	
 13224                           
 13225                           ;Oled.c: 50: n--;
 13226  004CF6  0101               	movlb	1	; () banked
 13227  004CF8  072C               	decf	delay_pwm@n& (0+255),f,b
 13228  004CFA  0E00               	movlw	0
 13229  004CFC  5B2D               	subwfb	(delay_pwm@n+1)& (0+255),f,b
 13230  004CFE  5B2E               	subwfb	(delay_pwm@n+2)& (0+255),f,b
 13231  004D00  5B2F               	subwfb	(delay_pwm@n+3)& (0+255),f,b
 13232  004D02                     l677:
 13233  004D02  0101               	movlb	1	; () banked
 13234  004D04  512C               	movf	delay_pwm@n& (0+255),w,b
 13235  004D06  0101               	movlb	1	; () banked
 13236  004D08  112D               	iorwf	(delay_pwm@n+1)& (0+255),w,b
 13237  004D0A  0101               	movlb	1	; () banked
 13238  004D0C  112E               	iorwf	(delay_pwm@n+2)& (0+255),w,b
 13239  004D0E  0101               	movlb	1	; () banked
 13240  004D10  112F               	iorwf	(delay_pwm@n+3)& (0+255),w,b
 13241  004D12  B4D8               	btfsc	status,2,c
 13242  004D14  0012               	return	
 13243  004D16  D7E8               	goto	l678
 13244  004D18                     __end_of_delay_pwm:
 13245                           	opt stack 0
 13246                           tblptru	equ	0xFF8
 13247                           tblptrh	equ	0xFF7
 13248                           tblptrl	equ	0xFF6
 13249                           tablat	equ	0xFF5
 13250                           prodh	equ	0xFF4
 13251                           prodl	equ	0xFF3
 13252                           intcon	equ	0xFF2
 13253                           intcon3	equ	0xFF0
 13254                           postinc0	equ	0xFEE
 13255                           wreg	equ	0xFE8
 13256                           postdec1	equ	0xFE5
 13257                           fsr1h	equ	0xFE2
 13258                           fsr1l	equ	0xFE1
 13259                           status	equ	0xFD8
 13260                           
 13261 ;; *************** function ___wmul *****************
 13262 ;; Defined at:
 13263 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 13264 ;; Parameters:    Size  Location     Type
 13265 ;;  multiplier      2    0[BANK1 ] unsigned int 
 13266 ;;  multiplicand    2    2[BANK1 ] unsigned int 
 13267 ;; Auto vars:     Size  Location     Type
 13268 ;;  product         2    0[BANK0 ] unsigned int 
 13269 ;; Return value:  Size  Location     Type
 13270 ;;                  2    0[BANK1 ] unsigned int 
 13271 ;; Registers used:
 13272 ;;		wreg, status,2, status,0, prodl, prodh
 13273 ;; Tracked objects:
 13274 ;;		On entry : 0/0
 13275 ;;		On exit  : 0/0
 13276 ;;		Unchanged: 0/0
 13277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13278 ;;      Params:         0       0       4       0       0       0       0
 13279 ;;      Locals:         0       2       0       0       0       0       0
 13280 ;;      Temps:          0       0       0       0       0       0       0
 13281 ;;      Totals:         0       2       4       0       0       0       0
 13282 ;;Total ram usage:        6 bytes
 13283 ;; Hardware stack levels used:    1
 13284 ;; Hardware stack levels required when called:    2
 13285 ;; This function calls:
 13286 ;;		Nothing
 13287 ;; This function is called by:
 13288 ;;		_c_routine
 13289 ;;		_test_routine
 13290 ;; This function uses a non-reentrant model
 13291 ;;
 13292                           
 13293                           	psect	text30
 13294  004C7C                     __ptext30:
 13295                           	opt stack 0
 13296  004C7C                     ___wmul:
 13297                           	opt stack 27
 13298                           
 13299                           ; BSR set to: 1
 13300                           ;incstack = 0
 13301  004C7C  0101               	movlb	1	; () banked
 13302  004C7E  5128               	movf	___wmul@multiplier& (0+255),w,b
 13303  004C80  0101               	movlb	1	; () banked
 13304  004C82  032A               	mulwf	___wmul@multiplicand& (0+255),b
 13305  004C84  CFF3 F0FD          	movff	prodl,___wmul@product
 13306  004C88  CFF4 F0FE          	movff	prodh,___wmul@product+1
 13307  004C8C  0101               	movlb	1	; () banked
 13308  004C8E  5128               	movf	___wmul@multiplier& (0+255),w,b
 13309  004C90  0101               	movlb	1	; () banked
 13310  004C92  032B               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 13311  004C94  50F3               	movf	prodl,w,c
 13312  004C96  0100               	movlb	0	; () banked
 13313  004C98  27FE               	addwf	(___wmul@product+1)& (0+255),f,b
 13314  004C9A  0101               	movlb	1	; () banked
 13315  004C9C  5129               	movf	(___wmul@multiplier+1)& (0+255),w,b
 13316  004C9E  0101               	movlb	1	; () banked
 13317  004CA0  032A               	mulwf	___wmul@multiplicand& (0+255),b
 13318  004CA2  50F3               	movf	prodl,w,c
 13319  004CA4  0100               	movlb	0	; () banked
 13320  004CA6  27FE               	addwf	(___wmul@product+1)& (0+255),f,b
 13321                           
 13322                           ; BSR set to: 0
 13323  004CA8  C0FD  F128         	movff	___wmul@product,?___wmul
 13324  004CAC  C0FE  F129         	movff	___wmul@product+1,?___wmul+1
 13325  004CB0  0012               	return	
 13326  004CB2                     __end_of___wmul:
 13327                           	opt stack 0
 13328                           tblptru	equ	0xFF8
 13329                           tblptrh	equ	0xFF7
 13330                           tblptrl	equ	0xFF6
 13331                           tablat	equ	0xFF5
 13332                           prodh	equ	0xFF4
 13333                           prodl	equ	0xFF3
 13334                           intcon	equ	0xFF2
 13335                           intcon3	equ	0xFF0
 13336                           postinc0	equ	0xFEE
 13337                           wreg	equ	0xFE8
 13338                           postdec1	equ	0xFE5
 13339                           fsr1h	equ	0xFE2
 13340                           fsr1l	equ	0xFE1
 13341                           status	equ	0xFD8
 13342                           
 13343 ;; *************** function _HG_interface *****************
 13344 ;; Defined at:
 13345 ;;		line 1496 in file "../gui.c"
 13346 ;; Parameters:    Size  Location     Type
 13347 ;;		None
 13348 ;; Auto vars:     Size  Location     Type
 13349 ;;  kv              1   17[BANK1 ] unsigned char 
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  1    wreg      void 
 13352 ;; Registers used:
 13353 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13354 ;; Tracked objects:
 13355 ;;		On entry : 0/0
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13359 ;;      Params:         0       0       0       0       0       0       0
 13360 ;;      Locals:         0       0       1       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0
 13362 ;;      Totals:         0       0       1       0       0       0       0
 13363 ;;Total ram usage:        1 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    8
 13366 ;; This function calls:
 13367 ;;		_KEY_Scan
 13368 ;;		_menu0_MsgHandlle
 13369 ;;		_menu1_MsgHandlle
 13370 ;;		_menu2_MsgHandlle
 13371 ;;		_menu3_MsgHandlle
 13372 ;;		_menu4_MsgHandlle
 13373 ;;		_menu5_MsgHandlle
 13374 ;;		_menu6_MsgHandlle
 13375 ;;		_update_focus
 13376 ;; This function is called by:
 13377 ;;		_main
 13378 ;; This function uses a non-reentrant model
 13379 ;;
 13380                           
 13381                           	psect	text31
 13382  0048C2                     __ptext31:
 13383                           	opt stack 0
 13384  0048C2                     _HG_interface:
 13385                           	opt stack 22
 13386                           
 13387                           ;gui.c: 1498: uint8_t kv = 0;
 13388                           
 13389                           ; BSR set to: 0
 13390                           ;incstack = 0
 13391  0048C2  0E00               	movlw	0
 13392  0048C4  0101               	movlb	1	; () banked
 13393  0048C6  6F39               	movwf	HG_interface@kv& (0+255),b
 13394                           
 13395                           ; BSR set to: 1
 13396                           ;gui.c: 1499: kv = KEY_Scan();
 13397  0048C8  ECE2  F020         	call	_KEY_Scan	;wreg free
 13398  0048CC  0101               	movlb	1	; () banked
 13399  0048CE  6F39               	movwf	HG_interface@kv& (0+255),b
 13400                           
 13401                           ; BSR set to: 1
 13402                           ;gui.c: 1500: update_focus(kv);
 13403  0048D0  0101               	movlb	1	; () banked
 13404  0048D2  5139               	movf	HG_interface@kv& (0+255),w,b
 13405  0048D4  EC17  F023         	call	_update_focus
 13406                           
 13407                           ;gui.c: 1503: if(kv)
 13408  0048D8  0101               	movlb	1	; () banked
 13409  0048DA  5139               	movf	HG_interface@kv& (0+255),w,b
 13410  0048DC  0101               	movlb	1	; () banked
 13411  0048DE  B4D8               	btfsc	status,2,c
 13412  0048E0  0012               	return	
 13413                           
 13414                           ; BSR set to: 1
 13415                           ;gui.c: 1504: {
 13416                           ;gui.c: 1505: menu0_MsgHandlle(kv);
 13417  0048E2  0101               	movlb	1	; () banked
 13418  0048E4  5139               	movf	HG_interface@kv& (0+255),w,b
 13419  0048E6  EC2C  F00F         	call	_menu0_MsgHandlle
 13420                           
 13421                           ;gui.c: 1506: menu1_MsgHandlle(kv);
 13422  0048EA  0101               	movlb	1	; () banked
 13423  0048EC  5139               	movf	HG_interface@kv& (0+255),w,b
 13424  0048EE  EC10  F025         	call	_menu1_MsgHandlle
 13425                           
 13426                           ;gui.c: 1507: menu2_MsgHandlle(kv);
 13427  0048F2  0101               	movlb	1	; () banked
 13428  0048F4  5139               	movf	HG_interface@kv& (0+255),w,b
 13429  0048F6  ECE7  F024         	call	_menu2_MsgHandlle
 13430                           
 13431                           ;gui.c: 1508: menu3_MsgHandlle(kv);
 13432  0048FA  0101               	movlb	1	; () banked
 13433  0048FC  5139               	movf	HG_interface@kv& (0+255),w,b
 13434  0048FE  EC48  F015         	call	_menu3_MsgHandlle
 13435                           
 13436                           ;gui.c: 1509: menu4_MsgHandlle(kv);
 13437  004902  0101               	movlb	1	; () banked
 13438  004904  5139               	movf	HG_interface@kv& (0+255),w,b
 13439  004906  EC13  F013         	call	_menu4_MsgHandlle
 13440                           
 13441                           ;gui.c: 1510: menu5_MsgHandlle(kv);
 13442  00490A  0101               	movlb	1	; () banked
 13443  00490C  5139               	movf	HG_interface@kv& (0+255),w,b
 13444  00490E  EC65  F018         	call	_menu5_MsgHandlle
 13445                           
 13446                           ;gui.c: 1511: menu6_MsgHandlle(kv);
 13447  004912  0101               	movlb	1	; () banked
 13448  004914  5139               	movf	HG_interface@kv& (0+255),w,b
 13449  004916  ECF3  F004         	call	_menu6_MsgHandlle
 13450  00491A  0012               	return	
 13451  00491C                     __end_of_HG_interface:
 13452                           	opt stack 0
 13453                           tblptru	equ	0xFF8
 13454                           tblptrh	equ	0xFF7
 13455                           tblptrl	equ	0xFF6
 13456                           tablat	equ	0xFF5
 13457                           prodh	equ	0xFF4
 13458                           prodl	equ	0xFF3
 13459                           intcon	equ	0xFF2
 13460                           intcon3	equ	0xFF0
 13461                           postinc0	equ	0xFEE
 13462                           wreg	equ	0xFE8
 13463                           postdec1	equ	0xFE5
 13464                           fsr1h	equ	0xFE2
 13465                           fsr1l	equ	0xFE1
 13466                           status	equ	0xFD8
 13467                           
 13468 ;; *************** function _update_focus *****************
 13469 ;; Defined at:
 13470 ;;		line 1461 in file "../gui.c"
 13471 ;; Parameters:    Size  Location     Type
 13472 ;;  key             1    wreg     unsigned char 
 13473 ;; Auto vars:     Size  Location     Type
 13474 ;;  key             1    1[BANK0 ] unsigned char 
 13475 ;;  i               1    2[BANK0 ] unsigned char 
 13476 ;; Return value:  Size  Location     Type
 13477 ;;                  1    wreg      void 
 13478 ;; Registers used:
 13479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13480 ;; Tracked objects:
 13481 ;;		On entry : 0/0
 13482 ;;		On exit  : 0/0
 13483 ;;		Unchanged: 0/0
 13484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13485 ;;      Params:         0       0       0       0       0       0       0
 13486 ;;      Locals:         0       2       0       0       0       0       0
 13487 ;;      Temps:          0       1       0       0       0       0       0
 13488 ;;      Totals:         0       3       0       0       0       0       0
 13489 ;;Total ram usage:        3 bytes
 13490 ;; Hardware stack levels used:    1
 13491 ;; Hardware stack levels required when called:    2
 13492 ;; This function calls:
 13493 ;;		Nothing
 13494 ;; This function is called by:
 13495 ;;		_HG_interface
 13496 ;; This function uses a non-reentrant model
 13497 ;;
 13498                           
 13499                           	psect	text32
 13500  00462E                     __ptext32:
 13501                           	opt stack 0
 13502  00462E                     _update_focus:
 13503                           	opt stack 27
 13504                           
 13505                           ;incstack = 0
 13506                           ;update_focus@key stored from wreg
 13507  00462E  0100               	movlb	0	; () banked
 13508  004630  6FFE               	movwf	update_focus@key& (0+255),b
 13509                           
 13510                           ;gui.c: 1464: uint8_t i = 0;
 13511  004632  0E00               	movlw	0
 13512  004634  0100               	movlb	0	; () banked
 13513  004636  6FFF               	movwf	update_focus@i& (0+255),b
 13514                           
 13515                           ;gui.c: 1465: for(i=0;i<8;i++)
 13516  004638  0E00               	movlw	0
 13517  00463A  0100               	movlb	0	; () banked
 13518  00463C  6FFF               	movwf	update_focus@i& (0+255),b
 13519  00463E                     l14065:
 13520                           
 13521                           ; BSR set to: 0
 13522  00463E  0E07               	movlw	7
 13523  004640  0100               	movlb	0	; () banked
 13524  004642  65FF               	cpfsgt	update_focus@i& (0+255),b
 13525  004644  D001               	goto	l14069
 13526  004646  D028               	goto	l14091
 13527  004648                     l14069:
 13528                           
 13529                           ; BSR set to: 0
 13530                           ;gui.c: 1466: if(menu[i].mode == 3) key = 0x00;
 13531  004648  0100               	movlb	0	; () banked
 13532  00464A  51FF               	movf	update_focus@i& (0+255),w,b
 13533  00464C  0D08               	mullw	8
 13534  00464E  0E01               	movlw	1
 13535  004650  26F3               	addwf	prodl,f,c
 13536  004652  0E00               	movlw	0
 13537  004654  22F4               	addwfc	prodh,f,c
 13538  004656  0E01               	movlw	low _menu
 13539  004658  24F3               	addwf	prodl,w,c
 13540  00465A  6ED9               	movwf	fsr2l,c
 13541  00465C  0E00               	movlw	high _menu
 13542  00465E  20F4               	addwfc	prodh,w,c
 13543  004660  6EDA               	movwf	fsr2h,c
 13544  004662  0E03               	movlw	3
 13545  004664  18DE               	xorwf	postinc2,w,c
 13546  004666  A4D8               	btfss	status,2,c
 13547  004668  D003               	goto	l14073
 13548                           
 13549                           ; BSR set to: 0
 13550  00466A  0E00               	movlw	0
 13551  00466C  0100               	movlb	0	; () banked
 13552  00466E  6FFE               	movwf	update_focus@key& (0+255),b
 13553  004670                     l14073:
 13554                           
 13555                           ; BSR set to: 0
 13556  004670  0100               	movlb	0	; () banked
 13557  004672  2BFF               	incf	update_focus@i& (0+255),f,b
 13558  004674  D7E4               	goto	l14065
 13559  004676                     l14077:
 13560                           
 13561                           ; BSR set to: 0
 13562                           ;gui.c: 1472: if(focus == 7)
 13563  004676  0E07               	movlw	7
 13564  004678  184F               	xorwf	_focus,w,c
 13565  00467A  A4D8               	btfss	status,2,c
 13566  00467C  D003               	goto	l14081
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;gui.c: 1473: focus =1;
 13570  00467E  0E01               	movlw	1
 13571  004680  6E4F               	movwf	_focus,c
 13572  004682  0012               	return	
 13573  004684                     l14081:
 13574                           
 13575                           ; BSR set to: 0
 13576                           ;gui.c: 1474: else
 13577                           ;gui.c: 1475: focus++;
 13578  004684  2A4F               	incf	_focus,f,c
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;gui.c: 1477: break;
 13582  004686  0012               	return	
 13583  004688                     l14083:
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;gui.c: 1480: if(focus==0)
 13587  004688  504F               	movf	_focus,w,c
 13588  00468A  A4D8               	btfss	status,2,c
 13589  00468C  D003               	goto	l14087
 13590                           
 13591                           ; BSR set to: 0
 13592                           ;gui.c: 1481: focus =7;
 13593  00468E  0E07               	movlw	7
 13594  004690  6E4F               	movwf	_focus,c
 13595  004692  0012               	return	
 13596  004694                     l14087:
 13597                           
 13598                           ; BSR set to: 0
 13599                           ;gui.c: 1482: else
 13600                           ;gui.c: 1483: focus --;
 13601  004694  064F               	decf	_focus,f,c
 13602                           
 13603                           ; BSR set to: 0
 13604                           ;gui.c: 1490: }
 13605                           
 13606                           ; BSR set to: 0
 13607                           ;gui.c: 1489: break;
 13608                           
 13609                           ;gui.c: 1488: case 0xf3:
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;gui.c: 1486: break;
 13613  004696  0012               	return	
 13614  004698                     l14091:
 13615                           
 13616                           ; BSR set to: 0
 13617  004698  0100               	movlb	0	; () banked
 13618  00469A  51FE               	movf	update_focus@key& (0+255),w,b
 13619                           
 13620                           ; Switch size 1, requested type "space"
 13621                           ; Number of cases is 3, Range of values is 241 to 243
 13622                           ; switch strategies available:
 13623                           ; Name         Instructions Cycles
 13624                           ; simple_byte           10     6 (average)
 13625                           ;	Chosen strategy is simple_byte
 13626  00469C  0AF1               	xorlw	241	; case 241
 13627  00469E  B4D8               	btfsc	status,2,c
 13628  0046A0  D7EA               	goto	l14077
 13629  0046A2  0A03               	xorlw	3	; case 242
 13630  0046A4  B4D8               	btfsc	status,2,c
 13631  0046A6  D7F0               	goto	l14083
 13632  0046A8  0A01               	xorlw	1	; case 243
 13633  0046AA  0012               	return	
 13634  0046AC                     __end_of_update_focus:
 13635                           	opt stack 0
 13636                           tblptru	equ	0xFF8
 13637                           tblptrh	equ	0xFF7
 13638                           tblptrl	equ	0xFF6
 13639                           tablat	equ	0xFF5
 13640                           prodh	equ	0xFF4
 13641                           prodl	equ	0xFF3
 13642                           intcon	equ	0xFF2
 13643                           intcon3	equ	0xFF0
 13644                           postinc0	equ	0xFEE
 13645                           wreg	equ	0xFE8
 13646                           postdec1	equ	0xFE5
 13647                           fsr1h	equ	0xFE2
 13648                           fsr1l	equ	0xFE1
 13649                           postinc2	equ	0xFDE
 13650                           fsr2h	equ	0xFDA
 13651                           fsr2l	equ	0xFD9
 13652                           status	equ	0xFD8
 13653                           
 13654 ;; *************** function _menu6_MsgHandlle *****************
 13655 ;; Defined at:
 13656 ;;		line 977 in file "../gui.c"
 13657 ;; Parameters:    Size  Location     Type
 13658 ;;  key             1    wreg     unsigned char 
 13659 ;; Auto vars:     Size  Location     Type
 13660 ;;  key             1   16[BANK1 ] unsigned char 
 13661 ;; Return value:  Size  Location     Type
 13662 ;;                  1    wreg      void 
 13663 ;; Registers used:
 13664 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13665 ;; Tracked objects:
 13666 ;;		On entry : 0/0
 13667 ;;		On exit  : 0/0
 13668 ;;		Unchanged: 0/0
 13669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13670 ;;      Params:         0       0       0       0       0       0       0
 13671 ;;      Locals:         0       0       1       0       0       0       0
 13672 ;;      Temps:          0       0       0       0       0       0       0
 13673 ;;      Totals:         0       0       1       0       0       0       0
 13674 ;;Total ram usage:        1 bytes
 13675 ;; Hardware stack levels used:    1
 13676 ;; Hardware stack levels required when called:    7
 13677 ;; This function calls:
 13678 ;;		_display_frame_fghi
 13679 ;;		_display_num
 13680 ;; This function is called by:
 13681 ;;		_init_menu
 13682 ;;		_HG_interface
 13683 ;; This function uses a non-reentrant model
 13684 ;;
 13685                           
 13686                           	psect	text33
 13687  0009E6                     __ptext33:
 13688                           	opt stack 0
 13689  0009E6                     _menu6_MsgHandlle:
 13690                           	opt stack 22
 13691                           
 13692                           ; BSR set to: 0
 13693                           ;incstack = 0
 13694                           ;menu6_MsgHandlle@key stored from wreg
 13695  0009E6  0101               	movlb	1	; () banked
 13696  0009E8  6F38               	movwf	menu6_MsgHandlle@key& (0+255),b
 13697                           
 13698                           ;gui.c: 980: switch(key)
 13699  0009EA  D1EE               	goto	l14061
 13700  0009EC                     l13853:
 13701                           
 13702                           ;gui.c: 984: if(menu[6].mode == 3)
 13703  0009EC  0E03               	movlw	3
 13704  0009EE  1832               	xorwf	_menu+49,w,c
 13705  0009F0  A4D8               	btfss	status,2,c
 13706  0009F2  D008               	goto	l13861
 13707                           
 13708                           ;gui.c: 985: {
 13709                           ;gui.c: 986: menu[6].parameter ++;
 13710  0009F4  2A36               	incf	_menu+53,f,c
 13711                           
 13712                           ;gui.c: 987: if(menu[6].parameter == 3) menu[6].parameter = 0;
 13713  0009F6  0E03               	movlw	3
 13714  0009F8  1836               	xorwf	_menu+53,w,c
 13715  0009FA  A4D8               	btfss	status,2,c
 13716  0009FC  0012               	return	
 13717  0009FE  0E00               	movlw	0
 13718  000A00  6E36               	movwf	_menu+53,c
 13719                           
 13720                           ;gui.c: 988: }
 13721  000A02  0012               	return	
 13722  000A04                     l13861:
 13723                           
 13724                           ;gui.c: 989: else
 13725                           ;gui.c: 990: {
 13726                           ;gui.c: 991: if(focus == 7)
 13727  000A04  0E07               	movlw	7
 13728  000A06  184F               	xorwf	_focus,w,c
 13729  000A08  A4D8               	btfss	status,2,c
 13730  000A0A  D002               	goto	l13865
 13731                           
 13732                           ;gui.c: 992: {
 13733                           ;gui.c: 993: menu[6].mode = 0x80;
 13734  000A0C  0E80               	movlw	128
 13735  000A0E  D001               	goto	L22
 13736  000A10                     l13865:
 13737                           
 13738                           ;gui.c: 995: else
 13739                           ;gui.c: 996: {
 13740                           ;gui.c: 997: menu[6].mode = 0;
 13741  000A10  0E00               	movlw	0
 13742  000A12                     L22:
 13743  000A12  6E32               	movwf	_menu+49,c
 13744                           
 13745                           ;gui.c: 998: }
 13746                           ;gui.c: 1001: if(menu[6].cur_mode != menu[6].mode)
 13747  000A14  5032               	movf	_menu+49,w,c
 13748  000A16  1833               	xorwf	_menu+50,w,c
 13749  000A18  B4D8               	btfsc	status,2,c
 13750  000A1A  0012               	return	
 13751                           
 13752                           ;gui.c: 1002: {
 13753                           ;gui.c: 1004: if(work_mode == 0x00 || work_mode == 0x02)
 13754  000A1C  504D               	movf	_work_mode,w,c
 13755  000A1E  B4D8               	btfsc	status,2,c
 13756  000A20  D004               	goto	l13873
 13757  000A22  0E02               	movlw	2
 13758  000A24  184D               	xorwf	_work_mode,w,c
 13759  000A26  A4D8               	btfss	status,2,c
 13760  000A28  D009               	goto	l13875
 13761  000A2A                     l13873:
 13762                           
 13763                           ;gui.c: 1005: {
 13764                           ;gui.c: 1006: display_frame_fghi(2,0, menu[6].mode);
 13765  000A2A  0E00               	movlw	0
 13766  000A2C  0101               	movlb	1	; () banked
 13767  000A2E  6F31               	movwf	display_frame_fghi@x& (0+255),b
 13768  000A30  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 13769  000A34  0E02               	movlw	2
 13770  000A36  ECCD  F008         	call	_display_frame_fghi
 13771                           
 13772                           ;gui.c: 1007: }
 13773  000A3A  D00B               	goto	l13879
 13774  000A3C                     l13875:
 13775                           
 13776                           ;gui.c: 1008: else if(work_mode == 0x01)
 13777  000A3C  044D               	decf	_work_mode,w,c
 13778  000A3E  A4D8               	btfss	status,2,c
 13779  000A40  D008               	goto	l13879
 13780                           
 13781                           ;gui.c: 1009: {
 13782                           ;gui.c: 1010: display_frame_fghi(3,0, menu[6].mode);
 13783  000A42  0E00               	movlw	0
 13784  000A44  0101               	movlb	1	; () banked
 13785  000A46  6F31               	movwf	display_frame_fghi@x& (0+255),b
 13786  000A48  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 13787  000A4C  0E03               	movlw	3
 13788  000A4E  ECCD  F008         	call	_display_frame_fghi
 13789  000A52                     l13879:
 13790                           
 13791                           ;gui.c: 1011: }
 13792                           ;gui.c: 1012: if( menu[6].parameter == 0)
 13793  000A52  5036               	movf	_menu+53,w,c
 13794  000A54  A4D8               	btfss	status,2,c
 13795  000A56  D020               	goto	l13891
 13796                           
 13797                           ;gui.c: 1013: {
 13798                           ;gui.c: 1014: if(work_mode == 0x00 || work_mode == 0x02)
 13799  000A58  504D               	movf	_work_mode,w,c
 13800  000A5A  B4D8               	btfsc	status,2,c
 13801  000A5C  D004               	goto	l13885
 13802  000A5E  0E02               	movlw	2
 13803  000A60  184D               	xorwf	_work_mode,w,c
 13804  000A62  A4D8               	btfss	status,2,c
 13805  000A64  D00B               	goto	l13887
 13806  000A66                     l13885:
 13807                           
 13808                           ;gui.c: 1015: {
 13809                           ;gui.c: 1016: display_num(3,(0 + 14), menu[6].mode | 3);
 13810  000A66  0E0E               	movlw	14
 13811  000A68  0101               	movlb	1	; () banked
 13812  000A6A  6F31               	movwf	display_num@x& (0+255),b
 13813  000A6C  5032               	movf	_menu+49,w,c
 13814  000A6E  0903               	iorlw	3
 13815  000A70  0101               	movlb	1	; () banked
 13816  000A72  6F32               	movwf	display_num@mode& (0+255),b
 13817  000A74  0E03               	movlw	3
 13818  000A76  ECF0  F006         	call	_display_num
 13819                           
 13820                           ;gui.c: 1017: }
 13821  000A7A  D054               	goto	l13915
 13822  000A7C                     l13887:
 13823                           
 13824                           ;gui.c: 1018: else if(work_mode == 0x01)
 13825  000A7C  044D               	decf	_work_mode,w,c
 13826  000A7E  A4D8               	btfss	status,2,c
 13827  000A80  D051               	goto	l13915
 13828                           
 13829                           ;gui.c: 1019: {
 13830                           ;gui.c: 1020: display_num(3,(0 + 17), menu[6].mode | 103);
 13831  000A82  0E11               	movlw	17
 13832  000A84  0101               	movlb	1	; () banked
 13833  000A86  6F31               	movwf	display_num@x& (0+255),b
 13834  000A88  5032               	movf	_menu+49,w,c
 13835  000A8A  0967               	iorlw	103
 13836  000A8C  0101               	movlb	1	; () banked
 13837  000A8E  6F32               	movwf	display_num@mode& (0+255),b
 13838  000A90  0E03               	movlw	3
 13839  000A92  ECF0  F006         	call	_display_num
 13840                           
 13841                           ;gui.c: 1021: }
 13842                           ;gui.c: 1023: }
 13843  000A96  D046               	goto	l13915
 13844  000A98                     l13891:
 13845                           
 13846                           ;gui.c: 1024: else if( menu[6].parameter == 1)
 13847  000A98  0436               	decf	_menu+53,w,c
 13848  000A9A  A4D8               	btfss	status,2,c
 13849  000A9C  D020               	goto	l13903
 13850                           
 13851                           ;gui.c: 1025: {
 13852                           ;gui.c: 1026: if(work_mode == 0x00 || work_mode == 0x02)
 13853  000A9E  504D               	movf	_work_mode,w,c
 13854  000AA0  B4D8               	btfsc	status,2,c
 13855  000AA2  D004               	goto	l13897
 13856  000AA4  0E02               	movlw	2
 13857  000AA6  184D               	xorwf	_work_mode,w,c
 13858  000AA8  A4D8               	btfss	status,2,c
 13859  000AAA  D00B               	goto	l13899
 13860  000AAC                     l13897:
 13861                           
 13862                           ;gui.c: 1027: {
 13863                           ;gui.c: 1028: display_num(3,(0 + 14), menu[6].mode | 3);
 13864  000AAC  0E0E               	movlw	14
 13865  000AAE  0101               	movlb	1	; () banked
 13866  000AB0  6F31               	movwf	display_num@x& (0+255),b
 13867  000AB2  5032               	movf	_menu+49,w,c
 13868  000AB4  0903               	iorlw	3
 13869  000AB6  0101               	movlb	1	; () banked
 13870  000AB8  6F32               	movwf	display_num@mode& (0+255),b
 13871  000ABA  0E03               	movlw	3
 13872  000ABC  ECF0  F006         	call	_display_num
 13873                           
 13874                           ;gui.c: 1029: }
 13875  000AC0  D031               	goto	l13915
 13876  000AC2                     l13899:
 13877                           
 13878                           ;gui.c: 1030: else if(work_mode == 0x01)
 13879  000AC2  044D               	decf	_work_mode,w,c
 13880  000AC4  A4D8               	btfss	status,2,c
 13881  000AC6  D02E               	goto	l13915
 13882                           
 13883                           ;gui.c: 1031: {
 13884                           ;gui.c: 1032: display_num(3,(0 + 17), menu[6].mode | 102);
 13885  000AC8  0E11               	movlw	17
 13886  000ACA  0101               	movlb	1	; () banked
 13887  000ACC  6F31               	movwf	display_num@x& (0+255),b
 13888  000ACE  5032               	movf	_menu+49,w,c
 13889  000AD0  0966               	iorlw	102
 13890  000AD2  0101               	movlb	1	; () banked
 13891  000AD4  6F32               	movwf	display_num@mode& (0+255),b
 13892  000AD6  0E03               	movlw	3
 13893  000AD8  ECF0  F006         	call	_display_num
 13894                           
 13895                           ;gui.c: 1033: }
 13896                           ;gui.c: 1034: }
 13897  000ADC  D023               	goto	l13915
 13898  000ADE                     l13903:
 13899                           
 13900                           ;gui.c: 1035: else if( menu[6].parameter == 2)
 13901  000ADE  0E02               	movlw	2
 13902  000AE0  1836               	xorwf	_menu+53,w,c
 13903  000AE2  A4D8               	btfss	status,2,c
 13904  000AE4  D01F               	goto	l13915
 13905                           
 13906                           ;gui.c: 1036: {
 13907                           ;gui.c: 1038: if(work_mode == 0x00 || work_mode == 0x02)
 13908  000AE6  504D               	movf	_work_mode,w,c
 13909  000AE8  B4D8               	btfsc	status,2,c
 13910  000AEA  D004               	goto	l13909
 13911  000AEC  0E02               	movlw	2
 13912  000AEE  184D               	xorwf	_work_mode,w,c
 13913  000AF0  A4D8               	btfss	status,2,c
 13914  000AF2  D00B               	goto	l13911
 13915  000AF4                     l13909:
 13916                           
 13917                           ;gui.c: 1039: {
 13918                           ;gui.c: 1040: display_num(3,(0 + 14), menu[6].mode | 3);
 13919  000AF4  0E0E               	movlw	14
 13920  000AF6  0101               	movlb	1	; () banked
 13921  000AF8  6F31               	movwf	display_num@x& (0+255),b
 13922  000AFA  5032               	movf	_menu+49,w,c
 13923  000AFC  0903               	iorlw	3
 13924  000AFE  0101               	movlb	1	; () banked
 13925  000B00  6F32               	movwf	display_num@mode& (0+255),b
 13926  000B02  0E03               	movlw	3
 13927  000B04  ECF0  F006         	call	_display_num
 13928                           
 13929                           ;gui.c: 1041: }
 13930  000B08  D00D               	goto	l13915
 13931  000B0A                     l13911:
 13932                           
 13933                           ;gui.c: 1042: else if(work_mode == 0x01)
 13934  000B0A  044D               	decf	_work_mode,w,c
 13935  000B0C  A4D8               	btfss	status,2,c
 13936  000B0E  D00A               	goto	l13915
 13937                           
 13938                           ;gui.c: 1043: {
 13939                           ;gui.c: 1044: display_num(3,(0 + 17), menu[6].mode | 101);
 13940  000B10  0E11               	movlw	17
 13941  000B12  0101               	movlb	1	; () banked
 13942  000B14  6F31               	movwf	display_num@x& (0+255),b
 13943  000B16  5032               	movf	_menu+49,w,c
 13944  000B18  0965               	iorlw	101
 13945  000B1A  0101               	movlb	1	; () banked
 13946  000B1C  6F32               	movwf	display_num@mode& (0+255),b
 13947  000B1E  0E03               	movlw	3
 13948  000B20  ECF0  F006         	call	_display_num
 13949  000B24                     l13915:
 13950                           
 13951                           ;gui.c: 1045: }
 13952                           ;gui.c: 1047: }
 13953                           ;gui.c: 1050: menu[6].cur_mode = menu[6].mode;
 13954  000B24  C032  F033         	movff	_menu+49,_menu+50
 13955                           
 13956                           ;gui.c: 1051: }
 13957                           ;gui.c: 1052: }
 13958                           ;gui.c: 1054: break;
 13959  000B28  0012               	return	
 13960  000B2A                     l13917:
 13961                           
 13962                           ;gui.c: 1058: if(menu[6].mode == 3)
 13963  000B2A  0E03               	movlw	3
 13964  000B2C  1832               	xorwf	_menu+49,w,c
 13965  000B2E  A4D8               	btfss	status,2,c
 13966  000B30  D007               	goto	l13925
 13967                           
 13968                           ;gui.c: 1059: {
 13969                           ;gui.c: 1060: menu[6].parameter --;
 13970  000B32  0636               	decf	_menu+53,f,c
 13971                           
 13972                           ;gui.c: 1061: if(menu[6].parameter == -1) menu[6].parameter = 2;
 13973  000B34  2836               	incf	_menu+53,w,c
 13974  000B36  A4D8               	btfss	status,2,c
 13975  000B38  0012               	return	
 13976  000B3A  0E02               	movlw	2
 13977  000B3C  6E36               	movwf	_menu+53,c
 13978                           
 13979                           ;gui.c: 1062: }
 13980  000B3E  0012               	return	
 13981  000B40                     l13925:
 13982                           
 13983                           ;gui.c: 1063: else
 13984                           ;gui.c: 1064: {
 13985                           ;gui.c: 1065: if(focus == 7)
 13986  000B40  0E07               	movlw	7
 13987  000B42  184F               	xorwf	_focus,w,c
 13988  000B44  A4D8               	btfss	status,2,c
 13989  000B46  D002               	goto	l13929
 13990                           
 13991                           ;gui.c: 1066: {
 13992                           ;gui.c: 1067: menu[6].mode = 0x80;
 13993  000B48  0E80               	movlw	128
 13994  000B4A  D001               	goto	L23
 13995  000B4C                     l13929:
 13996                           
 13997                           ;gui.c: 1069: else
 13998                           ;gui.c: 1070: {
 13999                           ;gui.c: 1071: menu[6].mode = 0;
 14000  000B4C  0E00               	movlw	0
 14001  000B4E                     L23:
 14002  000B4E  6E32               	movwf	_menu+49,c
 14003                           
 14004                           ;gui.c: 1072: }
 14005                           ;gui.c: 1075: if(menu[6].cur_mode != menu[6].mode)
 14006  000B50  5032               	movf	_menu+49,w,c
 14007  000B52  1833               	xorwf	_menu+50,w,c
 14008  000B54  B4D8               	btfsc	status,2,c
 14009  000B56  0012               	return	
 14010                           
 14011                           ;gui.c: 1076: {
 14012                           ;gui.c: 1078: if(work_mode == 0x00 || work_mode == 0x02)
 14013  000B58  504D               	movf	_work_mode,w,c
 14014  000B5A  B4D8               	btfsc	status,2,c
 14015  000B5C  D004               	goto	l13937
 14016  000B5E  0E02               	movlw	2
 14017  000B60  184D               	xorwf	_work_mode,w,c
 14018  000B62  A4D8               	btfss	status,2,c
 14019  000B64  D009               	goto	l13939
 14020  000B66                     l13937:
 14021                           
 14022                           ;gui.c: 1079: {
 14023                           ;gui.c: 1080: display_frame_fghi(2,0, menu[6].mode);
 14024  000B66  0E00               	movlw	0
 14025  000B68  0101               	movlb	1	; () banked
 14026  000B6A  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14027  000B6C  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 14028  000B70  0E02               	movlw	2
 14029  000B72  ECCD  F008         	call	_display_frame_fghi
 14030                           
 14031                           ;gui.c: 1081: }
 14032  000B76  D00B               	goto	l13943
 14033  000B78                     l13939:
 14034                           
 14035                           ;gui.c: 1082: else if(work_mode == 0x01)
 14036  000B78  044D               	decf	_work_mode,w,c
 14037  000B7A  A4D8               	btfss	status,2,c
 14038  000B7C  D008               	goto	l13943
 14039                           
 14040                           ;gui.c: 1083: {
 14041                           ;gui.c: 1084: display_frame_fghi(3,0, menu[6].mode);
 14042  000B7E  0E00               	movlw	0
 14043  000B80  0101               	movlb	1	; () banked
 14044  000B82  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14045  000B84  C032  F132         	movff	_menu+49,display_frame_fghi@mode
 14046  000B88  0E03               	movlw	3
 14047  000B8A  ECCD  F008         	call	_display_frame_fghi
 14048  000B8E                     l13943:
 14049                           
 14050                           ;gui.c: 1085: }
 14051                           ;gui.c: 1089: if( menu[6].parameter == 0)
 14052  000B8E  5036               	movf	_menu+53,w,c
 14053  000B90  A4D8               	btfss	status,2,c
 14054  000B92  D020               	goto	l13955
 14055                           
 14056                           ;gui.c: 1090: {
 14057                           ;gui.c: 1091: if(work_mode == 0x00 || work_mode == 0x02)
 14058  000B94  504D               	movf	_work_mode,w,c
 14059  000B96  B4D8               	btfsc	status,2,c
 14060  000B98  D004               	goto	l13949
 14061  000B9A  0E02               	movlw	2
 14062  000B9C  184D               	xorwf	_work_mode,w,c
 14063  000B9E  A4D8               	btfss	status,2,c
 14064  000BA0  D00B               	goto	l13951
 14065  000BA2                     l13949:
 14066                           
 14067                           ;gui.c: 1092: {
 14068                           ;gui.c: 1093: display_num(3,(0 + 14), menu[6].mode | 3);
 14069  000BA2  0E0E               	movlw	14
 14070  000BA4  0101               	movlb	1	; () banked
 14071  000BA6  6F31               	movwf	display_num@x& (0+255),b
 14072  000BA8  5032               	movf	_menu+49,w,c
 14073  000BAA  0903               	iorlw	3
 14074  000BAC  0101               	movlb	1	; () banked
 14075  000BAE  6F32               	movwf	display_num@mode& (0+255),b
 14076  000BB0  0E03               	movlw	3
 14077  000BB2  ECF0  F006         	call	_display_num
 14078                           
 14079                           ;gui.c: 1094: }
 14080  000BB6  D054               	goto	l13979
 14081  000BB8                     l13951:
 14082                           
 14083                           ;gui.c: 1095: else if(work_mode == 0x01)
 14084  000BB8  044D               	decf	_work_mode,w,c
 14085  000BBA  A4D8               	btfss	status,2,c
 14086  000BBC  D051               	goto	l13979
 14087                           
 14088                           ;gui.c: 1096: {
 14089                           ;gui.c: 1097: display_num(3,(0 + 17), menu[6].mode | 103);
 14090  000BBE  0E11               	movlw	17
 14091  000BC0  0101               	movlb	1	; () banked
 14092  000BC2  6F31               	movwf	display_num@x& (0+255),b
 14093  000BC4  5032               	movf	_menu+49,w,c
 14094  000BC6  0967               	iorlw	103
 14095  000BC8  0101               	movlb	1	; () banked
 14096  000BCA  6F32               	movwf	display_num@mode& (0+255),b
 14097  000BCC  0E03               	movlw	3
 14098  000BCE  ECF0  F006         	call	_display_num
 14099                           
 14100                           ;gui.c: 1098: }
 14101                           ;gui.c: 1100: }
 14102  000BD2  D046               	goto	l13979
 14103  000BD4                     l13955:
 14104                           
 14105                           ;gui.c: 1101: else if( menu[6].parameter == 1)
 14106  000BD4  0436               	decf	_menu+53,w,c
 14107  000BD6  A4D8               	btfss	status,2,c
 14108  000BD8  D020               	goto	l13967
 14109                           
 14110                           ;gui.c: 1102: {
 14111                           ;gui.c: 1103: if(work_mode == 0x00 || work_mode == 0x02)
 14112  000BDA  504D               	movf	_work_mode,w,c
 14113  000BDC  B4D8               	btfsc	status,2,c
 14114  000BDE  D004               	goto	l13961
 14115  000BE0  0E02               	movlw	2
 14116  000BE2  184D               	xorwf	_work_mode,w,c
 14117  000BE4  A4D8               	btfss	status,2,c
 14118  000BE6  D00B               	goto	l13963
 14119  000BE8                     l13961:
 14120                           
 14121                           ;gui.c: 1104: {
 14122                           ;gui.c: 1105: display_num(3,(0 + 14), menu[6].mode | 3);
 14123  000BE8  0E0E               	movlw	14
 14124  000BEA  0101               	movlb	1	; () banked
 14125  000BEC  6F31               	movwf	display_num@x& (0+255),b
 14126  000BEE  5032               	movf	_menu+49,w,c
 14127  000BF0  0903               	iorlw	3
 14128  000BF2  0101               	movlb	1	; () banked
 14129  000BF4  6F32               	movwf	display_num@mode& (0+255),b
 14130  000BF6  0E03               	movlw	3
 14131  000BF8  ECF0  F006         	call	_display_num
 14132                           
 14133                           ;gui.c: 1106: }
 14134  000BFC  D031               	goto	l13979
 14135  000BFE                     l13963:
 14136                           
 14137                           ;gui.c: 1107: else if(work_mode == 0x01)
 14138  000BFE  044D               	decf	_work_mode,w,c
 14139  000C00  A4D8               	btfss	status,2,c
 14140  000C02  D02E               	goto	l13979
 14141                           
 14142                           ;gui.c: 1108: {
 14143                           ;gui.c: 1109: display_num(3,(0 + 17), menu[6].mode | 102);
 14144  000C04  0E11               	movlw	17
 14145  000C06  0101               	movlb	1	; () banked
 14146  000C08  6F31               	movwf	display_num@x& (0+255),b
 14147  000C0A  5032               	movf	_menu+49,w,c
 14148  000C0C  0966               	iorlw	102
 14149  000C0E  0101               	movlb	1	; () banked
 14150  000C10  6F32               	movwf	display_num@mode& (0+255),b
 14151  000C12  0E03               	movlw	3
 14152  000C14  ECF0  F006         	call	_display_num
 14153                           
 14154                           ;gui.c: 1110: }
 14155                           ;gui.c: 1111: }
 14156  000C18  D023               	goto	l13979
 14157  000C1A                     l13967:
 14158                           
 14159                           ;gui.c: 1112: else if( menu[6].parameter == 2)
 14160  000C1A  0E02               	movlw	2
 14161  000C1C  1836               	xorwf	_menu+53,w,c
 14162  000C1E  A4D8               	btfss	status,2,c
 14163  000C20  D01F               	goto	l13979
 14164                           
 14165                           ;gui.c: 1113: {
 14166                           ;gui.c: 1114: if(work_mode == 0x00 || work_mode == 0x02)
 14167  000C22  504D               	movf	_work_mode,w,c
 14168  000C24  B4D8               	btfsc	status,2,c
 14169  000C26  D004               	goto	l13973
 14170  000C28  0E02               	movlw	2
 14171  000C2A  184D               	xorwf	_work_mode,w,c
 14172  000C2C  A4D8               	btfss	status,2,c
 14173  000C2E  D00B               	goto	l13975
 14174  000C30                     l13973:
 14175                           
 14176                           ;gui.c: 1115: {
 14177                           ;gui.c: 1116: display_num(3,(0 + 14), menu[6].mode | 3);
 14178  000C30  0E0E               	movlw	14
 14179  000C32  0101               	movlb	1	; () banked
 14180  000C34  6F31               	movwf	display_num@x& (0+255),b
 14181  000C36  5032               	movf	_menu+49,w,c
 14182  000C38  0903               	iorlw	3
 14183  000C3A  0101               	movlb	1	; () banked
 14184  000C3C  6F32               	movwf	display_num@mode& (0+255),b
 14185  000C3E  0E03               	movlw	3
 14186  000C40  ECF0  F006         	call	_display_num
 14187                           
 14188                           ;gui.c: 1117: }
 14189  000C44  D00D               	goto	l13979
 14190  000C46                     l13975:
 14191                           
 14192                           ;gui.c: 1118: else if(work_mode == 0x01)
 14193  000C46  044D               	decf	_work_mode,w,c
 14194  000C48  A4D8               	btfss	status,2,c
 14195  000C4A  D00A               	goto	l13979
 14196                           
 14197                           ;gui.c: 1119: {
 14198                           ;gui.c: 1120: display_num(3,(0 + 17), menu[6].mode | 101);
 14199  000C4C  0E11               	movlw	17
 14200  000C4E  0101               	movlb	1	; () banked
 14201  000C50  6F31               	movwf	display_num@x& (0+255),b
 14202  000C52  5032               	movf	_menu+49,w,c
 14203  000C54  0965               	iorlw	101
 14204  000C56  0101               	movlb	1	; () banked
 14205  000C58  6F32               	movwf	display_num@mode& (0+255),b
 14206  000C5A  0E03               	movlw	3
 14207  000C5C  ECF0  F006         	call	_display_num
 14208  000C60                     l13979:
 14209                           
 14210                           ;gui.c: 1121: }
 14211                           ;gui.c: 1122: }
 14212                           ;gui.c: 1125: menu[6].cur_mode = menu[6].mode;
 14213  000C60  C032  F033         	movff	_menu+49,_menu+50
 14214                           
 14215                           ;gui.c: 1126: }
 14216                           ;gui.c: 1127: }
 14217                           ;gui.c: 1130: break;
 14218  000C64  0012               	return	
 14219  000C66                     l13981:
 14220                           
 14221                           ;gui.c: 1135: if(menu[6].mode == 0x80)
 14222  000C66  0E80               	movlw	128
 14223  000C68  1832               	xorwf	_menu+49,w,c
 14224  000C6A  A4D8               	btfss	status,2,c
 14225  000C6C  D005               	goto	l13985
 14226                           
 14227                           ;gui.c: 1136: {
 14228                           ;gui.c: 1137: menu[6].mode = 3;
 14229  000C6E  0E03               	movlw	3
 14230  000C70  6E32               	movwf	_menu+49,c
 14231                           
 14232                           ;gui.c: 1138: flip = 1;
 14233  000C72  0E01               	movlw	1
 14234  000C74  6E4E               	movwf	_flip,c
 14235                           
 14236                           ;gui.c: 1139: }
 14237  000C76  D006               	goto	l13989
 14238  000C78                     l13985:
 14239                           
 14240                           ;gui.c: 1140: else if(menu[6].mode == 3)
 14241  000C78  0E03               	movlw	3
 14242  000C7A  1832               	xorwf	_menu+49,w,c
 14243  000C7C  A4D8               	btfss	status,2,c
 14244  000C7E  D002               	goto	l13989
 14245                           
 14246                           ;gui.c: 1141: {
 14247                           ;gui.c: 1142: menu[6].mode = 0;
 14248  000C80  0E00               	movlw	0
 14249  000C82  6E32               	movwf	_menu+49,c
 14250  000C84                     l13989:
 14251                           
 14252                           ;gui.c: 1143: }
 14253                           ;gui.c: 1145: if(menu[6].cur_mode != menu[6].mode)
 14254  000C84  5032               	movf	_menu+49,w,c
 14255  000C86  1833               	xorwf	_menu+50,w,c
 14256  000C88  B4D8               	btfsc	status,2,c
 14257  000C8A  0012               	return	
 14258                           
 14259                           ;gui.c: 1147: {
 14260                           ;gui.c: 1148: if(menu[6].mode == 0)
 14261  000C8C  5032               	movf	_menu+49,w,c
 14262  000C8E  A4D8               	btfss	status,2,c
 14263  000C90  D098               	goto	l14057
 14264                           
 14265                           ;gui.c: 1149: {
 14266                           ;gui.c: 1151: if(work_mode == 0x00 || work_mode == 0x02)
 14267  000C92  504D               	movf	_work_mode,w,c
 14268  000C94  B4D8               	btfsc	status,2,c
 14269  000C96  D004               	goto	l13997
 14270  000C98  0E02               	movlw	2
 14271  000C9A  184D               	xorwf	_work_mode,w,c
 14272  000C9C  A4D8               	btfss	status,2,c
 14273  000C9E  D00A               	goto	l13999
 14274  000CA0                     l13997:
 14275                           
 14276                           ;gui.c: 1152: {
 14277                           ;gui.c: 1153: display_frame_fghi(2,0,0);
 14278  000CA0  0E00               	movlw	0
 14279  000CA2  0101               	movlb	1	; () banked
 14280  000CA4  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14281  000CA6  0E00               	movlw	0
 14282  000CA8  0101               	movlb	1	; () banked
 14283  000CAA  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 14284  000CAC  0E02               	movlw	2
 14285  000CAE  ECCD  F008         	call	_display_frame_fghi
 14286                           
 14287                           ;gui.c: 1154: }
 14288  000CB2  D00C               	goto	l14003
 14289  000CB4                     l13999:
 14290                           
 14291                           ;gui.c: 1155: else if(work_mode == 0x01)
 14292  000CB4  044D               	decf	_work_mode,w,c
 14293  000CB6  A4D8               	btfss	status,2,c
 14294  000CB8  D009               	goto	l14003
 14295                           
 14296                           ;gui.c: 1156: {
 14297                           ;gui.c: 1157: display_frame_fghi(3,0,0);
 14298  000CBA  0E00               	movlw	0
 14299  000CBC  0101               	movlb	1	; () banked
 14300  000CBE  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14301  000CC0  0E00               	movlw	0
 14302  000CC2  0101               	movlb	1	; () banked
 14303  000CC4  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 14304  000CC6  0E03               	movlw	3
 14305  000CC8  ECCD  F008         	call	_display_frame_fghi
 14306  000CCC                     l14003:
 14307                           
 14308                           ;gui.c: 1158: }
 14309                           ;gui.c: 1160: if(menu[6].parameter == 0)
 14310  000CCC  5036               	movf	_menu+53,w,c
 14311  000CCE  A4D8               	btfss	status,2,c
 14312  000CD0  D025               	goto	l14021
 14313                           
 14314                           ;gui.c: 1161: {
 14315                           ;gui.c: 1163: if(work_mode == 0x00 || work_mode == 0x02)
 14316  000CD2  504D               	movf	_work_mode,w,c
 14317  000CD4  B4D8               	btfsc	status,2,c
 14318  000CD6  D004               	goto	l14009
 14319  000CD8  0E02               	movlw	2
 14320  000CDA  184D               	xorwf	_work_mode,w,c
 14321  000CDC  A4D8               	btfss	status,2,c
 14322  000CDE  D00A               	goto	l14013
 14323  000CE0                     l14009:
 14324                           
 14325                           ;gui.c: 1164: {
 14326                           ;gui.c: 1165: display_num(3,(0 + 14),3);
 14327  000CE0  0E0E               	movlw	14
 14328  000CE2  0101               	movlb	1	; () banked
 14329  000CE4  6F31               	movwf	display_num@x& (0+255),b
 14330  000CE6  0E03               	movlw	3
 14331  000CE8  0101               	movlb	1	; () banked
 14332  000CEA  6F32               	movwf	display_num@mode& (0+255),b
 14333  000CEC  0E03               	movlw	3
 14334  000CEE  ECF0  F006         	call	_display_num
 14335  000CF2  D050               	goto	l14047
 14336  000CF4                     l14013:
 14337                           
 14338                           ;gui.c: 1168: else if(work_mode == 0x01)
 14339  000CF4  044D               	decf	_work_mode,w,c
 14340  000CF6  A4D8               	btfss	status,2,c
 14341  000CF8  D064               	goto	l14057
 14342                           
 14343                           ;gui.c: 1169: {
 14344                           ;gui.c: 1170: display_num(3,(0 + 17), menu[7].mode | 103);
 14345  000CFA  0E11               	movlw	17
 14346  000CFC  0101               	movlb	1	; () banked
 14347  000CFE  6F31               	movwf	display_num@x& (0+255),b
 14348  000D00  503A               	movf	_menu+57,w,c
 14349  000D02  0967               	iorlw	103
 14350  000D04  0101               	movlb	1	; () banked
 14351  000D06  6F32               	movwf	display_num@mode& (0+255),b
 14352  000D08  0E03               	movlw	3
 14353  000D0A  ECF0  F006         	call	_display_num
 14354                           
 14355                           ;gui.c: 1171: menu[6].value = 103;
 14356  000D0E  0E67               	movlw	103
 14357  000D10  6E35               	movwf	_menu+52,c
 14358                           
 14359                           ;gui.c: 1172: hg_op.work_freq = (2*1000);
 14360  000D12  0E07               	movlw	7
 14361  000D14  0100               	movlb	0	; () banked
 14362  000D16  6F9C               	movwf	(_hg_op+28)& (0+255),b
 14363  000D18  0ED0               	movlw	208
 14364  000D1A  D052               	goto	L25
 14365  000D1C                     l14021:
 14366                           
 14367                           ;gui.c: 1183: else if(menu[6].parameter == 1)
 14368  000D1C  0436               	decf	_menu+53,w,c
 14369  000D1E  A4D8               	btfss	status,2,c
 14370  000D20  D025               	goto	l14039
 14371                           
 14372                           ;gui.c: 1184: {
 14373                           ;gui.c: 1186: if(work_mode == 0x00 || work_mode == 0x02)
 14374  000D22  504D               	movf	_work_mode,w,c
 14375  000D24  B4D8               	btfsc	status,2,c
 14376  000D26  D004               	goto	l14027
 14377  000D28  0E02               	movlw	2
 14378  000D2A  184D               	xorwf	_work_mode,w,c
 14379  000D2C  A4D8               	btfss	status,2,c
 14380  000D2E  D00A               	goto	l14031
 14381  000D30                     l14027:
 14382                           
 14383                           ;gui.c: 1187: {
 14384                           ;gui.c: 1188: display_num(3,(0 + 14),3);
 14385  000D30  0E0E               	movlw	14
 14386  000D32  0101               	movlb	1	; () banked
 14387  000D34  6F31               	movwf	display_num@x& (0+255),b
 14388  000D36  0E03               	movlw	3
 14389  000D38  0101               	movlb	1	; () banked
 14390  000D3A  6F32               	movwf	display_num@mode& (0+255),b
 14391  000D3C  0E03               	movlw	3
 14392  000D3E  ECF0  F006         	call	_display_num
 14393  000D42  D028               	goto	l14047
 14394  000D44                     l14031:
 14395                           
 14396                           ;gui.c: 1191: else if(work_mode == 0x01)
 14397  000D44  044D               	decf	_work_mode,w,c
 14398  000D46  A4D8               	btfss	status,2,c
 14399  000D48  D03C               	goto	l14057
 14400                           
 14401                           ;gui.c: 1192: {
 14402                           ;gui.c: 1193: display_num(3,(0 + 17), menu[7].mode | 102);
 14403  000D4A  0E11               	movlw	17
 14404  000D4C  0101               	movlb	1	; () banked
 14405  000D4E  6F31               	movwf	display_num@x& (0+255),b
 14406  000D50  503A               	movf	_menu+57,w,c
 14407  000D52  0966               	iorlw	102
 14408  000D54  0101               	movlb	1	; () banked
 14409  000D56  6F32               	movwf	display_num@mode& (0+255),b
 14410  000D58  0E03               	movlw	3
 14411  000D5A  ECF0  F006         	call	_display_num
 14412                           
 14413                           ;gui.c: 1194: menu[6].value = 102;
 14414  000D5E  0E66               	movlw	102
 14415  000D60  6E35               	movwf	_menu+52,c
 14416                           
 14417                           ;gui.c: 1195: hg_op.work_freq = (3*1000);
 14418  000D62  0E0B               	movlw	11
 14419  000D64  0100               	movlb	0	; () banked
 14420  000D66  6F9C               	movwf	(_hg_op+28)& (0+255),b
 14421  000D68  0EB8               	movlw	184
 14422  000D6A  D02A               	goto	L25
 14423  000D6C                     l14039:
 14424                           
 14425                           ;gui.c: 1212: else if(menu[6].parameter == 2)
 14426  000D6C  0E02               	movlw	2
 14427  000D6E  1836               	xorwf	_menu+53,w,c
 14428  000D70  A4D8               	btfss	status,2,c
 14429  000D72  D027               	goto	l14057
 14430                           
 14431                           ;gui.c: 1213: {
 14432                           ;gui.c: 1215: if(work_mode == 0x00 || work_mode == 0x02)
 14433  000D74  504D               	movf	_work_mode,w,c
 14434  000D76  B4D8               	btfsc	status,2,c
 14435  000D78  D004               	goto	l14045
 14436  000D7A  0E02               	movlw	2
 14437  000D7C  184D               	xorwf	_work_mode,w,c
 14438  000D7E  A4D8               	btfss	status,2,c
 14439  000D80  D00C               	goto	l14049
 14440  000D82                     l14045:
 14441                           
 14442                           ;gui.c: 1216: {
 14443                           ;gui.c: 1217: display_num(3,(0 + 14),3);
 14444  000D82  0E0E               	movlw	14
 14445  000D84  0101               	movlb	1	; () banked
 14446  000D86  6F31               	movwf	display_num@x& (0+255),b
 14447  000D88  0E03               	movlw	3
 14448  000D8A  0101               	movlb	1	; () banked
 14449  000D8C  6F32               	movwf	display_num@mode& (0+255),b
 14450  000D8E  0E03               	movlw	3
 14451  000D90  ECF0  F006         	call	_display_num
 14452  000D94                     l14047:
 14453                           
 14454                           ;gui.c: 1218: menu[6].value = 3;
 14455  000D94  0E03               	movlw	3
 14456  000D96  6E35               	movwf	_menu+52,c
 14457                           
 14458                           ;gui.c: 1219: }
 14459  000D98  D014               	goto	l14057
 14460  000D9A                     l14049:
 14461                           
 14462                           ;gui.c: 1220: else if(work_mode == 0x01)
 14463  000D9A  044D               	decf	_work_mode,w,c
 14464  000D9C  A4D8               	btfss	status,2,c
 14465  000D9E  D011               	goto	l14057
 14466                           
 14467                           ;gui.c: 1221: {
 14468                           ;gui.c: 1222: display_num(3,(0 + 17), menu[7].mode | 101);
 14469  000DA0  0E11               	movlw	17
 14470  000DA2  0101               	movlb	1	; () banked
 14471  000DA4  6F31               	movwf	display_num@x& (0+255),b
 14472  000DA6  503A               	movf	_menu+57,w,c
 14473  000DA8  0965               	iorlw	101
 14474  000DAA  0101               	movlb	1	; () banked
 14475  000DAC  6F32               	movwf	display_num@mode& (0+255),b
 14476  000DAE  0E03               	movlw	3
 14477  000DB0  ECF0  F006         	call	_display_num
 14478                           
 14479                           ;gui.c: 1223: menu[6].value = 101;
 14480  000DB4  0E65               	movlw	101
 14481  000DB6  6E35               	movwf	_menu+52,c
 14482                           
 14483                           ;gui.c: 1224: hg_op.work_freq = (4*1000);
 14484  000DB8  0E0F               	movlw	15
 14485  000DBA  0100               	movlb	0	; () banked
 14486  000DBC  6F9C               	movwf	(_hg_op+28)& (0+255),b
 14487  000DBE  0EA0               	movlw	160
 14488  000DC0                     L25:
 14489  000DC0  6F9B               	movwf	(_hg_op+27)& (0+255),b
 14490  000DC2                     l14057:
 14491                           
 14492                           ;gui.c: 1225: }
 14493                           ;gui.c: 1227: }
 14494                           ;gui.c: 1229: }
 14495                           ;gui.c: 1249: menu[6].cur_mode = menu[6].mode;
 14496  000DC2  C032  F033         	movff	_menu+49,_menu+50
 14497                           
 14498                           ;gui.c: 1255: }
 14499                           
 14500                           ;gui.c: 1252: }
 14501                           ;gui.c: 1254: break;
 14502  000DC6  0012               	return	
 14503  000DC8                     l14061:
 14504  000DC8  0101               	movlb	1	; () banked
 14505  000DCA  5138               	movf	menu6_MsgHandlle@key& (0+255),w,b
 14506                           
 14507                           ; Switch size 1, requested type "space"
 14508                           ; Number of cases is 3, Range of values is 241 to 243
 14509                           ; switch strategies available:
 14510                           ; Name         Instructions Cycles
 14511                           ; simple_byte           10     6 (average)
 14512                           ;	Chosen strategy is simple_byte
 14513  000DCC  0AF1               	xorlw	241	; case 241
 14514  000DCE  B4D8               	btfsc	status,2,c
 14515  000DD0  D60D               	goto	l13853
 14516  000DD2  0A03               	xorlw	3	; case 242
 14517  000DD4  B4D8               	btfsc	status,2,c
 14518  000DD6  D6A9               	goto	l13917
 14519  000DD8  0A01               	xorlw	1	; case 243
 14520  000DDA  A4D8               	btfss	status,2,c
 14521  000DDC  0012               	return	
 14522  000DDE  D743               	goto	l13981
 14523  000DE0                     __end_of_menu6_MsgHandlle:
 14524                           	opt stack 0
 14525                           tblptru	equ	0xFF8
 14526                           tblptrh	equ	0xFF7
 14527                           tblptrl	equ	0xFF6
 14528                           tablat	equ	0xFF5
 14529                           prodh	equ	0xFF4
 14530                           prodl	equ	0xFF3
 14531                           intcon	equ	0xFF2
 14532                           intcon3	equ	0xFF0
 14533                           postinc0	equ	0xFEE
 14534                           wreg	equ	0xFE8
 14535                           postdec1	equ	0xFE5
 14536                           fsr1h	equ	0xFE2
 14537                           fsr1l	equ	0xFE1
 14538                           postinc2	equ	0xFDE
 14539                           fsr2h	equ	0xFDA
 14540                           fsr2l	equ	0xFD9
 14541                           status	equ	0xFD8
 14542                           
 14543 ;; *************** function _menu5_MsgHandlle *****************
 14544 ;; Defined at:
 14545 ;;		line 802 in file "../gui.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;  key             1    wreg     unsigned char 
 14548 ;; Auto vars:     Size  Location     Type
 14549 ;;  key             1   16[BANK1 ] unsigned char 
 14550 ;; Return value:  Size  Location     Type
 14551 ;;                  1    wreg      void 
 14552 ;; Registers used:
 14553 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14554 ;; Tracked objects:
 14555 ;;		On entry : 0/0
 14556 ;;		On exit  : 0/0
 14557 ;;		Unchanged: 0/0
 14558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14559 ;;      Params:         0       0       0       0       0       0       0
 14560 ;;      Locals:         0       0       1       0       0       0       0
 14561 ;;      Temps:          0       0       0       0       0       0       0
 14562 ;;      Totals:         0       0       1       0       0       0       0
 14563 ;;Total ram usage:        1 bytes
 14564 ;; Hardware stack levels used:    1
 14565 ;; Hardware stack levels required when called:    7
 14566 ;; This function calls:
 14567 ;;		_display_frame_fghi
 14568 ;;		_display_num
 14569 ;; This function is called by:
 14570 ;;		_init_menu
 14571 ;;		_HG_interface
 14572 ;; This function uses a non-reentrant model
 14573 ;;
 14574                           
 14575                           	psect	text34
 14576  0030CA                     __ptext34:
 14577                           	opt stack 0
 14578  0030CA                     _menu5_MsgHandlle:
 14579                           	opt stack 22
 14580                           
 14581                           ;incstack = 0
 14582                           ;menu5_MsgHandlle@key stored from wreg
 14583  0030CA  0101               	movlb	1	; () banked
 14584  0030CC  6F38               	movwf	menu5_MsgHandlle@key& (0+255),b
 14585                           
 14586                           ;gui.c: 805: switch(key)
 14587  0030CE  D0EB               	goto	l13849
 14588  0030D0                     l13743:
 14589                           
 14590                           ;gui.c: 810: if(menu[5].mode == 3)
 14591  0030D0  0E03               	movlw	3
 14592  0030D2  182A               	xorwf	_menu+41,w,c
 14593  0030D4  A4D8               	btfss	status,2,c
 14594  0030D6  D008               	goto	l13751
 14595                           
 14596                           ;gui.c: 811: {
 14597                           ;gui.c: 812: menu[5].parameter ++;
 14598  0030D8  2A2E               	incf	_menu+45,f,c
 14599                           
 14600                           ;gui.c: 813: if(menu[5].parameter == 3) menu[5].parameter = 0;
 14601  0030DA  0E03               	movlw	3
 14602  0030DC  182E               	xorwf	_menu+45,w,c
 14603  0030DE  A4D8               	btfss	status,2,c
 14604  0030E0  0012               	return	
 14605  0030E2  0E00               	movlw	0
 14606  0030E4  6E2E               	movwf	_menu+45,c
 14607                           
 14608                           ;gui.c: 814: }
 14609  0030E6  0012               	return	
 14610  0030E8                     l13751:
 14611                           
 14612                           ;gui.c: 815: else
 14613                           ;gui.c: 816: {
 14614                           ;gui.c: 817: if(focus ==6)
 14615  0030E8  0E06               	movlw	6
 14616  0030EA  184F               	xorwf	_focus,w,c
 14617  0030EC  A4D8               	btfss	status,2,c
 14618  0030EE  D002               	goto	l13755
 14619                           
 14620                           ;gui.c: 818: {
 14621                           ;gui.c: 819: menu[5].mode = 0x80;
 14622  0030F0  0E80               	movlw	128
 14623  0030F2  D001               	goto	L26
 14624  0030F4                     l13755:
 14625                           
 14626                           ;gui.c: 821: else
 14627                           ;gui.c: 822: {
 14628                           ;gui.c: 823: menu[5].mode = 0;
 14629  0030F4  0E00               	movlw	0
 14630  0030F6                     L26:
 14631  0030F6  6E2A               	movwf	_menu+41,c
 14632                           
 14633                           ;gui.c: 824: }
 14634                           ;gui.c: 826: if(menu[5].cur_mode != menu[5].mode)
 14635  0030F8  502A               	movf	_menu+41,w,c
 14636  0030FA  182B               	xorwf	_menu+42,w,c
 14637  0030FC  B4D8               	btfsc	status,2,c
 14638  0030FE  0012               	return	
 14639                           
 14640                           ;gui.c: 827: {
 14641                           ;gui.c: 829: display_frame_fghi(1,49, menu[5].mode);
 14642  003100  0E31               	movlw	49
 14643  003102  0101               	movlb	1	; () banked
 14644  003104  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14645  003106  C02A  F132         	movff	_menu+41,display_frame_fghi@mode
 14646  00310A  0E01               	movlw	1
 14647  00310C  ECCD  F008         	call	_display_frame_fghi
 14648                           
 14649                           ;gui.c: 832: if( menu[5].parameter == 0)
 14650  003110  502E               	movf	_menu+45,w,c
 14651  003112  A4D8               	btfss	status,2,c
 14652  003114  D00B               	goto	l13765
 14653                           
 14654                           ;gui.c: 833: {
 14655                           ;gui.c: 835: display_num(3,(49 + 14), menu[5].mode | 1);
 14656  003116  0E3F               	movlw	63
 14657  003118  0101               	movlb	1	; () banked
 14658  00311A  6F31               	movwf	display_num@x& (0+255),b
 14659  00311C  502A               	movf	_menu+41,w,c
 14660  00311E  0901               	iorlw	1
 14661  003120  0101               	movlb	1	; () banked
 14662  003122  6F32               	movwf	display_num@mode& (0+255),b
 14663  003124  0E03               	movlw	3
 14664  003126  ECF0  F006         	call	_display_num
 14665                           
 14666                           ;gui.c: 836: }
 14667  00312A  D01C               	goto	l13773
 14668  00312C                     l13765:
 14669                           
 14670                           ;gui.c: 837: else if( menu[5].parameter == 1)
 14671  00312C  042E               	decf	_menu+45,w,c
 14672  00312E  A4D8               	btfss	status,2,c
 14673  003130  D00B               	goto	l13769
 14674                           
 14675                           ;gui.c: 838: {
 14676                           ;gui.c: 840: display_num(3,(49 + 14), menu[5].mode | 106);
 14677  003132  0E3F               	movlw	63
 14678  003134  0101               	movlb	1	; () banked
 14679  003136  6F31               	movwf	display_num@x& (0+255),b
 14680  003138  502A               	movf	_menu+41,w,c
 14681  00313A  096A               	iorlw	106
 14682  00313C  0101               	movlb	1	; () banked
 14683  00313E  6F32               	movwf	display_num@mode& (0+255),b
 14684  003140  0E03               	movlw	3
 14685  003142  ECF0  F006         	call	_display_num
 14686                           
 14687                           ;gui.c: 841: }
 14688  003146  D00E               	goto	l13773
 14689  003148                     l13769:
 14690                           
 14691                           ;gui.c: 842: else if( menu[5].parameter == 2)
 14692  003148  0E02               	movlw	2
 14693  00314A  182E               	xorwf	_menu+45,w,c
 14694  00314C  A4D8               	btfss	status,2,c
 14695  00314E  D00A               	goto	l13773
 14696                           
 14697                           ;gui.c: 843: {
 14698                           ;gui.c: 844: display_num(3,(49 + 14), menu[5].mode | 5);
 14699  003150  0E3F               	movlw	63
 14700  003152  0101               	movlb	1	; () banked
 14701  003154  6F31               	movwf	display_num@x& (0+255),b
 14702  003156  502A               	movf	_menu+41,w,c
 14703  003158  0905               	iorlw	5
 14704  00315A  0101               	movlb	1	; () banked
 14705  00315C  6F32               	movwf	display_num@mode& (0+255),b
 14706  00315E  0E03               	movlw	3
 14707  003160  ECF0  F006         	call	_display_num
 14708  003164                     l13773:
 14709                           
 14710                           ;gui.c: 845: }
 14711                           ;gui.c: 847: menu[5].cur_mode = menu[5].mode;
 14712  003164  C02A  F02B         	movff	_menu+41,_menu+42
 14713                           
 14714                           ;gui.c: 848: }
 14715                           ;gui.c: 850: }
 14716                           ;gui.c: 852: break;
 14717  003168  0012               	return	
 14718  00316A                     l13775:
 14719                           
 14720                           ;gui.c: 857: if(menu[5].mode == 3)
 14721  00316A  0E03               	movlw	3
 14722  00316C  182A               	xorwf	_menu+41,w,c
 14723  00316E  A4D8               	btfss	status,2,c
 14724  003170  D007               	goto	l13783
 14725                           
 14726                           ;gui.c: 858: {
 14727                           ;gui.c: 859: menu[5].parameter --;
 14728  003172  062E               	decf	_menu+45,f,c
 14729                           
 14730                           ;gui.c: 860: if(menu[5].parameter == -1) menu[5].parameter = 2;
 14731  003174  282E               	incf	_menu+45,w,c
 14732  003176  A4D8               	btfss	status,2,c
 14733  003178  0012               	return	
 14734  00317A  0E02               	movlw	2
 14735  00317C  6E2E               	movwf	_menu+45,c
 14736                           
 14737                           ;gui.c: 861: }
 14738  00317E  0012               	return	
 14739  003180                     l13783:
 14740                           
 14741                           ;gui.c: 862: else
 14742                           ;gui.c: 863: {
 14743                           ;gui.c: 864: if(focus ==6)
 14744  003180  0E06               	movlw	6
 14745  003182  184F               	xorwf	_focus,w,c
 14746  003184  A4D8               	btfss	status,2,c
 14747  003186  D002               	goto	l13787
 14748                           
 14749                           ;gui.c: 865: {
 14750                           ;gui.c: 866: menu[5].mode = 0x80;
 14751  003188  0E80               	movlw	128
 14752  00318A  D001               	goto	L27
 14753  00318C                     l13787:
 14754                           
 14755                           ;gui.c: 868: else
 14756                           ;gui.c: 869: {
 14757                           ;gui.c: 870: menu[5].mode = 0;
 14758  00318C  0E00               	movlw	0
 14759  00318E                     L27:
 14760  00318E  6E2A               	movwf	_menu+41,c
 14761                           
 14762                           ;gui.c: 871: }
 14763                           ;gui.c: 873: if(menu[5].cur_mode != menu[5].mode)
 14764  003190  502A               	movf	_menu+41,w,c
 14765  003192  182B               	xorwf	_menu+42,w,c
 14766  003194  B4D8               	btfsc	status,2,c
 14767  003196  0012               	return	
 14768                           
 14769                           ;gui.c: 874: {
 14770                           ;gui.c: 876: display_frame_fghi(1,49, menu[5].mode);
 14771  003198  0E31               	movlw	49
 14772  00319A  0101               	movlb	1	; () banked
 14773  00319C  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14774  00319E  C02A  F132         	movff	_menu+41,display_frame_fghi@mode
 14775  0031A2  0E01               	movlw	1
 14776  0031A4  ECCD  F008         	call	_display_frame_fghi
 14777                           
 14778                           ;gui.c: 879: if( menu[5].parameter == 0)
 14779  0031A8  502E               	movf	_menu+45,w,c
 14780  0031AA  A4D8               	btfss	status,2,c
 14781  0031AC  D00B               	goto	l13797
 14782                           
 14783                           ;gui.c: 880: {
 14784                           ;gui.c: 882: display_num(3,(49 + 14), menu[5].mode | 1);
 14785  0031AE  0E3F               	movlw	63
 14786  0031B0  0101               	movlb	1	; () banked
 14787  0031B2  6F31               	movwf	display_num@x& (0+255),b
 14788  0031B4  502A               	movf	_menu+41,w,c
 14789  0031B6  0901               	iorlw	1
 14790  0031B8  0101               	movlb	1	; () banked
 14791  0031BA  6F32               	movwf	display_num@mode& (0+255),b
 14792  0031BC  0E03               	movlw	3
 14793  0031BE  ECF0  F006         	call	_display_num
 14794                           
 14795                           ;gui.c: 883: }
 14796  0031C2  D01C               	goto	l13805
 14797  0031C4                     l13797:
 14798                           
 14799                           ;gui.c: 884: else if( menu[5].parameter == 1)
 14800  0031C4  042E               	decf	_menu+45,w,c
 14801  0031C6  A4D8               	btfss	status,2,c
 14802  0031C8  D00B               	goto	l13801
 14803                           
 14804                           ;gui.c: 885: {
 14805                           ;gui.c: 887: display_num(3,(49 + 14), menu[5].mode | 106);
 14806  0031CA  0E3F               	movlw	63
 14807  0031CC  0101               	movlb	1	; () banked
 14808  0031CE  6F31               	movwf	display_num@x& (0+255),b
 14809  0031D0  502A               	movf	_menu+41,w,c
 14810  0031D2  096A               	iorlw	106
 14811  0031D4  0101               	movlb	1	; () banked
 14812  0031D6  6F32               	movwf	display_num@mode& (0+255),b
 14813  0031D8  0E03               	movlw	3
 14814  0031DA  ECF0  F006         	call	_display_num
 14815                           
 14816                           ;gui.c: 888: }
 14817  0031DE  D00E               	goto	l13805
 14818  0031E0                     l13801:
 14819                           
 14820                           ;gui.c: 889: else if( menu[5].parameter == 2)
 14821  0031E0  0E02               	movlw	2
 14822  0031E2  182E               	xorwf	_menu+45,w,c
 14823  0031E4  A4D8               	btfss	status,2,c
 14824  0031E6  D00A               	goto	l13805
 14825                           
 14826                           ;gui.c: 890: {
 14827                           ;gui.c: 891: display_num(3,(49 + 14), menu[5].mode | 5);
 14828  0031E8  0E3F               	movlw	63
 14829  0031EA  0101               	movlb	1	; () banked
 14830  0031EC  6F31               	movwf	display_num@x& (0+255),b
 14831  0031EE  502A               	movf	_menu+41,w,c
 14832  0031F0  0905               	iorlw	5
 14833  0031F2  0101               	movlb	1	; () banked
 14834  0031F4  6F32               	movwf	display_num@mode& (0+255),b
 14835  0031F6  0E03               	movlw	3
 14836  0031F8  ECF0  F006         	call	_display_num
 14837  0031FC                     l13805:
 14838                           
 14839                           ;gui.c: 892: }
 14840                           ;gui.c: 896: menu[5].cur_mode = menu[5].mode;
 14841  0031FC  C02A  F02B         	movff	_menu+41,_menu+42
 14842                           
 14843                           ;gui.c: 897: }
 14844                           ;gui.c: 899: }
 14845                           ;gui.c: 902: break;
 14846  003200  0012               	return	
 14847  003202                     l13807:
 14848                           
 14849                           ;gui.c: 906: if(menu[5].mode == 0x80)
 14850  003202  0E80               	movlw	128
 14851  003204  182A               	xorwf	_menu+41,w,c
 14852  003206  A4D8               	btfss	status,2,c
 14853  003208  D005               	goto	l13811
 14854                           
 14855                           ;gui.c: 907: {
 14856                           ;gui.c: 908: menu[5].mode = 3;
 14857  00320A  0E03               	movlw	3
 14858  00320C  6E2A               	movwf	_menu+41,c
 14859                           
 14860                           ;gui.c: 909: flip = 1;
 14861  00320E  0E01               	movlw	1
 14862  003210  6E4E               	movwf	_flip,c
 14863                           
 14864                           ;gui.c: 910: }
 14865  003212  D006               	goto	l13815
 14866  003214                     l13811:
 14867                           
 14868                           ;gui.c: 911: else if(menu[5].mode == 3)
 14869  003214  0E03               	movlw	3
 14870  003216  182A               	xorwf	_menu+41,w,c
 14871  003218  A4D8               	btfss	status,2,c
 14872  00321A  D002               	goto	l13815
 14873                           
 14874                           ;gui.c: 912: {
 14875                           ;gui.c: 913: menu[5].mode = 0;
 14876  00321C  0E00               	movlw	0
 14877  00321E  6E2A               	movwf	_menu+41,c
 14878  003220                     l13815:
 14879                           
 14880                           ;gui.c: 914: }
 14881                           ;gui.c: 916: if(menu[5].cur_mode != menu[5].mode)
 14882  003220  502A               	movf	_menu+41,w,c
 14883  003222  182B               	xorwf	_menu+42,w,c
 14884  003224  B4D8               	btfsc	status,2,c
 14885  003226  0012               	return	
 14886                           
 14887                           ;gui.c: 918: {
 14888                           ;gui.c: 919: if(menu[5].mode == 0)
 14889  003228  502A               	movf	_menu+41,w,c
 14890  00322A  A4D8               	btfss	status,2,c
 14891  00322C  D039               	goto	l13845
 14892                           
 14893                           ;gui.c: 920: {
 14894                           ;gui.c: 922: display_frame_fghi(1,49, 0);
 14895  00322E  0E31               	movlw	49
 14896  003230  0101               	movlb	1	; () banked
 14897  003232  6F31               	movwf	display_frame_fghi@x& (0+255),b
 14898  003234  0E00               	movlw	0
 14899  003236  0101               	movlb	1	; () banked
 14900  003238  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 14901  00323A  0E01               	movlw	1
 14902  00323C  ECCD  F008         	call	_display_frame_fghi
 14903                           
 14904                           ;gui.c: 923: if(menu[5].parameter == 0)
 14905  003240  502E               	movf	_menu+45,w,c
 14906  003242  A4D8               	btfss	status,2,c
 14907  003244  D00F               	goto	l13829
 14908                           
 14909                           ;gui.c: 924: {
 14910                           ;gui.c: 927: display_num(3,(49 + 14),1);
 14911  003246  0E3F               	movlw	63
 14912  003248  0101               	movlb	1	; () banked
 14913  00324A  6F31               	movwf	display_num@x& (0+255),b
 14914  00324C  0E01               	movlw	1
 14915  00324E  0101               	movlb	1	; () banked
 14916  003250  6F32               	movwf	display_num@mode& (0+255),b
 14917  003252  0E03               	movlw	3
 14918  003254  ECF0  F006         	call	_display_num
 14919                           
 14920                           ;gui.c: 928: menu[5].value = 1;
 14921  003258  0E01               	movlw	1
 14922  00325A  D020               	goto	L29
 14923  00325C                     l13827:
 14924                           
 14925                           ;gui.c: 934: hg_op.push_len = (112);
 14926  00325C  0E70               	movlw	112
 14927  00325E  0100               	movlb	0	; () banked
 14928  003260  6F9D               	movwf	(_hg_op+29)& (0+255),b
 14929                           
 14930                           ;gui.c: 935: }
 14931  003262  D01E               	goto	l13845
 14932  003264                     l13829:
 14933                           
 14934                           ;gui.c: 936: else if(menu[5].parameter == 1)
 14935  003264  042E               	decf	_menu+45,w,c
 14936  003266  A4D8               	btfss	status,2,c
 14937  003268  D00B               	goto	l13837
 14938                           
 14939                           ;gui.c: 937: {
 14940                           ;gui.c: 941: display_num(3,(49 + 14),106);
 14941  00326A  0E3F               	movlw	63
 14942  00326C  0101               	movlb	1	; () banked
 14943  00326E  6F31               	movwf	display_num@x& (0+255),b
 14944  003270  0E6A               	movlw	106
 14945  003272  0101               	movlb	1	; () banked
 14946  003274  6F32               	movwf	display_num@mode& (0+255),b
 14947  003276  0E03               	movlw	3
 14948  003278  ECF0  F006         	call	_display_num
 14949                           
 14950                           ;gui.c: 942: menu[5].value = 106;
 14951  00327C  0E6A               	movlw	106
 14952  00327E  D00E               	goto	L29
 14953  003280                     l13837:
 14954                           
 14955                           ;gui.c: 955: else if(menu[5].parameter == 2)
 14956  003280  0E02               	movlw	2
 14957  003282  182E               	xorwf	_menu+45,w,c
 14958  003284  A4D8               	btfss	status,2,c
 14959  003286  D00C               	goto	l13845
 14960                           
 14961                           ;gui.c: 956: {
 14962                           ;gui.c: 957: display_num(3,(49 + 14),5);
 14963  003288  0E3F               	movlw	63
 14964  00328A  0101               	movlb	1	; () banked
 14965  00328C  6F31               	movwf	display_num@x& (0+255),b
 14966  00328E  0E05               	movlw	5
 14967  003290  0101               	movlb	1	; () banked
 14968  003292  6F32               	movwf	display_num@mode& (0+255),b
 14969  003294  0E03               	movlw	3
 14970  003296  ECF0  F006         	call	_display_num
 14971                           
 14972                           ;gui.c: 958: menu[5].value = 5;
 14973  00329A  0E05               	movlw	5
 14974  00329C                     L29:
 14975  00329C  6E2D               	movwf	_menu+44,c
 14976  00329E  D7DE               	goto	l13827
 14977  0032A0                     l13845:
 14978                           
 14979                           ;gui.c: 960: }
 14980                           ;gui.c: 962: }
 14981                           ;gui.c: 963: menu[5].cur_mode = menu[5].mode;
 14982  0032A0  C02A  F02B         	movff	_menu+41,_menu+42
 14983                           
 14984                           ;gui.c: 970: }
 14985                           
 14986                           ;gui.c: 966: }
 14987                           ;gui.c: 969: break;
 14988  0032A4  0012               	return	
 14989  0032A6                     l13849:
 14990  0032A6  0101               	movlb	1	; () banked
 14991  0032A8  5138               	movf	menu5_MsgHandlle@key& (0+255),w,b
 14992                           
 14993                           ; Switch size 1, requested type "space"
 14994                           ; Number of cases is 3, Range of values is 241 to 243
 14995                           ; switch strategies available:
 14996                           ; Name         Instructions Cycles
 14997                           ; simple_byte           10     6 (average)
 14998                           ;	Chosen strategy is simple_byte
 14999  0032AA  0AF1               	xorlw	241	; case 241
 15000  0032AC  B4D8               	btfsc	status,2,c
 15001  0032AE  D710               	goto	l13743
 15002  0032B0  0A03               	xorlw	3	; case 242
 15003  0032B2  B4D8               	btfsc	status,2,c
 15004  0032B4  D75A               	goto	l13775
 15005  0032B6  0A01               	xorlw	1	; case 243
 15006  0032B8  A4D8               	btfss	status,2,c
 15007  0032BA  0012               	return	
 15008  0032BC  D7A2               	goto	l13807
 15009  0032BE                     __end_of_menu5_MsgHandlle:
 15010                           	opt stack 0
 15011                           tblptru	equ	0xFF8
 15012                           tblptrh	equ	0xFF7
 15013                           tblptrl	equ	0xFF6
 15014                           tablat	equ	0xFF5
 15015                           prodh	equ	0xFF4
 15016                           prodl	equ	0xFF3
 15017                           intcon	equ	0xFF2
 15018                           intcon3	equ	0xFF0
 15019                           postinc0	equ	0xFEE
 15020                           wreg	equ	0xFE8
 15021                           postdec1	equ	0xFE5
 15022                           fsr1h	equ	0xFE2
 15023                           fsr1l	equ	0xFE1
 15024                           postinc2	equ	0xFDE
 15025                           fsr2h	equ	0xFDA
 15026                           fsr2l	equ	0xFD9
 15027                           status	equ	0xFD8
 15028                           
 15029 ;; *************** function _menu4_MsgHandlle *****************
 15030 ;; Defined at:
 15031 ;;		line 617 in file "../gui.c"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;  key             1    wreg     unsigned char 
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;  key             1   16[BANK1 ] unsigned char 
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15045 ;;      Params:         0       0       0       0       0       0       0
 15046 ;;      Locals:         0       0       1       0       0       0       0
 15047 ;;      Temps:          0       0       0       0       0       0       0
 15048 ;;      Totals:         0       0       1       0       0       0       0
 15049 ;;Total ram usage:        1 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:    7
 15052 ;; This function calls:
 15053 ;;		_display_frame_de
 15054 ;;		_display_num
 15055 ;; This function is called by:
 15056 ;;		_init_menu
 15057 ;;		_HG_interface
 15058 ;; This function uses a non-reentrant model
 15059 ;;
 15060                           
 15061                           	psect	text35
 15062  002626                     __ptext35:
 15063                           	opt stack 0
 15064  002626                     _menu4_MsgHandlle:
 15065                           	opt stack 22
 15066                           
 15067                           ;incstack = 0
 15068                           ;menu4_MsgHandlle@key stored from wreg
 15069  002626  0101               	movlb	1	; () banked
 15070  002628  6F38               	movwf	menu4_MsgHandlle@key& (0+255),b
 15071                           
 15072                           ;gui.c: 620: switch(key)
 15073  00262A  D110               	goto	l13739
 15074  00262C                     l13621:
 15075                           
 15076                           ;gui.c: 625: if(menu[4].mode == 3)
 15077  00262C  0E03               	movlw	3
 15078  00262E  1822               	xorwf	_menu+33,w,c
 15079  002630  A4D8               	btfss	status,2,c
 15080  002632  D008               	goto	l13629
 15081                           
 15082                           ;gui.c: 626: {
 15083                           ;gui.c: 627: menu[4].parameter ++;
 15084  002634  2A26               	incf	_menu+37,f,c
 15085                           
 15086                           ;gui.c: 628: if(menu[4].parameter == 3) menu[4].parameter = 0;
 15087  002636  0E03               	movlw	3
 15088  002638  1826               	xorwf	_menu+37,w,c
 15089  00263A  A4D8               	btfss	status,2,c
 15090  00263C  0012               	return	
 15091  00263E  0E00               	movlw	0
 15092  002640  6E26               	movwf	_menu+37,c
 15093                           
 15094                           ;gui.c: 629: }
 15095  002642  0012               	return	
 15096  002644                     l13629:
 15097                           
 15098                           ;gui.c: 630: else
 15099                           ;gui.c: 631: {
 15100                           ;gui.c: 632: if(focus ==5)
 15101  002644  0E05               	movlw	5
 15102  002646  184F               	xorwf	_focus,w,c
 15103  002648  A4D8               	btfss	status,2,c
 15104  00264A  D002               	goto	l13633
 15105                           
 15106                           ;gui.c: 633: {
 15107                           ;gui.c: 634: menu[4].mode = 0x80;
 15108  00264C  0E80               	movlw	128
 15109  00264E  D001               	goto	L30
 15110  002650                     l13633:
 15111                           
 15112                           ;gui.c: 636: else
 15113                           ;gui.c: 637: {
 15114                           ;gui.c: 638: menu[4].mode = 0;
 15115  002650  0E00               	movlw	0
 15116  002652                     L30:
 15117  002652  6E22               	movwf	_menu+33,c
 15118                           
 15119                           ;gui.c: 639: }
 15120                           ;gui.c: 641: if(menu[4].cur_mode != menu[4].mode)
 15121  002654  5022               	movf	_menu+33,w,c
 15122  002656  1823               	xorwf	_menu+34,w,c
 15123  002658  B4D8               	btfsc	status,2,c
 15124  00265A  0012               	return	
 15125                           
 15126                           ;gui.c: 642: {
 15127                           ;gui.c: 643: display_frame_de(2,0, menu[4].mode);
 15128  00265C  0E00               	movlw	0
 15129  00265E  0101               	movlb	1	; () banked
 15130  002660  6F31               	movwf	display_frame_de@x& (0+255),b
 15131  002662  C022  F132         	movff	_menu+33,display_frame_de@mode
 15132  002666  0E02               	movlw	2
 15133  002668  EC09  F000         	call	_display_frame_de
 15134                           
 15135                           ;gui.c: 645: if( menu[4].parameter == 0)
 15136  00266C  5026               	movf	_menu+37,w,c
 15137  00266E  A4D8               	btfss	status,2,c
 15138  002670  D00B               	goto	l13643
 15139                           
 15140                           ;gui.c: 646: {
 15141                           ;gui.c: 648: display_num(0,(0 + 14), menu[4].mode | 1);
 15142  002672  0E0E               	movlw	14
 15143  002674  0101               	movlb	1	; () banked
 15144  002676  6F31               	movwf	display_num@x& (0+255),b
 15145  002678  5022               	movf	_menu+33,w,c
 15146  00267A  0901               	iorlw	1
 15147  00267C  0101               	movlb	1	; () banked
 15148  00267E  6F32               	movwf	display_num@mode& (0+255),b
 15149  002680  0E00               	movlw	0
 15150  002682  ECF0  F006         	call	_display_num
 15151                           
 15152                           ;gui.c: 649: }
 15153  002686  D01A               	goto	l13651
 15154  002688                     l13643:
 15155                           
 15156                           ;gui.c: 650: else if( menu[4].parameter == 1)
 15157  002688  0426               	decf	_menu+37,w,c
 15158  00268A  A4D8               	btfss	status,2,c
 15159  00268C  D00B               	goto	l13647
 15160                           
 15161                           ;gui.c: 651: {
 15162                           ;gui.c: 653: display_num(0,(0 + 14), menu[4].mode | 2);
 15163  00268E  0E0E               	movlw	14
 15164  002690  0101               	movlb	1	; () banked
 15165  002692  6F31               	movwf	display_num@x& (0+255),b
 15166  002694  5022               	movf	_menu+33,w,c
 15167  002696  0902               	iorlw	2
 15168  002698  0101               	movlb	1	; () banked
 15169  00269A  6F32               	movwf	display_num@mode& (0+255),b
 15170  00269C  0E00               	movlw	0
 15171  00269E  ECF0  F006         	call	_display_num
 15172                           
 15173                           ;gui.c: 654: }
 15174  0026A2  D00C               	goto	l13651
 15175  0026A4                     l13647:
 15176                           
 15177                           ;gui.c: 655: else if( menu[4].parameter == 2)
 15178  0026A4  0E02               	movlw	2
 15179  0026A6  1826               	xorwf	_menu+37,w,c
 15180  0026A8  A4D8               	btfss	status,2,c
 15181  0026AA  D008               	goto	l13651
 15182                           
 15183                           ;gui.c: 656: {
 15184                           ;gui.c: 658: display_num(0,(0 + 14), menu[4].mode | 0);
 15185  0026AC  0E0E               	movlw	14
 15186  0026AE  0101               	movlb	1	; () banked
 15187  0026B0  6F31               	movwf	display_num@x& (0+255),b
 15188  0026B2  C022  F132         	movff	_menu+33,display_num@mode
 15189  0026B6  0E00               	movlw	0
 15190  0026B8  ECF0  F006         	call	_display_num
 15191  0026BC                     l13651:
 15192                           
 15193                           ;gui.c: 659: }
 15194                           ;gui.c: 662: menu[4].cur_mode = menu[4].mode;
 15195  0026BC  C022  F023         	movff	_menu+33,_menu+34
 15196                           
 15197                           ;gui.c: 663: }
 15198                           ;gui.c: 666: }
 15199                           ;gui.c: 668: break;
 15200  0026C0  0012               	return	
 15201  0026C2                     l13653:
 15202                           
 15203                           ;gui.c: 673: if(menu[4].mode == 3)
 15204  0026C2  0E03               	movlw	3
 15205  0026C4  1822               	xorwf	_menu+33,w,c
 15206  0026C6  A4D8               	btfss	status,2,c
 15207  0026C8  D007               	goto	l13661
 15208                           
 15209                           ;gui.c: 674: {
 15210                           ;gui.c: 675: menu[4].parameter --;
 15211  0026CA  0626               	decf	_menu+37,f,c
 15212                           
 15213                           ;gui.c: 676: if(menu[4].parameter == -1) menu[4].parameter = 1;
 15214  0026CC  2826               	incf	_menu+37,w,c
 15215  0026CE  A4D8               	btfss	status,2,c
 15216  0026D0  0012               	return	
 15217  0026D2  0E01               	movlw	1
 15218  0026D4  6E26               	movwf	_menu+37,c
 15219                           
 15220                           ;gui.c: 677: }
 15221  0026D6  0012               	return	
 15222  0026D8                     l13661:
 15223                           
 15224                           ;gui.c: 678: else
 15225                           ;gui.c: 679: {
 15226                           ;gui.c: 680: if(focus ==5)
 15227  0026D8  0E05               	movlw	5
 15228  0026DA  184F               	xorwf	_focus,w,c
 15229  0026DC  A4D8               	btfss	status,2,c
 15230  0026DE  D002               	goto	l13665
 15231                           
 15232                           ;gui.c: 681: {
 15233                           ;gui.c: 682: menu[4].mode = 0x80;
 15234  0026E0  0E80               	movlw	128
 15235  0026E2  D001               	goto	L31
 15236  0026E4                     l13665:
 15237                           
 15238                           ;gui.c: 684: else
 15239                           ;gui.c: 685: {
 15240                           ;gui.c: 686: menu[4].mode = 0;
 15241  0026E4  0E00               	movlw	0
 15242  0026E6                     L31:
 15243  0026E6  6E22               	movwf	_menu+33,c
 15244                           
 15245                           ;gui.c: 687: }
 15246                           ;gui.c: 689: if(menu[4].cur_mode != menu[4].mode)
 15247  0026E8  5022               	movf	_menu+33,w,c
 15248  0026EA  1823               	xorwf	_menu+34,w,c
 15249  0026EC  B4D8               	btfsc	status,2,c
 15250  0026EE  0012               	return	
 15251                           
 15252                           ;gui.c: 690: {
 15253                           ;gui.c: 691: display_frame_de(2,0, menu[4].mode);
 15254  0026F0  0E00               	movlw	0
 15255  0026F2  0101               	movlb	1	; () banked
 15256  0026F4  6F31               	movwf	display_frame_de@x& (0+255),b
 15257  0026F6  C022  F132         	movff	_menu+33,display_frame_de@mode
 15258  0026FA  0E02               	movlw	2
 15259  0026FC  EC09  F000         	call	_display_frame_de
 15260                           
 15261                           ;gui.c: 693: if( menu[4].parameter == 0)
 15262  002700  5026               	movf	_menu+37,w,c
 15263  002702  A4D8               	btfss	status,2,c
 15264  002704  D00B               	goto	l13675
 15265                           
 15266                           ;gui.c: 694: {
 15267                           ;gui.c: 696: display_num(0,(0 + 14), menu[4].mode | 1);
 15268  002706  0E0E               	movlw	14
 15269  002708  0101               	movlb	1	; () banked
 15270  00270A  6F31               	movwf	display_num@x& (0+255),b
 15271  00270C  5022               	movf	_menu+33,w,c
 15272  00270E  0901               	iorlw	1
 15273  002710  0101               	movlb	1	; () banked
 15274  002712  6F32               	movwf	display_num@mode& (0+255),b
 15275  002714  0E00               	movlw	0
 15276  002716  ECF0  F006         	call	_display_num
 15277                           
 15278                           ;gui.c: 697: }
 15279  00271A  D01A               	goto	l13683
 15280  00271C                     l13675:
 15281                           
 15282                           ;gui.c: 698: else if( menu[4].parameter == 1)
 15283  00271C  0426               	decf	_menu+37,w,c
 15284  00271E  A4D8               	btfss	status,2,c
 15285  002720  D00B               	goto	l13679
 15286                           
 15287                           ;gui.c: 699: {
 15288                           ;gui.c: 701: display_num(0,(0 + 14), menu[4].mode | 2);
 15289  002722  0E0E               	movlw	14
 15290  002724  0101               	movlb	1	; () banked
 15291  002726  6F31               	movwf	display_num@x& (0+255),b
 15292  002728  5022               	movf	_menu+33,w,c
 15293  00272A  0902               	iorlw	2
 15294  00272C  0101               	movlb	1	; () banked
 15295  00272E  6F32               	movwf	display_num@mode& (0+255),b
 15296  002730  0E00               	movlw	0
 15297  002732  ECF0  F006         	call	_display_num
 15298                           
 15299                           ;gui.c: 702: }
 15300  002736  D00C               	goto	l13683
 15301  002738                     l13679:
 15302                           
 15303                           ;gui.c: 703: else if( menu[4].parameter == 2)
 15304  002738  0E02               	movlw	2
 15305  00273A  1826               	xorwf	_menu+37,w,c
 15306  00273C  A4D8               	btfss	status,2,c
 15307  00273E  D008               	goto	l13683
 15308                           
 15309                           ;gui.c: 704: {
 15310                           ;gui.c: 706: display_num(0,(0 + 14), menu[4].mode | 0);
 15311  002740  0E0E               	movlw	14
 15312  002742  0101               	movlb	1	; () banked
 15313  002744  6F31               	movwf	display_num@x& (0+255),b
 15314  002746  C022  F132         	movff	_menu+33,display_num@mode
 15315  00274A  0E00               	movlw	0
 15316  00274C  ECF0  F006         	call	_display_num
 15317  002750                     l13683:
 15318                           
 15319                           ;gui.c: 707: }
 15320                           ;gui.c: 709: menu[4].cur_mode = menu[4].mode;
 15321  002750  C022  F023         	movff	_menu+33,_menu+34
 15322                           
 15323                           ;gui.c: 710: }
 15324                           ;gui.c: 713: }
 15325                           ;gui.c: 715: break;
 15326  002754  0012               	return	
 15327  002756                     l13685:
 15328                           
 15329                           ;gui.c: 719: if(menu[4].mode == 0x80)
 15330  002756  0E80               	movlw	128
 15331  002758  1822               	xorwf	_menu+33,w,c
 15332  00275A  A4D8               	btfss	status,2,c
 15333  00275C  D005               	goto	l13689
 15334                           
 15335                           ;gui.c: 720: {
 15336                           ;gui.c: 721: menu[4].mode = 3;
 15337  00275E  0E03               	movlw	3
 15338  002760  6E22               	movwf	_menu+33,c
 15339                           
 15340                           ;gui.c: 722: flip = 1;
 15341  002762  0E01               	movlw	1
 15342  002764  6E4E               	movwf	_flip,c
 15343                           
 15344                           ;gui.c: 723: }
 15345  002766  D006               	goto	l13693
 15346  002768                     l13689:
 15347                           
 15348                           ;gui.c: 724: else if(menu[4].mode == 3)
 15349  002768  0E03               	movlw	3
 15350  00276A  1822               	xorwf	_menu+33,w,c
 15351  00276C  A4D8               	btfss	status,2,c
 15352  00276E  D002               	goto	l13693
 15353                           
 15354                           ;gui.c: 725: {
 15355                           ;gui.c: 726: menu[4].mode = 0;
 15356  002770  0E00               	movlw	0
 15357  002772  6E22               	movwf	_menu+33,c
 15358  002774                     l13693:
 15359                           
 15360                           ;gui.c: 727: }
 15361                           ;gui.c: 729: if(menu[4].cur_mode != menu[4].mode)
 15362  002774  5022               	movf	_menu+33,w,c
 15363  002776  1823               	xorwf	_menu+34,w,c
 15364  002778  B4D8               	btfsc	status,2,c
 15365  00277A  0012               	return	
 15366                           
 15367                           ;gui.c: 731: {
 15368                           ;gui.c: 732: if(menu[4].mode == 0)
 15369  00277C  5022               	movf	_menu+33,w,c
 15370  00277E  A4D8               	btfss	status,2,c
 15371  002780  D062               	goto	l13735
 15372                           
 15373                           ;gui.c: 733: {
 15374                           ;gui.c: 734: display_frame_de(2,0,0);
 15375  002782  0E00               	movlw	0
 15376  002784  0101               	movlb	1	; () banked
 15377  002786  6F31               	movwf	display_frame_de@x& (0+255),b
 15378  002788  0E00               	movlw	0
 15379  00278A  0101               	movlb	1	; () banked
 15380  00278C  6F32               	movwf	display_frame_de@mode& (0+255),b
 15381  00278E  0E02               	movlw	2
 15382  002790  EC09  F000         	call	_display_frame_de
 15383                           
 15384                           ;gui.c: 735: if(menu[4].parameter == 0)
 15385  002794  5026               	movf	_menu+37,w,c
 15386  002796  A4D8               	btfss	status,2,c
 15387  002798  D01B               	goto	l13711
 15388                           
 15389                           ;gui.c: 736: {
 15390                           ;gui.c: 738: display_num(0,(0 + 14), menu[4].mode | 1);
 15391  00279A  0E0E               	movlw	14
 15392  00279C  0101               	movlb	1	; () banked
 15393  00279E  6F31               	movwf	display_num@x& (0+255),b
 15394  0027A0  5022               	movf	_menu+33,w,c
 15395  0027A2  0901               	iorlw	1
 15396  0027A4  0101               	movlb	1	; () banked
 15397  0027A6  6F32               	movwf	display_num@mode& (0+255),b
 15398  0027A8  0E00               	movlw	0
 15399  0027AA  ECF0  F006         	call	_display_num
 15400                           
 15401                           ;gui.c: 739: menu[4].value = 1;
 15402  0027AE  0E01               	movlw	1
 15403  0027B0  6E25               	movwf	_menu+36,c
 15404                           
 15405                           ;gui.c: 747: hg_op.cnt_pos_nmm_target = (236);
 15406  0027B2  0E00               	movlw	0
 15407  0027B4  0100               	movlb	0	; () banked
 15408  0027B6  6FB4               	movwf	(_hg_op+52)& (0+255),b
 15409  0027B8  0EEC               	movlw	236
 15410  0027BA  6FB3               	movwf	(_hg_op+51)& (0+255),b
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;gui.c: 748: hg_op.cnt_pos_nmm =0;
 15414  0027BC  0E00               	movlw	0
 15415  0027BE  0100               	movlb	0	; () banked
 15416  0027C0  6FAE               	movwf	(_hg_op+46)& (0+255),b
 15417  0027C2  0E00               	movlw	0
 15418  0027C4  6FAD               	movwf	(_hg_op+45)& (0+255),b
 15419                           
 15420                           ; BSR set to: 0
 15421                           ;gui.c: 750: hg_op.inject_len = 1;
 15422  0027C6  0E00               	movlw	0
 15423  0027C8  0100               	movlb	0	; () banked
 15424  0027CA  6F99               	movwf	(_hg_op+25)& (0+255),b
 15425  0027CC  0E01               	movlw	1
 15426  0027CE  D03A               	goto	L33
 15427  0027D0                     l13711:
 15428                           
 15429                           ;gui.c: 753: else if(menu[4].parameter == 1)
 15430  0027D0  0426               	decf	_menu+37,w,c
 15431  0027D2  A4D8               	btfss	status,2,c
 15432  0027D4  D01B               	goto	l13723
 15433                           
 15434                           ;gui.c: 754: {
 15435                           ;gui.c: 756: display_num(0,(0 + 14), menu[4].mode | 2);
 15436  0027D6  0E0E               	movlw	14
 15437  0027D8  0101               	movlb	1	; () banked
 15438  0027DA  6F31               	movwf	display_num@x& (0+255),b
 15439  0027DC  5022               	movf	_menu+33,w,c
 15440  0027DE  0902               	iorlw	2
 15441  0027E0  0101               	movlb	1	; () banked
 15442  0027E2  6F32               	movwf	display_num@mode& (0+255),b
 15443  0027E4  0E00               	movlw	0
 15444  0027E6  ECF0  F006         	call	_display_num
 15445                           
 15446                           ;gui.c: 757: menu[4].value = 2;
 15447  0027EA  0E02               	movlw	2
 15448  0027EC  6E25               	movwf	_menu+36,c
 15449                           
 15450                           ;gui.c: 760: hg_op.cnt_pos_nmm_target = (325);
 15451  0027EE  0E01               	movlw	1
 15452  0027F0  0100               	movlb	0	; () banked
 15453  0027F2  6FB4               	movwf	(_hg_op+52)& (0+255),b
 15454  0027F4  0E45               	movlw	69
 15455  0027F6  6FB3               	movwf	(_hg_op+51)& (0+255),b
 15456                           
 15457                           ; BSR set to: 0
 15458                           ;gui.c: 761: hg_op.cnt_pos_nmm =0;
 15459  0027F8  0E00               	movlw	0
 15460  0027FA  0100               	movlb	0	; () banked
 15461  0027FC  6FAE               	movwf	(_hg_op+46)& (0+255),b
 15462  0027FE  0E00               	movlw	0
 15463  002800  6FAD               	movwf	(_hg_op+45)& (0+255),b
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;gui.c: 765: hg_op.inject_len = 2;
 15467  002802  0E00               	movlw	0
 15468  002804  0100               	movlb	0	; () banked
 15469  002806  6F99               	movwf	(_hg_op+25)& (0+255),b
 15470  002808  0E02               	movlw	2
 15471  00280A  D01C               	goto	L33
 15472  00280C                     l13723:
 15473                           
 15474                           ;gui.c: 778: else if(menu[4].parameter == 2)
 15475  00280C  0E02               	movlw	2
 15476  00280E  1826               	xorwf	_menu+37,w,c
 15477  002810  A4D8               	btfss	status,2,c
 15478  002812  D019               	goto	l13735
 15479                           
 15480                           ;gui.c: 779: {
 15481                           ;gui.c: 780: display_num(0,(0 + 14), menu[4].mode | 0);
 15482  002814  0E0E               	movlw	14
 15483  002816  0101               	movlb	1	; () banked
 15484  002818  6F31               	movwf	display_num@x& (0+255),b
 15485  00281A  C022  F132         	movff	_menu+33,display_num@mode
 15486  00281E  0E00               	movlw	0
 15487  002820  ECF0  F006         	call	_display_num
 15488                           
 15489                           ;gui.c: 781: menu[4].value = 0;
 15490  002824  0E00               	movlw	0
 15491  002826  6E25               	movwf	_menu+36,c
 15492                           
 15493                           ;gui.c: 784: hg_op.cnt_pos_nmm_target = (148);
 15494  002828  0E00               	movlw	0
 15495  00282A  0100               	movlb	0	; () banked
 15496  00282C  6FB4               	movwf	(_hg_op+52)& (0+255),b
 15497  00282E  0E94               	movlw	148
 15498  002830  6FB3               	movwf	(_hg_op+51)& (0+255),b
 15499                           
 15500                           ; BSR set to: 0
 15501                           ;gui.c: 785: hg_op.cnt_pos_nmm =0;
 15502  002832  0E00               	movlw	0
 15503  002834  0100               	movlb	0	; () banked
 15504  002836  6FAE               	movwf	(_hg_op+46)& (0+255),b
 15505  002838  0E00               	movlw	0
 15506  00283A  6FAD               	movwf	(_hg_op+45)& (0+255),b
 15507                           
 15508                           ; BSR set to: 0
 15509                           ;gui.c: 787: hg_op.inject_len = 0;
 15510  00283C  0E00               	movlw	0
 15511  00283E  0100               	movlb	0	; () banked
 15512  002840  6F99               	movwf	(_hg_op+25)& (0+255),b
 15513  002842  0E00               	movlw	0
 15514  002844                     L33:
 15515  002844  6F98               	movwf	(_hg_op+24)& (0+255),b
 15516  002846                     l13735:
 15517                           
 15518                           ;gui.c: 788: }
 15519                           ;gui.c: 790: }
 15520                           ;gui.c: 791: menu[4].cur_mode = menu[4].mode;
 15521  002846  C022  F023         	movff	_menu+33,_menu+34
 15522                           
 15523                           ;gui.c: 795: }
 15524                           
 15525                           ;gui.c: 792: }
 15526                           ;gui.c: 794: break;
 15527  00284A  0012               	return	
 15528  00284C                     l13739:
 15529  00284C  0101               	movlb	1	; () banked
 15530  00284E  5138               	movf	menu4_MsgHandlle@key& (0+255),w,b
 15531                           
 15532                           ; Switch size 1, requested type "space"
 15533                           ; Number of cases is 3, Range of values is 241 to 243
 15534                           ; switch strategies available:
 15535                           ; Name         Instructions Cycles
 15536                           ; simple_byte           10     6 (average)
 15537                           ;	Chosen strategy is simple_byte
 15538  002850  0AF1               	xorlw	241	; case 241
 15539  002852  B4D8               	btfsc	status,2,c
 15540  002854  D6EB               	goto	l13621
 15541  002856  0A03               	xorlw	3	; case 242
 15542  002858  B4D8               	btfsc	status,2,c
 15543  00285A  D733               	goto	l13653
 15544  00285C  0A01               	xorlw	1	; case 243
 15545  00285E  A4D8               	btfss	status,2,c
 15546  002860  0012               	return	
 15547  002862  D779               	goto	l13685
 15548  002864                     __end_of_menu4_MsgHandlle:
 15549                           	opt stack 0
 15550                           tblptru	equ	0xFF8
 15551                           tblptrh	equ	0xFF7
 15552                           tblptrl	equ	0xFF6
 15553                           tablat	equ	0xFF5
 15554                           prodh	equ	0xFF4
 15555                           prodl	equ	0xFF3
 15556                           intcon	equ	0xFF2
 15557                           intcon3	equ	0xFF0
 15558                           postinc0	equ	0xFEE
 15559                           wreg	equ	0xFE8
 15560                           postdec1	equ	0xFE5
 15561                           fsr1h	equ	0xFE2
 15562                           fsr1l	equ	0xFE1
 15563                           postinc2	equ	0xFDE
 15564                           fsr2h	equ	0xFDA
 15565                           fsr2l	equ	0xFD9
 15566                           status	equ	0xFD8
 15567                           
 15568 ;; *************** function _menu3_MsgHandlle *****************
 15569 ;; Defined at:
 15570 ;;		line 447 in file "../gui.c"
 15571 ;; Parameters:    Size  Location     Type
 15572 ;;  key             1    wreg     unsigned char 
 15573 ;; Auto vars:     Size  Location     Type
 15574 ;;  key             1   16[BANK1 ] unsigned char 
 15575 ;; Return value:  Size  Location     Type
 15576 ;;                  1    wreg      void 
 15577 ;; Registers used:
 15578 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 15579 ;; Tracked objects:
 15580 ;;		On entry : 0/0
 15581 ;;		On exit  : 0/0
 15582 ;;		Unchanged: 0/0
 15583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15584 ;;      Params:         0       0       0       0       0       0       0
 15585 ;;      Locals:         0       0       1       0       0       0       0
 15586 ;;      Temps:          0       0       0       0       0       0       0
 15587 ;;      Totals:         0       0       1       0       0       0       0
 15588 ;;Total ram usage:        1 bytes
 15589 ;; Hardware stack levels used:    1
 15590 ;; Hardware stack levels required when called:    7
 15591 ;; This function calls:
 15592 ;;		_display_frame_de
 15593 ;;		_display_num
 15594 ;; This function is called by:
 15595 ;;		_init_menu
 15596 ;;		_HG_interface
 15597 ;; This function uses a non-reentrant model
 15598 ;;
 15599                           
 15600                           	psect	text36
 15601  002A90                     __ptext36:
 15602                           	opt stack 0
 15603  002A90                     _menu3_MsgHandlle:
 15604                           	opt stack 22
 15605                           
 15606                           ;incstack = 0
 15607                           ;menu3_MsgHandlle@key stored from wreg
 15608  002A90  0101               	movlb	1	; () banked
 15609  002A92  6F38               	movwf	menu3_MsgHandlle@key& (0+255),b
 15610                           
 15611                           ;gui.c: 450: switch(key)
 15612  002A94  D106               	goto	l13617
 15613  002A96                     l13499:
 15614                           
 15615                           ;gui.c: 455: if(menu[3].mode == 3)
 15616  002A96  0E03               	movlw	3
 15617  002A98  181A               	xorwf	_menu+25,w,c
 15618  002A9A  A4D8               	btfss	status,2,c
 15619  002A9C  D008               	goto	l13507
 15620                           
 15621                           ;gui.c: 456: {
 15622                           ;gui.c: 457: menu[3].parameter ++;
 15623  002A9E  2A1E               	incf	_menu+29,f,c
 15624                           
 15625                           ;gui.c: 458: if(menu[3].parameter == 3) menu[3].parameter = 0;
 15626  002AA0  0E03               	movlw	3
 15627  002AA2  181E               	xorwf	_menu+29,w,c
 15628  002AA4  A4D8               	btfss	status,2,c
 15629  002AA6  0012               	return	
 15630  002AA8  0E00               	movlw	0
 15631  002AAA  6E1E               	movwf	_menu+29,c
 15632                           
 15633                           ;gui.c: 459: }
 15634  002AAC  0012               	return	
 15635  002AAE                     l13507:
 15636                           
 15637                           ;gui.c: 460: else
 15638                           ;gui.c: 461: {
 15639                           ;gui.c: 462: if(focus == 4)
 15640  002AAE  0E04               	movlw	4
 15641  002AB0  184F               	xorwf	_focus,w,c
 15642  002AB2  A4D8               	btfss	status,2,c
 15643  002AB4  D002               	goto	l13511
 15644                           
 15645                           ;gui.c: 463: {
 15646                           ;gui.c: 464: menu[3].mode = 0x80;
 15647  002AB6  0E80               	movlw	128
 15648  002AB8  D001               	goto	L34
 15649  002ABA                     l13511:
 15650                           
 15651                           ;gui.c: 466: else
 15652                           ;gui.c: 467: {
 15653                           ;gui.c: 468: menu[3].mode = 0;
 15654  002ABA  0E00               	movlw	0
 15655  002ABC                     L34:
 15656  002ABC  6E1A               	movwf	_menu+25,c
 15657                           
 15658                           ;gui.c: 469: }
 15659                           ;gui.c: 472: if(menu[3].cur_mode != menu[3].mode)
 15660  002ABE  501A               	movf	_menu+25,w,c
 15661  002AC0  181B               	xorwf	_menu+26,w,c
 15662  002AC2  B4D8               	btfsc	status,2,c
 15663  002AC4  0012               	return	
 15664                           
 15665                           ;gui.c: 473: {
 15666                           ;gui.c: 474: display_frame_de(1,49, menu[3].mode);
 15667  002AC6  0E31               	movlw	49
 15668  002AC8  0101               	movlb	1	; () banked
 15669  002ACA  6F31               	movwf	display_frame_de@x& (0+255),b
 15670  002ACC  C01A  F132         	movff	_menu+25,display_frame_de@mode
 15671  002AD0  0E01               	movlw	1
 15672  002AD2  EC09  F000         	call	_display_frame_de
 15673                           
 15674                           ;gui.c: 477: if( menu[3].parameter == 0)
 15675  002AD6  501E               	movf	_menu+29,w,c
 15676  002AD8  A4D8               	btfss	status,2,c
 15677  002ADA  D00B               	goto	l13521
 15678                           
 15679                           ;gui.c: 478: {
 15680                           ;gui.c: 480: display_num(0,(49 + 14), menu[3].mode | 4);
 15681  002ADC  0E3F               	movlw	63
 15682  002ADE  0101               	movlb	1	; () banked
 15683  002AE0  6F31               	movwf	display_num@x& (0+255),b
 15684  002AE2  501A               	movf	_menu+25,w,c
 15685  002AE4  0904               	iorlw	4
 15686  002AE6  0101               	movlb	1	; () banked
 15687  002AE8  6F32               	movwf	display_num@mode& (0+255),b
 15688  002AEA  0E00               	movlw	0
 15689  002AEC  ECF0  F006         	call	_display_num
 15690                           
 15691                           ;gui.c: 481: }
 15692  002AF0  D01C               	goto	l13529
 15693  002AF2                     l13521:
 15694                           
 15695                           ;gui.c: 482: else if( menu[3].parameter == 1)
 15696  002AF2  041E               	decf	_menu+29,w,c
 15697  002AF4  A4D8               	btfss	status,2,c
 15698  002AF6  D00B               	goto	l13525
 15699                           
 15700                           ;gui.c: 483: {
 15701                           ;gui.c: 485: display_num(0,(49 + 14), menu[3].mode | 6);
 15702  002AF8  0E3F               	movlw	63
 15703  002AFA  0101               	movlb	1	; () banked
 15704  002AFC  6F31               	movwf	display_num@x& (0+255),b
 15705  002AFE  501A               	movf	_menu+25,w,c
 15706  002B00  0906               	iorlw	6
 15707  002B02  0101               	movlb	1	; () banked
 15708  002B04  6F32               	movwf	display_num@mode& (0+255),b
 15709  002B06  0E00               	movlw	0
 15710  002B08  ECF0  F006         	call	_display_num
 15711                           
 15712                           ;gui.c: 486: }
 15713  002B0C  D00E               	goto	l13529
 15714  002B0E                     l13525:
 15715                           
 15716                           ;gui.c: 487: else if( menu[3].parameter == 2)
 15717  002B0E  0E02               	movlw	2
 15718  002B10  181E               	xorwf	_menu+29,w,c
 15719  002B12  A4D8               	btfss	status,2,c
 15720  002B14  D00A               	goto	l13529
 15721                           
 15722                           ;gui.c: 488: {
 15723                           ;gui.c: 489: display_num(0,(49 + 14), menu[3].mode | 13);
 15724  002B16  0E3F               	movlw	63
 15725  002B18  0101               	movlb	1	; () banked
 15726  002B1A  6F31               	movwf	display_num@x& (0+255),b
 15727  002B1C  501A               	movf	_menu+25,w,c
 15728  002B1E  090D               	iorlw	13
 15729  002B20  0101               	movlb	1	; () banked
 15730  002B22  6F32               	movwf	display_num@mode& (0+255),b
 15731  002B24  0E00               	movlw	0
 15732  002B26  ECF0  F006         	call	_display_num
 15733  002B2A                     l13529:
 15734                           
 15735                           ;gui.c: 490: }
 15736                           ;gui.c: 492: menu[3].cur_mode = menu[3].mode;
 15737  002B2A  C01A  F01B         	movff	_menu+25,_menu+26
 15738                           
 15739                           ;gui.c: 493: }
 15740                           ;gui.c: 494: }
 15741                           ;gui.c: 497: break;
 15742  002B2E  0012               	return	
 15743  002B30                     l13531:
 15744                           
 15745                           ;gui.c: 502: if(menu[3].mode == 3)
 15746  002B30  0E03               	movlw	3
 15747  002B32  181A               	xorwf	_menu+25,w,c
 15748  002B34  A4D8               	btfss	status,2,c
 15749  002B36  D007               	goto	l13539
 15750                           
 15751                           ;gui.c: 503: {
 15752                           ;gui.c: 504: menu[3].parameter --;
 15753  002B38  061E               	decf	_menu+29,f,c
 15754                           
 15755                           ;gui.c: 505: if(menu[3].parameter == -1) menu[3].parameter = 2;
 15756  002B3A  281E               	incf	_menu+29,w,c
 15757  002B3C  A4D8               	btfss	status,2,c
 15758  002B3E  0012               	return	
 15759  002B40  0E02               	movlw	2
 15760  002B42  6E1E               	movwf	_menu+29,c
 15761                           
 15762                           ;gui.c: 506: }
 15763  002B44  0012               	return	
 15764  002B46                     l13539:
 15765                           
 15766                           ;gui.c: 507: else
 15767                           ;gui.c: 508: {
 15768                           ;gui.c: 509: if(focus == 4)
 15769  002B46  0E04               	movlw	4
 15770  002B48  184F               	xorwf	_focus,w,c
 15771  002B4A  A4D8               	btfss	status,2,c
 15772  002B4C  D002               	goto	l13543
 15773                           
 15774                           ;gui.c: 510: {
 15775                           ;gui.c: 511: menu[3].mode = 0x80;
 15776  002B4E  0E80               	movlw	128
 15777  002B50  D001               	goto	L35
 15778  002B52                     l13543:
 15779                           
 15780                           ;gui.c: 513: else
 15781                           ;gui.c: 514: {
 15782                           ;gui.c: 515: menu[3].mode = 0;
 15783  002B52  0E00               	movlw	0
 15784  002B54                     L35:
 15785  002B54  6E1A               	movwf	_menu+25,c
 15786                           
 15787                           ;gui.c: 516: }
 15788                           ;gui.c: 519: if(menu[3].cur_mode != menu[3].mode)
 15789  002B56  501A               	movf	_menu+25,w,c
 15790  002B58  181B               	xorwf	_menu+26,w,c
 15791  002B5A  B4D8               	btfsc	status,2,c
 15792  002B5C  0012               	return	
 15793                           
 15794                           ;gui.c: 520: {
 15795                           ;gui.c: 521: display_frame_de(1,49, menu[3].mode);
 15796  002B5E  0E31               	movlw	49
 15797  002B60  0101               	movlb	1	; () banked
 15798  002B62  6F31               	movwf	display_frame_de@x& (0+255),b
 15799  002B64  C01A  F132         	movff	_menu+25,display_frame_de@mode
 15800  002B68  0E01               	movlw	1
 15801  002B6A  EC09  F000         	call	_display_frame_de
 15802                           
 15803                           ;gui.c: 524: if( menu[3].parameter == 0)
 15804  002B6E  501E               	movf	_menu+29,w,c
 15805  002B70  A4D8               	btfss	status,2,c
 15806  002B72  D00B               	goto	l13553
 15807                           
 15808                           ;gui.c: 525: {
 15809                           ;gui.c: 527: display_num(0,(49 + 14), menu[3].mode | 4);
 15810  002B74  0E3F               	movlw	63
 15811  002B76  0101               	movlb	1	; () banked
 15812  002B78  6F31               	movwf	display_num@x& (0+255),b
 15813  002B7A  501A               	movf	_menu+25,w,c
 15814  002B7C  0904               	iorlw	4
 15815  002B7E  0101               	movlb	1	; () banked
 15816  002B80  6F32               	movwf	display_num@mode& (0+255),b
 15817  002B82  0E00               	movlw	0
 15818  002B84  ECF0  F006         	call	_display_num
 15819                           
 15820                           ;gui.c: 528: }
 15821  002B88  D01C               	goto	l13561
 15822  002B8A                     l13553:
 15823                           
 15824                           ;gui.c: 529: else if( menu[3].parameter == 1)
 15825  002B8A  041E               	decf	_menu+29,w,c
 15826  002B8C  A4D8               	btfss	status,2,c
 15827  002B8E  D00B               	goto	l13557
 15828                           
 15829                           ;gui.c: 530: {
 15830                           ;gui.c: 532: display_num(0,(49 + 14), menu[3].mode | 6);
 15831  002B90  0E3F               	movlw	63
 15832  002B92  0101               	movlb	1	; () banked
 15833  002B94  6F31               	movwf	display_num@x& (0+255),b
 15834  002B96  501A               	movf	_menu+25,w,c
 15835  002B98  0906               	iorlw	6
 15836  002B9A  0101               	movlb	1	; () banked
 15837  002B9C  6F32               	movwf	display_num@mode& (0+255),b
 15838  002B9E  0E00               	movlw	0
 15839  002BA0  ECF0  F006         	call	_display_num
 15840                           
 15841                           ;gui.c: 533: }
 15842  002BA4  D00E               	goto	l13561
 15843  002BA6                     l13557:
 15844                           
 15845                           ;gui.c: 534: else if( menu[3].parameter == 2)
 15846  002BA6  0E02               	movlw	2
 15847  002BA8  181E               	xorwf	_menu+29,w,c
 15848  002BAA  A4D8               	btfss	status,2,c
 15849  002BAC  D00A               	goto	l13561
 15850                           
 15851                           ;gui.c: 535: {
 15852                           ;gui.c: 536: display_num(0,(49 + 14), menu[3].mode | 13);
 15853  002BAE  0E3F               	movlw	63
 15854  002BB0  0101               	movlb	1	; () banked
 15855  002BB2  6F31               	movwf	display_num@x& (0+255),b
 15856  002BB4  501A               	movf	_menu+25,w,c
 15857  002BB6  090D               	iorlw	13
 15858  002BB8  0101               	movlb	1	; () banked
 15859  002BBA  6F32               	movwf	display_num@mode& (0+255),b
 15860  002BBC  0E00               	movlw	0
 15861  002BBE  ECF0  F006         	call	_display_num
 15862  002BC2                     l13561:
 15863                           
 15864                           ;gui.c: 537: }
 15865                           ;gui.c: 539: menu[3].cur_mode = menu[3].mode;
 15866  002BC2  C01A  F01B         	movff	_menu+25,_menu+26
 15867                           
 15868                           ;gui.c: 540: }
 15869                           ;gui.c: 541: }
 15870                           ;gui.c: 543: break;
 15871  002BC6  0012               	return	
 15872  002BC8                     l13563:
 15873                           
 15874                           ;gui.c: 547: if(menu[3].mode == 0x80)
 15875  002BC8  0E80               	movlw	128
 15876  002BCA  181A               	xorwf	_menu+25,w,c
 15877  002BCC  A4D8               	btfss	status,2,c
 15878  002BCE  D005               	goto	l13567
 15879                           
 15880                           ;gui.c: 548: {
 15881                           ;gui.c: 549: menu[3].mode = 3;
 15882  002BD0  0E03               	movlw	3
 15883  002BD2  6E1A               	movwf	_menu+25,c
 15884                           
 15885                           ;gui.c: 550: flip = 1;
 15886  002BD4  0E01               	movlw	1
 15887  002BD6  6E4E               	movwf	_flip,c
 15888                           
 15889                           ;gui.c: 551: }
 15890  002BD8  D006               	goto	l13571
 15891  002BDA                     l13567:
 15892                           
 15893                           ;gui.c: 552: else if(menu[3].mode == 3)
 15894  002BDA  0E03               	movlw	3
 15895  002BDC  181A               	xorwf	_menu+25,w,c
 15896  002BDE  A4D8               	btfss	status,2,c
 15897  002BE0  D002               	goto	l13571
 15898                           
 15899                           ;gui.c: 553: {
 15900                           ;gui.c: 554: menu[3].mode = 0;
 15901  002BE2  0E00               	movlw	0
 15902  002BE4  6E1A               	movwf	_menu+25,c
 15903  002BE6                     l13571:
 15904                           
 15905                           ;gui.c: 555: }
 15906                           ;gui.c: 557: if(menu[3].cur_mode != menu[3].mode)
 15907  002BE6  501A               	movf	_menu+25,w,c
 15908  002BE8  181B               	xorwf	_menu+26,w,c
 15909  002BEA  B4D8               	btfsc	status,2,c
 15910  002BEC  0012               	return	
 15911                           
 15912                           ;gui.c: 558: {
 15913                           ;gui.c: 559: if(menu[3].mode == 0)
 15914  002BEE  501A               	movf	_menu+25,w,c
 15915  002BF0  A4D8               	btfss	status,2,c
 15916  002BF2  D054               	goto	l13613
 15917                           
 15918                           ;gui.c: 560: {
 15919                           ;gui.c: 561: display_frame_de(1,49,0);
 15920  002BF4  0E31               	movlw	49
 15921  002BF6  0101               	movlb	1	; () banked
 15922  002BF8  6F31               	movwf	display_frame_de@x& (0+255),b
 15923  002BFA  0E00               	movlw	0
 15924  002BFC  0101               	movlb	1	; () banked
 15925  002BFE  6F32               	movwf	display_frame_de@mode& (0+255),b
 15926  002C00  0E01               	movlw	1
 15927  002C02  EC09  F000         	call	_display_frame_de
 15928                           
 15929                           ;gui.c: 562: if(menu[3].parameter == 0)
 15930  002C06  501E               	movf	_menu+29,w,c
 15931  002C08  A4D8               	btfss	status,2,c
 15932  002C0A  D018               	goto	l13589
 15933                           
 15934                           ;gui.c: 563: {
 15935                           ;gui.c: 564: display_num(0,(49 + 14), menu[3].mode | 4);
 15936  002C0C  0E3F               	movlw	63
 15937  002C0E  0101               	movlb	1	; () banked
 15938  002C10  6F31               	movwf	display_num@x& (0+255),b
 15939  002C12  501A               	movf	_menu+25,w,c
 15940  002C14  0904               	iorlw	4
 15941  002C16  0101               	movlb	1	; () banked
 15942  002C18  6F32               	movwf	display_num@mode& (0+255),b
 15943  002C1A  0E00               	movlw	0
 15944  002C1C  ECF0  F006         	call	_display_num
 15945                           
 15946                           ;gui.c: 565: menu[3].value = 4;
 15947  002C20  0E04               	movlw	4
 15948  002C22  6E1D               	movwf	_menu+28,c
 15949                           
 15950                           ;gui.c: 567: hg_op.needle_len = 4;
 15951  002C24  0E04               	movlw	4
 15952  002C26  0100               	movlb	0	; () banked
 15953  002C28  6F97               	movwf	(_hg_op+23)& (0+255),b
 15954                           
 15955                           ; BSR set to: 0
 15956                           ;gui.c: 568: hg_op.cnt_target_posrst = (789);
 15957  002C2A  0E03               	movlw	3
 15958  002C2C  0100               	movlb	0	; () banked
 15959  002C2E  6FB8               	movwf	(_hg_op+56)& (0+255),b
 15960  002C30  0E15               	movlw	21
 15961  002C32  D032               	goto	L37
 15962  002C34                     l13587:
 15963                           
 15964                           ; BSR set to: 0
 15965                           ;gui.c: 569: hg_op.need_reset =1;
 15966  002C34  0E01               	movlw	1
 15967  002C36  0100               	movlb	0	; () banked
 15968  002C38  6F85               	movwf	(_hg_op+5)& (0+255),b
 15969                           
 15970                           ;gui.c: 570: }
 15971  002C3A  D030               	goto	l13613
 15972  002C3C                     l13589:
 15973                           
 15974                           ;gui.c: 571: else if(menu[3].parameter == 1)
 15975  002C3C  041E               	decf	_menu+29,w,c
 15976  002C3E  A4D8               	btfss	status,2,c
 15977  002C40  D014               	goto	l13601
 15978                           
 15979                           ;gui.c: 572: {
 15980                           ;gui.c: 573: display_num(0,(49 + 14), menu[3].mode | 6);
 15981  002C42  0E3F               	movlw	63
 15982  002C44  0101               	movlb	1	; () banked
 15983  002C46  6F31               	movwf	display_num@x& (0+255),b
 15984  002C48  501A               	movf	_menu+25,w,c
 15985  002C4A  0906               	iorlw	6
 15986  002C4C  0101               	movlb	1	; () banked
 15987  002C4E  6F32               	movwf	display_num@mode& (0+255),b
 15988  002C50  0E00               	movlw	0
 15989  002C52  ECF0  F006         	call	_display_num
 15990                           
 15991                           ;gui.c: 574: menu[3].value = 6;
 15992  002C56  0E06               	movlw	6
 15993  002C58  6E1D               	movwf	_menu+28,c
 15994                           
 15995                           ;gui.c: 576: hg_op.needle_len = 6;
 15996  002C5A  0E06               	movlw	6
 15997  002C5C  0100               	movlb	0	; () banked
 15998  002C5E  6F97               	movwf	(_hg_op+23)& (0+255),b
 15999                           
 16000                           ; BSR set to: 0
 16001                           ;gui.c: 578: hg_op.cnt_target_posrst = (614 );
 16002  002C60  0E02               	movlw	2
 16003  002C62  0100               	movlb	0	; () banked
 16004  002C64  6FB8               	movwf	(_hg_op+56)& (0+255),b
 16005  002C66  0E66               	movlw	102
 16006  002C68  D017               	goto	L37
 16007  002C6A                     l13601:
 16008                           
 16009                           ;gui.c: 584: else if(menu[3].parameter == 2)
 16010  002C6A  0E02               	movlw	2
 16011  002C6C  181E               	xorwf	_menu+29,w,c
 16012  002C6E  A4D8               	btfss	status,2,c
 16013  002C70  D015               	goto	l13613
 16014                           
 16015                           ;gui.c: 585: {
 16016                           ;gui.c: 586: display_num(0,(49 + 14), menu[3].mode | 13);
 16017  002C72  0E3F               	movlw	63
 16018  002C74  0101               	movlb	1	; () banked
 16019  002C76  6F31               	movwf	display_num@x& (0+255),b
 16020  002C78  501A               	movf	_menu+25,w,c
 16021  002C7A  090D               	iorlw	13
 16022  002C7C  0101               	movlb	1	; () banked
 16023  002C7E  6F32               	movwf	display_num@mode& (0+255),b
 16024  002C80  0E00               	movlw	0
 16025  002C82  ECF0  F006         	call	_display_num
 16026                           
 16027                           ;gui.c: 587: menu[3].value = 13;
 16028  002C86  0E0D               	movlw	13
 16029  002C88  6E1D               	movwf	_menu+28,c
 16030                           
 16031                           ;gui.c: 589: hg_op.needle_len = 13;
 16032  002C8A  0E0D               	movlw	13
 16033  002C8C  0100               	movlb	0	; () banked
 16034  002C8E  6F97               	movwf	(_hg_op+23)& (0+255),b
 16035                           
 16036                           ; BSR set to: 0
 16037                           ;gui.c: 591: hg_op.cnt_target_posrst = (1);
 16038  002C90  0E00               	movlw	0
 16039  002C92  0100               	movlb	0	; () banked
 16040  002C94  6FB8               	movwf	(_hg_op+56)& (0+255),b
 16041  002C96  0E01               	movlw	1
 16042  002C98                     L37:
 16043  002C98  6FB7               	movwf	(_hg_op+55)& (0+255),b
 16044  002C9A  D7CC               	goto	l13587
 16045  002C9C                     l13613:
 16046                           
 16047                           ;gui.c: 599: }
 16048                           ;gui.c: 601: }
 16049                           ;gui.c: 602: menu[3].cur_mode = menu[3].mode;
 16050  002C9C  C01A  F01B         	movff	_menu+25,_menu+26
 16051                           
 16052                           ;gui.c: 610: }
 16053                           
 16054                           ;gui.c: 605: }
 16055                           ;gui.c: 609: break;
 16056  002CA0  0012               	return	
 16057  002CA2                     l13617:
 16058  002CA2  0101               	movlb	1	; () banked
 16059  002CA4  5138               	movf	menu3_MsgHandlle@key& (0+255),w,b
 16060                           
 16061                           ; Switch size 1, requested type "space"
 16062                           ; Number of cases is 3, Range of values is 241 to 243
 16063                           ; switch strategies available:
 16064                           ; Name         Instructions Cycles
 16065                           ; simple_byte           10     6 (average)
 16066                           ;	Chosen strategy is simple_byte
 16067  002CA6  0AF1               	xorlw	241	; case 241
 16068  002CA8  B4D8               	btfsc	status,2,c
 16069  002CAA  D6F5               	goto	l13499
 16070  002CAC  0A03               	xorlw	3	; case 242
 16071  002CAE  B4D8               	btfsc	status,2,c
 16072  002CB0  D73F               	goto	l13531
 16073  002CB2  0A01               	xorlw	1	; case 243
 16074  002CB4  A4D8               	btfss	status,2,c
 16075  002CB6  0012               	return	
 16076  002CB8  D787               	goto	l13563
 16077  002CBA                     __end_of_menu3_MsgHandlle:
 16078                           	opt stack 0
 16079                           tblptru	equ	0xFF8
 16080                           tblptrh	equ	0xFF7
 16081                           tblptrl	equ	0xFF6
 16082                           tablat	equ	0xFF5
 16083                           prodh	equ	0xFF4
 16084                           prodl	equ	0xFF3
 16085                           intcon	equ	0xFF2
 16086                           intcon3	equ	0xFF0
 16087                           postinc0	equ	0xFEE
 16088                           wreg	equ	0xFE8
 16089                           postdec1	equ	0xFE5
 16090                           fsr1h	equ	0xFE2
 16091                           fsr1l	equ	0xFE1
 16092                           postinc2	equ	0xFDE
 16093                           fsr2h	equ	0xFDA
 16094                           fsr2l	equ	0xFD9
 16095                           status	equ	0xFD8
 16096                           
 16097 ;; *************** function _display_frame_de *****************
 16098 ;; Defined at:
 16099 ;;		line 2580 in file "../Oled.c"
 16100 ;; Parameters:    Size  Location     Type
 16101 ;;  y               1    wreg     unsigned char 
 16102 ;;  x               1    9[BANK1 ] unsigned char 
 16103 ;;  mode            1   10[BANK1 ] unsigned char 
 16104 ;; Auto vars:     Size  Location     Type
 16105 ;;  y               1   12[BANK1 ] unsigned char 
 16106 ;;  temp            1   13[BANK1 ] unsigned char 
 16107 ;;  tori            1   11[BANK1 ] unsigned char 
 16108 ;; Return value:  Size  Location     Type
 16109 ;;                  1    wreg      unsigned char 
 16110 ;; Registers used:
 16111 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 16112 ;; Tracked objects:
 16113 ;;		On entry : 0/0
 16114 ;;		On exit  : 0/0
 16115 ;;		Unchanged: 0/0
 16116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16117 ;;      Params:         0       0       2       0       0       0       0
 16118 ;;      Locals:         0       0       3       0       0       0       0
 16119 ;;      Temps:          0       0       0       0       0       0       0
 16120 ;;      Totals:         0       0       5       0       0       0       0
 16121 ;;Total ram usage:        5 bytes
 16122 ;; Hardware stack levels used:    1
 16123 ;; Hardware stack levels required when called:    6
 16124 ;; This function calls:
 16125 ;;		_ee_WriteBytes
 16126 ;;		_setYX_LCD
 16127 ;; This function is called by:
 16128 ;;		_initial_ui_setting
 16129 ;;		_menu3_MsgHandlle
 16130 ;;		_menu4_MsgHandlle
 16131 ;;		_check_ui_status
 16132 ;; This function uses a non-reentrant model
 16133 ;;
 16134                           
 16135                           	psect	text37
 16136  000012                     __ptext37:
 16137                           	opt stack 0
 16138  000012                     _display_frame_de:
 16139                           	opt stack 21
 16140                           
 16141                           ;incstack = 0
 16142                           ;display_frame_de@y stored from wreg
 16143  000012  0101               	movlb	1	; () banked
 16144  000014  6F34               	movwf	display_frame_de@y& (0+255),b
 16145                           
 16146                           ;Oled.c: 2582: uint8_t temp =0;
 16147  000016  0E00               	movlw	0
 16148  000018  0101               	movlb	1	; () banked
 16149  00001A  6F35               	movwf	display_frame_de@temp& (0+255),b
 16150                           
 16151                           ;Oled.c: 2583: uint8_t tori =0;
 16152  00001C  0E00               	movlw	0
 16153  00001E  0101               	movlb	1	; () banked
 16154  000020  6F33               	movwf	display_frame_de@tori& (0+255),b
 16155                           
 16156                           ; BSR set to: 1
 16157                           ;Oled.c: 2585: if (y == 1)
 16158  000022  0101               	movlb	1	; () banked
 16159  000024  0534               	decf	display_frame_de@y& (0+255),w,b
 16160  000026  A4D8               	btfss	status,2,c
 16161  000028  D14A               	goto	l12011
 16162                           
 16163                           ; BSR set to: 1
 16164                           ;Oled.c: 2586: {
 16165                           ;Oled.c: 2587: if(mode == 0)
 16166  00002A  0101               	movlb	1	; () banked
 16167  00002C  5132               	movf	display_frame_de@mode& (0+255),w,b
 16168  00002E  0101               	movlb	1	; () banked
 16169  000030  A4D8               	btfss	status,2,c
 16170  000032  D080               	goto	l11921
 16171                           
 16172                           ; BSR set to: 1
 16173                           ;Oled.c: 2588: {
 16174                           ;Oled.c: 2589: setYX_LCD(2,x);
 16175  000034  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16176  000038  0E02               	movlw	2
 16177  00003A  EC8E  F024         	call	_setYX_LCD
 16178                           
 16179                           ;Oled.c: 2590: for(ms=0;ms<48;ms++)
 16180  00003E  0E00               	movlw	0
 16181  000040  6E69               	movwf	_ms,c
 16182  000042                     l11877:
 16183  000042  0E2F               	movlw	47
 16184  000044  6469               	cpfsgt	_ms,c
 16185  000046  D001               	goto	l11881
 16186  000048  D01D               	goto	l11889
 16187  00004A                     l11881:
 16188                           
 16189                           ;Oled.c: 2591: {
 16190                           ;Oled.c: 2592: temp = ptnd_frame[0][ms];
 16191  00004A  5069               	movf	_ms,w,c
 16192  00004C  0D01               	mullw	1
 16193  00004E  0E15               	movlw	low _ptnd_frame
 16194  000050  24F3               	addwf	prodl,w,c
 16195  000052  6EF6               	movwf	tblptrl,c
 16196  000054  0E74               	movlw	high _ptnd_frame
 16197  000056  20F4               	addwfc	prodh,w,c
 16198  000058  6EF7               	movwf	tblptrh,c
 16199  00005A                     	if	0	;There are less than 3 active tblptr bytes
 16200  00005A                     	endif
 16201  00005A  0008               	tblrd		*
 16202  00005C  CFF5 F135          	movff	tablat,display_frame_de@temp
 16203                           
 16204                           ;Oled.c: 2593: ee_WriteBytes(&temp, 0x40, 1);
 16205  000060  0E35               	movlw	low display_frame_de@temp
 16206  000062  0101               	movlb	1	; () banked
 16207  000064  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16208  000066  0E01               	movlw	high display_frame_de@temp
 16209  000068  0101               	movlb	1	; () banked
 16210  00006A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16211  00006C  0E40               	movlw	64
 16212  00006E  0101               	movlb	1	; () banked
 16213  000070  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16214  000072  0E00               	movlw	0
 16215  000074  0101               	movlb	1	; () banked
 16216  000076  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16217  000078  0E01               	movlw	1
 16218  00007A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16219  00007C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16220  000080  2A69               	incf	_ms,f,c
 16221  000082  D7DF               	goto	l11877
 16222  000084                     l11889:
 16223                           
 16224                           ;Oled.c: 2594: }
 16225                           ;Oled.c: 2596: setYX_LCD(3,x);
 16226  000084  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16227  000088  0E03               	movlw	3
 16228  00008A  EC8E  F024         	call	_setYX_LCD
 16229                           
 16230                           ;Oled.c: 2597: for(ms=0;ms<48;ms++)
 16231  00008E  0E00               	movlw	0
 16232  000090  6E69               	movwf	_ms,c
 16233  000092                     l11893:
 16234  000092  0E2F               	movlw	47
 16235  000094  6469               	cpfsgt	_ms,c
 16236  000096  D001               	goto	l11897
 16237  000098  D021               	goto	l11905
 16238  00009A                     l11897:
 16239                           
 16240                           ;Oled.c: 2598: {
 16241                           ;Oled.c: 2599: temp = ptnd_frame[1][ms];
 16242  00009A  5069               	movf	_ms,w,c
 16243  00009C  0D01               	mullw	1
 16244  00009E  0E30               	movlw	48
 16245  0000A0  26F3               	addwf	prodl,f,c
 16246  0000A2  0E00               	movlw	0
 16247  0000A4  22F4               	addwfc	prodh,f,c
 16248  0000A6  0E15               	movlw	low _ptnd_frame
 16249  0000A8  24F3               	addwf	prodl,w,c
 16250  0000AA  6EF6               	movwf	tblptrl,c
 16251  0000AC  0E74               	movlw	high _ptnd_frame
 16252  0000AE  20F4               	addwfc	prodh,w,c
 16253  0000B0  6EF7               	movwf	tblptrh,c
 16254  0000B2                     	if	0	;There are less than 3 active tblptr bytes
 16255  0000B2                     	endif
 16256  0000B2  0008               	tblrd		*
 16257  0000B4  CFF5 F135          	movff	tablat,display_frame_de@temp
 16258                           
 16259                           ;Oled.c: 2600: ee_WriteBytes(&temp, 0x40, 1);
 16260  0000B8  0E35               	movlw	low display_frame_de@temp
 16261  0000BA  0101               	movlb	1	; () banked
 16262  0000BC  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16263  0000BE  0E01               	movlw	high display_frame_de@temp
 16264  0000C0  0101               	movlb	1	; () banked
 16265  0000C2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16266  0000C4  0E40               	movlw	64
 16267  0000C6  0101               	movlb	1	; () banked
 16268  0000C8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16269  0000CA  0E00               	movlw	0
 16270  0000CC  0101               	movlb	1	; () banked
 16271  0000CE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16272  0000D0  0E01               	movlw	1
 16273  0000D2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16274  0000D4  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16275  0000D8  2A69               	incf	_ms,f,c
 16276  0000DA  D7DB               	goto	l11893
 16277  0000DC                     l11905:
 16278                           
 16279                           ;Oled.c: 2601: }
 16280                           ;Oled.c: 2603: setYX_LCD(4,x);
 16281  0000DC  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16282  0000E0  0E04               	movlw	4
 16283  0000E2  EC8E  F024         	call	_setYX_LCD
 16284                           
 16285                           ;Oled.c: 2604: for(ms=0;ms<48;ms++)
 16286  0000E6  0E00               	movlw	0
 16287  0000E8  6E69               	movwf	_ms,c
 16288  0000EA                     l11909:
 16289  0000EA  0E2F               	movlw	47
 16290  0000EC  6469               	cpfsgt	_ms,c
 16291  0000EE  D001               	goto	l11913
 16292  0000F0  0012               	return	
 16293  0000F2                     l11913:
 16294                           
 16295                           ;Oled.c: 2605: {
 16296                           ;Oled.c: 2606: temp = ptnd_frame[2][ms];
 16297  0000F2  5069               	movf	_ms,w,c
 16298  0000F4  0D01               	mullw	1
 16299  0000F6  0E60               	movlw	96
 16300  0000F8  26F3               	addwf	prodl,f,c
 16301  0000FA  0E00               	movlw	0
 16302  0000FC  22F4               	addwfc	prodh,f,c
 16303  0000FE  0E15               	movlw	low _ptnd_frame
 16304  000100  24F3               	addwf	prodl,w,c
 16305  000102  6EF6               	movwf	tblptrl,c
 16306  000104  0E74               	movlw	high _ptnd_frame
 16307  000106  20F4               	addwfc	prodh,w,c
 16308  000108  6EF7               	movwf	tblptrh,c
 16309  00010A                     	if	0	;There are less than 3 active tblptr bytes
 16310  00010A                     	endif
 16311  00010A  0008               	tblrd		*
 16312  00010C  CFF5 F135          	movff	tablat,display_frame_de@temp
 16313                           
 16314                           ;Oled.c: 2607: ee_WriteBytes(&temp, 0x40, 1);
 16315  000110  0E35               	movlw	low display_frame_de@temp
 16316  000112  0101               	movlb	1	; () banked
 16317  000114  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16318  000116  0E01               	movlw	high display_frame_de@temp
 16319  000118  0101               	movlb	1	; () banked
 16320  00011A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16321  00011C  0E40               	movlw	64
 16322  00011E  0101               	movlb	1	; () banked
 16323  000120  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16324  000122  0E00               	movlw	0
 16325  000124  0101               	movlb	1	; () banked
 16326  000126  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16327  000128  0E01               	movlw	1
 16328  00012A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16329  00012C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16330  000130  2A69               	incf	_ms,f,c
 16331  000132  D7DB               	goto	l11909
 16332  000134                     l11921:
 16333                           
 16334                           ;Oled.c: 2610: else if(mode == 0x80)
 16335  000134  0E80               	movlw	128
 16336  000136  0101               	movlb	1	; () banked
 16337  000138  1932               	xorwf	display_frame_de@mode& (0+255),w,b
 16338  00013A  A4D8               	btfss	status,2,c
 16339  00013C  0012               	return	
 16340                           
 16341                           ; BSR set to: 1
 16342                           ;Oled.c: 2611: {
 16343                           ;Oled.c: 2613: setYX_LCD(2,x);
 16344  00013E  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16345  000142  0E02               	movlw	2
 16346  000144  EC8E  F024         	call	_setYX_LCD
 16347                           
 16348                           ;Oled.c: 2614: for(ms=0;ms<48;ms++)
 16349  000148  0E00               	movlw	0
 16350  00014A  6E69               	movwf	_ms,c
 16351  00014C                     l11927:
 16352  00014C  0E2F               	movlw	47
 16353  00014E  6469               	cpfsgt	_ms,c
 16354  000150  D001               	goto	l11931
 16355  000152  D036               	goto	l11955
 16356  000154                     l11931:
 16357                           
 16358                           ;Oled.c: 2615: {
 16359                           ;Oled.c: 2616: temp = ptnd_frame[0][ms];
 16360  000154  5069               	movf	_ms,w,c
 16361  000156  0D01               	mullw	1
 16362  000158  0E15               	movlw	low _ptnd_frame
 16363  00015A  24F3               	addwf	prodl,w,c
 16364  00015C  6EF6               	movwf	tblptrl,c
 16365  00015E  0E74               	movlw	high _ptnd_frame
 16366  000160  20F4               	addwfc	prodh,w,c
 16367  000162  6EF7               	movwf	tblptrh,c
 16368  000164                     	if	0	;There are less than 3 active tblptr bytes
 16369  000164                     	endif
 16370  000164  0008               	tblrd		*
 16371  000166  CFF5 F135          	movff	tablat,display_frame_de@temp
 16372                           
 16373                           ;Oled.c: 2617: if(ms ==0 || ms == (48 -1))
 16374  00016A  5069               	movf	_ms,w,c
 16375  00016C  B4D8               	btfsc	status,2,c
 16376  00016E  D004               	goto	l11937
 16377  000170  0E2F               	movlw	47
 16378  000172  1869               	xorwf	_ms,w,c
 16379  000174  A4D8               	btfss	status,2,c
 16380  000176  D002               	goto	l11939
 16381  000178                     l11937:
 16382                           
 16383                           ;Oled.c: 2618: {
 16384                           ;Oled.c: 2619: temp =0x0f;
 16385  000178  0E0F               	movlw	15
 16386  00017A  D008               	goto	L38
 16387  00017C                     l11939:
 16388                           
 16389                           ;Oled.c: 2621: else if(ms ==1 || ms == (48 -2))
 16390  00017C  0469               	decf	_ms,w,c
 16391  00017E  B4D8               	btfsc	status,2,c
 16392  000180  D004               	goto	l11943
 16393  000182  0E2E               	movlw	46
 16394  000184  1869               	xorwf	_ms,w,c
 16395  000186  A4D8               	btfss	status,2,c
 16396  000188  D004               	goto	l11945
 16397  00018A                     l11943:
 16398                           
 16399                           ;Oled.c: 2622: {
 16400                           ;Oled.c: 2623: temp = 0x1f;
 16401  00018A  0E1F               	movlw	31
 16402  00018C                     L38:
 16403  00018C  0101               	movlb	1	; () banked
 16404  00018E  6F35               	movwf	display_frame_de@temp& (0+255),b
 16405                           
 16406                           ;Oled.c: 2624: }
 16407  000190  D005               	goto	l11949
 16408  000192                     l11945:
 16409                           
 16410                           ;Oled.c: 2625: else
 16411                           ;Oled.c: 2626: {
 16412                           ;Oled.c: 2628: temp = ~temp;
 16413  000192  0101               	movlb	1	; () banked
 16414  000194  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16415                           
 16416                           ; BSR set to: 1
 16417                           ;Oled.c: 2629: temp &= 0x3f;
 16418  000196  0E3F               	movlw	63
 16419  000198  0101               	movlb	1	; () banked
 16420  00019A  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16421  00019C                     l11949:
 16422                           
 16423                           ; BSR set to: 1
 16424                           ;Oled.c: 2630: }
 16425                           ;Oled.c: 2631: ee_WriteBytes(&temp, 0x40, 1);
 16426  00019C  0E35               	movlw	low display_frame_de@temp
 16427  00019E  0101               	movlb	1	; () banked
 16428  0001A0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16429  0001A2  0E01               	movlw	high display_frame_de@temp
 16430  0001A4  0101               	movlb	1	; () banked
 16431  0001A6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16432  0001A8  0E40               	movlw	64
 16433  0001AA  0101               	movlb	1	; () banked
 16434  0001AC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16435  0001AE  0E00               	movlw	0
 16436  0001B0  0101               	movlb	1	; () banked
 16437  0001B2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16438  0001B4  0E01               	movlw	1
 16439  0001B6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16440  0001B8  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16441  0001BC  2A69               	incf	_ms,f,c
 16442  0001BE  D7C6               	goto	l11927
 16443  0001C0                     l11955:
 16444                           
 16445                           ;Oled.c: 2632: }
 16446                           ;Oled.c: 2634: setYX_LCD(3,x);
 16447  0001C0  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16448  0001C4  0E03               	movlw	3
 16449  0001C6  EC8E  F024         	call	_setYX_LCD
 16450                           
 16451                           ;Oled.c: 2635: for(ms=0;ms<48;ms++)
 16452  0001CA  0E00               	movlw	0
 16453  0001CC  6E69               	movwf	_ms,c
 16454  0001CE                     l11959:
 16455  0001CE  0E2F               	movlw	47
 16456  0001D0  6469               	cpfsgt	_ms,c
 16457  0001D2  D001               	goto	l11963
 16458  0001D4  D02D               	goto	l11977
 16459  0001D6                     l11963:
 16460                           
 16461                           ;Oled.c: 2636: {
 16462                           ;Oled.c: 2637: temp = ptnd_frame[1][ms];
 16463  0001D6  5069               	movf	_ms,w,c
 16464  0001D8  0D01               	mullw	1
 16465  0001DA  0E30               	movlw	48
 16466  0001DC  26F3               	addwf	prodl,f,c
 16467  0001DE  0E00               	movlw	0
 16468  0001E0  22F4               	addwfc	prodh,f,c
 16469  0001E2  0E15               	movlw	low _ptnd_frame
 16470  0001E4  24F3               	addwf	prodl,w,c
 16471  0001E6  6EF6               	movwf	tblptrl,c
 16472  0001E8  0E74               	movlw	high _ptnd_frame
 16473  0001EA  20F4               	addwfc	prodh,w,c
 16474  0001EC  6EF7               	movwf	tblptrh,c
 16475  0001EE                     	if	0	;There are less than 3 active tblptr bytes
 16476  0001EE                     	endif
 16477  0001EE  0008               	tblrd		*
 16478  0001F0  CFF5 F135          	movff	tablat,display_frame_de@temp
 16479                           
 16480                           ;Oled.c: 2639: if(ms == 0 || ms == (48 - 1))
 16481  0001F4  5069               	movf	_ms,w,c
 16482  0001F6  B4D8               	btfsc	status,2,c
 16483  0001F8  D004               	goto	l1136
 16484  0001FA  0E2F               	movlw	47
 16485  0001FC  1869               	xorwf	_ms,w,c
 16486  0001FE  A4D8               	btfss	status,2,c
 16487  000200  D003               	goto	l11969
 16488  000202                     l1136:
 16489                           
 16490                           ;Oled.c: 2640: {
 16491                           ;Oled.c: 2641: temp = 0xff;
 16492  000202  0101               	movlb	1	; () banked
 16493  000204  6935               	setf	display_frame_de@temp& (0+255),b
 16494                           
 16495                           ;Oled.c: 2642: }
 16496  000206  D002               	goto	l11971
 16497  000208                     l11969:
 16498                           
 16499                           ;Oled.c: 2643: else
 16500                           ;Oled.c: 2644: {
 16501                           ;Oled.c: 2645: temp = ~temp;
 16502  000208  0101               	movlb	1	; () banked
 16503  00020A  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16504  00020C                     l11971:
 16505                           
 16506                           ; BSR set to: 1
 16507                           ;Oled.c: 2646: }
 16508                           ;Oled.c: 2647: ee_WriteBytes(&temp, 0x40, 1);
 16509  00020C  0E35               	movlw	low display_frame_de@temp
 16510  00020E  0101               	movlb	1	; () banked
 16511  000210  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16512  000212  0E01               	movlw	high display_frame_de@temp
 16513  000214  0101               	movlb	1	; () banked
 16514  000216  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16515  000218  0E40               	movlw	64
 16516  00021A  0101               	movlb	1	; () banked
 16517  00021C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16518  00021E  0E00               	movlw	0
 16519  000220  0101               	movlb	1	; () banked
 16520  000222  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16521  000224  0E01               	movlw	1
 16522  000226  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16523  000228  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16524  00022C  2A69               	incf	_ms,f,c
 16525  00022E  D7CF               	goto	l11959
 16526  000230                     l11977:
 16527                           
 16528                           ;Oled.c: 2648: }
 16529                           ;Oled.c: 2650: setYX_LCD(4,x);
 16530  000230  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16531  000234  0E04               	movlw	4
 16532  000236  EC8E  F024         	call	_setYX_LCD
 16533                           
 16534                           ;Oled.c: 2651: for(ms=0;ms<48;ms++)
 16535  00023A  0E00               	movlw	0
 16536  00023C  6E69               	movwf	_ms,c
 16537  00023E                     l11981:
 16538  00023E  0E2F               	movlw	47
 16539  000240  6469               	cpfsgt	_ms,c
 16540  000242  D001               	goto	l11985
 16541  000244  0012               	return	
 16542  000246                     l11985:
 16543                           
 16544                           ;Oled.c: 2652: {
 16545                           ;Oled.c: 2653: temp = ptnd_frame[2][ms];
 16546  000246  5069               	movf	_ms,w,c
 16547  000248  0D01               	mullw	1
 16548  00024A  0E60               	movlw	96
 16549  00024C  26F3               	addwf	prodl,f,c
 16550  00024E  0E00               	movlw	0
 16551  000250  22F4               	addwfc	prodh,f,c
 16552  000252  0E15               	movlw	low _ptnd_frame
 16553  000254  24F3               	addwf	prodl,w,c
 16554  000256  6EF6               	movwf	tblptrl,c
 16555  000258  0E74               	movlw	high _ptnd_frame
 16556  00025A  20F4               	addwfc	prodh,w,c
 16557  00025C  6EF7               	movwf	tblptrh,c
 16558  00025E                     	if	0	;There are less than 3 active tblptr bytes
 16559  00025E                     	endif
 16560  00025E  0008               	tblrd		*
 16561  000260  CFF5 F135          	movff	tablat,display_frame_de@temp
 16562                           
 16563                           ;Oled.c: 2654: if(ms ==0 || ms == (48 -1) )
 16564  000264  5069               	movf	_ms,w,c
 16565  000266  B4D8               	btfsc	status,2,c
 16566  000268  D004               	goto	l11991
 16567  00026A  0E2F               	movlw	47
 16568  00026C  1869               	xorwf	_ms,w,c
 16569  00026E  A4D8               	btfss	status,2,c
 16570  000270  D002               	goto	l11993
 16571  000272                     l11991:
 16572                           
 16573                           ;Oled.c: 2655: {
 16574                           ;Oled.c: 2656: temp =0xe0;
 16575  000272  0EE0               	movlw	224
 16576  000274  D008               	goto	L39
 16577  000276                     l11993:
 16578                           
 16579                           ;Oled.c: 2658: else if(ms ==1 || ms == (48 -2))
 16580  000276  0469               	decf	_ms,w,c
 16581  000278  B4D8               	btfsc	status,2,c
 16582  00027A  D004               	goto	l11997
 16583  00027C  0E2E               	movlw	46
 16584  00027E  1869               	xorwf	_ms,w,c
 16585  000280  A4D8               	btfss	status,2,c
 16586  000282  D004               	goto	l11999
 16587  000284                     l11997:
 16588                           
 16589                           ;Oled.c: 2659: {
 16590                           ;Oled.c: 2660: temp = 0xf0;
 16591  000284  0EF0               	movlw	240
 16592  000286                     L39:
 16593  000286  0101               	movlb	1	; () banked
 16594  000288  6F35               	movwf	display_frame_de@temp& (0+255),b
 16595                           
 16596                           ;Oled.c: 2661: }
 16597  00028A  D007               	goto	l12005
 16598  00028C                     l11999:
 16599                           
 16600                           ;Oled.c: 2662: else
 16601                           ;Oled.c: 2663: {
 16602                           ;Oled.c: 2665: temp = ~temp;
 16603  00028C  0101               	movlb	1	; () banked
 16604  00028E  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16605                           
 16606                           ; BSR set to: 1
 16607                           ;Oled.c: 2666: temp &= 0xf0;
 16608  000290  0EF0               	movlw	240
 16609  000292  0101               	movlb	1	; () banked
 16610  000294  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16611                           
 16612                           ; BSR set to: 1
 16613                           ;Oled.c: 2667: temp |= 0x10;
 16614  000296  0101               	movlb	1	; () banked
 16615  000298  8935               	bsf	display_frame_de@temp& (0+255),4,b
 16616  00029A                     l12005:
 16617                           
 16618                           ; BSR set to: 1
 16619                           ;Oled.c: 2668: }
 16620                           ;Oled.c: 2669: ee_WriteBytes(&temp, 0x40, 1);
 16621  00029A  0E35               	movlw	low display_frame_de@temp
 16622  00029C  0101               	movlb	1	; () banked
 16623  00029E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16624  0002A0  0E01               	movlw	high display_frame_de@temp
 16625  0002A2  0101               	movlb	1	; () banked
 16626  0002A4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16627  0002A6  0E40               	movlw	64
 16628  0002A8  0101               	movlb	1	; () banked
 16629  0002AA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16630  0002AC  0E00               	movlw	0
 16631  0002AE  0101               	movlb	1	; () banked
 16632  0002B0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16633  0002B2  0E01               	movlw	1
 16634  0002B4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16635  0002B6  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16636  0002BA  2A69               	incf	_ms,f,c
 16637  0002BC  D7C0               	goto	l11981
 16638  0002BE                     l12011:
 16639                           
 16640                           ;Oled.c: 2674: else if(y == 2)
 16641  0002BE  0E02               	movlw	2
 16642  0002C0  0101               	movlb	1	; () banked
 16643  0002C2  1934               	xorwf	display_frame_de@y& (0+255),w,b
 16644  0002C4  A4D8               	btfss	status,2,c
 16645  0002C6  0012               	return	
 16646                           
 16647                           ; BSR set to: 1
 16648                           ;Oled.c: 2675: {
 16649                           ;Oled.c: 2676: if(mode == 0)
 16650  0002C8  0101               	movlb	1	; () banked
 16651  0002CA  5132               	movf	display_frame_de@mode& (0+255),w,b
 16652  0002CC  0101               	movlb	1	; () banked
 16653  0002CE  A4D8               	btfss	status,2,c
 16654  0002D0  D080               	goto	l12063
 16655                           
 16656                           ; BSR set to: 1
 16657                           ;Oled.c: 2677: {
 16658                           ;Oled.c: 2679: setYX_LCD(2,x);
 16659  0002D2  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16660  0002D6  0E02               	movlw	2
 16661  0002D8  EC8E  F024         	call	_setYX_LCD
 16662                           
 16663                           ;Oled.c: 2680: for(ms=0;ms<48;ms++)
 16664  0002DC  0E00               	movlw	0
 16665  0002DE  6E69               	movwf	_ms,c
 16666  0002E0                     l12019:
 16667  0002E0  0E2F               	movlw	47
 16668  0002E2  6469               	cpfsgt	_ms,c
 16669  0002E4  D001               	goto	l12023
 16670  0002E6  D01D               	goto	l12031
 16671  0002E8                     l12023:
 16672                           
 16673                           ;Oled.c: 2681: {
 16674                           ;Oled.c: 2682: temp = ptne_frame[0][ms];
 16675  0002E8  5069               	movf	_ms,w,c
 16676  0002EA  0D01               	mullw	1
 16677  0002EC  0E85               	movlw	low _ptne_frame
 16678  0002EE  24F3               	addwf	prodl,w,c
 16679  0002F0  6EF6               	movwf	tblptrl,c
 16680  0002F2  0E73               	movlw	high _ptne_frame
 16681  0002F4  20F4               	addwfc	prodh,w,c
 16682  0002F6  6EF7               	movwf	tblptrh,c
 16683  0002F8                     	if	0	;There are less than 3 active tblptr bytes
 16684  0002F8                     	endif
 16685  0002F8  0008               	tblrd		*
 16686  0002FA  CFF5 F135          	movff	tablat,display_frame_de@temp
 16687                           
 16688                           ;Oled.c: 2683: ee_WriteBytes(&temp, 0x40, 1);
 16689  0002FE  0E35               	movlw	low display_frame_de@temp
 16690  000300  0101               	movlb	1	; () banked
 16691  000302  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16692  000304  0E01               	movlw	high display_frame_de@temp
 16693  000306  0101               	movlb	1	; () banked
 16694  000308  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16695  00030A  0E40               	movlw	64
 16696  00030C  0101               	movlb	1	; () banked
 16697  00030E  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16698  000310  0E00               	movlw	0
 16699  000312  0101               	movlb	1	; () banked
 16700  000314  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16701  000316  0E01               	movlw	1
 16702  000318  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16703  00031A  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16704  00031E  2A69               	incf	_ms,f,c
 16705  000320  D7DF               	goto	l12019
 16706  000322                     l12031:
 16707                           
 16708                           ;Oled.c: 2684: }
 16709                           ;Oled.c: 2686: setYX_LCD(3,x);
 16710  000322  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16711  000326  0E03               	movlw	3
 16712  000328  EC8E  F024         	call	_setYX_LCD
 16713                           
 16714                           ;Oled.c: 2687: for(ms=0;ms<48;ms++)
 16715  00032C  0E00               	movlw	0
 16716  00032E  6E69               	movwf	_ms,c
 16717  000330                     l12035:
 16718  000330  0E2F               	movlw	47
 16719  000332  6469               	cpfsgt	_ms,c
 16720  000334  D001               	goto	l12039
 16721  000336  D021               	goto	l12047
 16722  000338                     l12039:
 16723                           
 16724                           ;Oled.c: 2688: {
 16725                           ;Oled.c: 2689: temp = ptne_frame[1][ms];
 16726  000338  5069               	movf	_ms,w,c
 16727  00033A  0D01               	mullw	1
 16728  00033C  0E30               	movlw	48
 16729  00033E  26F3               	addwf	prodl,f,c
 16730  000340  0E00               	movlw	0
 16731  000342  22F4               	addwfc	prodh,f,c
 16732  000344  0E85               	movlw	low _ptne_frame
 16733  000346  24F3               	addwf	prodl,w,c
 16734  000348  6EF6               	movwf	tblptrl,c
 16735  00034A  0E73               	movlw	high _ptne_frame
 16736  00034C  20F4               	addwfc	prodh,w,c
 16737  00034E  6EF7               	movwf	tblptrh,c
 16738  000350                     	if	0	;There are less than 3 active tblptr bytes
 16739  000350                     	endif
 16740  000350  0008               	tblrd		*
 16741  000352  CFF5 F135          	movff	tablat,display_frame_de@temp
 16742                           
 16743                           ;Oled.c: 2690: ee_WriteBytes(&temp, 0x40, 1);
 16744  000356  0E35               	movlw	low display_frame_de@temp
 16745  000358  0101               	movlb	1	; () banked
 16746  00035A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16747  00035C  0E01               	movlw	high display_frame_de@temp
 16748  00035E  0101               	movlb	1	; () banked
 16749  000360  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16750  000362  0E40               	movlw	64
 16751  000364  0101               	movlb	1	; () banked
 16752  000366  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16753  000368  0E00               	movlw	0
 16754  00036A  0101               	movlb	1	; () banked
 16755  00036C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16756  00036E  0E01               	movlw	1
 16757  000370  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16758  000372  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16759  000376  2A69               	incf	_ms,f,c
 16760  000378  D7DB               	goto	l12035
 16761  00037A                     l12047:
 16762                           
 16763                           ;Oled.c: 2691: }
 16764                           ;Oled.c: 2693: setYX_LCD(4,x);
 16765  00037A  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16766  00037E  0E04               	movlw	4
 16767  000380  EC8E  F024         	call	_setYX_LCD
 16768                           
 16769                           ;Oled.c: 2694: for(ms=0;ms<48;ms++)
 16770  000384  0E00               	movlw	0
 16771  000386  6E69               	movwf	_ms,c
 16772  000388                     l12051:
 16773  000388  0E2F               	movlw	47
 16774  00038A  6469               	cpfsgt	_ms,c
 16775  00038C  D001               	goto	l12055
 16776  00038E  0012               	return	
 16777  000390                     l12055:
 16778                           
 16779                           ;Oled.c: 2695: {
 16780                           ;Oled.c: 2696: temp = ptne_frame[2][ms];
 16781  000390  5069               	movf	_ms,w,c
 16782  000392  0D01               	mullw	1
 16783  000394  0E60               	movlw	96
 16784  000396  26F3               	addwf	prodl,f,c
 16785  000398  0E00               	movlw	0
 16786  00039A  22F4               	addwfc	prodh,f,c
 16787  00039C  0E85               	movlw	low _ptne_frame
 16788  00039E  24F3               	addwf	prodl,w,c
 16789  0003A0  6EF6               	movwf	tblptrl,c
 16790  0003A2  0E73               	movlw	high _ptne_frame
 16791  0003A4  20F4               	addwfc	prodh,w,c
 16792  0003A6  6EF7               	movwf	tblptrh,c
 16793  0003A8                     	if	0	;There are less than 3 active tblptr bytes
 16794  0003A8                     	endif
 16795  0003A8  0008               	tblrd		*
 16796  0003AA  CFF5 F135          	movff	tablat,display_frame_de@temp
 16797                           
 16798                           ;Oled.c: 2697: ee_WriteBytes(&temp, 0x40, 1);
 16799  0003AE  0E35               	movlw	low display_frame_de@temp
 16800  0003B0  0101               	movlb	1	; () banked
 16801  0003B2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16802  0003B4  0E01               	movlw	high display_frame_de@temp
 16803  0003B6  0101               	movlb	1	; () banked
 16804  0003B8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16805  0003BA  0E40               	movlw	64
 16806  0003BC  0101               	movlb	1	; () banked
 16807  0003BE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16808  0003C0  0E00               	movlw	0
 16809  0003C2  0101               	movlb	1	; () banked
 16810  0003C4  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16811  0003C6  0E01               	movlw	1
 16812  0003C8  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16813  0003CA  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16814  0003CE  2A69               	incf	_ms,f,c
 16815  0003D0  D7DB               	goto	l12051
 16816  0003D2                     l12063:
 16817                           
 16818                           ;Oled.c: 2700: else if(mode == 0x80)
 16819  0003D2  0E80               	movlw	128
 16820  0003D4  0101               	movlb	1	; () banked
 16821  0003D6  1932               	xorwf	display_frame_de@mode& (0+255),w,b
 16822  0003D8  A4D8               	btfss	status,2,c
 16823  0003DA  0012               	return	
 16824                           
 16825                           ; BSR set to: 1
 16826                           ;Oled.c: 2701: {
 16827                           ;Oled.c: 2702: setYX_LCD(2,x);
 16828  0003DC  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16829  0003E0  0E02               	movlw	2
 16830  0003E2  EC8E  F024         	call	_setYX_LCD
 16831                           
 16832                           ;Oled.c: 2703: for(ms=0;ms<48;ms++)
 16833  0003E6  0E00               	movlw	0
 16834  0003E8  6E69               	movwf	_ms,c
 16835  0003EA                     l12069:
 16836  0003EA  0E2F               	movlw	47
 16837  0003EC  6469               	cpfsgt	_ms,c
 16838  0003EE  D001               	goto	l12073
 16839  0003F0  D036               	goto	l12097
 16840  0003F2                     l12073:
 16841                           
 16842                           ;Oled.c: 2704: {
 16843                           ;Oled.c: 2705: temp = ptne_frame[0][ms];
 16844  0003F2  5069               	movf	_ms,w,c
 16845  0003F4  0D01               	mullw	1
 16846  0003F6  0E85               	movlw	low _ptne_frame
 16847  0003F8  24F3               	addwf	prodl,w,c
 16848  0003FA  6EF6               	movwf	tblptrl,c
 16849  0003FC  0E73               	movlw	high _ptne_frame
 16850  0003FE  20F4               	addwfc	prodh,w,c
 16851  000400  6EF7               	movwf	tblptrh,c
 16852  000402                     	if	0	;There are less than 3 active tblptr bytes
 16853  000402                     	endif
 16854  000402  0008               	tblrd		*
 16855  000404  CFF5 F135          	movff	tablat,display_frame_de@temp
 16856                           
 16857                           ;Oled.c: 2706: if(ms ==0 || ms == (48 -1))
 16858  000408  5069               	movf	_ms,w,c
 16859  00040A  B4D8               	btfsc	status,2,c
 16860  00040C  D004               	goto	l12079
 16861  00040E  0E2F               	movlw	47
 16862  000410  1869               	xorwf	_ms,w,c
 16863  000412  A4D8               	btfss	status,2,c
 16864  000414  D002               	goto	l12081
 16865  000416                     l12079:
 16866                           
 16867                           ;Oled.c: 2707: {
 16868                           ;Oled.c: 2708: temp =0x0f;
 16869  000416  0E0F               	movlw	15
 16870  000418  D008               	goto	L40
 16871  00041A                     l12081:
 16872                           
 16873                           ;Oled.c: 2710: else if(ms ==1 || ms == (48 -2))
 16874  00041A  0469               	decf	_ms,w,c
 16875  00041C  B4D8               	btfsc	status,2,c
 16876  00041E  D004               	goto	l12085
 16877  000420  0E2E               	movlw	46
 16878  000422  1869               	xorwf	_ms,w,c
 16879  000424  A4D8               	btfss	status,2,c
 16880  000426  D004               	goto	l12087
 16881  000428                     l12085:
 16882                           
 16883                           ;Oled.c: 2711: {
 16884                           ;Oled.c: 2712: temp = 0x1f;
 16885  000428  0E1F               	movlw	31
 16886  00042A                     L40:
 16887  00042A  0101               	movlb	1	; () banked
 16888  00042C  6F35               	movwf	display_frame_de@temp& (0+255),b
 16889                           
 16890                           ;Oled.c: 2713: }
 16891  00042E  D005               	goto	l12091
 16892  000430                     l12087:
 16893                           
 16894                           ;Oled.c: 2714: else
 16895                           ;Oled.c: 2715: {
 16896                           ;Oled.c: 2717: temp = ~temp;
 16897  000430  0101               	movlb	1	; () banked
 16898  000432  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16899                           
 16900                           ; BSR set to: 1
 16901                           ;Oled.c: 2718: temp &= 0x3f;
 16902  000434  0E3F               	movlw	63
 16903  000436  0101               	movlb	1	; () banked
 16904  000438  1735               	andwf	display_frame_de@temp& (0+255),f,b
 16905  00043A                     l12091:
 16906                           
 16907                           ; BSR set to: 1
 16908                           ;Oled.c: 2719: }
 16909                           ;Oled.c: 2721: ee_WriteBytes(&temp, 0x40, 1);
 16910  00043A  0E35               	movlw	low display_frame_de@temp
 16911  00043C  0101               	movlb	1	; () banked
 16912  00043E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16913  000440  0E01               	movlw	high display_frame_de@temp
 16914  000442  0101               	movlb	1	; () banked
 16915  000444  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16916  000446  0E40               	movlw	64
 16917  000448  0101               	movlb	1	; () banked
 16918  00044A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 16919  00044C  0E00               	movlw	0
 16920  00044E  0101               	movlb	1	; () banked
 16921  000450  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 16922  000452  0E01               	movlw	1
 16923  000454  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 16924  000456  EC88  F025         	call	_ee_WriteBytes	;wreg free
 16925  00045A  2A69               	incf	_ms,f,c
 16926  00045C  D7C6               	goto	l12069
 16927  00045E                     l12097:
 16928                           
 16929                           ;Oled.c: 2722: }
 16930                           ;Oled.c: 2725: setYX_LCD(3,x);
 16931  00045E  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 16932  000462  0E03               	movlw	3
 16933  000464  EC8E  F024         	call	_setYX_LCD
 16934                           
 16935                           ;Oled.c: 2726: for(ms=0;ms<48;ms++)
 16936  000468  0E00               	movlw	0
 16937  00046A  6E69               	movwf	_ms,c
 16938  00046C                     l12101:
 16939  00046C  0E2F               	movlw	47
 16940  00046E  6469               	cpfsgt	_ms,c
 16941  000470  D001               	goto	l12105
 16942  000472  D02D               	goto	l12119
 16943  000474                     l12105:
 16944                           
 16945                           ;Oled.c: 2727: {
 16946                           ;Oled.c: 2728: temp = ptne_frame[1][ms];
 16947  000474  5069               	movf	_ms,w,c
 16948  000476  0D01               	mullw	1
 16949  000478  0E30               	movlw	48
 16950  00047A  26F3               	addwf	prodl,f,c
 16951  00047C  0E00               	movlw	0
 16952  00047E  22F4               	addwfc	prodh,f,c
 16953  000480  0E85               	movlw	low _ptne_frame
 16954  000482  24F3               	addwf	prodl,w,c
 16955  000484  6EF6               	movwf	tblptrl,c
 16956  000486  0E73               	movlw	high _ptne_frame
 16957  000488  20F4               	addwfc	prodh,w,c
 16958  00048A  6EF7               	movwf	tblptrh,c
 16959  00048C                     	if	0	;There are less than 3 active tblptr bytes
 16960  00048C                     	endif
 16961  00048C  0008               	tblrd		*
 16962  00048E  CFF5 F135          	movff	tablat,display_frame_de@temp
 16963                           
 16964                           ;Oled.c: 2730: if(ms == 0 || ms == (48 - 1))
 16965  000492  5069               	movf	_ms,w,c
 16966  000494  B4D8               	btfsc	status,2,c
 16967  000496  D004               	goto	l1173
 16968  000498  0E2F               	movlw	47
 16969  00049A  1869               	xorwf	_ms,w,c
 16970  00049C  A4D8               	btfss	status,2,c
 16971  00049E  D003               	goto	l12111
 16972  0004A0                     l1173:
 16973                           
 16974                           ;Oled.c: 2731: {
 16975                           ;Oled.c: 2732: temp = 0xff;
 16976  0004A0  0101               	movlb	1	; () banked
 16977  0004A2  6935               	setf	display_frame_de@temp& (0+255),b
 16978                           
 16979                           ;Oled.c: 2733: }
 16980  0004A4  D002               	goto	l12113
 16981  0004A6                     l12111:
 16982                           
 16983                           ;Oled.c: 2734: else
 16984                           ;Oled.c: 2735: {
 16985                           ;Oled.c: 2736: temp = ~temp;
 16986  0004A6  0101               	movlb	1	; () banked
 16987  0004A8  1F35               	comf	display_frame_de@temp& (0+255),f,b
 16988  0004AA                     l12113:
 16989                           
 16990                           ; BSR set to: 1
 16991                           ;Oled.c: 2737: }
 16992                           ;Oled.c: 2739: ee_WriteBytes(&temp, 0x40, 1);
 16993  0004AA  0E35               	movlw	low display_frame_de@temp
 16994  0004AC  0101               	movlb	1	; () banked
 16995  0004AE  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 16996  0004B0  0E01               	movlw	high display_frame_de@temp
 16997  0004B2  0101               	movlb	1	; () banked
 16998  0004B4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 16999  0004B6  0E40               	movlw	64
 17000  0004B8  0101               	movlb	1	; () banked
 17001  0004BA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 17002  0004BC  0E00               	movlw	0
 17003  0004BE  0101               	movlb	1	; () banked
 17004  0004C0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 17005  0004C2  0E01               	movlw	1
 17006  0004C4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 17007  0004C6  EC88  F025         	call	_ee_WriteBytes	;wreg free
 17008  0004CA  2A69               	incf	_ms,f,c
 17009  0004CC  D7CF               	goto	l12101
 17010  0004CE                     l12119:
 17011                           
 17012                           ;Oled.c: 2740: }
 17013                           ;Oled.c: 2743: setYX_LCD(4,x);
 17014  0004CE  C131  F0FF         	movff	display_frame_de@x,setYX_LCD@px
 17015  0004D2  0E04               	movlw	4
 17016  0004D4  EC8E  F024         	call	_setYX_LCD
 17017                           
 17018                           ;Oled.c: 2744: for(ms=0;ms<48;ms++)
 17019  0004D8  0E00               	movlw	0
 17020  0004DA  6E69               	movwf	_ms,c
 17021  0004DC                     l12123:
 17022  0004DC  0E2F               	movlw	47
 17023  0004DE  6469               	cpfsgt	_ms,c
 17024  0004E0  D001               	goto	l12127
 17025  0004E2  0012               	return	
 17026  0004E4                     l12127:
 17027                           
 17028                           ;Oled.c: 2745: {
 17029                           ;Oled.c: 2746: temp = ptne_frame[2][ms];
 17030  0004E4  5069               	movf	_ms,w,c
 17031  0004E6  0D01               	mullw	1
 17032  0004E8  0E60               	movlw	96
 17033  0004EA  26F3               	addwf	prodl,f,c
 17034  0004EC  0E00               	movlw	0
 17035  0004EE  22F4               	addwfc	prodh,f,c
 17036  0004F0  0E85               	movlw	low _ptne_frame
 17037  0004F2  24F3               	addwf	prodl,w,c
 17038  0004F4  6EF6               	movwf	tblptrl,c
 17039  0004F6  0E73               	movlw	high _ptne_frame
 17040  0004F8  20F4               	addwfc	prodh,w,c
 17041  0004FA  6EF7               	movwf	tblptrh,c
 17042  0004FC                     	if	0	;There are less than 3 active tblptr bytes
 17043  0004FC                     	endif
 17044  0004FC  0008               	tblrd		*
 17045  0004FE  CFF5 F135          	movff	tablat,display_frame_de@temp
 17046                           
 17047                           ;Oled.c: 2747: if(ms ==0 || ms == (48 -1) )
 17048  000502  5069               	movf	_ms,w,c
 17049  000504  B4D8               	btfsc	status,2,c
 17050  000506  D004               	goto	l12133
 17051  000508  0E2F               	movlw	47
 17052  00050A  1869               	xorwf	_ms,w,c
 17053  00050C  A4D8               	btfss	status,2,c
 17054  00050E  D002               	goto	l12135
 17055  000510                     l12133:
 17056                           
 17057                           ;Oled.c: 2748: {
 17058                           ;Oled.c: 2749: temp =0xe0;
 17059  000510  0EE0               	movlw	224
 17060  000512  D008               	goto	L41
 17061  000514                     l12135:
 17062                           
 17063                           ;Oled.c: 2751: else if(ms ==1 || ms == (48 -2))
 17064  000514  0469               	decf	_ms,w,c
 17065  000516  B4D8               	btfsc	status,2,c
 17066  000518  D004               	goto	l12139
 17067  00051A  0E2E               	movlw	46
 17068  00051C  1869               	xorwf	_ms,w,c
 17069  00051E  A4D8               	btfss	status,2,c
 17070  000520  D004               	goto	l12141
 17071  000522                     l12139:
 17072                           
 17073                           ;Oled.c: 2752: {
 17074                           ;Oled.c: 2753: temp = 0xf0;
 17075  000522  0EF0               	movlw	240
 17076  000524                     L41:
 17077  000524  0101               	movlb	1	; () banked
 17078  000526  6F35               	movwf	display_frame_de@temp& (0+255),b
 17079                           
 17080                           ;Oled.c: 2754: }
 17081  000528  D007               	goto	l12147
 17082  00052A                     l12141:
 17083                           
 17084                           ;Oled.c: 2755: else
 17085                           ;Oled.c: 2756: {
 17086                           ;Oled.c: 2758: temp = ~temp;
 17087  00052A  0101               	movlb	1	; () banked
 17088  00052C  1F35               	comf	display_frame_de@temp& (0+255),f,b
 17089                           
 17090                           ; BSR set to: 1
 17091                           ;Oled.c: 2759: temp &= 0xf0;
 17092  00052E  0EF0               	movlw	240
 17093  000530  0101               	movlb	1	; () banked
 17094  000532  1735               	andwf	display_frame_de@temp& (0+255),f,b
 17095                           
 17096                           ; BSR set to: 1
 17097                           ;Oled.c: 2760: temp |= 0x10;
 17098  000534  0101               	movlb	1	; () banked
 17099  000536  8935               	bsf	display_frame_de@temp& (0+255),4,b
 17100  000538                     l12147:
 17101                           
 17102                           ; BSR set to: 1
 17103                           ;Oled.c: 2761: }
 17104                           ;Oled.c: 2763: ee_WriteBytes(&temp, 0x40, 1);
 17105  000538  0E35               	movlw	low display_frame_de@temp
 17106  00053A  0101               	movlb	1	; () banked
 17107  00053C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 17108  00053E  0E01               	movlw	high display_frame_de@temp
 17109  000540  0101               	movlb	1	; () banked
 17110  000542  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 17111  000544  0E40               	movlw	64
 17112  000546  0101               	movlb	1	; () banked
 17113  000548  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 17114  00054A  0E00               	movlw	0
 17115  00054C  0101               	movlb	1	; () banked
 17116  00054E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 17117  000550  0E01               	movlw	1
 17118  000552  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 17119  000554  EC88  F025         	call	_ee_WriteBytes	;wreg free
 17120  000558  2A69               	incf	_ms,f,c
 17121  00055A  D7C0               	goto	l12123
 17122  00055C                     __end_of_display_frame_de:
 17123                           	opt stack 0
 17124                           tblptru	equ	0xFF8
 17125                           tblptrh	equ	0xFF7
 17126                           tblptrl	equ	0xFF6
 17127                           tablat	equ	0xFF5
 17128                           prodh	equ	0xFF4
 17129                           prodl	equ	0xFF3
 17130                           intcon	equ	0xFF2
 17131                           intcon3	equ	0xFF0
 17132                           postinc0	equ	0xFEE
 17133                           wreg	equ	0xFE8
 17134                           postdec1	equ	0xFE5
 17135                           fsr1h	equ	0xFE2
 17136                           fsr1l	equ	0xFE1
 17137                           postinc2	equ	0xFDE
 17138                           fsr2h	equ	0xFDA
 17139                           fsr2l	equ	0xFD9
 17140                           status	equ	0xFD8
 17141                           
 17142 ;; *************** function _menu2_MsgHandlle *****************
 17143 ;; Defined at:
 17144 ;;		line 373 in file "../gui.c"
 17145 ;; Parameters:    Size  Location     Type
 17146 ;;  key             1    wreg     unsigned char 
 17147 ;; Auto vars:     Size  Location     Type
 17148 ;;  key             1    0[BANK0 ] unsigned char 
 17149 ;; Return value:  Size  Location     Type
 17150 ;;                  1    wreg      void 
 17151 ;; Registers used:
 17152 ;;		wreg, status,2, status,0
 17153 ;; Tracked objects:
 17154 ;;		On entry : 0/0
 17155 ;;		On exit  : 0/0
 17156 ;;		Unchanged: 0/0
 17157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17158 ;;      Params:         0       0       0       0       0       0       0
 17159 ;;      Locals:         0       1       0       0       0       0       0
 17160 ;;      Temps:          0       0       0       0       0       0       0
 17161 ;;      Totals:         0       1       0       0       0       0       0
 17162 ;;Total ram usage:        1 bytes
 17163 ;; Hardware stack levels used:    1
 17164 ;; Hardware stack levels required when called:    2
 17165 ;; This function calls:
 17166 ;;		Nothing
 17167 ;; This function is called by:
 17168 ;;		_init_menu
 17169 ;;		_HG_interface
 17170 ;; This function uses a non-reentrant model
 17171 ;;
 17172                           
 17173                           	psect	text38
 17174  0049CE                     __ptext38:
 17175                           	opt stack 0
 17176  0049CE                     _menu2_MsgHandlle:
 17177                           	opt stack 27
 17178                           
 17179                           ;incstack = 0
 17180                           ;menu2_MsgHandlle@key stored from wreg
 17181  0049CE  0100               	movlb	0	; () banked
 17182  0049D0  6FFD               	movwf	menu2_MsgHandlle@key& (0+255),b
 17183                           
 17184                           ;gui.c: 376: switch(key)
 17185  0049D2  D01C               	goto	l13495
 17186  0049D4                     l13469:
 17187                           
 17188                           ;gui.c: 381: if(menu[2].mode == 3)
 17189  0049D4  0E03               	movlw	3
 17190  0049D6  1812               	xorwf	_menu+17,w,c
 17191  0049D8  B4D8               	btfsc	status,2,c
 17192  0049DA  0012               	return	
 17193                           
 17194                           ;gui.c: 385: else
 17195                           ;gui.c: 386: {
 17196                           ;gui.c: 387: if(focus ==3)
 17197                           
 17198                           ;gui.c: 382: {
 17199                           ;gui.c: 384: }
 17200  0049DC  0E03               	movlw	3
 17201  0049DE  184F               	xorwf	_focus,w,c
 17202  0049E0  A4D8               	btfss	status,2,c
 17203  0049E2  D003               	goto	l13477
 17204                           
 17205                           ;gui.c: 388: {
 17206                           ;gui.c: 389: menu[2].mode = 0x80;
 17207  0049E4  0E80               	movlw	128
 17208  0049E6  6E12               	movwf	_menu+17,c
 17209                           
 17210                           ;gui.c: 390: }
 17211  0049E8  0012               	return	
 17212  0049EA                     l13477:
 17213                           
 17214                           ;gui.c: 391: else
 17215                           ;gui.c: 392: {
 17216                           ;gui.c: 393: menu[2].mode = 0;
 17217  0049EA  0E00               	movlw	0
 17218  0049EC  6E12               	movwf	_menu+17,c
 17219                           
 17220                           ;gui.c: 402: }
 17221                           ;gui.c: 403: break;
 17222                           
 17223                           ;gui.c: 398: {
 17224  0049EE  0012               	return	
 17225  0049F0                     l13481:
 17226                           
 17227                           ;gui.c: 409: if(menu[2].mode == 3)
 17228  0049F0  0E03               	movlw	3
 17229  0049F2  1812               	xorwf	_menu+17,w,c
 17230  0049F4  B4D8               	btfsc	status,2,c
 17231  0049F6  0012               	return	
 17232                           
 17233                           ;gui.c: 413: else
 17234                           ;gui.c: 414: {
 17235                           ;gui.c: 415: if(focus ==3)
 17236                           
 17237                           ;gui.c: 410: {
 17238                           ;gui.c: 412: }
 17239  0049F8  0E03               	movlw	3
 17240  0049FA  184F               	xorwf	_focus,w,c
 17241  0049FC  A4D8               	btfss	status,2,c
 17242  0049FE  D003               	goto	l13489
 17243                           
 17244                           ;gui.c: 416: {
 17245                           ;gui.c: 417: menu[2].mode = 0x80;
 17246  004A00  0E80               	movlw	128
 17247  004A02  6E12               	movwf	_menu+17,c
 17248                           
 17249                           ;gui.c: 418: }
 17250  004A04  0012               	return	
 17251  004A06                     l13489:
 17252                           
 17253                           ;gui.c: 419: else
 17254                           ;gui.c: 420: {
 17255                           ;gui.c: 421: menu[2].mode = 0;
 17256  004A06  0E00               	movlw	0
 17257  004A08  6E12               	movwf	_menu+17,c
 17258                           
 17259                           ;gui.c: 440: }
 17260                           
 17261                           ;gui.c: 439: break;
 17262                           
 17263                           ;gui.c: 438: case 0xf3:
 17264                           
 17265                           ;gui.c: 430: }
 17266                           ;gui.c: 436: break;
 17267                           
 17268                           ;gui.c: 426: {
 17269  004A0A  0012               	return	
 17270  004A0C                     l13495:
 17271  004A0C  0100               	movlb	0	; () banked
 17272  004A0E  51FD               	movf	menu2_MsgHandlle@key& (0+255),w,b
 17273                           
 17274                           ; Switch size 1, requested type "space"
 17275                           ; Number of cases is 3, Range of values is 241 to 243
 17276                           ; switch strategies available:
 17277                           ; Name         Instructions Cycles
 17278                           ; simple_byte           10     6 (average)
 17279                           ;	Chosen strategy is simple_byte
 17280  004A10  0AF1               	xorlw	241	; case 241
 17281  004A12  B4D8               	btfsc	status,2,c
 17282  004A14  D7DF               	goto	l13469
 17283  004A16  0A03               	xorlw	3	; case 242
 17284  004A18  B4D8               	btfsc	status,2,c
 17285  004A1A  D7EA               	goto	l13481
 17286  004A1C  0A01               	xorlw	1	; case 243
 17287  004A1E  0012               	return	
 17288  004A20                     __end_of_menu2_MsgHandlle:
 17289                           	opt stack 0
 17290                           tblptru	equ	0xFF8
 17291                           tblptrh	equ	0xFF7
 17292                           tblptrl	equ	0xFF6
 17293                           tablat	equ	0xFF5
 17294                           prodh	equ	0xFF4
 17295                           prodl	equ	0xFF3
 17296                           intcon	equ	0xFF2
 17297                           intcon3	equ	0xFF0
 17298                           postinc0	equ	0xFEE
 17299                           wreg	equ	0xFE8
 17300                           postdec1	equ	0xFE5
 17301                           fsr1h	equ	0xFE2
 17302                           fsr1l	equ	0xFE1
 17303                           postinc2	equ	0xFDE
 17304                           fsr2h	equ	0xFDA
 17305                           fsr2l	equ	0xFD9
 17306                           status	equ	0xFD8
 17307                           
 17308 ;; *************** function _menu1_MsgHandlle *****************
 17309 ;; Defined at:
 17310 ;;		line 302 in file "../gui.c"
 17311 ;; Parameters:    Size  Location     Type
 17312 ;;  key             1    wreg     unsigned char 
 17313 ;; Auto vars:     Size  Location     Type
 17314 ;;  key             1    0[BANK0 ] unsigned char 
 17315 ;; Return value:  Size  Location     Type
 17316 ;;                  1    wreg      void 
 17317 ;; Registers used:
 17318 ;;		wreg, status,2, status,0
 17319 ;; Tracked objects:
 17320 ;;		On entry : 0/0
 17321 ;;		On exit  : 0/0
 17322 ;;		Unchanged: 0/0
 17323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17324 ;;      Params:         0       0       0       0       0       0       0
 17325 ;;      Locals:         0       1       0       0       0       0       0
 17326 ;;      Temps:          0       0       0       0       0       0       0
 17327 ;;      Totals:         0       1       0       0       0       0       0
 17328 ;;Total ram usage:        1 bytes
 17329 ;; Hardware stack levels used:    1
 17330 ;; Hardware stack levels required when called:    2
 17331 ;; This function calls:
 17332 ;;		Nothing
 17333 ;; This function is called by:
 17334 ;;		_init_menu
 17335 ;;		_HG_interface
 17336 ;; This function uses a non-reentrant model
 17337 ;;
 17338                           
 17339                           	psect	text39
 17340  004A20                     __ptext39:
 17341                           	opt stack 0
 17342  004A20                     _menu1_MsgHandlle:
 17343                           	opt stack 27
 17344                           
 17345                           ;incstack = 0
 17346                           ;menu1_MsgHandlle@key stored from wreg
 17347  004A20  0100               	movlb	0	; () banked
 17348  004A22  6FFD               	movwf	menu1_MsgHandlle@key& (0+255),b
 17349                           
 17350                           ;gui.c: 304: switch(key)
 17351  004A24  D01C               	goto	l13465
 17352  004A26                     l13439:
 17353                           
 17354                           ;gui.c: 308: if(menu[1].mode == 3)
 17355  004A26  0E03               	movlw	3
 17356  004A28  180A               	xorwf	_menu+9,w,c
 17357  004A2A  B4D8               	btfsc	status,2,c
 17358  004A2C  0012               	return	
 17359                           
 17360                           ;gui.c: 312: else
 17361                           ;gui.c: 313: {
 17362                           ;gui.c: 314: if(focus == 2)
 17363                           
 17364                           ;gui.c: 309: {
 17365                           ;gui.c: 311: }
 17366  004A2E  0E02               	movlw	2
 17367  004A30  184F               	xorwf	_focus,w,c
 17368  004A32  A4D8               	btfss	status,2,c
 17369  004A34  D003               	goto	l13447
 17370                           
 17371                           ;gui.c: 315: {
 17372                           ;gui.c: 316: menu[1].mode = 0x80;
 17373  004A36  0E80               	movlw	128
 17374  004A38  6E0A               	movwf	_menu+9,c
 17375                           
 17376                           ;gui.c: 317: }
 17377  004A3A  0012               	return	
 17378  004A3C                     l13447:
 17379                           
 17380                           ;gui.c: 318: else
 17381                           ;gui.c: 319: {
 17382                           ;gui.c: 320: menu[1].mode = 0;
 17383  004A3C  0E00               	movlw	0
 17384  004A3E  6E0A               	movwf	_menu+9,c
 17385                           
 17386                           ;gui.c: 328: }
 17387                           ;gui.c: 330: }
 17388                           ;gui.c: 332: break;
 17389                           
 17390                           ;gui.c: 324: {
 17391  004A40  0012               	return	
 17392  004A42                     l13451:
 17393                           
 17394                           ;gui.c: 337: if(menu[1].mode == 3)
 17395  004A42  0E03               	movlw	3
 17396  004A44  180A               	xorwf	_menu+9,w,c
 17397  004A46  B4D8               	btfsc	status,2,c
 17398  004A48  0012               	return	
 17399                           
 17400                           ;gui.c: 341: else
 17401                           ;gui.c: 342: {
 17402                           ;gui.c: 343: if(focus == 2)
 17403                           
 17404                           ;gui.c: 338: {
 17405                           ;gui.c: 340: }
 17406  004A4A  0E02               	movlw	2
 17407  004A4C  184F               	xorwf	_focus,w,c
 17408  004A4E  A4D8               	btfss	status,2,c
 17409  004A50  D003               	goto	l13459
 17410                           
 17411                           ;gui.c: 344: {
 17412                           ;gui.c: 345: menu[1].mode = 0x80;
 17413  004A52  0E80               	movlw	128
 17414  004A54  6E0A               	movwf	_menu+9,c
 17415                           
 17416                           ;gui.c: 346: }
 17417  004A56  0012               	return	
 17418  004A58                     l13459:
 17419                           
 17420                           ;gui.c: 347: else
 17421                           ;gui.c: 348: {
 17422                           ;gui.c: 349: menu[1].mode = 0;
 17423  004A58  0E00               	movlw	0
 17424  004A5A  6E0A               	movwf	_menu+9,c
 17425                           
 17426                           ;gui.c: 365: }
 17427                           
 17428                           ;gui.c: 364: break;
 17429                           
 17430                           ;gui.c: 363: case 0xf3:
 17431                           
 17432                           ;gui.c: 357: }
 17433                           ;gui.c: 359: }
 17434                           ;gui.c: 361: break;
 17435                           
 17436                           ;gui.c: 353: {
 17437  004A5C  0012               	return	
 17438  004A5E                     l13465:
 17439  004A5E  0100               	movlb	0	; () banked
 17440  004A60  51FD               	movf	menu1_MsgHandlle@key& (0+255),w,b
 17441                           
 17442                           ; Switch size 1, requested type "space"
 17443                           ; Number of cases is 3, Range of values is 241 to 243
 17444                           ; switch strategies available:
 17445                           ; Name         Instructions Cycles
 17446                           ; simple_byte           10     6 (average)
 17447                           ;	Chosen strategy is simple_byte
 17448  004A62  0AF1               	xorlw	241	; case 241
 17449  004A64  B4D8               	btfsc	status,2,c
 17450  004A66  D7DF               	goto	l13439
 17451  004A68  0A03               	xorlw	3	; case 242
 17452  004A6A  B4D8               	btfsc	status,2,c
 17453  004A6C  D7EA               	goto	l13451
 17454  004A6E  0A01               	xorlw	1	; case 243
 17455  004A70  0012               	return	
 17456  004A72                     __end_of_menu1_MsgHandlle:
 17457                           	opt stack 0
 17458                           tblptru	equ	0xFF8
 17459                           tblptrh	equ	0xFF7
 17460                           tblptrl	equ	0xFF6
 17461                           tablat	equ	0xFF5
 17462                           prodh	equ	0xFF4
 17463                           prodl	equ	0xFF3
 17464                           intcon	equ	0xFF2
 17465                           intcon3	equ	0xFF0
 17466                           postinc0	equ	0xFEE
 17467                           wreg	equ	0xFE8
 17468                           postdec1	equ	0xFE5
 17469                           fsr1h	equ	0xFE2
 17470                           fsr1l	equ	0xFE1
 17471                           postinc2	equ	0xFDE
 17472                           fsr2h	equ	0xFDA
 17473                           fsr2l	equ	0xFD9
 17474                           status	equ	0xFD8
 17475                           
 17476 ;; *************** function _menu0_MsgHandlle *****************
 17477 ;; Defined at:
 17478 ;;		line 58 in file "../gui.c"
 17479 ;; Parameters:    Size  Location     Type
 17480 ;;  key             1    wreg     unsigned char 
 17481 ;; Auto vars:     Size  Location     Type
 17482 ;;  key             1   16[BANK1 ] unsigned char 
 17483 ;; Return value:  Size  Location     Type
 17484 ;;                  1    wreg      void 
 17485 ;; Registers used:
 17486 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 17487 ;; Tracked objects:
 17488 ;;		On entry : 0/0
 17489 ;;		On exit  : 0/0
 17490 ;;		Unchanged: 0/0
 17491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17492 ;;      Params:         0       0       0       0       0       0       0
 17493 ;;      Locals:         0       0       1       0       0       0       0
 17494 ;;      Temps:          0       0       0       0       0       0       0
 17495 ;;      Totals:         0       0       1       0       0       0       0
 17496 ;;Total ram usage:        1 bytes
 17497 ;; Hardware stack levels used:    1
 17498 ;; Hardware stack levels required when called:    7
 17499 ;; This function calls:
 17500 ;;		_display_cmode
 17501 ;;		_display_drop
 17502 ;;		_display_drops
 17503 ;;		_display_frame_abc
 17504 ;;		_display_frame_fghi
 17505 ;;		_display_num
 17506 ;; This function is called by:
 17507 ;;		_init_menu
 17508 ;;		_HG_interface
 17509 ;; This function uses a non-reentrant model
 17510 ;;
 17511                           
 17512                           	psect	text40
 17513  001E58                     __ptext40:
 17514                           	opt stack 0
 17515  001E58                     _menu0_MsgHandlle:
 17516                           	opt stack 22
 17517                           
 17518                           ;incstack = 0
 17519                           ;menu0_MsgHandlle@key stored from wreg
 17520  001E58  0101               	movlb	1	; () banked
 17521  001E5A  6F38               	movwf	menu0_MsgHandlle@key& (0+255),b
 17522                           
 17523                           ;gui.c: 60: switch(key)
 17524  001E5C  D16F               	goto	l13435
 17525  001E5E                     l13285:
 17526                           
 17527                           ;gui.c: 63: if(menu[0].mode == 3)
 17528  001E5E  0E03               	movlw	3
 17529  001E60  1802               	xorwf	_menu+1,w,c
 17530  001E62  A4D8               	btfss	status,2,c
 17531  001E64  D036               	goto	l13309
 17532                           
 17533                           ;gui.c: 64: {
 17534                           ;gui.c: 65: work_mode ++;
 17535  001E66  2A4D               	incf	_work_mode,f,c
 17536                           
 17537                           ;gui.c: 66: if(work_mode == 3)
 17538  001E68  0E03               	movlw	3
 17539  001E6A  184D               	xorwf	_work_mode,w,c
 17540  001E6C  A4D8               	btfss	status,2,c
 17541  001E6E  D002               	goto	l13293
 17542                           
 17543                           ;gui.c: 67: {
 17544                           ;gui.c: 68: work_mode = 0x00;
 17545  001E70  0E00               	movlw	0
 17546  001E72  6E4D               	movwf	_work_mode,c
 17547  001E74                     l13293:
 17548                           
 17549                           ;gui.c: 69: }
 17550                           ;gui.c: 72: display_frame_abc(1,71, menu[0].mode);
 17551  001E74  0E47               	movlw	71
 17552  001E76  0101               	movlb	1	; () banked
 17553  001E78  6F31               	movwf	display_frame_abc@x& (0+255),b
 17554  001E7A  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17555  001E7E  0E01               	movlw	1
 17556  001E80  EC5D  F016         	call	_display_frame_abc
 17557                           
 17558                           ;gui.c: 74: if(work_mode == 0x00)
 17559  001E84  504D               	movf	_work_mode,w,c
 17560  001E86  A4D8               	btfss	status,2,c
 17561  001E88  D009               	goto	l13299
 17562                           
 17563                           ;gui.c: 75: {
 17564                           ;gui.c: 76: display_cmode(1,(71 + 2), menu[0].mode);
 17565  001E8A  0E49               	movlw	73
 17566  001E8C  0101               	movlb	1	; () banked
 17567  001E8E  6F31               	movwf	display_cmode@x& (0+255),b
 17568  001E90  C002  F132         	movff	_menu+1,display_cmode@mode
 17569  001E94  0E01               	movlw	1
 17570  001E96  EC15  F01F         	call	_display_cmode
 17571                           
 17572                           ;gui.c: 77: }
 17573  001E9A  D018               	goto	l13307
 17574  001E9C                     l13299:
 17575                           
 17576                           ;gui.c: 78: else if(work_mode == 0x01)
 17577  001E9C  044D               	decf	_work_mode,w,c
 17578  001E9E  A4D8               	btfss	status,2,c
 17579  001EA0  D009               	goto	l13303
 17580                           
 17581                           ;gui.c: 79: {
 17582                           ;gui.c: 80: display_drops(1,(71 + 2), menu[0].mode);
 17583  001EA2  0E49               	movlw	73
 17584  001EA4  0101               	movlb	1	; () banked
 17585  001EA6  6F31               	movwf	display_drops@x& (0+255),b
 17586  001EA8  C002  F132         	movff	_menu+1,display_drops@mode
 17587  001EAC  0E01               	movlw	1
 17588  001EAE  EC95  F01D         	call	_display_drops
 17589                           
 17590                           ;gui.c: 81: }
 17591  001EB2  D00C               	goto	l13307
 17592  001EB4                     l13303:
 17593                           
 17594                           ;gui.c: 82: else if(work_mode == 0x02)
 17595  001EB4  0E02               	movlw	2
 17596  001EB6  184D               	xorwf	_work_mode,w,c
 17597  001EB8  A4D8               	btfss	status,2,c
 17598  001EBA  D008               	goto	l13307
 17599                           
 17600                           ;gui.c: 83: {
 17601                           ;gui.c: 84: display_drop(1,(71 + 2), menu[0].mode);
 17602  001EBC  0E49               	movlw	73
 17603  001EBE  0101               	movlb	1	; () banked
 17604  001EC0  6F31               	movwf	display_drop@x& (0+255),b
 17605  001EC2  C002  F132         	movff	_menu+1,display_drop@mode
 17606  001EC6  0E01               	movlw	1
 17607  001EC8  EC55  F01E         	call	_display_drop
 17608  001ECC                     l13307:
 17609                           
 17610                           ;gui.c: 85: }
 17611                           ;gui.c: 88: menu[0].cur_mode = menu[0].mode;
 17612  001ECC  C002  F003         	movff	_menu+1,_menu+2
 17613                           
 17614                           ;gui.c: 89: }
 17615  001ED0  0012               	return	
 17616  001ED2                     l13309:
 17617                           
 17618                           ;gui.c: 90: else
 17619                           ;gui.c: 91: {
 17620                           ;gui.c: 92: if(focus == 1)
 17621  001ED2  044F               	decf	_focus,w,c
 17622  001ED4  A4D8               	btfss	status,2,c
 17623  001ED6  D002               	goto	l13313
 17624                           
 17625                           ;gui.c: 93: {
 17626                           ;gui.c: 94: menu[0].mode = 0x80;
 17627  001ED8  0E80               	movlw	128
 17628  001EDA  D001               	goto	L42
 17629  001EDC                     l13313:
 17630                           
 17631                           ;gui.c: 96: else
 17632                           ;gui.c: 97: {
 17633                           ;gui.c: 98: menu[0].mode = 0;
 17634  001EDC  0E00               	movlw	0
 17635  001EDE                     L42:
 17636  001EDE  6E02               	movwf	_menu+1,c
 17637                           
 17638                           ;gui.c: 99: }
 17639                           ;gui.c: 102: if(menu[0].cur_mode != menu[0].mode)
 17640  001EE0  5002               	movf	_menu+1,w,c
 17641  001EE2  1803               	xorwf	_menu+2,w,c
 17642  001EE4  B4D8               	btfsc	status,2,c
 17643  001EE6  0012               	return	
 17644                           
 17645                           ;gui.c: 103: {
 17646                           ;gui.c: 104: display_frame_abc(1,71, menu[0].mode);
 17647  001EE8  0E47               	movlw	71
 17648  001EEA  0101               	movlb	1	; () banked
 17649  001EEC  6F31               	movwf	display_frame_abc@x& (0+255),b
 17650  001EEE  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17651  001EF2  0E01               	movlw	1
 17652  001EF4  EC5D  F016         	call	_display_frame_abc
 17653                           
 17654                           ;gui.c: 106: if(work_mode == 0x00)
 17655  001EF8  504D               	movf	_work_mode,w,c
 17656  001EFA  A4D8               	btfss	status,2,c
 17657  001EFC  D009               	goto	l13323
 17658                           
 17659                           ;gui.c: 107: {
 17660                           ;gui.c: 108: display_cmode(1,(71 + 2), menu[0].mode);
 17661  001EFE  0E49               	movlw	73
 17662  001F00  0101               	movlb	1	; () banked
 17663  001F02  6F31               	movwf	display_cmode@x& (0+255),b
 17664  001F04  C002  F132         	movff	_menu+1,display_cmode@mode
 17665  001F08  0E01               	movlw	1
 17666  001F0A  EC15  F01F         	call	_display_cmode
 17667                           
 17668                           ;gui.c: 109: }
 17669  001F0E  D018               	goto	l13331
 17670  001F10                     l13323:
 17671                           
 17672                           ;gui.c: 110: else if(work_mode == 0x02)
 17673  001F10  0E02               	movlw	2
 17674  001F12  184D               	xorwf	_work_mode,w,c
 17675  001F14  A4D8               	btfss	status,2,c
 17676  001F16  D009               	goto	l13327
 17677                           
 17678                           ;gui.c: 111: {
 17679                           ;gui.c: 112: display_drop(1,(71 + 2), menu[0].mode);
 17680  001F18  0E49               	movlw	73
 17681  001F1A  0101               	movlb	1	; () banked
 17682  001F1C  6F31               	movwf	display_drop@x& (0+255),b
 17683  001F1E  C002  F132         	movff	_menu+1,display_drop@mode
 17684  001F22  0E01               	movlw	1
 17685  001F24  EC55  F01E         	call	_display_drop
 17686                           
 17687                           ;gui.c: 113: }
 17688  001F28  D00B               	goto	l13331
 17689  001F2A                     l13327:
 17690                           
 17691                           ;gui.c: 114: else if(work_mode == 0x01)
 17692  001F2A  044D               	decf	_work_mode,w,c
 17693  001F2C  A4D8               	btfss	status,2,c
 17694  001F2E  D008               	goto	l13331
 17695                           
 17696                           ;gui.c: 115: {
 17697                           ;gui.c: 116: display_drops(1,(71 + 2), menu[0].mode);
 17698  001F30  0E49               	movlw	73
 17699  001F32  0101               	movlb	1	; () banked
 17700  001F34  6F31               	movwf	display_drops@x& (0+255),b
 17701  001F36  C002  F132         	movff	_menu+1,display_drops@mode
 17702  001F3A  0E01               	movlw	1
 17703  001F3C  EC95  F01D         	call	_display_drops
 17704  001F40                     l13331:
 17705                           
 17706                           ;gui.c: 117: }
 17707                           ;gui.c: 121: menu[0].cur_mode = menu[0].mode;
 17708  001F40  C002  F003         	movff	_menu+1,_menu+2
 17709                           
 17710                           ;gui.c: 124: }
 17711                           ;gui.c: 127: }
 17712                           ;gui.c: 129: break;
 17713  001F44  0012               	return	
 17714  001F46                     l13333:
 17715                           
 17716                           ;gui.c: 132: if(menu[0].mode == 3)
 17717  001F46  0E03               	movlw	3
 17718  001F48  1802               	xorwf	_menu+1,w,c
 17719  001F4A  A4D8               	btfss	status,2,c
 17720  001F4C  D035               	goto	l13357
 17721                           
 17722                           ;gui.c: 133: {
 17723                           ;gui.c: 135: work_mode --;
 17724  001F4E  064D               	decf	_work_mode,f,c
 17725                           
 17726                           ;gui.c: 137: if(work_mode== -1)
 17727  001F50  284D               	incf	_work_mode,w,c
 17728  001F52  A4D8               	btfss	status,2,c
 17729  001F54  D002               	goto	l13341
 17730                           
 17731                           ;gui.c: 138: {
 17732                           ;gui.c: 139: work_mode = 0x02;
 17733  001F56  0E02               	movlw	2
 17734  001F58  6E4D               	movwf	_work_mode,c
 17735  001F5A                     l13341:
 17736                           
 17737                           ;gui.c: 140: }
 17738                           ;gui.c: 143: display_frame_abc(1,71, menu[0].mode);
 17739  001F5A  0E47               	movlw	71
 17740  001F5C  0101               	movlb	1	; () banked
 17741  001F5E  6F31               	movwf	display_frame_abc@x& (0+255),b
 17742  001F60  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17743  001F64  0E01               	movlw	1
 17744  001F66  EC5D  F016         	call	_display_frame_abc
 17745                           
 17746                           ;gui.c: 145: if(work_mode == 0x00)
 17747  001F6A  504D               	movf	_work_mode,w,c
 17748  001F6C  A4D8               	btfss	status,2,c
 17749  001F6E  D009               	goto	l13347
 17750                           
 17751                           ;gui.c: 146: {
 17752                           ;gui.c: 147: display_cmode(1,(71 + 2), menu[0].mode);
 17753  001F70  0E49               	movlw	73
 17754  001F72  0101               	movlb	1	; () banked
 17755  001F74  6F31               	movwf	display_cmode@x& (0+255),b
 17756  001F76  C002  F132         	movff	_menu+1,display_cmode@mode
 17757  001F7A  0E01               	movlw	1
 17758  001F7C  EC15  F01F         	call	_display_cmode
 17759                           
 17760                           ;gui.c: 148: }
 17761  001F80  D018               	goto	l13355
 17762  001F82                     l13347:
 17763                           
 17764                           ;gui.c: 149: else if(work_mode == 0x01)
 17765  001F82  044D               	decf	_work_mode,w,c
 17766  001F84  A4D8               	btfss	status,2,c
 17767  001F86  D009               	goto	l13351
 17768                           
 17769                           ;gui.c: 150: {
 17770                           ;gui.c: 151: display_drops(1,(71 + 2), menu[0].mode);
 17771  001F88  0E49               	movlw	73
 17772  001F8A  0101               	movlb	1	; () banked
 17773  001F8C  6F31               	movwf	display_drops@x& (0+255),b
 17774  001F8E  C002  F132         	movff	_menu+1,display_drops@mode
 17775  001F92  0E01               	movlw	1
 17776  001F94  EC95  F01D         	call	_display_drops
 17777                           
 17778                           ;gui.c: 152: }
 17779  001F98  D00C               	goto	l13355
 17780  001F9A                     l13351:
 17781                           
 17782                           ;gui.c: 153: else if(work_mode == 0x02)
 17783  001F9A  0E02               	movlw	2
 17784  001F9C  184D               	xorwf	_work_mode,w,c
 17785  001F9E  A4D8               	btfss	status,2,c
 17786  001FA0  D008               	goto	l13355
 17787                           
 17788                           ;gui.c: 154: {
 17789                           ;gui.c: 155: display_drop(1,(71 + 2), menu[0].mode);
 17790  001FA2  0E49               	movlw	73
 17791  001FA4  0101               	movlb	1	; () banked
 17792  001FA6  6F31               	movwf	display_drop@x& (0+255),b
 17793  001FA8  C002  F132         	movff	_menu+1,display_drop@mode
 17794  001FAC  0E01               	movlw	1
 17795  001FAE  EC55  F01E         	call	_display_drop
 17796  001FB2                     l13355:
 17797                           
 17798                           ;gui.c: 156: }
 17799                           ;gui.c: 159: menu[0].cur_mode = menu[0].mode;
 17800  001FB2  C002  F003         	movff	_menu+1,_menu+2
 17801                           
 17802                           ;gui.c: 160: }
 17803  001FB6  0012               	return	
 17804  001FB8                     l13357:
 17805                           
 17806                           ;gui.c: 161: else
 17807                           ;gui.c: 162: {
 17808                           ;gui.c: 163: if(focus == 1)
 17809  001FB8  044F               	decf	_focus,w,c
 17810  001FBA  A4D8               	btfss	status,2,c
 17811  001FBC  D002               	goto	l13361
 17812                           
 17813                           ;gui.c: 164: {
 17814                           ;gui.c: 165: menu[0].mode = 0x80;
 17815  001FBE  0E80               	movlw	128
 17816  001FC0  D001               	goto	L43
 17817  001FC2                     l13361:
 17818                           
 17819                           ;gui.c: 167: else
 17820                           ;gui.c: 168: {
 17821                           ;gui.c: 169: menu[0].mode = 0;
 17822  001FC2  0E00               	movlw	0
 17823  001FC4                     L43:
 17824  001FC4  6E02               	movwf	_menu+1,c
 17825                           
 17826                           ;gui.c: 170: }
 17827                           ;gui.c: 173: if(menu[0].cur_mode != menu[0].mode)
 17828  001FC6  5002               	movf	_menu+1,w,c
 17829  001FC8  1803               	xorwf	_menu+2,w,c
 17830  001FCA  B4D8               	btfsc	status,2,c
 17831  001FCC  0012               	return	
 17832                           
 17833                           ;gui.c: 174: {
 17834                           ;gui.c: 175: display_frame_abc(1,71, menu[0].mode);
 17835  001FCE  0E47               	movlw	71
 17836  001FD0  0101               	movlb	1	; () banked
 17837  001FD2  6F31               	movwf	display_frame_abc@x& (0+255),b
 17838  001FD4  C002  F132         	movff	_menu+1,display_frame_abc@mode
 17839  001FD8  0E01               	movlw	1
 17840  001FDA  EC5D  F016         	call	_display_frame_abc
 17841                           
 17842                           ;gui.c: 178: if(work_mode == 0x00)
 17843  001FDE  504D               	movf	_work_mode,w,c
 17844  001FE0  A4D8               	btfss	status,2,c
 17845  001FE2  D009               	goto	l13371
 17846                           
 17847                           ;gui.c: 179: {
 17848                           ;gui.c: 180: display_cmode(1,(71 + 2), menu[0].mode);
 17849  001FE4  0E49               	movlw	73
 17850  001FE6  0101               	movlb	1	; () banked
 17851  001FE8  6F31               	movwf	display_cmode@x& (0+255),b
 17852  001FEA  C002  F132         	movff	_menu+1,display_cmode@mode
 17853  001FEE  0E01               	movlw	1
 17854  001FF0  EC15  F01F         	call	_display_cmode
 17855                           
 17856                           ;gui.c: 181: }
 17857  001FF4  D018               	goto	l13379
 17858  001FF6                     l13371:
 17859                           
 17860                           ;gui.c: 182: else if(work_mode == 0x02)
 17861  001FF6  0E02               	movlw	2
 17862  001FF8  184D               	xorwf	_work_mode,w,c
 17863  001FFA  A4D8               	btfss	status,2,c
 17864  001FFC  D009               	goto	l13375
 17865                           
 17866                           ;gui.c: 183: {
 17867                           ;gui.c: 184: display_drop(1,(71 + 2), menu[0].mode);
 17868  001FFE  0E49               	movlw	73
 17869  002000  0101               	movlb	1	; () banked
 17870  002002  6F31               	movwf	display_drop@x& (0+255),b
 17871  002004  C002  F132         	movff	_menu+1,display_drop@mode
 17872  002008  0E01               	movlw	1
 17873  00200A  EC55  F01E         	call	_display_drop
 17874                           
 17875                           ;gui.c: 185: }
 17876  00200E  D00B               	goto	l13379
 17877  002010                     l13375:
 17878                           
 17879                           ;gui.c: 186: else if(work_mode == 0x01)
 17880  002010  044D               	decf	_work_mode,w,c
 17881  002012  A4D8               	btfss	status,2,c
 17882  002014  D008               	goto	l13379
 17883                           
 17884                           ;gui.c: 187: {
 17885                           ;gui.c: 188: display_drops(1,(71 + 2), menu[0].mode);
 17886  002016  0E49               	movlw	73
 17887  002018  0101               	movlb	1	; () banked
 17888  00201A  6F31               	movwf	display_drops@x& (0+255),b
 17889  00201C  C002  F132         	movff	_menu+1,display_drops@mode
 17890  002020  0E01               	movlw	1
 17891  002022  EC95  F01D         	call	_display_drops
 17892  002026                     l13379:
 17893                           
 17894                           ;gui.c: 189: }
 17895                           ;gui.c: 193: menu[0].cur_mode = menu[0].mode;
 17896  002026  C002  F003         	movff	_menu+1,_menu+2
 17897                           
 17898                           ;gui.c: 196: }
 17899                           ;gui.c: 199: }
 17900                           ;gui.c: 203: break;
 17901  00202A  0012               	return	
 17902  00202C                     l13381:
 17903                           
 17904                           ;gui.c: 207: if(menu[0].mode == 0x80)
 17905  00202C  0E80               	movlw	128
 17906  00202E  1802               	xorwf	_menu+1,w,c
 17907  002030  A4D8               	btfss	status,2,c
 17908  002032  D005               	goto	l13385
 17909                           
 17910                           ;gui.c: 208: {
 17911                           ;gui.c: 209: menu[0].mode = 3;
 17912  002034  0E03               	movlw	3
 17913  002036  6E02               	movwf	_menu+1,c
 17914                           
 17915                           ;gui.c: 210: flip = 1;
 17916  002038  0E01               	movlw	1
 17917  00203A  6E4E               	movwf	_flip,c
 17918                           
 17919                           ;gui.c: 211: }
 17920  00203C  D030               	goto	l13405
 17921  00203E                     l13385:
 17922                           
 17923                           ;gui.c: 212: else if(menu[0].mode == 3)
 17924  00203E  0E03               	movlw	3
 17925  002040  1802               	xorwf	_menu+1,w,c
 17926  002042  A4D8               	btfss	status,2,c
 17927  002044  D02C               	goto	l13405
 17928                           
 17929                           ;gui.c: 213: {
 17930                           ;gui.c: 216: if(work_mode == 0x01)
 17931  002046  044D               	decf	_work_mode,w,c
 17932  002048  A4D8               	btfss	status,2,c
 17933  00204A  D01C               	goto	l13397
 17934                           
 17935                           ;gui.c: 217: {
 17936                           ;gui.c: 218: display_frame_fghi(3,0, 0);
 17937  00204C  0E00               	movlw	0
 17938  00204E  0101               	movlb	1	; () banked
 17939  002050  6F31               	movwf	display_frame_fghi@x& (0+255),b
 17940  002052  0E00               	movlw	0
 17941  002054  0101               	movlb	1	; () banked
 17942  002056  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 17943  002058  0E03               	movlw	3
 17944  00205A  ECCD  F008         	call	_display_frame_fghi
 17945                           
 17946                           ;gui.c: 220: display_num(3,(0 + 17), 103);
 17947  00205E  0E11               	movlw	17
 17948  002060  0101               	movlb	1	; () banked
 17949  002062  6F31               	movwf	display_num@x& (0+255),b
 17950  002064  0E67               	movlw	103
 17951  002066  0101               	movlb	1	; () banked
 17952  002068  6F32               	movwf	display_num@mode& (0+255),b
 17953  00206A  0E03               	movlw	3
 17954  00206C  ECF0  F006         	call	_display_num
 17955                           
 17956                           ;gui.c: 222: menu[6].value = 103;
 17957  002070  0E67               	movlw	103
 17958  002072  6E35               	movwf	_menu+52,c
 17959                           
 17960                           ;gui.c: 224: menu[0].value = 0x01;
 17961  002074  0E01               	movlw	1
 17962  002076  6E05               	movwf	_menu+4,c
 17963                           
 17964                           ;gui.c: 225: hg_op.work_freq = (2*1000);
 17965  002078  0E07               	movlw	7
 17966  00207A  0100               	movlb	0	; () banked
 17967  00207C  6F9C               	movwf	(_hg_op+28)& (0+255),b
 17968  00207E  0ED0               	movlw	208
 17969  002080  6F9B               	movwf	(_hg_op+27)& (0+255),b
 17970                           
 17971                           ;gui.c: 227: }
 17972  002082  D00B               	goto	l1558
 17973  002084                     l13397:
 17974                           
 17975                           ;gui.c: 228: else if(work_mode == 0x02)
 17976  002084  0E02               	movlw	2
 17977  002086  184D               	xorwf	_work_mode,w,c
 17978  002088  A4D8               	btfss	status,2,c
 17979  00208A  D002               	goto	l13401
 17980                           
 17981                           ;gui.c: 229: {
 17982                           ;gui.c: 230: menu[0].value = 0x02;
 17983  00208C  0E02               	movlw	2
 17984  00208E  D004               	goto	L44
 17985  002090                     l13401:
 17986                           
 17987                           ;gui.c: 232: else if(work_mode == 0x00)
 17988  002090  504D               	movf	_work_mode,w,c
 17989  002092  A4D8               	btfss	status,2,c
 17990  002094  D002               	goto	l1558
 17991                           
 17992                           ;gui.c: 233: {
 17993                           ;gui.c: 234: menu[0].value = 0x00;
 17994  002096  0E00               	movlw	0
 17995  002098                     L44:
 17996  002098  6E05               	movwf	_menu+4,c
 17997  00209A                     l1558:
 17998                           
 17999                           ;gui.c: 235: }
 18000                           ;gui.c: 237: menu[0].mode = 0;
 18001  00209A  0E00               	movlw	0
 18002  00209C  6E02               	movwf	_menu+1,c
 18003  00209E                     l13405:
 18004                           
 18005                           ;gui.c: 239: }
 18006                           ;gui.c: 241: if(menu[0].cur_mode != menu[0].mode)
 18007  00209E  5002               	movf	_menu+1,w,c
 18008  0020A0  1803               	xorwf	_menu+2,w,c
 18009  0020A2  B4D8               	btfsc	status,2,c
 18010  0020A4  0012               	return	
 18011                           
 18012                           ;gui.c: 243: {
 18013                           ;gui.c: 244: if(menu[0].mode == 0)
 18014  0020A6  5002               	movf	_menu+1,w,c
 18015  0020A8  A4D8               	btfss	status,2,c
 18016  0020AA  D045               	goto	l13431
 18017                           
 18018                           ;gui.c: 245: {
 18019                           ;gui.c: 246: display_frame_abc(1,71, menu[0].mode);
 18020  0020AC  0E47               	movlw	71
 18021  0020AE  0101               	movlb	1	; () banked
 18022  0020B0  6F31               	movwf	display_frame_abc@x& (0+255),b
 18023  0020B2  C002  F132         	movff	_menu+1,display_frame_abc@mode
 18024  0020B6  0E01               	movlw	1
 18025  0020B8  EC5D  F016         	call	_display_frame_abc
 18026                           
 18027                           ;gui.c: 247: if(work_mode == 0x00)
 18028  0020BC  504D               	movf	_work_mode,w,c
 18029  0020BE  A4D8               	btfss	status,2,c
 18030  0020C0  D01E               	goto	l13419
 18031                           
 18032                           ;gui.c: 248: {
 18033                           ;gui.c: 249: display_cmode(1,(71 + 2), menu[0].mode);
 18034  0020C2  0E49               	movlw	73
 18035  0020C4  0101               	movlb	1	; () banked
 18036  0020C6  6F31               	movwf	display_cmode@x& (0+255),b
 18037  0020C8  C002  F132         	movff	_menu+1,display_cmode@mode
 18038  0020CC  0E01               	movlw	1
 18039  0020CE  EC15  F01F         	call	_display_cmode
 18040                           
 18041                           ;gui.c: 251: display_frame_fghi(2,0, 0);
 18042  0020D2  0E00               	movlw	0
 18043  0020D4  0101               	movlb	1	; () banked
 18044  0020D6  6F31               	movwf	display_frame_fghi@x& (0+255),b
 18045  0020D8  0E00               	movlw	0
 18046  0020DA  0101               	movlb	1	; () banked
 18047  0020DC  6F32               	movwf	display_frame_fghi@mode& (0+255),b
 18048  0020DE  0E02               	movlw	2
 18049  0020E0  ECCD  F008         	call	_display_frame_fghi
 18050                           
 18051                           ;gui.c: 252: display_num(3,(0 + 14), 3);
 18052  0020E4  0E0E               	movlw	14
 18053  0020E6  0101               	movlb	1	; () banked
 18054  0020E8  6F31               	movwf	display_num@x& (0+255),b
 18055  0020EA  0E03               	movlw	3
 18056  0020EC  0101               	movlb	1	; () banked
 18057  0020EE  6F32               	movwf	display_num@mode& (0+255),b
 18058  0020F0  0E03               	movlw	3
 18059  0020F2  ECF0  F006         	call	_display_num
 18060                           
 18061                           ;gui.c: 253: menu[6].value = 3;
 18062  0020F6  0E03               	movlw	3
 18063  0020F8  6E35               	movwf	_menu+52,c
 18064                           
 18065                           ;gui.c: 258: hg_op.cur_working_mode = 0x00;
 18066  0020FA  0E00               	movlw	0
 18067  0020FC  D01A               	goto	L46
 18068  0020FE                     l13419:
 18069                           
 18070                           ;gui.c: 260: else if(work_mode == 0x01)
 18071  0020FE  044D               	decf	_work_mode,w,c
 18072  002100  A4D8               	btfss	status,2,c
 18073  002102  D00A               	goto	l13425
 18074                           
 18075                           ;gui.c: 261: {
 18076                           ;gui.c: 262: display_drops(1,(71 + 2), menu[0].mode);
 18077  002104  0E49               	movlw	73
 18078  002106  0101               	movlb	1	; () banked
 18079  002108  6F31               	movwf	display_drops@x& (0+255),b
 18080  00210A  C002  F132         	movff	_menu+1,display_drops@mode
 18081  00210E  0E01               	movlw	1
 18082  002110  EC95  F01D         	call	_display_drops
 18083                           
 18084                           ;gui.c: 267: hg_op.cur_working_mode = 0x01;
 18085  002114  0E01               	movlw	1
 18086  002116  D00D               	goto	L46
 18087  002118                     l13425:
 18088                           
 18089                           ;gui.c: 269: else if(work_mode == 0x02)
 18090  002118  0E02               	movlw	2
 18091  00211A  184D               	xorwf	_work_mode,w,c
 18092  00211C  A4D8               	btfss	status,2,c
 18093  00211E  D00B               	goto	l13431
 18094                           
 18095                           ;gui.c: 270: {
 18096                           ;gui.c: 271: display_drop(1,(71 + 2), menu[0].mode);
 18097  002120  0E49               	movlw	73
 18098  002122  0101               	movlb	1	; () banked
 18099  002124  6F31               	movwf	display_drop@x& (0+255),b
 18100  002126  C002  F132         	movff	_menu+1,display_drop@mode
 18101  00212A  0E01               	movlw	1
 18102  00212C  EC55  F01E         	call	_display_drop
 18103                           
 18104                           ;gui.c: 276: hg_op.cur_working_mode = 0x02;
 18105  002130  0E02               	movlw	2
 18106  002132                     L46:
 18107  002132  0100               	movlb	0	; () banked
 18108  002134  6F81               	movwf	(_hg_op+1)& (0+255),b
 18109  002136                     l13431:
 18110                           
 18111                           ;gui.c: 277: }
 18112                           ;gui.c: 279: }
 18113                           ;gui.c: 280: menu[0].cur_mode = menu[0].mode;
 18114  002136  C002  F003         	movff	_menu+1,_menu+2
 18115                           
 18116                           ;gui.c: 292: }
 18117                           
 18118                           ;gui.c: 283: }
 18119                           ;gui.c: 291: break;
 18120  00213A  0012               	return	
 18121  00213C                     l13435:
 18122  00213C  0101               	movlb	1	; () banked
 18123  00213E  5138               	movf	menu0_MsgHandlle@key& (0+255),w,b
 18124                           
 18125                           ; Switch size 1, requested type "space"
 18126                           ; Number of cases is 3, Range of values is 241 to 243
 18127                           ; switch strategies available:
 18128                           ; Name         Instructions Cycles
 18129                           ; simple_byte           10     6 (average)
 18130                           ;	Chosen strategy is simple_byte
 18131  002140  0AF1               	xorlw	241	; case 241
 18132  002142  B4D8               	btfsc	status,2,c
 18133  002144  D68C               	goto	l13285
 18134  002146  0A03               	xorlw	3	; case 242
 18135  002148  B4D8               	btfsc	status,2,c
 18136  00214A  D6FD               	goto	l13333
 18137  00214C  0A01               	xorlw	1	; case 243
 18138  00214E  A4D8               	btfss	status,2,c
 18139  002150  0012               	return	
 18140  002152  D76C               	goto	l13381
 18141  002154                     __end_of_menu0_MsgHandlle:
 18142                           	opt stack 0
 18143                           tblptru	equ	0xFF8
 18144                           tblptrh	equ	0xFF7
 18145                           tblptrl	equ	0xFF6
 18146                           tablat	equ	0xFF5
 18147                           prodh	equ	0xFF4
 18148                           prodl	equ	0xFF3
 18149                           intcon	equ	0xFF2
 18150                           intcon3	equ	0xFF0
 18151                           postinc0	equ	0xFEE
 18152                           wreg	equ	0xFE8
 18153                           postdec1	equ	0xFE5
 18154                           fsr1h	equ	0xFE2
 18155                           fsr1l	equ	0xFE1
 18156                           postinc2	equ	0xFDE
 18157                           fsr2h	equ	0xFDA
 18158                           fsr2l	equ	0xFD9
 18159                           status	equ	0xFD8
 18160                           
 18161 ;; *************** function _display_num *****************
 18162 ;; Defined at:
 18163 ;;		line 1488 in file "../Oled.c"
 18164 ;; Parameters:    Size  Location     Type
 18165 ;;  y               1    wreg     unsigned char 
 18166 ;;  x               1    9[BANK1 ] unsigned char 
 18167 ;;  mode            1   10[BANK1 ] unsigned char 
 18168 ;; Auto vars:     Size  Location     Type
 18169 ;;  y               1   14[BANK1 ] unsigned char 
 18170 ;;  temp            1   15[BANK1 ] unsigned char 
 18171 ;;  tori            1   13[BANK1 ] unsigned char 
 18172 ;; Return value:  Size  Location     Type
 18173 ;;                  1    wreg      unsigned char 
 18174 ;; Registers used:
 18175 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18176 ;; Tracked objects:
 18177 ;;		On entry : 0/0
 18178 ;;		On exit  : 0/0
 18179 ;;		Unchanged: 0/0
 18180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18181 ;;      Params:         0       0       2       0       0       0       0
 18182 ;;      Locals:         0       0       3       0       0       0       0
 18183 ;;      Temps:          0       0       2       0       0       0       0
 18184 ;;      Totals:         0       0       7       0       0       0       0
 18185 ;;Total ram usage:        7 bytes
 18186 ;; Hardware stack levels used:    1
 18187 ;; Hardware stack levels required when called:    6
 18188 ;; This function calls:
 18189 ;;		_ee_WriteBytes
 18190 ;;		_setYX_LCD
 18191 ;; This function is called by:
 18192 ;;		_initial_ui_setting
 18193 ;;		_menu0_MsgHandlle
 18194 ;;		_menu3_MsgHandlle
 18195 ;;		_menu4_MsgHandlle
 18196 ;;		_menu5_MsgHandlle
 18197 ;;		_menu6_MsgHandlle
 18198 ;;		_check_ui_status
 18199 ;;		_blink_mode
 18200 ;;		_menu7_MsgHandlle
 18201 ;; This function uses a non-reentrant model
 18202 ;;
 18203                           
 18204                           	psect	text41
 18205  000DE0                     __ptext41:
 18206                           	opt stack 0
 18207  000DE0                     _display_num:
 18208                           	opt stack 21
 18209                           
 18210                           ;incstack = 0
 18211                           ;display_num@y stored from wreg
 18212  000DE0  0101               	movlb	1	; () banked
 18213  000DE2  6F36               	movwf	display_num@y& (0+255),b
 18214                           
 18215                           ;Oled.c: 1490: uint8_t temp =0;
 18216  000DE4  0E00               	movlw	0
 18217  000DE6  0101               	movlb	1	; () banked
 18218  000DE8  6F37               	movwf	display_num@temp& (0+255),b
 18219                           
 18220                           ;Oled.c: 1491: uint8_t tori =0;
 18221  000DEA  0E00               	movlw	0
 18222  000DEC  0101               	movlb	1	; () banked
 18223  000DEE  6F35               	movwf	display_num@tori& (0+255),b
 18224                           
 18225                           ;Oled.c: 1493: switch(mode&0x7f)
 18226  000DF0  D041               	goto	l11359
 18227  000DF2                     l11325:
 18228                           
 18229                           ; BSR set to: 1
 18230                           ;Oled.c: 1497: n_x_m = n_0_m;
 18231  000DF2  0EA3               	movlw	low _n_0_m
 18232  000DF4  6E4B               	movwf	_n_x_m,c
 18233  000DF6  0E7E               	movlw	high _n_0_m
 18234  000DF8  D03B               	goto	L61
 18235  000DFA                     l11327:
 18236                           
 18237                           ; BSR set to: 1
 18238                           ;Oled.c: 1501: n_x_m = n_1_m;
 18239  000DFA  0E6A               	movlw	low _n_1_m
 18240  000DFC  6E4B               	movwf	_n_x_m,c
 18241  000DFE  0E7E               	movlw	high _n_1_m
 18242  000E00  D037               	goto	L61
 18243  000E02                     l11329:
 18244                           
 18245                           ; BSR set to: 1
 18246                           ;Oled.c: 1505: n_x_m = n_2_m;
 18247  000E02  0EBF               	movlw	low _n_2_m
 18248  000E04  6E4B               	movwf	_n_x_m,c
 18249  000E06  0E7D               	movlw	high _n_2_m
 18250  000E08  D033               	goto	L61
 18251  000E0A                     l11331:
 18252                           
 18253                           ; BSR set to: 1
 18254                           ;Oled.c: 1509: n_x_m = n_3_m;
 18255  000E0A  0E86               	movlw	low _n_3_m
 18256  000E0C  6E4B               	movwf	_n_x_m,c
 18257  000E0E  0E7D               	movlw	high _n_3_m
 18258  000E10  D02F               	goto	L61
 18259  000E12                     l11333:
 18260                           
 18261                           ; BSR set to: 1
 18262                           ;Oled.c: 1513: n_x_m = n_4_m;
 18263  000E12  0E4D               	movlw	low _n_4_m
 18264  000E14  6E4B               	movwf	_n_x_m,c
 18265  000E16  0E7D               	movlw	high _n_4_m
 18266  000E18  D02B               	goto	L61
 18267  000E1A                     l11335:
 18268                           
 18269                           ; BSR set to: 1
 18270                           ;Oled.c: 1517: n_x_m = n_5_m;
 18271  000E1A  0EDB               	movlw	low _n_5_m
 18272  000E1C  6E4B               	movwf	_n_x_m,c
 18273  000E1E  0E7C               	movlw	high _n_5_m
 18274  000E20  D027               	goto	L61
 18275  000E22                     l11337:
 18276                           
 18277                           ; BSR set to: 1
 18278                           ;Oled.c: 1521: n_x_m = n_6_m;
 18279  000E22  0E14               	movlw	low _n_6_m
 18280  000E24  6E4B               	movwf	_n_x_m,c
 18281  000E26  0E7D               	movlw	high _n_6_m
 18282  000E28  D023               	goto	L61
 18283  000E2A                     l11339:
 18284                           
 18285                           ; BSR set to: 1
 18286                           ;Oled.c: 1525: n_x_m = n_10_m;
 18287  000E2A  0EA2               	movlw	low _n_10_m
 18288  000E2C  6E4B               	movwf	_n_x_m,c
 18289  000E2E  0E7C               	movlw	high _n_10_m
 18290  000E30  D01F               	goto	L61
 18291  000E32                     l11341:
 18292                           
 18293                           ; BSR set to: 1
 18294                           ;Oled.c: 1529: n_x_m = n_13_m;
 18295  000E32  0E69               	movlw	low _n_13_m
 18296  000E34  6E4B               	movwf	_n_x_m,c
 18297  000E36  0E7C               	movlw	high _n_13_m
 18298  000E38  D01B               	goto	L61
 18299  000E3A                     l11343:
 18300                           
 18301                           ; BSR set to: 1
 18302                           ;Oled.c: 1533: n_x_m = n_100_m;
 18303  000E3A  0E30               	movlw	low _n_100_m
 18304  000E3C  6E4B               	movwf	_n_x_m,c
 18305  000E3E  0E7C               	movlw	high _n_100_m
 18306  000E40  D017               	goto	L61
 18307  000E42                     l11345:
 18308                           
 18309                           ; BSR set to: 1
 18310                           ;Oled.c: 1537: n_x_m = n_150_m;
 18311  000E42  0EBE               	movlw	low _n_150_m
 18312  000E44  6E4B               	movwf	_n_x_m,c
 18313  000E46  0E7B               	movlw	high _n_150_m
 18314  000E48  D013               	goto	L61
 18315  000E4A                     l11347:
 18316                           
 18317                           ; BSR set to: 1
 18318                           ;Oled.c: 1541: n_x_m = n_200_m;
 18319  000E4A  0EF7               	movlw	low _n_200_m
 18320  000E4C  6E4B               	movwf	_n_x_m,c
 18321  000E4E  0E7B               	movlw	high _n_200_m
 18322  000E50  D00F               	goto	L61
 18323  000E52                     l11349:
 18324                           
 18325                           ; BSR set to: 1
 18326                           ;Oled.c: 1545: n_x_m = n_250_m;
 18327  000E52  0E4C               	movlw	low _n_250_m
 18328  000E54  6E4B               	movwf	_n_x_m,c
 18329  000E56  0E7B               	movlw	high _n_250_m
 18330  000E58  D00B               	goto	L61
 18331  000E5A                     l11351:
 18332                           
 18333                           ; BSR set to: 1
 18334                           ;Oled.c: 1549: n_x_m = n_300_m;
 18335  000E5A  0E85               	movlw	low _n_300_m
 18336  000E5C  6E4B               	movwf	_n_x_m,c
 18337  000E5E  0E7B               	movlw	high _n_300_m
 18338  000E60  D007               	goto	L61
 18339  000E62                     l11353:
 18340                           
 18341                           ; BSR set to: 1
 18342                           ;Oled.c: 1553: n_x_m = n_1P5_m;
 18343  000E62  0E31               	movlw	low _n_1P5_m
 18344  000E64  6E4B               	movwf	_n_x_m,c
 18345  000E66  0E7E               	movlw	high _n_1P5_m
 18346  000E68  D003               	goto	L61
 18347  000E6A                     l11355:
 18348                           
 18349                           ; BSR set to: 1
 18350                           ;Oled.c: 1557: n_x_m = n_2P5_m;
 18351  000E6A  0EF8               	movlw	low _n_2P5_m
 18352  000E6C  6E4B               	movwf	_n_x_m,c
 18353  000E6E  0E7D               	movlw	high _n_2P5_m
 18354  000E70                     L61:
 18355  000E70  6E4C               	movwf	_n_x_m+1,c
 18356                           
 18357                           ; BSR set to: 1
 18358                           ;Oled.c: 1560: }
 18359                           
 18360                           ;Oled.c: 1558: break;
 18361  000E72  D03D               	goto	l903
 18362  000E74                     l11359:
 18363                           
 18364                           ; BSR set to: 1
 18365  000E74  0101               	movlb	1	; () banked
 18366  000E76  5132               	movf	display_num@mode& (0+255),w,b
 18367  000E78  0B7F               	andlw	127
 18368  000E7A  0101               	movlb	1	; () banked
 18369  000E7C  6F33               	movwf	??_display_num& (0+255),b
 18370  000E7E  6B34               	clrf	(??_display_num+1)& (0+255),b
 18371                           
 18372                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 18373                           ; Switch size 1, requested type "space"
 18374                           ; Number of cases is 1, Range of values is 0 to 0
 18375                           ; switch strategies available:
 18376                           ; Name         Instructions Cycles
 18377                           ; simple_byte            4     3 (average)
 18378                           ;	Chosen strategy is simple_byte
 18379  000E80  0101               	movlb	1	; () banked
 18380  000E82  5134               	movf	(??_display_num+1)& (0+255),w,b
 18381  000E84  0A00               	xorlw	0	; case 0
 18382  000E86  A4D8               	btfss	status,2,c
 18383  000E88  D032               	goto	l903
 18384                           
 18385                           ; BSR set to: 1
 18386                           ; Switch size 1, requested type "space"
 18387                           ; Number of cases is 16, Range of values is 0 to 106
 18388                           ; switch strategies available:
 18389                           ; Name         Instructions Cycles
 18390                           ; simple_byte           49    25 (average)
 18391                           ;	Chosen strategy is simple_byte
 18392  000E8A  0101               	movlb	1	; () banked
 18393  000E8C  5133               	movf	??_display_num& (0+255),w,b
 18394  000E8E  0A00               	xorlw	0	; case 0
 18395  000E90  B4D8               	btfsc	status,2,c
 18396  000E92  D7AF               	goto	l11325
 18397  000E94  0A01               	xorlw	1	; case 1
 18398  000E96  B4D8               	btfsc	status,2,c
 18399  000E98  D7B0               	goto	l11327
 18400  000E9A  0A03               	xorlw	3	; case 2
 18401  000E9C  B4D8               	btfsc	status,2,c
 18402  000E9E  D7B1               	goto	l11329
 18403  000EA0  0A01               	xorlw	1	; case 3
 18404  000EA2  B4D8               	btfsc	status,2,c
 18405  000EA4  D7B2               	goto	l11331
 18406  000EA6  0A07               	xorlw	7	; case 4
 18407  000EA8  B4D8               	btfsc	status,2,c
 18408  000EAA  D7B3               	goto	l11333
 18409  000EAC  0A01               	xorlw	1	; case 5
 18410  000EAE  B4D8               	btfsc	status,2,c
 18411  000EB0  D7B4               	goto	l11335
 18412  000EB2  0A03               	xorlw	3	; case 6
 18413  000EB4  B4D8               	btfsc	status,2,c
 18414  000EB6  D7B5               	goto	l11337
 18415  000EB8  0A0C               	xorlw	12	; case 10
 18416  000EBA  B4D8               	btfsc	status,2,c
 18417  000EBC  D7B6               	goto	l11339
 18418  000EBE  0A07               	xorlw	7	; case 13
 18419  000EC0  B4D8               	btfsc	status,2,c
 18420  000EC2  D7B7               	goto	l11341
 18421  000EC4  0A69               	xorlw	105	; case 100
 18422  000EC6  B4D8               	btfsc	status,2,c
 18423  000EC8  D7B8               	goto	l11343
 18424  000ECA  0A01               	xorlw	1	; case 101
 18425  000ECC  B4D8               	btfsc	status,2,c
 18426  000ECE  D7B9               	goto	l11345
 18427  000ED0  0A03               	xorlw	3	; case 102
 18428  000ED2  B4D8               	btfsc	status,2,c
 18429  000ED4  D7BA               	goto	l11347
 18430  000ED6  0A01               	xorlw	1	; case 103
 18431  000ED8  B4D8               	btfsc	status,2,c
 18432  000EDA  D7BB               	goto	l11349
 18433  000EDC  0A0F               	xorlw	15	; case 104
 18434  000EDE  B4D8               	btfsc	status,2,c
 18435  000EE0  D7BC               	goto	l11351
 18436  000EE2  0A01               	xorlw	1	; case 105
 18437  000EE4  B4D8               	btfsc	status,2,c
 18438  000EE6  D7BD               	goto	l11353
 18439  000EE8  0A03               	xorlw	3	; case 106
 18440  000EEA  B4D8               	btfsc	status,2,c
 18441  000EEC  D7BE               	goto	l11355
 18442  000EEE                     l903:
 18443                           
 18444                           ; BSR set to: 1
 18445                           ;Oled.c: 1563: if((mode&0x80) == 0)
 18446  000EEE  0101               	movlb	1	; () banked
 18447  000EF0  BF32               	btfsc	display_num@mode& (0+255),7,b
 18448  000EF2  D0A0               	goto	l919
 18449                           
 18450                           ; BSR set to: 1
 18451                           ;Oled.c: 1564: {
 18452                           ;Oled.c: 1567: setYX_LCD(2+y,x);
 18453  000EF4  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18454  000EF8  0101               	movlb	1	; () banked
 18455  000EFA  5136               	movf	display_num@y& (0+255),w,b
 18456  000EFC  0F02               	addlw	2
 18457  000EFE  EC8E  F024         	call	_setYX_LCD
 18458                           
 18459                           ;Oled.c: 1568: for(ms=0;ms<19;ms++)
 18460  000F02  0E00               	movlw	0
 18461  000F04  6E69               	movwf	_ms,c
 18462  000F06                     l11365:
 18463  000F06  0E12               	movlw	18
 18464  000F08  6469               	cpfsgt	_ms,c
 18465  000F0A  D001               	goto	l11369
 18466  000F0C  D025               	goto	l11377
 18467  000F0E                     l11369:
 18468                           
 18469                           ;Oled.c: 1569: {
 18470                           ;Oled.c: 1571: temp = n_x_m[0][ms];
 18471  000F0E  5069               	movf	_ms,w,c
 18472  000F10  0D01               	mullw	1
 18473  000F12  C04B  F133         	movff	_n_x_m,??_display_num
 18474  000F16  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18475  000F1A  50F3               	movf	prodl,w,c
 18476  000F1C  0101               	movlb	1	; () banked
 18477  000F1E  2733               	addwf	??_display_num& (0+255),f,b
 18478  000F20  50F4               	movf	prodh,w,c
 18479  000F22  0101               	movlb	1	; () banked
 18480  000F24  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18481  000F26  C133  FFF6         	movff	??_display_num,tblptrl
 18482  000F2A  C134  FFF7         	movff	??_display_num+1,tblptrh
 18483  000F2E                     	if	0	;tblptru may be non-zero
 18484  000F2E                     	endif
 18485  000F2E                     	if	0	;tblptru may be non-zero
 18486  000F2E                     	endif
 18487  000F2E  0008               	tblrd		*
 18488  000F30  CFF5 F137          	movff	tablat,display_num@temp
 18489                           
 18490                           ; BSR set to: 1
 18491                           ;Oled.c: 1572: ee_WriteBytes(&temp, 0x40, 1);
 18492  000F34  0E37               	movlw	low display_num@temp
 18493  000F36  0101               	movlb	1	; () banked
 18494  000F38  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18495  000F3A  0E01               	movlw	high display_num@temp
 18496  000F3C  0101               	movlb	1	; () banked
 18497  000F3E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18498  000F40  0E40               	movlw	64
 18499  000F42  0101               	movlb	1	; () banked
 18500  000F44  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18501  000F46  0E00               	movlw	0
 18502  000F48  0101               	movlb	1	; () banked
 18503  000F4A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18504  000F4C  0E01               	movlw	1
 18505  000F4E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18506  000F50  EC88  F025         	call	_ee_WriteBytes	;wreg free
 18507  000F54  2A69               	incf	_ms,f,c
 18508  000F56  D7D7               	goto	l11365
 18509  000F58                     l11377:
 18510                           
 18511                           ;Oled.c: 1573: }
 18512                           ;Oled.c: 1576: setYX_LCD(3+y,x);
 18513  000F58  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18514  000F5C  0101               	movlb	1	; () banked
 18515  000F5E  5136               	movf	display_num@y& (0+255),w,b
 18516  000F60  0F03               	addlw	3
 18517  000F62  EC8E  F024         	call	_setYX_LCD
 18518                           
 18519                           ;Oled.c: 1577: for(ms=0;ms<19;ms++)
 18520  000F66  0E00               	movlw	0
 18521  000F68  6E69               	movwf	_ms,c
 18522  000F6A                     l11381:
 18523  000F6A  0E12               	movlw	18
 18524  000F6C  6469               	cpfsgt	_ms,c
 18525  000F6E  D001               	goto	l11385
 18526  000F70  D02A               	goto	l11393
 18527  000F72                     l11385:
 18528                           
 18529                           ;Oled.c: 1578: {
 18530                           ;Oled.c: 1580: temp = n_x_m[1][ms];
 18531  000F72  5069               	movf	_ms,w,c
 18532  000F74  0D01               	mullw	1
 18533  000F76  C04B  F133         	movff	_n_x_m,??_display_num
 18534  000F7A  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18535  000F7E  50F3               	movf	prodl,w,c
 18536  000F80  0101               	movlb	1	; () banked
 18537  000F82  2733               	addwf	??_display_num& (0+255),f,b
 18538  000F84  50F4               	movf	prodh,w,c
 18539  000F86  0101               	movlb	1	; () banked
 18540  000F88  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18541  000F8A  0E13               	movlw	19
 18542  000F8C  0101               	movlb	1	; () banked
 18543  000F8E  2733               	addwf	??_display_num& (0+255),f,b
 18544  000F90  0E00               	movlw	0
 18545  000F92  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18546  000F94  C133  FFF6         	movff	??_display_num,tblptrl
 18547  000F98  C134  FFF7         	movff	??_display_num+1,tblptrh
 18548  000F9C                     	if	0	;tblptru may be non-zero
 18549  000F9C                     	endif
 18550  000F9C                     	if	0	;tblptru may be non-zero
 18551  000F9C                     	endif
 18552  000F9C  0008               	tblrd		*
 18553  000F9E  CFF5 F137          	movff	tablat,display_num@temp
 18554                           
 18555                           ; BSR set to: 1
 18556                           ;Oled.c: 1582: ee_WriteBytes(&temp, 0x40, 1);
 18557  000FA2  0E37               	movlw	low display_num@temp
 18558  000FA4  0101               	movlb	1	; () banked
 18559  000FA6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18560  000FA8  0E01               	movlw	high display_num@temp
 18561  000FAA  0101               	movlb	1	; () banked
 18562  000FAC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18563  000FAE  0E40               	movlw	64
 18564  000FB0  0101               	movlb	1	; () banked
 18565  000FB2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18566  000FB4  0E00               	movlw	0
 18567  000FB6  0101               	movlb	1	; () banked
 18568  000FB8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18569  000FBA  0E01               	movlw	1
 18570  000FBC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18571  000FBE  EC88  F025         	call	_ee_WriteBytes	;wreg free
 18572  000FC2  2A69               	incf	_ms,f,c
 18573  000FC4  D7D2               	goto	l11381
 18574  000FC6                     l11393:
 18575                           
 18576                           ;Oled.c: 1583: }
 18577                           ;Oled.c: 1587: setYX_LCD(4+y,x);
 18578  000FC6  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18579  000FCA  0101               	movlb	1	; () banked
 18580  000FCC  5136               	movf	display_num@y& (0+255),w,b
 18581  000FCE  0F04               	addlw	4
 18582  000FD0  EC8E  F024         	call	_setYX_LCD
 18583                           
 18584                           ;Oled.c: 1588: for(ms=0;ms<19;ms++)
 18585  000FD4  0E00               	movlw	0
 18586  000FD6  6E69               	movwf	_ms,c
 18587  000FD8                     l11397:
 18588  000FD8  0E12               	movlw	18
 18589  000FDA  6469               	cpfsgt	_ms,c
 18590  000FDC  D001               	goto	l11401
 18591  000FDE  0012               	return	
 18592  000FE0                     l11401:
 18593                           
 18594                           ;Oled.c: 1589: {
 18595                           ;Oled.c: 1591: temp = n_x_m[2][ms];
 18596  000FE0  5069               	movf	_ms,w,c
 18597  000FE2  0D01               	mullw	1
 18598  000FE4  C04B  F133         	movff	_n_x_m,??_display_num
 18599  000FE8  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18600  000FEC  50F3               	movf	prodl,w,c
 18601  000FEE  0101               	movlb	1	; () banked
 18602  000FF0  2733               	addwf	??_display_num& (0+255),f,b
 18603  000FF2  50F4               	movf	prodh,w,c
 18604  000FF4  0101               	movlb	1	; () banked
 18605  000FF6  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18606  000FF8  0E26               	movlw	38
 18607  000FFA  0101               	movlb	1	; () banked
 18608  000FFC  2733               	addwf	??_display_num& (0+255),f,b
 18609  000FFE  0E00               	movlw	0
 18610  001000  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18611  001002  C133  FFF6         	movff	??_display_num,tblptrl
 18612  001006  C134  FFF7         	movff	??_display_num+1,tblptrh
 18613  00100A                     	if	0	;tblptru may be non-zero
 18614  00100A                     	endif
 18615  00100A                     	if	0	;tblptru may be non-zero
 18616  00100A                     	endif
 18617  00100A  0008               	tblrd		*
 18618  00100C  CFF5 F137          	movff	tablat,display_num@temp
 18619                           
 18620                           ; BSR set to: 1
 18621                           ;Oled.c: 1592: ee_WriteBytes(&temp, 0x40, 1);
 18622  001010  0E37               	movlw	low display_num@temp
 18623  001012  0101               	movlb	1	; () banked
 18624  001014  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18625  001016  0E01               	movlw	high display_num@temp
 18626  001018  0101               	movlb	1	; () banked
 18627  00101A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18628  00101C  0E40               	movlw	64
 18629  00101E  0101               	movlb	1	; () banked
 18630  001020  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18631  001022  0E00               	movlw	0
 18632  001024  0101               	movlb	1	; () banked
 18633  001026  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18634  001028  0E01               	movlw	1
 18635  00102A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18636  00102C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 18637  001030  2A69               	incf	_ms,f,c
 18638  001032  D7D2               	goto	l11397
 18639  001034                     l919:
 18640                           
 18641                           ; BSR set to: 1
 18642                           ;Oled.c: 1595: else if((mode&0x80) == 0x80)
 18643  001034  0101               	movlb	1	; () banked
 18644  001036  AF32               	btfss	display_num@mode& (0+255),7,b
 18645  001038  0012               	return	
 18646                           
 18647                           ; BSR set to: 1
 18648                           ;Oled.c: 1596: {
 18649                           ;Oled.c: 1599: setYX_LCD(2+y,x);
 18650  00103A  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18651  00103E  0101               	movlb	1	; () banked
 18652  001040  5136               	movf	display_num@y& (0+255),w,b
 18653  001042  0F02               	addlw	2
 18654  001044  EC8E  F024         	call	_setYX_LCD
 18655                           
 18656                           ;Oled.c: 1600: for(ms=0;ms<19;ms++)
 18657  001048  0E00               	movlw	0
 18658  00104A  6E69               	movwf	_ms,c
 18659  00104C                     l11413:
 18660  00104C  0E12               	movlw	18
 18661  00104E  6469               	cpfsgt	_ms,c
 18662  001050  D001               	goto	l11417
 18663  001052  D02C               	goto	l11431
 18664  001054                     l11417:
 18665                           
 18666                           ;Oled.c: 1601: {
 18667                           ;Oled.c: 1603: temp = n_x_m[0][ms];
 18668  001054  5069               	movf	_ms,w,c
 18669  001056  0D01               	mullw	1
 18670  001058  C04B  F133         	movff	_n_x_m,??_display_num
 18671  00105C  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18672  001060  50F3               	movf	prodl,w,c
 18673  001062  0101               	movlb	1	; () banked
 18674  001064  2733               	addwf	??_display_num& (0+255),f,b
 18675  001066  50F4               	movf	prodh,w,c
 18676  001068  0101               	movlb	1	; () banked
 18677  00106A  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18678  00106C  C133  FFF6         	movff	??_display_num,tblptrl
 18679  001070  C134  FFF7         	movff	??_display_num+1,tblptrh
 18680  001074                     	if	0	;tblptru may be non-zero
 18681  001074                     	endif
 18682  001074                     	if	0	;tblptru may be non-zero
 18683  001074                     	endif
 18684  001074  0008               	tblrd		*
 18685  001076  CFF5 F137          	movff	tablat,display_num@temp
 18686                           
 18687                           ; BSR set to: 1
 18688                           ;Oled.c: 1604: tori = temp;
 18689  00107A  C137  F135         	movff	display_num@temp,display_num@tori
 18690                           
 18691                           ; BSR set to: 1
 18692                           ;Oled.c: 1606: temp = ~temp;
 18693  00107E  0101               	movlb	1	; () banked
 18694  001080  1F37               	comf	display_num@temp& (0+255),f,b
 18695                           
 18696                           ; BSR set to: 1
 18697                           ;Oled.c: 1607: temp &= 0x3f;
 18698  001082  0E3F               	movlw	63
 18699  001084  0101               	movlb	1	; () banked
 18700  001086  1737               	andwf	display_num@temp& (0+255),f,b
 18701                           
 18702                           ; BSR set to: 1
 18703                           ;Oled.c: 1609: ee_WriteBytes(&temp, 0x40, 1);
 18704  001088  0E37               	movlw	low display_num@temp
 18705  00108A  0101               	movlb	1	; () banked
 18706  00108C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18707  00108E  0E01               	movlw	high display_num@temp
 18708  001090  0101               	movlb	1	; () banked
 18709  001092  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18710  001094  0E40               	movlw	64
 18711  001096  0101               	movlb	1	; () banked
 18712  001098  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18713  00109A  0E00               	movlw	0
 18714  00109C  0101               	movlb	1	; () banked
 18715  00109E  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18716  0010A0  0E01               	movlw	1
 18717  0010A2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18718  0010A4  EC88  F025         	call	_ee_WriteBytes	;wreg free
 18719  0010A8  2A69               	incf	_ms,f,c
 18720  0010AA  D7D0               	goto	l11413
 18721  0010AC                     l11431:
 18722                           
 18723                           ;Oled.c: 1610: }
 18724                           ;Oled.c: 1613: setYX_LCD(3+y,x);
 18725  0010AC  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18726  0010B0  0101               	movlb	1	; () banked
 18727  0010B2  5136               	movf	display_num@y& (0+255),w,b
 18728  0010B4  0F03               	addlw	3
 18729  0010B6  EC8E  F024         	call	_setYX_LCD
 18730                           
 18731                           ;Oled.c: 1614: for(ms=0;ms<19;ms++)
 18732  0010BA  0E00               	movlw	0
 18733  0010BC  6E69               	movwf	_ms,c
 18734  0010BE                     l11435:
 18735  0010BE  0E12               	movlw	18
 18736  0010C0  6469               	cpfsgt	_ms,c
 18737  0010C2  D001               	goto	l11439
 18738  0010C4  D02E               	goto	l11451
 18739  0010C6                     l11439:
 18740                           
 18741                           ;Oled.c: 1615: {
 18742                           ;Oled.c: 1617: temp = n_x_m[1][ms];
 18743  0010C6  5069               	movf	_ms,w,c
 18744  0010C8  0D01               	mullw	1
 18745  0010CA  C04B  F133         	movff	_n_x_m,??_display_num
 18746  0010CE  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18747  0010D2  50F3               	movf	prodl,w,c
 18748  0010D4  0101               	movlb	1	; () banked
 18749  0010D6  2733               	addwf	??_display_num& (0+255),f,b
 18750  0010D8  50F4               	movf	prodh,w,c
 18751  0010DA  0101               	movlb	1	; () banked
 18752  0010DC  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18753  0010DE  0E13               	movlw	19
 18754  0010E0  0101               	movlb	1	; () banked
 18755  0010E2  2733               	addwf	??_display_num& (0+255),f,b
 18756  0010E4  0E00               	movlw	0
 18757  0010E6  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18758  0010E8  C133  FFF6         	movff	??_display_num,tblptrl
 18759  0010EC  C134  FFF7         	movff	??_display_num+1,tblptrh
 18760  0010F0                     	if	0	;tblptru may be non-zero
 18761  0010F0                     	endif
 18762  0010F0                     	if	0	;tblptru may be non-zero
 18763  0010F0                     	endif
 18764  0010F0  0008               	tblrd		*
 18765  0010F2  CFF5 F137          	movff	tablat,display_num@temp
 18766                           
 18767                           ; BSR set to: 1
 18768                           ;Oled.c: 1618: tori = temp;
 18769  0010F6  C137  F135         	movff	display_num@temp,display_num@tori
 18770                           
 18771                           ; BSR set to: 1
 18772                           ;Oled.c: 1620: temp = ~temp;
 18773  0010FA  0101               	movlb	1	; () banked
 18774  0010FC  1F37               	comf	display_num@temp& (0+255),f,b
 18775                           
 18776                           ; BSR set to: 1
 18777                           ;Oled.c: 1622: ee_WriteBytes(&temp, 0x40, 1);
 18778  0010FE  0E37               	movlw	low display_num@temp
 18779  001100  0101               	movlb	1	; () banked
 18780  001102  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18781  001104  0E01               	movlw	high display_num@temp
 18782  001106  0101               	movlb	1	; () banked
 18783  001108  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18784  00110A  0E40               	movlw	64
 18785  00110C  0101               	movlb	1	; () banked
 18786  00110E  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18787  001110  0E00               	movlw	0
 18788  001112  0101               	movlb	1	; () banked
 18789  001114  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18790  001116  0E01               	movlw	1
 18791  001118  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18792  00111A  EC88  F025         	call	_ee_WriteBytes	;wreg free
 18793  00111E  2A69               	incf	_ms,f,c
 18794  001120  D7CE               	goto	l11435
 18795  001122                     l11451:
 18796                           
 18797                           ;Oled.c: 1623: }
 18798                           ;Oled.c: 1626: setYX_LCD(4+y,x);
 18799  001122  C131  F0FF         	movff	display_num@x,setYX_LCD@px
 18800  001126  0101               	movlb	1	; () banked
 18801  001128  5136               	movf	display_num@y& (0+255),w,b
 18802  00112A  0F04               	addlw	4
 18803  00112C  EC8E  F024         	call	_setYX_LCD
 18804                           
 18805                           ;Oled.c: 1627: for(ms=0;ms<19;ms++)
 18806  001130  0E00               	movlw	0
 18807  001132  6E69               	movwf	_ms,c
 18808  001134                     l11455:
 18809  001134  0E12               	movlw	18
 18810  001136  6469               	cpfsgt	_ms,c
 18811  001138  D001               	goto	l11459
 18812  00113A  0012               	return	
 18813  00113C                     l11459:
 18814                           
 18815                           ;Oled.c: 1628: {
 18816                           ;Oled.c: 1630: temp = n_x_m[2][ms];
 18817  00113C  5069               	movf	_ms,w,c
 18818  00113E  0D01               	mullw	1
 18819  001140  C04B  F133         	movff	_n_x_m,??_display_num
 18820  001144  C04C  F134         	movff	_n_x_m+1,??_display_num+1
 18821  001148  50F3               	movf	prodl,w,c
 18822  00114A  0101               	movlb	1	; () banked
 18823  00114C  2733               	addwf	??_display_num& (0+255),f,b
 18824  00114E  50F4               	movf	prodh,w,c
 18825  001150  0101               	movlb	1	; () banked
 18826  001152  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18827  001154  0E26               	movlw	38
 18828  001156  0101               	movlb	1	; () banked
 18829  001158  2733               	addwf	??_display_num& (0+255),f,b
 18830  00115A  0E00               	movlw	0
 18831  00115C  2334               	addwfc	(??_display_num+1)& (0+255),f,b
 18832  00115E  C133  FFF6         	movff	??_display_num,tblptrl
 18833  001162  C134  FFF7         	movff	??_display_num+1,tblptrh
 18834  001166                     	if	0	;tblptru may be non-zero
 18835  001166                     	endif
 18836  001166                     	if	0	;tblptru may be non-zero
 18837  001166                     	endif
 18838  001166  0008               	tblrd		*
 18839  001168  CFF5 F137          	movff	tablat,display_num@temp
 18840                           
 18841                           ; BSR set to: 1
 18842                           ;Oled.c: 1631: tori = temp;
 18843  00116C  C137  F135         	movff	display_num@temp,display_num@tori
 18844                           
 18845                           ; BSR set to: 1
 18846                           ;Oled.c: 1633: temp = 0xf0;
 18847  001170  0EF0               	movlw	240
 18848  001172  0101               	movlb	1	; () banked
 18849  001174  6F37               	movwf	display_num@temp& (0+255),b
 18850                           
 18851                           ; BSR set to: 1
 18852                           ;Oled.c: 1636: ee_WriteBytes(&temp, 0x40, 1);
 18853  001176  0E37               	movlw	low display_num@temp
 18854  001178  0101               	movlb	1	; () banked
 18855  00117A  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 18856  00117C  0E01               	movlw	high display_num@temp
 18857  00117E  0101               	movlb	1	; () banked
 18858  001180  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 18859  001182  0E40               	movlw	64
 18860  001184  0101               	movlb	1	; () banked
 18861  001186  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 18862  001188  0E00               	movlw	0
 18863  00118A  0101               	movlb	1	; () banked
 18864  00118C  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 18865  00118E  0E01               	movlw	1
 18866  001190  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 18867  001192  EC88  F025         	call	_ee_WriteBytes	;wreg free
 18868  001196  2A69               	incf	_ms,f,c
 18869  001198  D7CD               	goto	l11455
 18870  00119A                     __end_of_display_num:
 18871                           	opt stack 0
 18872                           tblptru	equ	0xFF8
 18873                           tblptrh	equ	0xFF7
 18874                           tblptrl	equ	0xFF6
 18875                           tablat	equ	0xFF5
 18876                           prodh	equ	0xFF4
 18877                           prodl	equ	0xFF3
 18878                           intcon	equ	0xFF2
 18879                           intcon3	equ	0xFF0
 18880                           postinc0	equ	0xFEE
 18881                           wreg	equ	0xFE8
 18882                           postdec1	equ	0xFE5
 18883                           fsr1h	equ	0xFE2
 18884                           fsr1l	equ	0xFE1
 18885                           postinc2	equ	0xFDE
 18886                           fsr2h	equ	0xFDA
 18887                           fsr2l	equ	0xFD9
 18888                           status	equ	0xFD8
 18889                           
 18890 ;; *************** function _display_frame_fghi *****************
 18891 ;; Defined at:
 18892 ;;		line 2777 in file "../Oled.c"
 18893 ;; Parameters:    Size  Location     Type
 18894 ;;  y               1    wreg     unsigned char 
 18895 ;;  x               1    9[BANK1 ] unsigned char 
 18896 ;;  mode            1   10[BANK1 ] unsigned char 
 18897 ;; Auto vars:     Size  Location     Type
 18898 ;;  y               1   14[BANK1 ] unsigned char 
 18899 ;;  temp            1   15[BANK1 ] unsigned char 
 18900 ;;  tori            1   13[BANK1 ] unsigned char 
 18901 ;; Return value:  Size  Location     Type
 18902 ;;                  1    wreg      unsigned char 
 18903 ;; Registers used:
 18904 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18905 ;; Tracked objects:
 18906 ;;		On entry : 0/0
 18907 ;;		On exit  : 0/0
 18908 ;;		Unchanged: 0/0
 18909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18910 ;;      Params:         0       0       2       0       0       0       0
 18911 ;;      Locals:         0       0       3       0       0       0       0
 18912 ;;      Temps:          0       0       2       0       0       0       0
 18913 ;;      Totals:         0       0       7       0       0       0       0
 18914 ;;Total ram usage:        7 bytes
 18915 ;; Hardware stack levels used:    1
 18916 ;; Hardware stack levels required when called:    6
 18917 ;; This function calls:
 18918 ;;		_ee_WriteBytes
 18919 ;;		_setYX_LCD
 18920 ;; This function is called by:
 18921 ;;		_initial_ui_setting
 18922 ;;		_menu0_MsgHandlle
 18923 ;;		_menu5_MsgHandlle
 18924 ;;		_menu6_MsgHandlle
 18925 ;;		_check_ui_status
 18926 ;;		_menu7_MsgHandlle
 18927 ;; This function uses a non-reentrant model
 18928 ;;
 18929                           
 18930                           	psect	text42
 18931  00119A                     __ptext42:
 18932                           	opt stack 0
 18933  00119A                     _display_frame_fghi:
 18934                           	opt stack 21
 18935                           
 18936                           ;incstack = 0
 18937                           ;display_frame_fghi@y stored from wreg
 18938  00119A  0101               	movlb	1	; () banked
 18939  00119C  6F36               	movwf	display_frame_fghi@y& (0+255),b
 18940                           
 18941                           ;Oled.c: 2779: uint8_t temp =0;
 18942  00119E  0E00               	movlw	0
 18943  0011A0  0101               	movlb	1	; () banked
 18944  0011A2  6F37               	movwf	display_frame_fghi@temp& (0+255),b
 18945                           
 18946                           ;Oled.c: 2780: uint8_t tori =0;
 18947  0011A4  0E00               	movlw	0
 18948  0011A6  0101               	movlb	1	; () banked
 18949  0011A8  6F35               	movwf	display_frame_fghi@tori& (0+255),b
 18950                           
 18951                           ;Oled.c: 2782: switch(y)
 18952  0011AA  D011               	goto	l12165
 18953  0011AC                     l12155:
 18954                           
 18955                           ; BSR set to: 1
 18956                           ;Oled.c: 2785: ptnx_frame = ptnf_frame;
 18957  0011AC  0EBC               	movlw	low _ptnf_frame
 18958  0011AE  6E45               	movwf	_ptnx_frame,c
 18959  0011B0  0E7A               	movlw	high _ptnf_frame
 18960  0011B2  D00B               	goto	L64
 18961  0011B4                     l12157:
 18962                           
 18963                           ; BSR set to: 1
 18964                           ;Oled.c: 2789: ptnx_frame = ptng_frame;
 18965  0011B4  0E2C               	movlw	low _ptng_frame
 18966  0011B6  6E45               	movwf	_ptnx_frame,c
 18967  0011B8  0E7A               	movlw	high _ptng_frame
 18968  0011BA  D007               	goto	L64
 18969  0011BC                     l12159:
 18970                           
 18971                           ; BSR set to: 1
 18972                           ;Oled.c: 2793: ptnx_frame = ptnh_frame;
 18973  0011BC  0E9C               	movlw	low _ptnh_frame
 18974  0011BE  6E45               	movwf	_ptnx_frame,c
 18975  0011C0  0E79               	movlw	high _ptnh_frame
 18976  0011C2  D003               	goto	L64
 18977  0011C4                     l12161:
 18978                           
 18979                           ; BSR set to: 1
 18980                           ;Oled.c: 2797: ptnx_frame = ptni_frame;
 18981  0011C4  0E0C               	movlw	low _ptni_frame
 18982  0011C6  6E45               	movwf	_ptnx_frame,c
 18983  0011C8  0E79               	movlw	high _ptni_frame
 18984  0011CA                     L64:
 18985  0011CA  6E46               	movwf	_ptnx_frame+1,c
 18986                           
 18987                           ; BSR set to: 1
 18988                           ;Oled.c: 2800: }
 18989                           
 18990                           ;Oled.c: 2798: break;
 18991  0011CC  D00E               	goto	l12167
 18992  0011CE                     l12165:
 18993                           
 18994                           ; BSR set to: 1
 18995  0011CE  0101               	movlb	1	; () banked
 18996  0011D0  5136               	movf	display_frame_fghi@y& (0+255),w,b
 18997                           
 18998                           ; Switch size 1, requested type "space"
 18999                           ; Number of cases is 4, Range of values is 1 to 4
 19000                           ; switch strategies available:
 19001                           ; Name         Instructions Cycles
 19002                           ; simple_byte           13     7 (average)
 19003                           ;	Chosen strategy is simple_byte
 19004  0011D2  0A01               	xorlw	1	; case 1
 19005  0011D4  B4D8               	btfsc	status,2,c
 19006  0011D6  D7EA               	goto	l12155
 19007  0011D8  0A03               	xorlw	3	; case 2
 19008  0011DA  B4D8               	btfsc	status,2,c
 19009  0011DC  D7EB               	goto	l12157
 19010  0011DE  0A01               	xorlw	1	; case 3
 19011  0011E0  B4D8               	btfsc	status,2,c
 19012  0011E2  D7EC               	goto	l12159
 19013  0011E4  0A07               	xorlw	7	; case 4
 19014  0011E6  B4D8               	btfsc	status,2,c
 19015  0011E8  D7ED               	goto	l12161
 19016  0011EA                     l12167:
 19017                           
 19018                           ; BSR set to: 1
 19019                           ;Oled.c: 2802: if(mode == 0)
 19020  0011EA  0101               	movlb	1	; () banked
 19021  0011EC  5132               	movf	display_frame_fghi@mode& (0+255),w,b
 19022  0011EE  0101               	movlb	1	; () banked
 19023  0011F0  A4D8               	btfss	status,2,c
 19024  0011F2  D09A               	goto	l12217
 19025                           
 19026                           ; BSR set to: 1
 19027                           ;Oled.c: 2803: {
 19028                           ;Oled.c: 2805: setYX_LCD(5,x);
 19029  0011F4  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19030  0011F8  0E05               	movlw	5
 19031  0011FA  EC8E  F024         	call	_setYX_LCD
 19032                           
 19033                           ;Oled.c: 2806: for(ms=0;ms<48;ms++)
 19034  0011FE  0E00               	movlw	0
 19035  001200  6E69               	movwf	_ms,c
 19036  001202                     l12173:
 19037  001202  0E2F               	movlw	47
 19038  001204  6469               	cpfsgt	_ms,c
 19039  001206  D001               	goto	l12177
 19040  001208  D025               	goto	l12185
 19041  00120A                     l12177:
 19042                           
 19043                           ;Oled.c: 2807: {
 19044                           ;Oled.c: 2808: temp = ptnx_frame[0][ms];
 19045  00120A  5069               	movf	_ms,w,c
 19046  00120C  0D01               	mullw	1
 19047  00120E  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19048  001212  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19049  001216  50F3               	movf	prodl,w,c
 19050  001218  0101               	movlb	1	; () banked
 19051  00121A  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19052  00121C  50F4               	movf	prodh,w,c
 19053  00121E  0101               	movlb	1	; () banked
 19054  001220  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19055  001222  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19056  001226  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19057  00122A                     	if	0	;tblptru may be non-zero
 19058  00122A                     	endif
 19059  00122A                     	if	0	;tblptru may be non-zero
 19060  00122A                     	endif
 19061  00122A  0008               	tblrd		*
 19062  00122C  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19063                           
 19064                           ; BSR set to: 1
 19065                           ;Oled.c: 2809: ee_WriteBytes(&temp, 0x40, 1);
 19066  001230  0E37               	movlw	low display_frame_fghi@temp
 19067  001232  0101               	movlb	1	; () banked
 19068  001234  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19069  001236  0E01               	movlw	high display_frame_fghi@temp
 19070  001238  0101               	movlb	1	; () banked
 19071  00123A  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19072  00123C  0E40               	movlw	64
 19073  00123E  0101               	movlb	1	; () banked
 19074  001240  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19075  001242  0E00               	movlw	0
 19076  001244  0101               	movlb	1	; () banked
 19077  001246  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19078  001248  0E01               	movlw	1
 19079  00124A  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19080  00124C  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19081  001250  2A69               	incf	_ms,f,c
 19082  001252  D7D7               	goto	l12173
 19083  001254                     l12185:
 19084                           
 19085                           ;Oled.c: 2810: }
 19086                           ;Oled.c: 2813: setYX_LCD(6,x);
 19087  001254  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19088  001258  0E06               	movlw	6
 19089  00125A  EC8E  F024         	call	_setYX_LCD
 19090                           
 19091                           ;Oled.c: 2814: for(ms=0;ms<48;ms++)
 19092  00125E  0E00               	movlw	0
 19093  001260  6E69               	movwf	_ms,c
 19094  001262                     l12189:
 19095  001262  0E2F               	movlw	47
 19096  001264  6469               	cpfsgt	_ms,c
 19097  001266  D001               	goto	l12193
 19098  001268  D02A               	goto	l12201
 19099  00126A                     l12193:
 19100                           
 19101                           ;Oled.c: 2815: {
 19102                           ;Oled.c: 2816: temp = ptnx_frame[1][ms];
 19103  00126A  5069               	movf	_ms,w,c
 19104  00126C  0D01               	mullw	1
 19105  00126E  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19106  001272  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19107  001276  50F3               	movf	prodl,w,c
 19108  001278  0101               	movlb	1	; () banked
 19109  00127A  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19110  00127C  50F4               	movf	prodh,w,c
 19111  00127E  0101               	movlb	1	; () banked
 19112  001280  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19113  001282  0E30               	movlw	48
 19114  001284  0101               	movlb	1	; () banked
 19115  001286  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19116  001288  0E00               	movlw	0
 19117  00128A  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19118  00128C  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19119  001290  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19120  001294                     	if	0	;tblptru may be non-zero
 19121  001294                     	endif
 19122  001294                     	if	0	;tblptru may be non-zero
 19123  001294                     	endif
 19124  001294  0008               	tblrd		*
 19125  001296  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19126                           
 19127                           ; BSR set to: 1
 19128                           ;Oled.c: 2818: ee_WriteBytes(&temp, 0x40, 1);
 19129  00129A  0E37               	movlw	low display_frame_fghi@temp
 19130  00129C  0101               	movlb	1	; () banked
 19131  00129E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19132  0012A0  0E01               	movlw	high display_frame_fghi@temp
 19133  0012A2  0101               	movlb	1	; () banked
 19134  0012A4  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19135  0012A6  0E40               	movlw	64
 19136  0012A8  0101               	movlb	1	; () banked
 19137  0012AA  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19138  0012AC  0E00               	movlw	0
 19139  0012AE  0101               	movlb	1	; () banked
 19140  0012B0  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19141  0012B2  0E01               	movlw	1
 19142  0012B4  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19143  0012B6  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19144  0012BA  2A69               	incf	_ms,f,c
 19145  0012BC  D7D2               	goto	l12189
 19146  0012BE                     l12201:
 19147                           
 19148                           ;Oled.c: 2819: }
 19149                           ;Oled.c: 2822: setYX_LCD(7,x);
 19150  0012BE  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19151  0012C2  0E07               	movlw	7
 19152  0012C4  EC8E  F024         	call	_setYX_LCD
 19153                           
 19154                           ;Oled.c: 2823: for(ms=0;ms<48;ms++)
 19155  0012C8  0E00               	movlw	0
 19156  0012CA  6E69               	movwf	_ms,c
 19157  0012CC                     l12205:
 19158  0012CC  0E2F               	movlw	47
 19159  0012CE  6469               	cpfsgt	_ms,c
 19160  0012D0  D001               	goto	l12209
 19161  0012D2  0012               	return	
 19162  0012D4                     l12209:
 19163                           
 19164                           ;Oled.c: 2824: {
 19165                           ;Oled.c: 2825: temp = ptnx_frame[2][ms];
 19166  0012D4  5069               	movf	_ms,w,c
 19167  0012D6  0D01               	mullw	1
 19168  0012D8  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19169  0012DC  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19170  0012E0  50F3               	movf	prodl,w,c
 19171  0012E2  0101               	movlb	1	; () banked
 19172  0012E4  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19173  0012E6  50F4               	movf	prodh,w,c
 19174  0012E8  0101               	movlb	1	; () banked
 19175  0012EA  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19176  0012EC  0E60               	movlw	96
 19177  0012EE  0101               	movlb	1	; () banked
 19178  0012F0  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19179  0012F2  0E00               	movlw	0
 19180  0012F4  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19181  0012F6  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19182  0012FA  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19183  0012FE                     	if	0	;tblptru may be non-zero
 19184  0012FE                     	endif
 19185  0012FE                     	if	0	;tblptru may be non-zero
 19186  0012FE                     	endif
 19187  0012FE  0008               	tblrd		*
 19188  001300  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19189                           
 19190                           ; BSR set to: 1
 19191                           ;Oled.c: 2827: ee_WriteBytes(&temp, 0x40, 1);
 19192  001304  0E37               	movlw	low display_frame_fghi@temp
 19193  001306  0101               	movlb	1	; () banked
 19194  001308  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19195  00130A  0E01               	movlw	high display_frame_fghi@temp
 19196  00130C  0101               	movlb	1	; () banked
 19197  00130E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19198  001310  0E40               	movlw	64
 19199  001312  0101               	movlb	1	; () banked
 19200  001314  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19201  001316  0E00               	movlw	0
 19202  001318  0101               	movlb	1	; () banked
 19203  00131A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19204  00131C  0E01               	movlw	1
 19205  00131E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19206  001320  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19207  001324  2A69               	incf	_ms,f,c
 19208  001326  D7D2               	goto	l12205
 19209  001328                     l12217:
 19210                           
 19211                           ;Oled.c: 2830: else if(mode == 0x80)
 19212  001328  0E80               	movlw	128
 19213  00132A  0101               	movlb	1	; () banked
 19214  00132C  1932               	xorwf	display_frame_fghi@mode& (0+255),w,b
 19215  00132E  A4D8               	btfss	status,2,c
 19216  001330  0012               	return	
 19217                           
 19218                           ; BSR set to: 1
 19219                           ;Oled.c: 2831: {
 19220                           ;Oled.c: 2834: setYX_LCD(5,x);
 19221  001332  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19222  001336  0E05               	movlw	5
 19223  001338  EC8E  F024         	call	_setYX_LCD
 19224                           
 19225                           ;Oled.c: 2835: for(ms=0;ms<48;ms++)
 19226  00133C  0E00               	movlw	0
 19227  00133E  6E69               	movwf	_ms,c
 19228  001340                     l12223:
 19229  001340  0E2F               	movlw	47
 19230  001342  6469               	cpfsgt	_ms,c
 19231  001344  D001               	goto	l12227
 19232  001346  D03E               	goto	l12251
 19233  001348                     l12227:
 19234                           
 19235                           ;Oled.c: 2836: {
 19236                           ;Oled.c: 2837: temp = ptnx_frame[0][ms];
 19237  001348  5069               	movf	_ms,w,c
 19238  00134A  0D01               	mullw	1
 19239  00134C  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19240  001350  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19241  001354  50F3               	movf	prodl,w,c
 19242  001356  0101               	movlb	1	; () banked
 19243  001358  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19244  00135A  50F4               	movf	prodh,w,c
 19245  00135C  0101               	movlb	1	; () banked
 19246  00135E  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19247  001360  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19248  001364  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19249  001368                     	if	0	;tblptru may be non-zero
 19250  001368                     	endif
 19251  001368                     	if	0	;tblptru may be non-zero
 19252  001368                     	endif
 19253  001368  0008               	tblrd		*
 19254  00136A  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19255                           
 19256                           ; BSR set to: 1
 19257                           ;Oled.c: 2838: if(ms ==0 || ms == (48 -1))
 19258  00136E  5069               	movf	_ms,w,c
 19259  001370  B4D8               	btfsc	status,2,c
 19260  001372  D004               	goto	l12233
 19261                           
 19262                           ; BSR set to: 1
 19263  001374  0E2F               	movlw	47
 19264  001376  1869               	xorwf	_ms,w,c
 19265  001378  A4D8               	btfss	status,2,c
 19266  00137A  D002               	goto	l12235
 19267  00137C                     l12233:
 19268                           
 19269                           ; BSR set to: 1
 19270                           ;Oled.c: 2839: {
 19271                           ;Oled.c: 2840: temp =0x0f;
 19272  00137C  0E0F               	movlw	15
 19273  00137E  D008               	goto	L65
 19274  001380                     l12235:
 19275                           
 19276                           ; BSR set to: 1
 19277                           ;Oled.c: 2842: else if(ms ==1 || ms == (48 -2))
 19278  001380  0469               	decf	_ms,w,c
 19279  001382  B4D8               	btfsc	status,2,c
 19280  001384  D004               	goto	l12239
 19281                           
 19282                           ; BSR set to: 1
 19283  001386  0E2E               	movlw	46
 19284  001388  1869               	xorwf	_ms,w,c
 19285  00138A  A4D8               	btfss	status,2,c
 19286  00138C  D004               	goto	l12241
 19287  00138E                     l12239:
 19288                           
 19289                           ; BSR set to: 1
 19290                           ;Oled.c: 2843: {
 19291                           ;Oled.c: 2844: temp = 0x1f;
 19292  00138E  0E1F               	movlw	31
 19293  001390                     L65:
 19294  001390  0101               	movlb	1	; () banked
 19295  001392  6F37               	movwf	display_frame_fghi@temp& (0+255),b
 19296                           
 19297                           ;Oled.c: 2845: }
 19298  001394  D005               	goto	l12245
 19299  001396                     l12241:
 19300                           
 19301                           ; BSR set to: 1
 19302                           ;Oled.c: 2846: else
 19303                           ;Oled.c: 2847: {
 19304                           ;Oled.c: 2849: temp = ~temp;
 19305  001396  0101               	movlb	1	; () banked
 19306  001398  1F37               	comf	display_frame_fghi@temp& (0+255),f,b
 19307                           
 19308                           ; BSR set to: 1
 19309                           ;Oled.c: 2850: temp &= 0x3f;
 19310  00139A  0E3F               	movlw	63
 19311  00139C  0101               	movlb	1	; () banked
 19312  00139E  1737               	andwf	display_frame_fghi@temp& (0+255),f,b
 19313  0013A0                     l12245:
 19314                           
 19315                           ; BSR set to: 1
 19316                           ;Oled.c: 2851: }
 19317                           ;Oled.c: 2853: ee_WriteBytes(&temp, 0x40, 1);
 19318  0013A0  0E37               	movlw	low display_frame_fghi@temp
 19319  0013A2  0101               	movlb	1	; () banked
 19320  0013A4  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19321  0013A6  0E01               	movlw	high display_frame_fghi@temp
 19322  0013A8  0101               	movlb	1	; () banked
 19323  0013AA  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19324  0013AC  0E40               	movlw	64
 19325  0013AE  0101               	movlb	1	; () banked
 19326  0013B0  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19327  0013B2  0E00               	movlw	0
 19328  0013B4  0101               	movlb	1	; () banked
 19329  0013B6  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19330  0013B8  0E01               	movlw	1
 19331  0013BA  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19332  0013BC  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19333  0013C0  2A69               	incf	_ms,f,c
 19334  0013C2  D7BE               	goto	l12223
 19335  0013C4                     l12251:
 19336                           
 19337                           ;Oled.c: 2854: }
 19338                           ;Oled.c: 2857: setYX_LCD(6,x);
 19339  0013C4  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19340  0013C8  0E06               	movlw	6
 19341  0013CA  EC8E  F024         	call	_setYX_LCD
 19342                           
 19343                           ;Oled.c: 2858: for(ms=0;ms<48;ms++)
 19344  0013CE  0E00               	movlw	0
 19345  0013D0  6E69               	movwf	_ms,c
 19346  0013D2                     l12255:
 19347  0013D2  0E2F               	movlw	47
 19348  0013D4  6469               	cpfsgt	_ms,c
 19349  0013D6  D001               	goto	l12259
 19350  0013D8  D036               	goto	l12273
 19351  0013DA                     l12259:
 19352                           
 19353                           ;Oled.c: 2859: {
 19354                           ;Oled.c: 2860: temp = ptnx_frame[1][ms];
 19355  0013DA  5069               	movf	_ms,w,c
 19356  0013DC  0D01               	mullw	1
 19357  0013DE  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19358  0013E2  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19359  0013E6  50F3               	movf	prodl,w,c
 19360  0013E8  0101               	movlb	1	; () banked
 19361  0013EA  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19362  0013EC  50F4               	movf	prodh,w,c
 19363  0013EE  0101               	movlb	1	; () banked
 19364  0013F0  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19365  0013F2  0E30               	movlw	48
 19366  0013F4  0101               	movlb	1	; () banked
 19367  0013F6  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19368  0013F8  0E00               	movlw	0
 19369  0013FA  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19370  0013FC  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19371  001400  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19372  001404                     	if	0	;tblptru may be non-zero
 19373  001404                     	endif
 19374  001404                     	if	0	;tblptru may be non-zero
 19375  001404                     	endif
 19376  001404  0008               	tblrd		*
 19377  001406  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19378                           
 19379                           ; BSR set to: 1
 19380                           ;Oled.c: 2862: if(ms == 0 || ms == (48 - 1))
 19381  00140A  5069               	movf	_ms,w,c
 19382  00140C  B4D8               	btfsc	status,2,c
 19383  00140E  D004               	goto	l1219
 19384                           
 19385                           ; BSR set to: 1
 19386  001410  0E2F               	movlw	47
 19387  001412  1869               	xorwf	_ms,w,c
 19388  001414  A4D8               	btfss	status,2,c
 19389  001416  D003               	goto	l12265
 19390  001418                     l1219:
 19391                           
 19392                           ; BSR set to: 1
 19393                           ;Oled.c: 2863: {
 19394                           ;Oled.c: 2864: temp = 0xff;
 19395  001418  0101               	movlb	1	; () banked
 19396  00141A  6937               	setf	display_frame_fghi@temp& (0+255),b
 19397                           
 19398                           ;Oled.c: 2865: }
 19399  00141C  D002               	goto	l12267
 19400  00141E                     l12265:
 19401                           
 19402                           ; BSR set to: 1
 19403                           ;Oled.c: 2866: else
 19404                           ;Oled.c: 2867: {
 19405                           ;Oled.c: 2868: temp = ~temp;
 19406  00141E  0101               	movlb	1	; () banked
 19407  001420  1F37               	comf	display_frame_fghi@temp& (0+255),f,b
 19408  001422                     l12267:
 19409                           
 19410                           ; BSR set to: 1
 19411                           ;Oled.c: 2869: }
 19412                           ;Oled.c: 2871: ee_WriteBytes(&temp, 0x40, 1);
 19413  001422  0E37               	movlw	low display_frame_fghi@temp
 19414  001424  0101               	movlb	1	; () banked
 19415  001426  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19416  001428  0E01               	movlw	high display_frame_fghi@temp
 19417  00142A  0101               	movlb	1	; () banked
 19418  00142C  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19419  00142E  0E40               	movlw	64
 19420  001430  0101               	movlb	1	; () banked
 19421  001432  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19422  001434  0E00               	movlw	0
 19423  001436  0101               	movlb	1	; () banked
 19424  001438  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19425  00143A  0E01               	movlw	1
 19426  00143C  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19427  00143E  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19428  001442  2A69               	incf	_ms,f,c
 19429  001444  D7C6               	goto	l12255
 19430  001446                     l12273:
 19431                           
 19432                           ;Oled.c: 2872: }
 19433                           ;Oled.c: 2875: setYX_LCD(7,x);
 19434  001446  C131  F0FF         	movff	display_frame_fghi@x,setYX_LCD@px
 19435  00144A  0E07               	movlw	7
 19436  00144C  EC8E  F024         	call	_setYX_LCD
 19437                           
 19438                           ;Oled.c: 2876: for(ms=0;ms<48;ms++)
 19439  001450  0E00               	movlw	0
 19440  001452  6E69               	movwf	_ms,c
 19441  001454                     l12277:
 19442  001454  0E2F               	movlw	47
 19443  001456  6469               	cpfsgt	_ms,c
 19444  001458  D001               	goto	l12281
 19445  00145A  0012               	return	
 19446  00145C                     l12281:
 19447                           
 19448                           ;Oled.c: 2877: {
 19449                           ;Oled.c: 2878: temp = ptnx_frame[2][ms];
 19450  00145C  5069               	movf	_ms,w,c
 19451  00145E  0D01               	mullw	1
 19452  001460  C045  F133         	movff	_ptnx_frame,??_display_frame_fghi
 19453  001464  C046  F134         	movff	_ptnx_frame+1,??_display_frame_fghi+1
 19454  001468  50F3               	movf	prodl,w,c
 19455  00146A  0101               	movlb	1	; () banked
 19456  00146C  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19457  00146E  50F4               	movf	prodh,w,c
 19458  001470  0101               	movlb	1	; () banked
 19459  001472  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19460  001474  0E60               	movlw	96
 19461  001476  0101               	movlb	1	; () banked
 19462  001478  2733               	addwf	??_display_frame_fghi& (0+255),f,b
 19463  00147A  0E00               	movlw	0
 19464  00147C  2334               	addwfc	(??_display_frame_fghi+1)& (0+255),f,b
 19465  00147E  C133  FFF6         	movff	??_display_frame_fghi,tblptrl
 19466  001482  C134  FFF7         	movff	??_display_frame_fghi+1,tblptrh
 19467  001486                     	if	0	;tblptru may be non-zero
 19468  001486                     	endif
 19469  001486                     	if	0	;tblptru may be non-zero
 19470  001486                     	endif
 19471  001486  0008               	tblrd		*
 19472  001488  CFF5 F137          	movff	tablat,display_frame_fghi@temp
 19473                           
 19474                           ; BSR set to: 1
 19475                           ;Oled.c: 2879: if(ms ==0 || ms == (48 -1) )
 19476  00148C  5069               	movf	_ms,w,c
 19477  00148E  B4D8               	btfsc	status,2,c
 19478  001490  D004               	goto	l12287
 19479                           
 19480                           ; BSR set to: 1
 19481  001492  0E2F               	movlw	47
 19482  001494  1869               	xorwf	_ms,w,c
 19483  001496  A4D8               	btfss	status,2,c
 19484  001498  D002               	goto	l12289
 19485  00149A                     l12287:
 19486                           
 19487                           ; BSR set to: 1
 19488                           ;Oled.c: 2880: {
 19489                           ;Oled.c: 2881: temp =0xe0;
 19490  00149A  0EE0               	movlw	224
 19491  00149C  D008               	goto	L66
 19492  00149E                     l12289:
 19493                           
 19494                           ; BSR set to: 1
 19495                           ;Oled.c: 2883: else if(ms ==1 || ms == (48 -2))
 19496  00149E  0469               	decf	_ms,w,c
 19497  0014A0  B4D8               	btfsc	status,2,c
 19498  0014A2  D004               	goto	l12293
 19499                           
 19500                           ; BSR set to: 1
 19501  0014A4  0E2E               	movlw	46
 19502  0014A6  1869               	xorwf	_ms,w,c
 19503  0014A8  A4D8               	btfss	status,2,c
 19504  0014AA  D004               	goto	l12295
 19505  0014AC                     l12293:
 19506                           
 19507                           ; BSR set to: 1
 19508                           ;Oled.c: 2884: {
 19509                           ;Oled.c: 2885: temp = 0xf0;
 19510  0014AC  0EF0               	movlw	240
 19511  0014AE                     L66:
 19512  0014AE  0101               	movlb	1	; () banked
 19513  0014B0  6F37               	movwf	display_frame_fghi@temp& (0+255),b
 19514                           
 19515                           ;Oled.c: 2886: }
 19516  0014B2  D007               	goto	l12301
 19517  0014B4                     l12295:
 19518                           
 19519                           ; BSR set to: 1
 19520                           ;Oled.c: 2887: else
 19521                           ;Oled.c: 2888: {
 19522                           ;Oled.c: 2890: temp = ~temp;
 19523  0014B4  0101               	movlb	1	; () banked
 19524  0014B6  1F37               	comf	display_frame_fghi@temp& (0+255),f,b
 19525                           
 19526                           ; BSR set to: 1
 19527                           ;Oled.c: 2891: temp &= 0xf0;
 19528  0014B8  0EF0               	movlw	240
 19529  0014BA  0101               	movlb	1	; () banked
 19530  0014BC  1737               	andwf	display_frame_fghi@temp& (0+255),f,b
 19531                           
 19532                           ; BSR set to: 1
 19533                           ;Oled.c: 2892: temp |= 0x10;
 19534  0014BE  0101               	movlb	1	; () banked
 19535  0014C0  8937               	bsf	display_frame_fghi@temp& (0+255),4,b
 19536  0014C2                     l12301:
 19537                           
 19538                           ; BSR set to: 1
 19539                           ;Oled.c: 2893: }
 19540                           ;Oled.c: 2895: ee_WriteBytes(&temp, 0x40, 1);
 19541  0014C2  0E37               	movlw	low display_frame_fghi@temp
 19542  0014C4  0101               	movlb	1	; () banked
 19543  0014C6  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19544  0014C8  0E01               	movlw	high display_frame_fghi@temp
 19545  0014CA  0101               	movlb	1	; () banked
 19546  0014CC  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19547  0014CE  0E40               	movlw	64
 19548  0014D0  0101               	movlb	1	; () banked
 19549  0014D2  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19550  0014D4  0E00               	movlw	0
 19551  0014D6  0101               	movlb	1	; () banked
 19552  0014D8  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19553  0014DA  0E01               	movlw	1
 19554  0014DC  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19555  0014DE  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19556  0014E2  2A69               	incf	_ms,f,c
 19557  0014E4  D7B7               	goto	l12277
 19558  0014E6                     __end_of_display_frame_fghi:
 19559                           	opt stack 0
 19560                           tblptru	equ	0xFF8
 19561                           tblptrh	equ	0xFF7
 19562                           tblptrl	equ	0xFF6
 19563                           tablat	equ	0xFF5
 19564                           prodh	equ	0xFF4
 19565                           prodl	equ	0xFF3
 19566                           intcon	equ	0xFF2
 19567                           intcon3	equ	0xFF0
 19568                           postinc0	equ	0xFEE
 19569                           wreg	equ	0xFE8
 19570                           postdec1	equ	0xFE5
 19571                           fsr1h	equ	0xFE2
 19572                           fsr1l	equ	0xFE1
 19573                           postinc2	equ	0xFDE
 19574                           fsr2h	equ	0xFDA
 19575                           fsr2l	equ	0xFD9
 19576                           status	equ	0xFD8
 19577                           
 19578 ;; *************** function _display_frame_abc *****************
 19579 ;; Defined at:
 19580 ;;		line 2468 in file "../Oled.c"
 19581 ;; Parameters:    Size  Location     Type
 19582 ;;  y               1    wreg     unsigned char 
 19583 ;;  x               1    9[BANK1 ] unsigned char 
 19584 ;;  mode            1   10[BANK1 ] unsigned char 
 19585 ;; Auto vars:     Size  Location     Type
 19586 ;;  y               1    0[COMRAM] unsigned char 
 19587 ;;  temp            1   12[BANK1 ] unsigned char 
 19588 ;;  tori            1   11[BANK1 ] unsigned char 
 19589 ;; Return value:  Size  Location     Type
 19590 ;;                  1    wreg      unsigned char 
 19591 ;; Registers used:
 19592 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 19593 ;; Tracked objects:
 19594 ;;		On entry : 0/0
 19595 ;;		On exit  : 0/0
 19596 ;;		Unchanged: 0/0
 19597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19598 ;;      Params:         0       0       2       0       0       0       0
 19599 ;;      Locals:         0       0       2       0       0       0       0
 19600 ;;      Temps:          0       0       0       0       0       0       0
 19601 ;;      Totals:         0       0       4       0       0       0       0
 19602 ;;Total ram usage:        4 bytes
 19603 ;; Hardware stack levels used:    1
 19604 ;; Hardware stack levels required when called:    6
 19605 ;; This function calls:
 19606 ;;		_ee_WriteBytes
 19607 ;;		_setYX_LCD
 19608 ;; This function is called by:
 19609 ;;		_initial_ui_setting
 19610 ;;		_menu0_MsgHandlle
 19611 ;;		_check_ui_status
 19612 ;; This function uses a non-reentrant model
 19613 ;;
 19614                           
 19615                           	psect	text43
 19616  002CBA                     __ptext43:
 19617                           	opt stack 0
 19618  002CBA                     _display_frame_abc:
 19619                           	opt stack 21
 19620                           
 19621                           ;Oled.c: 2471: uint8_t temp =0;
 19622                           
 19623                           ;incstack = 0
 19624  002CBA  0E00               	movlw	0
 19625  002CBC  0101               	movlb	1	; () banked
 19626  002CBE  6F34               	movwf	display_frame_abc@temp& (0+255),b
 19627                           
 19628                           ;Oled.c: 2472: uint8_t tori =0;
 19629  002CC0  0E00               	movlw	0
 19630  002CC2  0101               	movlb	1	; () banked
 19631  002CC4  6F33               	movwf	display_frame_abc@tori& (0+255),b
 19632                           
 19633                           ;Oled.c: 2473: switch(mode)
 19634  002CC6  D0FA               	goto	l11865
 19635  002CC8                     l11747:
 19636                           
 19637                           ; BSR set to: 1
 19638                           ;Oled.c: 2479: setYX_LCD(0,x);
 19639  002CC8  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19640  002CCC  0E00               	movlw	0
 19641  002CCE  EC8E  F024         	call	_setYX_LCD
 19642                           
 19643                           ;Oled.c: 2480: for(ms=0;ms<27;ms++)
 19644  002CD2  0E00               	movlw	0
 19645  002CD4  6E69               	movwf	_ms,c
 19646  002CD6                     l11751:
 19647  002CD6  0E1A               	movlw	26
 19648  002CD8  6469               	cpfsgt	_ms,c
 19649  002CDA  D001               	goto	l11755
 19650  002CDC  D01D               	goto	l11763
 19651  002CDE                     l11755:
 19652                           
 19653                           ;Oled.c: 2481: {
 19654                           ;Oled.c: 2483: temp =ptna_frame[0][ms];
 19655  002CDE  5069               	movf	_ms,w,c
 19656  002CE0  0D01               	mullw	1
 19657  002CE2  0EDE               	movlw	low _ptna_frame
 19658  002CE4  24F3               	addwf	prodl,w,c
 19659  002CE6  6EF6               	movwf	tblptrl,c
 19660  002CE8  0E74               	movlw	high _ptna_frame
 19661  002CEA  20F4               	addwfc	prodh,w,c
 19662  002CEC  6EF7               	movwf	tblptrh,c
 19663  002CEE                     	if	0	;There are less than 3 active tblptr bytes
 19664  002CEE                     	endif
 19665  002CEE  0008               	tblrd		*
 19666  002CF0  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19667                           
 19668                           ;Oled.c: 2485: ee_WriteBytes(&temp, 0x40, 1);
 19669  002CF4  0E34               	movlw	low display_frame_abc@temp
 19670  002CF6  0101               	movlb	1	; () banked
 19671  002CF8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19672  002CFA  0E01               	movlw	high display_frame_abc@temp
 19673  002CFC  0101               	movlb	1	; () banked
 19674  002CFE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19675  002D00  0E40               	movlw	64
 19676  002D02  0101               	movlb	1	; () banked
 19677  002D04  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19678  002D06  0E00               	movlw	0
 19679  002D08  0101               	movlb	1	; () banked
 19680  002D0A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19681  002D0C  0E01               	movlw	1
 19682  002D0E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19683  002D10  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19684  002D14  2A69               	incf	_ms,f,c
 19685  002D16  D7DF               	goto	l11751
 19686  002D18                     l11763:
 19687                           
 19688                           ;Oled.c: 2486: }
 19689                           ;Oled.c: 2489: setYX_LCD(1,x);
 19690  002D18  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19691  002D1C  0E01               	movlw	1
 19692  002D1E  EC8E  F024         	call	_setYX_LCD
 19693                           
 19694                           ;Oled.c: 2490: for(ms=0;ms<27;ms++)
 19695  002D22  0E00               	movlw	0
 19696  002D24  6E69               	movwf	_ms,c
 19697  002D26                     l11767:
 19698  002D26  0E1A               	movlw	26
 19699  002D28  6469               	cpfsgt	_ms,c
 19700  002D2A  D001               	goto	l11771
 19701  002D2C  0012               	return	
 19702  002D2E                     l11771:
 19703                           
 19704                           ;Oled.c: 2491: {
 19705                           ;Oled.c: 2492: temp = ptna_frame[1][ms];
 19706  002D2E  5069               	movf	_ms,w,c
 19707  002D30  0D01               	mullw	1
 19708  002D32  0E1B               	movlw	27
 19709  002D34  26F3               	addwf	prodl,f,c
 19710  002D36  0E00               	movlw	0
 19711  002D38  22F4               	addwfc	prodh,f,c
 19712  002D3A  0EDE               	movlw	low _ptna_frame
 19713  002D3C  24F3               	addwf	prodl,w,c
 19714  002D3E  6EF6               	movwf	tblptrl,c
 19715  002D40  0E74               	movlw	high _ptna_frame
 19716  002D42  20F4               	addwfc	prodh,w,c
 19717  002D44  6EF7               	movwf	tblptrh,c
 19718  002D46                     	if	0	;There are less than 3 active tblptr bytes
 19719  002D46                     	endif
 19720  002D46  0008               	tblrd		*
 19721  002D48  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19722                           
 19723                           ;Oled.c: 2494: ee_WriteBytes(&temp, 0x40, 1);
 19724  002D4C  0E34               	movlw	low display_frame_abc@temp
 19725  002D4E  0101               	movlb	1	; () banked
 19726  002D50  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19727  002D52  0E01               	movlw	high display_frame_abc@temp
 19728  002D54  0101               	movlb	1	; () banked
 19729  002D56  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19730  002D58  0E40               	movlw	64
 19731  002D5A  0101               	movlb	1	; () banked
 19732  002D5C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19733  002D5E  0E00               	movlw	0
 19734  002D60  0101               	movlb	1	; () banked
 19735  002D62  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19736  002D64  0E01               	movlw	1
 19737  002D66  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19738  002D68  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19739  002D6C  2A69               	incf	_ms,f,c
 19740  002D6E  D7DB               	goto	l11767
 19741  002D70                     l11779:
 19742                           
 19743                           ;Oled.c: 2503: setYX_LCD(0,x);
 19744  002D70  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19745  002D74  0E00               	movlw	0
 19746  002D76  EC8E  F024         	call	_setYX_LCD
 19747                           
 19748                           ;Oled.c: 2504: for(ms=0;ms<27;ms++)
 19749  002D7A  0E00               	movlw	0
 19750  002D7C  6E69               	movwf	_ms,c
 19751  002D7E                     l11783:
 19752  002D7E  0E1A               	movlw	26
 19753  002D80  6469               	cpfsgt	_ms,c
 19754  002D82  D001               	goto	l11787
 19755  002D84  D046               	goto	l11821
 19756  002D86                     l11787:
 19757                           
 19758                           ;Oled.c: 2505: {
 19759                           ;Oled.c: 2507: temp = ptna_frame[0][ms];
 19760  002D86  5069               	movf	_ms,w,c
 19761  002D88  0D01               	mullw	1
 19762  002D8A  0EDE               	movlw	low _ptna_frame
 19763  002D8C  24F3               	addwf	prodl,w,c
 19764  002D8E  6EF6               	movwf	tblptrl,c
 19765  002D90  0E74               	movlw	high _ptna_frame
 19766  002D92  20F4               	addwfc	prodh,w,c
 19767  002D94  6EF7               	movwf	tblptrh,c
 19768  002D96                     	if	0	;There are less than 3 active tblptr bytes
 19769  002D96                     	endif
 19770  002D96  0008               	tblrd		*
 19771  002D98  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19772                           
 19773                           ;Oled.c: 2508: tori = temp;
 19774  002D9C  C134  F133         	movff	display_frame_abc@temp,display_frame_abc@tori
 19775                           
 19776                           ;Oled.c: 2510: if(ms ==0 || ms == (27 -1))
 19777  002DA0  5069               	movf	_ms,w,c
 19778  002DA2  B4D8               	btfsc	status,2,c
 19779  002DA4  D004               	goto	l11795
 19780  002DA6  0E1A               	movlw	26
 19781  002DA8  1869               	xorwf	_ms,w,c
 19782  002DAA  A4D8               	btfss	status,2,c
 19783  002DAC  D00A               	goto	l11801
 19784  002DAE                     l11795:
 19785                           
 19786                           ;Oled.c: 2511: {
 19787                           ;Oled.c: 2512: temp = ~temp;
 19788  002DAE  0101               	movlb	1	; () banked
 19789  002DB0  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19790                           
 19791                           ; BSR set to: 1
 19792                           ;Oled.c: 2513: temp |= tori;
 19793  002DB2  0101               	movlb	1	; () banked
 19794  002DB4  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19795  002DB6  0101               	movlb	1	; () banked
 19796  002DB8  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19797                           
 19798                           ; BSR set to: 1
 19799                           ;Oled.c: 2514: temp &= 0x3f;
 19800  002DBA  0E3F               	movlw	63
 19801  002DBC  0101               	movlb	1	; () banked
 19802  002DBE  1734               	andwf	display_frame_abc@temp& (0+255),f,b
 19803                           
 19804                           ;Oled.c: 2516: }
 19805  002DC0  D016               	goto	l11815
 19806  002DC2                     l11801:
 19807                           
 19808                           ;Oled.c: 2517: else if(ms ==1 || ms == (27 -2))
 19809  002DC2  0469               	decf	_ms,w,c
 19810  002DC4  B4D8               	btfsc	status,2,c
 19811  002DC6  D004               	goto	l11805
 19812  002DC8  0E19               	movlw	25
 19813  002DCA  1869               	xorwf	_ms,w,c
 19814  002DCC  A4D8               	btfss	status,2,c
 19815  002DCE  D009               	goto	l11811
 19816  002DD0                     l11805:
 19817                           
 19818                           ;Oled.c: 2518: {
 19819                           ;Oled.c: 2519: temp = ~temp;
 19820  002DD0  0101               	movlb	1	; () banked
 19821  002DD2  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19822                           
 19823                           ; BSR set to: 1
 19824                           ;Oled.c: 2520: temp |= tori;
 19825  002DD4  0101               	movlb	1	; () banked
 19826  002DD6  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19827  002DD8  0101               	movlb	1	; () banked
 19828  002DDA  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19829                           
 19830                           ; BSR set to: 1
 19831                           ;Oled.c: 2521: temp &= 0x7f;;
 19832  002DDC  0101               	movlb	1	; () banked
 19833  002DDE  9F34               	bcf	display_frame_abc@temp& (0+255),7,b
 19834                           
 19835                           ;Oled.c: 2522: }
 19836  002DE0  D006               	goto	l11815
 19837  002DE2                     l11811:
 19838                           
 19839                           ;Oled.c: 2523: else
 19840                           ;Oled.c: 2524: {
 19841                           ;Oled.c: 2526: temp = ~temp;
 19842  002DE2  0101               	movlb	1	; () banked
 19843  002DE4  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19844                           
 19845                           ; BSR set to: 1
 19846                           ;Oled.c: 2527: temp |= tori;
 19847  002DE6  0101               	movlb	1	; () banked
 19848  002DE8  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19849  002DEA  0101               	movlb	1	; () banked
 19850  002DEC  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19851  002DEE                     l11815:
 19852                           
 19853                           ; BSR set to: 1
 19854                           ;Oled.c: 2529: }
 19855                           ;Oled.c: 2531: ee_WriteBytes(&temp, 0x40, 1);
 19856  002DEE  0E34               	movlw	low display_frame_abc@temp
 19857  002DF0  0101               	movlb	1	; () banked
 19858  002DF2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19859  002DF4  0E01               	movlw	high display_frame_abc@temp
 19860  002DF6  0101               	movlb	1	; () banked
 19861  002DF8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19862  002DFA  0E40               	movlw	64
 19863  002DFC  0101               	movlb	1	; () banked
 19864  002DFE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 19865  002E00  0E00               	movlw	0
 19866  002E02  0101               	movlb	1	; () banked
 19867  002E04  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 19868  002E06  0E01               	movlw	1
 19869  002E08  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 19870  002E0A  EC88  F025         	call	_ee_WriteBytes	;wreg free
 19871  002E0E  2A69               	incf	_ms,f,c
 19872  002E10  D7B6               	goto	l11783
 19873  002E12                     l11821:
 19874                           
 19875                           ;Oled.c: 2532: }
 19876                           ;Oled.c: 2535: setYX_LCD(1,x);
 19877  002E12  C131  F0FF         	movff	display_frame_abc@x,setYX_LCD@px
 19878  002E16  0E01               	movlw	1
 19879  002E18  EC8E  F024         	call	_setYX_LCD
 19880                           
 19881                           ;Oled.c: 2536: for(ms=0;ms<27;ms++)
 19882  002E1C  0E00               	movlw	0
 19883  002E1E  6E69               	movwf	_ms,c
 19884  002E20                     l11825:
 19885  002E20  0E1A               	movlw	26
 19886  002E22  6469               	cpfsgt	_ms,c
 19887  002E24  D001               	goto	l11829
 19888  002E26  0012               	return	
 19889  002E28                     l11829:
 19890                           
 19891                           ;Oled.c: 2537: {
 19892                           ;Oled.c: 2538: temp = ptna_frame[1][ms];
 19893  002E28  5069               	movf	_ms,w,c
 19894  002E2A  0D01               	mullw	1
 19895  002E2C  0E1B               	movlw	27
 19896  002E2E  26F3               	addwf	prodl,f,c
 19897  002E30  0E00               	movlw	0
 19898  002E32  22F4               	addwfc	prodh,f,c
 19899  002E34  0EDE               	movlw	low _ptna_frame
 19900  002E36  24F3               	addwf	prodl,w,c
 19901  002E38  6EF6               	movwf	tblptrl,c
 19902  002E3A  0E74               	movlw	high _ptna_frame
 19903  002E3C  20F4               	addwfc	prodh,w,c
 19904  002E3E  6EF7               	movwf	tblptrh,c
 19905  002E40                     	if	0	;There are less than 3 active tblptr bytes
 19906  002E40                     	endif
 19907  002E40  0008               	tblrd		*
 19908  002E42  CFF5 F134          	movff	tablat,display_frame_abc@temp
 19909                           
 19910                           ;Oled.c: 2539: tori =temp;
 19911  002E46  C134  F133         	movff	display_frame_abc@temp,display_frame_abc@tori
 19912                           
 19913                           ;Oled.c: 2540: if(ms ==0 || ms == (27 -1))
 19914  002E4A  5069               	movf	_ms,w,c
 19915  002E4C  B4D8               	btfsc	status,2,c
 19916  002E4E  D004               	goto	l11837
 19917  002E50  0E1A               	movlw	26
 19918  002E52  1869               	xorwf	_ms,w,c
 19919  002E54  A4D8               	btfss	status,2,c
 19920  002E56  D00A               	goto	l11843
 19921  002E58                     l11837:
 19922                           
 19923                           ;Oled.c: 2541: {
 19924                           ;Oled.c: 2542: temp = ~temp;
 19925  002E58  0101               	movlb	1	; () banked
 19926  002E5A  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19927                           
 19928                           ; BSR set to: 1
 19929                           ;Oled.c: 2543: temp |= tori;
 19930  002E5C  0101               	movlb	1	; () banked
 19931  002E5E  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19932  002E60  0101               	movlb	1	; () banked
 19933  002E62  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19934                           
 19935                           ; BSR set to: 1
 19936                           ;Oled.c: 2544: temp &= 0xfc;
 19937  002E64  0EFC               	movlw	252
 19938  002E66  0101               	movlb	1	; () banked
 19939  002E68  1734               	andwf	display_frame_abc@temp& (0+255),f,b
 19940                           
 19941                           ;Oled.c: 2545: }
 19942  002E6A  D016               	goto	l11857
 19943  002E6C                     l11843:
 19944                           
 19945                           ;Oled.c: 2546: else if(ms ==1 || ms == (27 -2))
 19946  002E6C  0469               	decf	_ms,w,c
 19947  002E6E  B4D8               	btfsc	status,2,c
 19948  002E70  D004               	goto	l11847
 19949  002E72  0E19               	movlw	25
 19950  002E74  1869               	xorwf	_ms,w,c
 19951  002E76  A4D8               	btfss	status,2,c
 19952  002E78  D009               	goto	l11853
 19953  002E7A                     l11847:
 19954                           
 19955                           ;Oled.c: 2547: {
 19956                           ;Oled.c: 2549: temp = ~temp;
 19957  002E7A  0101               	movlb	1	; () banked
 19958  002E7C  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19959                           
 19960                           ; BSR set to: 1
 19961                           ;Oled.c: 2550: temp |= tori;
 19962  002E7E  0101               	movlb	1	; () banked
 19963  002E80  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19964  002E82  0101               	movlb	1	; () banked
 19965  002E84  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19966                           
 19967                           ; BSR set to: 1
 19968                           ;Oled.c: 2551: temp &= 0xfe;
 19969  002E86  0101               	movlb	1	; () banked
 19970  002E88  9134               	bcf	display_frame_abc@temp& (0+255),0,b
 19971                           
 19972                           ;Oled.c: 2553: }
 19973  002E8A  D006               	goto	l11857
 19974  002E8C                     l11853:
 19975                           
 19976                           ;Oled.c: 2554: else
 19977                           ;Oled.c: 2555: {
 19978                           ;Oled.c: 2557: temp = ~temp;
 19979  002E8C  0101               	movlb	1	; () banked
 19980  002E8E  1F34               	comf	display_frame_abc@temp& (0+255),f,b
 19981                           
 19982                           ; BSR set to: 1
 19983                           ;Oled.c: 2558: temp |= tori;
 19984  002E90  0101               	movlb	1	; () banked
 19985  002E92  5133               	movf	display_frame_abc@tori& (0+255),w,b
 19986  002E94  0101               	movlb	1	; () banked
 19987  002E96  1334               	iorwf	display_frame_abc@temp& (0+255),f,b
 19988  002E98                     l11857:
 19989                           
 19990                           ; BSR set to: 1
 19991                           ;Oled.c: 2559: }
 19992                           ;Oled.c: 2561: ee_WriteBytes(&temp, 0x40, 1);
 19993  002E98  0E34               	movlw	low display_frame_abc@temp
 19994  002E9A  0101               	movlb	1	; () banked
 19995  002E9C  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 19996  002E9E  0E01               	movlw	high display_frame_abc@temp
 19997  002EA0  0101               	movlb	1	; () banked
 19998  002EA2  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 19999  002EA4  0E40               	movlw	64
 20000  002EA6  0101               	movlb	1	; () banked
 20001  002EA8  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20002  002EAA  0E00               	movlw	0
 20003  002EAC  0101               	movlb	1	; () banked
 20004  002EAE  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20005  002EB0  0E01               	movlw	1
 20006  002EB2  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20007  002EB4  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20008  002EB8  2A69               	incf	_ms,f,c
 20009  002EBA  D7B2               	goto	l11825
 20010  002EBC                     l11865:
 20011  002EBC  0101               	movlb	1	; () banked
 20012  002EBE  5132               	movf	display_frame_abc@mode& (0+255),w,b
 20013                           
 20014                           ; Switch size 1, requested type "space"
 20015                           ; Number of cases is 2, Range of values is 0 to 128
 20016                           ; switch strategies available:
 20017                           ; Name         Instructions Cycles
 20018                           ; simple_byte            7     4 (average)
 20019                           ;	Chosen strategy is simple_byte
 20020  002EC0  0A00               	xorlw	0	; case 0
 20021  002EC2  B4D8               	btfsc	status,2,c
 20022  002EC4  D701               	goto	l11747
 20023  002EC6  0A80               	xorlw	128	; case 128
 20024  002EC8  A4D8               	btfss	status,2,c
 20025  002ECA  0012               	return	
 20026  002ECC  D751               	goto	l11779
 20027  002ECE                     __end_of_display_frame_abc:
 20028                           	opt stack 0
 20029                           tblptru	equ	0xFF8
 20030                           tblptrh	equ	0xFF7
 20031                           tblptrl	equ	0xFF6
 20032                           tablat	equ	0xFF5
 20033                           prodh	equ	0xFF4
 20034                           prodl	equ	0xFF3
 20035                           intcon	equ	0xFF2
 20036                           intcon3	equ	0xFF0
 20037                           postinc0	equ	0xFEE
 20038                           wreg	equ	0xFE8
 20039                           postdec1	equ	0xFE5
 20040                           fsr1h	equ	0xFE2
 20041                           fsr1l	equ	0xFE1
 20042                           postinc2	equ	0xFDE
 20043                           fsr2h	equ	0xFDA
 20044                           fsr2l	equ	0xFD9
 20045                           status	equ	0xFD8
 20046                           
 20047 ;; *************** function _display_drops *****************
 20048 ;; Defined at:
 20049 ;;		line 2102 in file "../Oled.c"
 20050 ;; Parameters:    Size  Location     Type
 20051 ;;  y               1    wreg     unsigned char 
 20052 ;;  x               1    9[BANK1 ] unsigned char 
 20053 ;;  mode            1   10[BANK1 ] unsigned char 
 20054 ;; Auto vars:     Size  Location     Type
 20055 ;;  y               1    0[COMRAM] unsigned char 
 20056 ;;  temp            1   12[BANK1 ] unsigned char 
 20057 ;;  tori            1   11[BANK1 ] unsigned char 
 20058 ;; Return value:  Size  Location     Type
 20059 ;;                  1    wreg      void 
 20060 ;; Registers used:
 20061 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20062 ;; Tracked objects:
 20063 ;;		On entry : 0/0
 20064 ;;		On exit  : 0/0
 20065 ;;		Unchanged: 0/0
 20066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20067 ;;      Params:         0       0       2       0       0       0       0
 20068 ;;      Locals:         0       0       2       0       0       0       0
 20069 ;;      Temps:          0       0       0       0       0       0       0
 20070 ;;      Totals:         0       0       4       0       0       0       0
 20071 ;;Total ram usage:        4 bytes
 20072 ;; Hardware stack levels used:    1
 20073 ;; Hardware stack levels required when called:    6
 20074 ;; This function calls:
 20075 ;;		_ee_WriteBytes
 20076 ;;		_setYX_LCD
 20077 ;; This function is called by:
 20078 ;;		_menu0_MsgHandlle
 20079 ;;		_check_ui_status
 20080 ;;		_blink_mode
 20081 ;; This function uses a non-reentrant model
 20082 ;;
 20083                           
 20084                           	psect	text44
 20085  003B2A                     __ptext44:
 20086                           	opt stack 0
 20087  003B2A                     _display_drops:
 20088                           	opt stack 23
 20089                           
 20090                           ;Oled.c: 2105: uint8_t temp =0;
 20091                           
 20092                           ;incstack = 0
 20093  003B2A  0E00               	movlw	0
 20094  003B2C  0101               	movlb	1	; () banked
 20095  003B2E  6F34               	movwf	display_drops@temp& (0+255),b
 20096                           
 20097                           ;Oled.c: 2106: uint8_t tori =0;
 20098  003B30  0E00               	movlw	0
 20099  003B32  0101               	movlb	1	; () banked
 20100  003B34  6F33               	movwf	display_drops@tori& (0+255),b
 20101                           
 20102                           ;Oled.c: 2107: switch(mode)
 20103  003B36  D0B0               	goto	l12777
 20104  003B38                     l12703:
 20105                           
 20106                           ; BSR set to: 1
 20107                           ;Oled.c: 2113: setYX_LCD(0,x);
 20108  003B38  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20109  003B3C  0E00               	movlw	0
 20110  003B3E  EC8E  F024         	call	_setYX_LCD
 20111                           
 20112                           ;Oled.c: 2114: for(ms=0;ms<23;ms++)
 20113  003B42  0E00               	movlw	0
 20114  003B44  6E69               	movwf	_ms,c
 20115  003B46                     l12707:
 20116  003B46  0E16               	movlw	22
 20117  003B48  6469               	cpfsgt	_ms,c
 20118  003B4A  D001               	goto	l12711
 20119  003B4C  D01D               	goto	l12719
 20120  003B4E                     l12711:
 20121                           
 20122                           ;Oled.c: 2115: {
 20123                           ;Oled.c: 2117: temp =drops_m[0][ms];
 20124  003B4E  5069               	movf	_ms,w,c
 20125  003B50  0D01               	mullw	1
 20126  003B52  0E70               	movlw	low _drops_m
 20127  003B54  24F3               	addwf	prodl,w,c
 20128  003B56  6EF6               	movwf	tblptrl,c
 20129  003B58  0E75               	movlw	high _drops_m
 20130  003B5A  20F4               	addwfc	prodh,w,c
 20131  003B5C  6EF7               	movwf	tblptrh,c
 20132  003B5E                     	if	0	;There are less than 3 active tblptr bytes
 20133  003B5E                     	endif
 20134  003B5E  0008               	tblrd		*
 20135  003B60  CFF5 F134          	movff	tablat,display_drops@temp
 20136                           
 20137                           ;Oled.c: 2118: ee_WriteBytes(&temp, 0x40, 1);
 20138  003B64  0E34               	movlw	low display_drops@temp
 20139  003B66  0101               	movlb	1	; () banked
 20140  003B68  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20141  003B6A  0E01               	movlw	high display_drops@temp
 20142  003B6C  0101               	movlb	1	; () banked
 20143  003B6E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20144  003B70  0E40               	movlw	64
 20145  003B72  0101               	movlb	1	; () banked
 20146  003B74  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20147  003B76  0E00               	movlw	0
 20148  003B78  0101               	movlb	1	; () banked
 20149  003B7A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20150  003B7C  0E01               	movlw	1
 20151  003B7E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20152  003B80  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20153  003B84  2A69               	incf	_ms,f,c
 20154  003B86  D7DF               	goto	l12707
 20155  003B88                     l12719:
 20156                           
 20157                           ;Oled.c: 2119: }
 20158                           ;Oled.c: 2122: setYX_LCD(1,x);
 20159  003B88  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20160  003B8C  0E01               	movlw	1
 20161  003B8E  EC8E  F024         	call	_setYX_LCD
 20162                           
 20163                           ;Oled.c: 2123: for(ms=0;ms<23;ms++)
 20164  003B92  0E00               	movlw	0
 20165  003B94  6E69               	movwf	_ms,c
 20166  003B96                     l12723:
 20167  003B96  0E16               	movlw	22
 20168  003B98  6469               	cpfsgt	_ms,c
 20169  003B9A  D001               	goto	l12727
 20170  003B9C  0012               	return	
 20171  003B9E                     l12727:
 20172                           
 20173                           ;Oled.c: 2124: {
 20174                           ;Oled.c: 2125: temp = drops_m[1][ms];
 20175  003B9E  5069               	movf	_ms,w,c
 20176  003BA0  0D01               	mullw	1
 20177  003BA2  0E17               	movlw	23
 20178  003BA4  26F3               	addwf	prodl,f,c
 20179  003BA6  0E00               	movlw	0
 20180  003BA8  22F4               	addwfc	prodh,f,c
 20181  003BAA  0E70               	movlw	low _drops_m
 20182  003BAC  24F3               	addwf	prodl,w,c
 20183  003BAE  6EF6               	movwf	tblptrl,c
 20184  003BB0  0E75               	movlw	high _drops_m
 20185  003BB2  20F4               	addwfc	prodh,w,c
 20186  003BB4  6EF7               	movwf	tblptrh,c
 20187  003BB6                     	if	0	;There are less than 3 active tblptr bytes
 20188  003BB6                     	endif
 20189  003BB6  0008               	tblrd		*
 20190  003BB8  CFF5 F134          	movff	tablat,display_drops@temp
 20191                           
 20192                           ;Oled.c: 2126: ee_WriteBytes(&temp, 0x40, 1);
 20193  003BBC  0E34               	movlw	low display_drops@temp
 20194  003BBE  0101               	movlb	1	; () banked
 20195  003BC0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20196  003BC2  0E01               	movlw	high display_drops@temp
 20197  003BC4  0101               	movlb	1	; () banked
 20198  003BC6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20199  003BC8  0E40               	movlw	64
 20200  003BCA  0101               	movlb	1	; () banked
 20201  003BCC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20202  003BCE  0E00               	movlw	0
 20203  003BD0  0101               	movlb	1	; () banked
 20204  003BD2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20205  003BD4  0E01               	movlw	1
 20206  003BD6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20207  003BD8  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20208  003BDC  2A69               	incf	_ms,f,c
 20209  003BDE  D7DB               	goto	l12723
 20210  003BE0                     l12735:
 20211                           
 20212                           ;Oled.c: 2135: setYX_LCD(0,x);
 20213  003BE0  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20214  003BE4  0E00               	movlw	0
 20215  003BE6  EC8E  F024         	call	_setYX_LCD
 20216                           
 20217                           ;Oled.c: 2136: for(ms=0;ms<23;ms++)
 20218  003BEA  0E00               	movlw	0
 20219  003BEC  6E69               	movwf	_ms,c
 20220  003BEE                     l12739:
 20221  003BEE  0E16               	movlw	22
 20222  003BF0  6469               	cpfsgt	_ms,c
 20223  003BF2  D001               	goto	l12743
 20224  003BF4  D021               	goto	l12755
 20225  003BF6                     l12743:
 20226                           
 20227                           ;Oled.c: 2137: {
 20228                           ;Oled.c: 2139: temp = drops_m[0][ms];
 20229  003BF6  5069               	movf	_ms,w,c
 20230  003BF8  0D01               	mullw	1
 20231  003BFA  0E70               	movlw	low _drops_m
 20232  003BFC  24F3               	addwf	prodl,w,c
 20233  003BFE  6EF6               	movwf	tblptrl,c
 20234  003C00  0E75               	movlw	high _drops_m
 20235  003C02  20F4               	addwfc	prodh,w,c
 20236  003C04  6EF7               	movwf	tblptrh,c
 20237  003C06                     	if	0	;There are less than 3 active tblptr bytes
 20238  003C06                     	endif
 20239  003C06  0008               	tblrd		*
 20240  003C08  CFF5 F134          	movff	tablat,display_drops@temp
 20241                           
 20242                           ;Oled.c: 2140: tori = temp;
 20243  003C0C  C134  F133         	movff	display_drops@temp,display_drops@tori
 20244                           
 20245                           ;Oled.c: 2141: temp = ~temp;
 20246  003C10  0101               	movlb	1	; () banked
 20247  003C12  1F34               	comf	display_drops@temp& (0+255),f,b
 20248                           
 20249                           ; BSR set to: 1
 20250                           ;Oled.c: 2143: ee_WriteBytes(&temp, 0x40, 1);
 20251  003C14  0E34               	movlw	low display_drops@temp
 20252  003C16  0101               	movlb	1	; () banked
 20253  003C18  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20254  003C1A  0E01               	movlw	high display_drops@temp
 20255  003C1C  0101               	movlb	1	; () banked
 20256  003C1E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20257  003C20  0E40               	movlw	64
 20258  003C22  0101               	movlb	1	; () banked
 20259  003C24  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20260  003C26  0E00               	movlw	0
 20261  003C28  0101               	movlb	1	; () banked
 20262  003C2A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20263  003C2C  0E01               	movlw	1
 20264  003C2E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20265  003C30  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20266  003C34  2A69               	incf	_ms,f,c
 20267  003C36  D7DB               	goto	l12739
 20268  003C38                     l12755:
 20269                           
 20270                           ;Oled.c: 2144: }
 20271                           ;Oled.c: 2147: setYX_LCD(1,x);
 20272  003C38  C131  F0FF         	movff	display_drops@x,setYX_LCD@px
 20273  003C3C  0E01               	movlw	1
 20274  003C3E  EC8E  F024         	call	_setYX_LCD
 20275                           
 20276                           ;Oled.c: 2148: for(ms=0;ms<23;ms++)
 20277  003C42  0E00               	movlw	0
 20278  003C44  6E69               	movwf	_ms,c
 20279  003C46                     l12759:
 20280  003C46  0E16               	movlw	22
 20281  003C48  6469               	cpfsgt	_ms,c
 20282  003C4A  D001               	goto	l12763
 20283  003C4C  0012               	return	
 20284  003C4E                     l12763:
 20285                           
 20286                           ;Oled.c: 2149: {
 20287                           ;Oled.c: 2150: temp = drops_m[1][ms];
 20288  003C4E  5069               	movf	_ms,w,c
 20289  003C50  0D01               	mullw	1
 20290  003C52  0E17               	movlw	23
 20291  003C54  26F3               	addwf	prodl,f,c
 20292  003C56  0E00               	movlw	0
 20293  003C58  22F4               	addwfc	prodh,f,c
 20294  003C5A  0E70               	movlw	low _drops_m
 20295  003C5C  24F3               	addwf	prodl,w,c
 20296  003C5E  6EF6               	movwf	tblptrl,c
 20297  003C60  0E75               	movlw	high _drops_m
 20298  003C62  20F4               	addwfc	prodh,w,c
 20299  003C64  6EF7               	movwf	tblptrh,c
 20300  003C66                     	if	0	;There are less than 3 active tblptr bytes
 20301  003C66                     	endif
 20302  003C66  0008               	tblrd		*
 20303  003C68  CFF5 F134          	movff	tablat,display_drops@temp
 20304                           
 20305                           ;Oled.c: 2151: tori =temp;
 20306  003C6C  C134  F133         	movff	display_drops@temp,display_drops@tori
 20307                           
 20308                           ;Oled.c: 2153: temp = ~temp;
 20309  003C70  0101               	movlb	1	; () banked
 20310  003C72  1F34               	comf	display_drops@temp& (0+255),f,b
 20311                           
 20312                           ; BSR set to: 1
 20313                           ;Oled.c: 2157: ee_WriteBytes(&temp, 0x40, 1);
 20314  003C74  0E34               	movlw	low display_drops@temp
 20315  003C76  0101               	movlb	1	; () banked
 20316  003C78  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20317  003C7A  0E01               	movlw	high display_drops@temp
 20318  003C7C  0101               	movlb	1	; () banked
 20319  003C7E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20320  003C80  0E40               	movlw	64
 20321  003C82  0101               	movlb	1	; () banked
 20322  003C84  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20323  003C86  0E00               	movlw	0
 20324  003C88  0101               	movlb	1	; () banked
 20325  003C8A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20326  003C8C  0E01               	movlw	1
 20327  003C8E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20328  003C90  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20329  003C94  2A69               	incf	_ms,f,c
 20330  003C96  D7D7               	goto	l12759
 20331  003C98                     l12777:
 20332  003C98  0101               	movlb	1	; () banked
 20333  003C9A  5132               	movf	display_drops@mode& (0+255),w,b
 20334                           
 20335                           ; Switch size 1, requested type "space"
 20336                           ; Number of cases is 2, Range of values is 0 to 128
 20337                           ; switch strategies available:
 20338                           ; Name         Instructions Cycles
 20339                           ; simple_byte            7     4 (average)
 20340                           ;	Chosen strategy is simple_byte
 20341  003C9C  0A00               	xorlw	0	; case 0
 20342  003C9E  B4D8               	btfsc	status,2,c
 20343  003CA0  D74B               	goto	l12703
 20344  003CA2  0A80               	xorlw	128	; case 128
 20345  003CA4  A4D8               	btfss	status,2,c
 20346  003CA6  0012               	return	
 20347  003CA8  D79B               	goto	l12735
 20348  003CAA                     __end_of_display_drops:
 20349                           	opt stack 0
 20350                           tblptru	equ	0xFF8
 20351                           tblptrh	equ	0xFF7
 20352                           tblptrl	equ	0xFF6
 20353                           tablat	equ	0xFF5
 20354                           prodh	equ	0xFF4
 20355                           prodl	equ	0xFF3
 20356                           intcon	equ	0xFF2
 20357                           intcon3	equ	0xFF0
 20358                           postinc0	equ	0xFEE
 20359                           wreg	equ	0xFE8
 20360                           postdec1	equ	0xFE5
 20361                           fsr1h	equ	0xFE2
 20362                           fsr1l	equ	0xFE1
 20363                           postinc2	equ	0xFDE
 20364                           fsr2h	equ	0xFDA
 20365                           fsr2l	equ	0xFD9
 20366                           status	equ	0xFD8
 20367                           
 20368 ;; *************** function _display_drop *****************
 20369 ;; Defined at:
 20370 ;;		line 2176 in file "../Oled.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;  y               1    wreg     unsigned char 
 20373 ;;  x               1    9[BANK1 ] unsigned char 
 20374 ;;  mode            1   10[BANK1 ] unsigned char 
 20375 ;; Auto vars:     Size  Location     Type
 20376 ;;  y               1    0[COMRAM] unsigned char 
 20377 ;;  temp            1   12[BANK1 ] unsigned char 
 20378 ;;  tori            1   11[BANK1 ] unsigned char 
 20379 ;; Return value:  Size  Location     Type
 20380 ;;                  1    wreg      void 
 20381 ;; Registers used:
 20382 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20383 ;; Tracked objects:
 20384 ;;		On entry : 0/0
 20385 ;;		On exit  : 0/0
 20386 ;;		Unchanged: 0/0
 20387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20388 ;;      Params:         0       0       2       0       0       0       0
 20389 ;;      Locals:         0       0       2       0       0       0       0
 20390 ;;      Temps:          0       0       0       0       0       0       0
 20391 ;;      Totals:         0       0       4       0       0       0       0
 20392 ;;Total ram usage:        4 bytes
 20393 ;; Hardware stack levels used:    1
 20394 ;; Hardware stack levels required when called:    6
 20395 ;; This function calls:
 20396 ;;		_ee_WriteBytes
 20397 ;;		_setYX_LCD
 20398 ;; This function is called by:
 20399 ;;		_menu0_MsgHandlle
 20400 ;;		_check_ui_status
 20401 ;;		_blink_mode
 20402 ;; This function uses a non-reentrant model
 20403 ;;
 20404                           
 20405                           	psect	text45
 20406  003CAA                     __ptext45:
 20407                           	opt stack 0
 20408  003CAA                     _display_drop:
 20409                           	opt stack 23
 20410                           
 20411                           ;Oled.c: 2179: uint8_t temp =0;
 20412                           
 20413                           ;incstack = 0
 20414  003CAA  0E00               	movlw	0
 20415  003CAC  0101               	movlb	1	; () banked
 20416  003CAE  6F34               	movwf	display_drop@temp& (0+255),b
 20417                           
 20418                           ;Oled.c: 2180: uint8_t tori =0;
 20419  003CB0  0E00               	movlw	0
 20420  003CB2  0101               	movlb	1	; () banked
 20421  003CB4  6F33               	movwf	display_drop@tori& (0+255),b
 20422                           
 20423                           ;Oled.c: 2181: switch(mode)
 20424  003CB6  D0B0               	goto	l12855
 20425  003CB8                     l12781:
 20426                           
 20427                           ; BSR set to: 1
 20428                           ;Oled.c: 2187: setYX_LCD(0,x);
 20429  003CB8  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20430  003CBC  0E00               	movlw	0
 20431  003CBE  EC8E  F024         	call	_setYX_LCD
 20432                           
 20433                           ;Oled.c: 2188: for(ms=0;ms<23;ms++)
 20434  003CC2  0E00               	movlw	0
 20435  003CC4  6E69               	movwf	_ms,c
 20436  003CC6                     l12785:
 20437  003CC6  0E16               	movlw	22
 20438  003CC8  6469               	cpfsgt	_ms,c
 20439  003CCA  D001               	goto	l12789
 20440  003CCC  D01D               	goto	l12797
 20441  003CCE                     l12789:
 20442                           
 20443                           ;Oled.c: 2189: {
 20444                           ;Oled.c: 2191: temp =drop_m[0][ms];
 20445  003CCE  5069               	movf	_ms,w,c
 20446  003CD0  0D01               	mullw	1
 20447  003CD2  0E42               	movlw	low _drop_m
 20448  003CD4  24F3               	addwf	prodl,w,c
 20449  003CD6  6EF6               	movwf	tblptrl,c
 20450  003CD8  0E75               	movlw	high _drop_m
 20451  003CDA  20F4               	addwfc	prodh,w,c
 20452  003CDC  6EF7               	movwf	tblptrh,c
 20453  003CDE                     	if	0	;There are less than 3 active tblptr bytes
 20454  003CDE                     	endif
 20455  003CDE  0008               	tblrd		*
 20456  003CE0  CFF5 F134          	movff	tablat,display_drop@temp
 20457                           
 20458                           ;Oled.c: 2192: ee_WriteBytes(&temp, 0x40, 1);
 20459  003CE4  0E34               	movlw	low display_drop@temp
 20460  003CE6  0101               	movlb	1	; () banked
 20461  003CE8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20462  003CEA  0E01               	movlw	high display_drop@temp
 20463  003CEC  0101               	movlb	1	; () banked
 20464  003CEE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20465  003CF0  0E40               	movlw	64
 20466  003CF2  0101               	movlb	1	; () banked
 20467  003CF4  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20468  003CF6  0E00               	movlw	0
 20469  003CF8  0101               	movlb	1	; () banked
 20470  003CFA  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20471  003CFC  0E01               	movlw	1
 20472  003CFE  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20473  003D00  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20474  003D04  2A69               	incf	_ms,f,c
 20475  003D06  D7DF               	goto	l12785
 20476  003D08                     l12797:
 20477                           
 20478                           ;Oled.c: 2193: }
 20479                           ;Oled.c: 2196: setYX_LCD(1,x);
 20480  003D08  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20481  003D0C  0E01               	movlw	1
 20482  003D0E  EC8E  F024         	call	_setYX_LCD
 20483                           
 20484                           ;Oled.c: 2197: for(ms=0;ms<23;ms++)
 20485  003D12  0E00               	movlw	0
 20486  003D14  6E69               	movwf	_ms,c
 20487  003D16                     l12801:
 20488  003D16  0E16               	movlw	22
 20489  003D18  6469               	cpfsgt	_ms,c
 20490  003D1A  D001               	goto	l12805
 20491  003D1C  0012               	return	
 20492  003D1E                     l12805:
 20493                           
 20494                           ;Oled.c: 2198: {
 20495                           ;Oled.c: 2199: temp = drop_m[1][ms];
 20496  003D1E  5069               	movf	_ms,w,c
 20497  003D20  0D01               	mullw	1
 20498  003D22  0E17               	movlw	23
 20499  003D24  26F3               	addwf	prodl,f,c
 20500  003D26  0E00               	movlw	0
 20501  003D28  22F4               	addwfc	prodh,f,c
 20502  003D2A  0E42               	movlw	low _drop_m
 20503  003D2C  24F3               	addwf	prodl,w,c
 20504  003D2E  6EF6               	movwf	tblptrl,c
 20505  003D30  0E75               	movlw	high _drop_m
 20506  003D32  20F4               	addwfc	prodh,w,c
 20507  003D34  6EF7               	movwf	tblptrh,c
 20508  003D36                     	if	0	;There are less than 3 active tblptr bytes
 20509  003D36                     	endif
 20510  003D36  0008               	tblrd		*
 20511  003D38  CFF5 F134          	movff	tablat,display_drop@temp
 20512                           
 20513                           ;Oled.c: 2200: ee_WriteBytes(&temp, 0x40, 1);
 20514  003D3C  0E34               	movlw	low display_drop@temp
 20515  003D3E  0101               	movlb	1	; () banked
 20516  003D40  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20517  003D42  0E01               	movlw	high display_drop@temp
 20518  003D44  0101               	movlb	1	; () banked
 20519  003D46  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20520  003D48  0E40               	movlw	64
 20521  003D4A  0101               	movlb	1	; () banked
 20522  003D4C  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20523  003D4E  0E00               	movlw	0
 20524  003D50  0101               	movlb	1	; () banked
 20525  003D52  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20526  003D54  0E01               	movlw	1
 20527  003D56  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20528  003D58  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20529  003D5C  2A69               	incf	_ms,f,c
 20530  003D5E  D7DB               	goto	l12801
 20531  003D60                     l12813:
 20532                           
 20533                           ;Oled.c: 2209: setYX_LCD(0,x);
 20534  003D60  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20535  003D64  0E00               	movlw	0
 20536  003D66  EC8E  F024         	call	_setYX_LCD
 20537                           
 20538                           ;Oled.c: 2210: for(ms=0;ms<23;ms++)
 20539  003D6A  0E00               	movlw	0
 20540  003D6C  6E69               	movwf	_ms,c
 20541  003D6E                     l12817:
 20542  003D6E  0E16               	movlw	22
 20543  003D70  6469               	cpfsgt	_ms,c
 20544  003D72  D001               	goto	l12821
 20545  003D74  D021               	goto	l12833
 20546  003D76                     l12821:
 20547                           
 20548                           ;Oled.c: 2211: {
 20549                           ;Oled.c: 2213: temp = drop_m[0][ms];
 20550  003D76  5069               	movf	_ms,w,c
 20551  003D78  0D01               	mullw	1
 20552  003D7A  0E42               	movlw	low _drop_m
 20553  003D7C  24F3               	addwf	prodl,w,c
 20554  003D7E  6EF6               	movwf	tblptrl,c
 20555  003D80  0E75               	movlw	high _drop_m
 20556  003D82  20F4               	addwfc	prodh,w,c
 20557  003D84  6EF7               	movwf	tblptrh,c
 20558  003D86                     	if	0	;There are less than 3 active tblptr bytes
 20559  003D86                     	endif
 20560  003D86  0008               	tblrd		*
 20561  003D88  CFF5 F134          	movff	tablat,display_drop@temp
 20562                           
 20563                           ;Oled.c: 2214: tori = temp;
 20564  003D8C  C134  F133         	movff	display_drop@temp,display_drop@tori
 20565                           
 20566                           ;Oled.c: 2218: temp = ~temp;
 20567  003D90  0101               	movlb	1	; () banked
 20568  003D92  1F34               	comf	display_drop@temp& (0+255),f,b
 20569                           
 20570                           ; BSR set to: 1
 20571                           ;Oled.c: 2221: ee_WriteBytes(&temp, 0x40, 1);
 20572  003D94  0E34               	movlw	low display_drop@temp
 20573  003D96  0101               	movlb	1	; () banked
 20574  003D98  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20575  003D9A  0E01               	movlw	high display_drop@temp
 20576  003D9C  0101               	movlb	1	; () banked
 20577  003D9E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20578  003DA0  0E40               	movlw	64
 20579  003DA2  0101               	movlb	1	; () banked
 20580  003DA4  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20581  003DA6  0E00               	movlw	0
 20582  003DA8  0101               	movlb	1	; () banked
 20583  003DAA  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20584  003DAC  0E01               	movlw	1
 20585  003DAE  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20586  003DB0  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20587  003DB4  2A69               	incf	_ms,f,c
 20588  003DB6  D7DB               	goto	l12817
 20589  003DB8                     l12833:
 20590                           
 20591                           ;Oled.c: 2222: }
 20592                           ;Oled.c: 2225: setYX_LCD(1,x);
 20593  003DB8  C131  F0FF         	movff	display_drop@x,setYX_LCD@px
 20594  003DBC  0E01               	movlw	1
 20595  003DBE  EC8E  F024         	call	_setYX_LCD
 20596                           
 20597                           ;Oled.c: 2226: for(ms=0;ms<23;ms++)
 20598  003DC2  0E00               	movlw	0
 20599  003DC4  6E69               	movwf	_ms,c
 20600  003DC6                     l12837:
 20601  003DC6  0E16               	movlw	22
 20602  003DC8  6469               	cpfsgt	_ms,c
 20603  003DCA  D001               	goto	l12841
 20604  003DCC  0012               	return	
 20605  003DCE                     l12841:
 20606                           
 20607                           ;Oled.c: 2227: {
 20608                           ;Oled.c: 2228: temp = drop_m[1][ms];
 20609  003DCE  5069               	movf	_ms,w,c
 20610  003DD0  0D01               	mullw	1
 20611  003DD2  0E17               	movlw	23
 20612  003DD4  26F3               	addwf	prodl,f,c
 20613  003DD6  0E00               	movlw	0
 20614  003DD8  22F4               	addwfc	prodh,f,c
 20615  003DDA  0E42               	movlw	low _drop_m
 20616  003DDC  24F3               	addwf	prodl,w,c
 20617  003DDE  6EF6               	movwf	tblptrl,c
 20618  003DE0  0E75               	movlw	high _drop_m
 20619  003DE2  20F4               	addwfc	prodh,w,c
 20620  003DE4  6EF7               	movwf	tblptrh,c
 20621  003DE6                     	if	0	;There are less than 3 active tblptr bytes
 20622  003DE6                     	endif
 20623  003DE6  0008               	tblrd		*
 20624  003DE8  CFF5 F134          	movff	tablat,display_drop@temp
 20625                           
 20626                           ;Oled.c: 2229: tori =temp;
 20627  003DEC  C134  F133         	movff	display_drop@temp,display_drop@tori
 20628                           
 20629                           ;Oled.c: 2230: temp = ~temp;
 20630  003DF0  0101               	movlb	1	; () banked
 20631  003DF2  1F34               	comf	display_drop@temp& (0+255),f,b
 20632                           
 20633                           ; BSR set to: 1
 20634                           ;Oled.c: 2232: ee_WriteBytes(&temp, 0x40, 1);
 20635  003DF4  0E34               	movlw	low display_drop@temp
 20636  003DF6  0101               	movlb	1	; () banked
 20637  003DF8  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20638  003DFA  0E01               	movlw	high display_drop@temp
 20639  003DFC  0101               	movlb	1	; () banked
 20640  003DFE  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20641  003E00  0E40               	movlw	64
 20642  003E02  0101               	movlb	1	; () banked
 20643  003E04  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20644  003E06  0E00               	movlw	0
 20645  003E08  0101               	movlb	1	; () banked
 20646  003E0A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20647  003E0C  0E01               	movlw	1
 20648  003E0E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20649  003E10  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20650  003E14  2A69               	incf	_ms,f,c
 20651  003E16  D7D7               	goto	l12837
 20652  003E18                     l12855:
 20653  003E18  0101               	movlb	1	; () banked
 20654  003E1A  5132               	movf	display_drop@mode& (0+255),w,b
 20655                           
 20656                           ; Switch size 1, requested type "space"
 20657                           ; Number of cases is 2, Range of values is 0 to 128
 20658                           ; switch strategies available:
 20659                           ; Name         Instructions Cycles
 20660                           ; simple_byte            7     4 (average)
 20661                           ;	Chosen strategy is simple_byte
 20662  003E1C  0A00               	xorlw	0	; case 0
 20663  003E1E  B4D8               	btfsc	status,2,c
 20664  003E20  D74B               	goto	l12781
 20665  003E22  0A80               	xorlw	128	; case 128
 20666  003E24  A4D8               	btfss	status,2,c
 20667  003E26  0012               	return	
 20668  003E28  D79B               	goto	l12813
 20669  003E2A                     __end_of_display_drop:
 20670                           	opt stack 0
 20671                           tblptru	equ	0xFF8
 20672                           tblptrh	equ	0xFF7
 20673                           tblptrl	equ	0xFF6
 20674                           tablat	equ	0xFF5
 20675                           prodh	equ	0xFF4
 20676                           prodl	equ	0xFF3
 20677                           intcon	equ	0xFF2
 20678                           intcon3	equ	0xFF0
 20679                           postinc0	equ	0xFEE
 20680                           wreg	equ	0xFE8
 20681                           postdec1	equ	0xFE5
 20682                           fsr1h	equ	0xFE2
 20683                           fsr1l	equ	0xFE1
 20684                           postinc2	equ	0xFDE
 20685                           fsr2h	equ	0xFDA
 20686                           fsr2l	equ	0xFD9
 20687                           status	equ	0xFD8
 20688                           
 20689 ;; *************** function _display_cmode *****************
 20690 ;; Defined at:
 20691 ;;		line 2026 in file "../Oled.c"
 20692 ;; Parameters:    Size  Location     Type
 20693 ;;  y               1    wreg     unsigned char 
 20694 ;;  x               1    9[BANK1 ] unsigned char 
 20695 ;;  mode            1   10[BANK1 ] unsigned char 
 20696 ;; Auto vars:     Size  Location     Type
 20697 ;;  y               1    0[COMRAM] unsigned char 
 20698 ;;  temp            1   12[BANK1 ] unsigned char 
 20699 ;;  tori            1   11[BANK1 ] unsigned char 
 20700 ;; Return value:  Size  Location     Type
 20701 ;;                  1    wreg      void 
 20702 ;; Registers used:
 20703 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 20704 ;; Tracked objects:
 20705 ;;		On entry : 0/0
 20706 ;;		On exit  : 0/0
 20707 ;;		Unchanged: 0/0
 20708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20709 ;;      Params:         0       0       2       0       0       0       0
 20710 ;;      Locals:         0       0       2       0       0       0       0
 20711 ;;      Temps:          0       0       0       0       0       0       0
 20712 ;;      Totals:         0       0       4       0       0       0       0
 20713 ;;Total ram usage:        4 bytes
 20714 ;; Hardware stack levels used:    1
 20715 ;; Hardware stack levels required when called:    6
 20716 ;; This function calls:
 20717 ;;		_ee_WriteBytes
 20718 ;;		_setYX_LCD
 20719 ;; This function is called by:
 20720 ;;		_initial_ui_setting
 20721 ;;		_menu0_MsgHandlle
 20722 ;;		_check_ui_status
 20723 ;;		_blink_mode
 20724 ;; This function uses a non-reentrant model
 20725 ;;
 20726                           
 20727                           	psect	text46
 20728  003E2A                     __ptext46:
 20729                           	opt stack 0
 20730  003E2A                     _display_cmode:
 20731                           	opt stack 21
 20732                           
 20733                           ;Oled.c: 2029: uint8_t temp =0;
 20734                           
 20735                           ;incstack = 0
 20736  003E2A  0E00               	movlw	0
 20737  003E2C  0101               	movlb	1	; () banked
 20738  003E2E  6F34               	movwf	display_cmode@temp& (0+255),b
 20739                           
 20740                           ;Oled.c: 2030: uint8_t tori =0;
 20741  003E30  0E00               	movlw	0
 20742  003E32  0101               	movlb	1	; () banked
 20743  003E34  6F33               	movwf	display_cmode@tori& (0+255),b
 20744                           
 20745                           ;Oled.c: 2031: switch(mode)
 20746  003E36  D0B0               	goto	l11743
 20747  003E38                     l11669:
 20748                           
 20749                           ; BSR set to: 1
 20750                           ;Oled.c: 2037: setYX_LCD(0,x);
 20751  003E38  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20752  003E3C  0E00               	movlw	0
 20753  003E3E  EC8E  F024         	call	_setYX_LCD
 20754                           
 20755                           ;Oled.c: 2038: for(ms=0;ms<23;ms++)
 20756  003E42  0E00               	movlw	0
 20757  003E44  6E69               	movwf	_ms,c
 20758  003E46                     l11673:
 20759  003E46  0E16               	movlw	22
 20760  003E48  6469               	cpfsgt	_ms,c
 20761  003E4A  D001               	goto	l11677
 20762  003E4C  D01D               	goto	l11685
 20763  003E4E                     l11677:
 20764                           
 20765                           ;Oled.c: 2039: {
 20766                           ;Oled.c: 2041: temp =c_m[0][ms];
 20767  003E4E  5069               	movf	_ms,w,c
 20768  003E50  0D01               	mullw	1
 20769  003E52  0E9E               	movlw	low _c_m
 20770  003E54  24F3               	addwf	prodl,w,c
 20771  003E56  6EF6               	movwf	tblptrl,c
 20772  003E58  0E75               	movlw	high _c_m
 20773  003E5A  20F4               	addwfc	prodh,w,c
 20774  003E5C  6EF7               	movwf	tblptrh,c
 20775  003E5E                     	if	0	;There are less than 3 active tblptr bytes
 20776  003E5E                     	endif
 20777  003E5E  0008               	tblrd		*
 20778  003E60  CFF5 F134          	movff	tablat,display_cmode@temp
 20779                           
 20780                           ;Oled.c: 2043: ee_WriteBytes(&temp, 0x40, 1);
 20781  003E64  0E34               	movlw	low display_cmode@temp
 20782  003E66  0101               	movlb	1	; () banked
 20783  003E68  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20784  003E6A  0E01               	movlw	high display_cmode@temp
 20785  003E6C  0101               	movlb	1	; () banked
 20786  003E6E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20787  003E70  0E40               	movlw	64
 20788  003E72  0101               	movlb	1	; () banked
 20789  003E74  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20790  003E76  0E00               	movlw	0
 20791  003E78  0101               	movlb	1	; () banked
 20792  003E7A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20793  003E7C  0E01               	movlw	1
 20794  003E7E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20795  003E80  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20796  003E84  2A69               	incf	_ms,f,c
 20797  003E86  D7DF               	goto	l11673
 20798  003E88                     l11685:
 20799                           
 20800                           ;Oled.c: 2044: }
 20801                           ;Oled.c: 2047: setYX_LCD(1,x);
 20802  003E88  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20803  003E8C  0E01               	movlw	1
 20804  003E8E  EC8E  F024         	call	_setYX_LCD
 20805                           
 20806                           ;Oled.c: 2048: for(ms=0;ms<23;ms++)
 20807  003E92  0E00               	movlw	0
 20808  003E94  6E69               	movwf	_ms,c
 20809  003E96                     l11689:
 20810  003E96  0E16               	movlw	22
 20811  003E98  6469               	cpfsgt	_ms,c
 20812  003E9A  D001               	goto	l11693
 20813  003E9C  0012               	return	
 20814  003E9E                     l11693:
 20815                           
 20816                           ;Oled.c: 2049: {
 20817                           ;Oled.c: 2050: temp = c_m[1][ms];
 20818  003E9E  5069               	movf	_ms,w,c
 20819  003EA0  0D01               	mullw	1
 20820  003EA2  0E17               	movlw	23
 20821  003EA4  26F3               	addwf	prodl,f,c
 20822  003EA6  0E00               	movlw	0
 20823  003EA8  22F4               	addwfc	prodh,f,c
 20824  003EAA  0E9E               	movlw	low _c_m
 20825  003EAC  24F3               	addwf	prodl,w,c
 20826  003EAE  6EF6               	movwf	tblptrl,c
 20827  003EB0  0E75               	movlw	high _c_m
 20828  003EB2  20F4               	addwfc	prodh,w,c
 20829  003EB4  6EF7               	movwf	tblptrh,c
 20830  003EB6                     	if	0	;There are less than 3 active tblptr bytes
 20831  003EB6                     	endif
 20832  003EB6  0008               	tblrd		*
 20833  003EB8  CFF5 F134          	movff	tablat,display_cmode@temp
 20834                           
 20835                           ;Oled.c: 2052: ee_WriteBytes(&temp, 0x40, 1);
 20836  003EBC  0E34               	movlw	low display_cmode@temp
 20837  003EBE  0101               	movlb	1	; () banked
 20838  003EC0  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20839  003EC2  0E01               	movlw	high display_cmode@temp
 20840  003EC4  0101               	movlb	1	; () banked
 20841  003EC6  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20842  003EC8  0E40               	movlw	64
 20843  003ECA  0101               	movlb	1	; () banked
 20844  003ECC  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20845  003ECE  0E00               	movlw	0
 20846  003ED0  0101               	movlb	1	; () banked
 20847  003ED2  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20848  003ED4  0E01               	movlw	1
 20849  003ED6  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20850  003ED8  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20851  003EDC  2A69               	incf	_ms,f,c
 20852  003EDE  D7DB               	goto	l11689
 20853  003EE0                     l11701:
 20854                           
 20855                           ;Oled.c: 2061: setYX_LCD(0,x);
 20856  003EE0  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20857  003EE4  0E00               	movlw	0
 20858  003EE6  EC8E  F024         	call	_setYX_LCD
 20859                           
 20860                           ;Oled.c: 2062: for(ms=0;ms<23;ms++)
 20861  003EEA  0E00               	movlw	0
 20862  003EEC  6E69               	movwf	_ms,c
 20863  003EEE                     l11705:
 20864  003EEE  0E16               	movlw	22
 20865  003EF0  6469               	cpfsgt	_ms,c
 20866  003EF2  D001               	goto	l11709
 20867  003EF4  D021               	goto	l11721
 20868  003EF6                     l11709:
 20869                           
 20870                           ;Oled.c: 2063: {
 20871                           ;Oled.c: 2065: temp = c_m[0][ms];
 20872  003EF6  5069               	movf	_ms,w,c
 20873  003EF8  0D01               	mullw	1
 20874  003EFA  0E9E               	movlw	low _c_m
 20875  003EFC  24F3               	addwf	prodl,w,c
 20876  003EFE  6EF6               	movwf	tblptrl,c
 20877  003F00  0E75               	movlw	high _c_m
 20878  003F02  20F4               	addwfc	prodh,w,c
 20879  003F04  6EF7               	movwf	tblptrh,c
 20880  003F06                     	if	0	;There are less than 3 active tblptr bytes
 20881  003F06                     	endif
 20882  003F06  0008               	tblrd		*
 20883  003F08  CFF5 F134          	movff	tablat,display_cmode@temp
 20884                           
 20885                           ;Oled.c: 2066: tori = temp;
 20886  003F0C  C134  F133         	movff	display_cmode@temp,display_cmode@tori
 20887                           
 20888                           ;Oled.c: 2068: temp = ~temp;
 20889  003F10  0101               	movlb	1	; () banked
 20890  003F12  1F34               	comf	display_cmode@temp& (0+255),f,b
 20891                           
 20892                           ; BSR set to: 1
 20893                           ;Oled.c: 2071: ee_WriteBytes(&temp, 0x40, 1);
 20894  003F14  0E34               	movlw	low display_cmode@temp
 20895  003F16  0101               	movlb	1	; () banked
 20896  003F18  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20897  003F1A  0E01               	movlw	high display_cmode@temp
 20898  003F1C  0101               	movlb	1	; () banked
 20899  003F1E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20900  003F20  0E40               	movlw	64
 20901  003F22  0101               	movlb	1	; () banked
 20902  003F24  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20903  003F26  0E00               	movlw	0
 20904  003F28  0101               	movlb	1	; () banked
 20905  003F2A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20906  003F2C  0E01               	movlw	1
 20907  003F2E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20908  003F30  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20909  003F34  2A69               	incf	_ms,f,c
 20910  003F36  D7DB               	goto	l11705
 20911  003F38                     l11721:
 20912                           
 20913                           ;Oled.c: 2072: }
 20914                           ;Oled.c: 2075: setYX_LCD(1,x);
 20915  003F38  C131  F0FF         	movff	display_cmode@x,setYX_LCD@px
 20916  003F3C  0E01               	movlw	1
 20917  003F3E  EC8E  F024         	call	_setYX_LCD
 20918                           
 20919                           ;Oled.c: 2076: for(ms=0;ms<23;ms++)
 20920  003F42  0E00               	movlw	0
 20921  003F44  6E69               	movwf	_ms,c
 20922  003F46                     l11725:
 20923  003F46  0E16               	movlw	22
 20924  003F48  6469               	cpfsgt	_ms,c
 20925  003F4A  D001               	goto	l11729
 20926  003F4C  0012               	return	
 20927  003F4E                     l11729:
 20928                           
 20929                           ;Oled.c: 2077: {
 20930                           ;Oled.c: 2078: temp = c_m[1][ms];
 20931  003F4E  5069               	movf	_ms,w,c
 20932  003F50  0D01               	mullw	1
 20933  003F52  0E17               	movlw	23
 20934  003F54  26F3               	addwf	prodl,f,c
 20935  003F56  0E00               	movlw	0
 20936  003F58  22F4               	addwfc	prodh,f,c
 20937  003F5A  0E9E               	movlw	low _c_m
 20938  003F5C  24F3               	addwf	prodl,w,c
 20939  003F5E  6EF6               	movwf	tblptrl,c
 20940  003F60  0E75               	movlw	high _c_m
 20941  003F62  20F4               	addwfc	prodh,w,c
 20942  003F64  6EF7               	movwf	tblptrh,c
 20943  003F66                     	if	0	;There are less than 3 active tblptr bytes
 20944  003F66                     	endif
 20945  003F66  0008               	tblrd		*
 20946  003F68  CFF5 F134          	movff	tablat,display_cmode@temp
 20947                           
 20948                           ;Oled.c: 2079: tori =temp;
 20949  003F6C  C134  F133         	movff	display_cmode@temp,display_cmode@tori
 20950                           
 20951                           ;Oled.c: 2081: temp = ~temp;
 20952  003F70  0101               	movlb	1	; () banked
 20953  003F72  1F34               	comf	display_cmode@temp& (0+255),f,b
 20954                           
 20955                           ; BSR set to: 1
 20956                           ;Oled.c: 2083: ee_WriteBytes(&temp, 0x40, 1);
 20957  003F74  0E34               	movlw	low display_cmode@temp
 20958  003F76  0101               	movlb	1	; () banked
 20959  003F78  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 20960  003F7A  0E01               	movlw	high display_cmode@temp
 20961  003F7C  0101               	movlb	1	; () banked
 20962  003F7E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 20963  003F80  0E40               	movlw	64
 20964  003F82  0101               	movlb	1	; () banked
 20965  003F84  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 20966  003F86  0E00               	movlw	0
 20967  003F88  0101               	movlb	1	; () banked
 20968  003F8A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 20969  003F8C  0E01               	movlw	1
 20970  003F8E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 20971  003F90  EC88  F025         	call	_ee_WriteBytes	;wreg free
 20972  003F94  2A69               	incf	_ms,f,c
 20973  003F96  D7D7               	goto	l11725
 20974  003F98                     l11743:
 20975  003F98  0101               	movlb	1	; () banked
 20976  003F9A  5132               	movf	display_cmode@mode& (0+255),w,b
 20977                           
 20978                           ; Switch size 1, requested type "space"
 20979                           ; Number of cases is 2, Range of values is 0 to 128
 20980                           ; switch strategies available:
 20981                           ; Name         Instructions Cycles
 20982                           ; simple_byte            7     4 (average)
 20983                           ;	Chosen strategy is simple_byte
 20984  003F9C  0A00               	xorlw	0	; case 0
 20985  003F9E  B4D8               	btfsc	status,2,c
 20986  003FA0  D74B               	goto	l11669
 20987  003FA2  0A80               	xorlw	128	; case 128
 20988  003FA4  A4D8               	btfss	status,2,c
 20989  003FA6  0012               	return	
 20990  003FA8  D79B               	goto	l11701
 20991  003FAA                     __end_of_display_cmode:
 20992                           	opt stack 0
 20993                           tblptru	equ	0xFF8
 20994                           tblptrh	equ	0xFF7
 20995                           tblptrl	equ	0xFF6
 20996                           tablat	equ	0xFF5
 20997                           prodh	equ	0xFF4
 20998                           prodl	equ	0xFF3
 20999                           intcon	equ	0xFF2
 21000                           intcon3	equ	0xFF0
 21001                           postinc0	equ	0xFEE
 21002                           wreg	equ	0xFE8
 21003                           postdec1	equ	0xFE5
 21004                           fsr1h	equ	0xFE2
 21005                           fsr1l	equ	0xFE1
 21006                           postinc2	equ	0xFDE
 21007                           fsr2h	equ	0xFDA
 21008                           fsr2l	equ	0xFD9
 21009                           status	equ	0xFD8
 21010                           
 21011 ;; *************** function _setYX_LCD *****************
 21012 ;; Defined at:
 21013 ;;		line 599 in file "../Oled.c"
 21014 ;; Parameters:    Size  Location     Type
 21015 ;;  py              1    wreg     unsigned char 
 21016 ;;  px              1    2[BANK0 ] unsigned char 
 21017 ;; Auto vars:     Size  Location     Type
 21018 ;;  py              1    8[BANK1 ] unsigned char 
 21019 ;; Return value:  Size  Location     Type
 21020 ;;                  1    wreg      unsigned char 
 21021 ;; Registers used:
 21022 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21023 ;; Tracked objects:
 21024 ;;		On entry : 0/0
 21025 ;;		On exit  : 0/0
 21026 ;;		Unchanged: 0/0
 21027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21028 ;;      Params:         0       1       0       0       0       0       0
 21029 ;;      Locals:         0       0       1       0       0       0       0
 21030 ;;      Temps:          0       0       0       0       0       0       0
 21031 ;;      Totals:         0       1       1       0       0       0       0
 21032 ;;Total ram usage:        2 bytes
 21033 ;; Hardware stack levels used:    1
 21034 ;; Hardware stack levels required when called:    5
 21035 ;; This function calls:
 21036 ;;		_ee_WriteBytes
 21037 ;; This function is called by:
 21038 ;;		_display_n_blank
 21039 ;;		_display_num
 21040 ;;		_display_bat_blank
 21041 ;;		_display_bat
 21042 ;;		_display_mem
 21043 ;;		_display_blank_mode_pa
 21044 ;;		_display_cmode
 21045 ;;		_display_drops
 21046 ;;		_display_drop
 21047 ;;		_display_frame_abc
 21048 ;;		_display_frame_de
 21049 ;;		_display_frame_fghi
 21050 ;;		_display_logo
 21051 ;;		_clear_screen
 21052 ;; This function uses a non-reentrant model
 21053 ;;
 21054                           
 21055                           	psect	text47
 21056  00491C                     __ptext47:
 21057                           	opt stack 0
 21058  00491C                     _setYX_LCD:
 21059                           	opt stack 21
 21060                           
 21061                           ;incstack = 0
 21062                           ;setYX_LCD@py stored from wreg
 21063  00491C  0101               	movlb	1	; () banked
 21064  00491E  6F30               	movwf	setYX_LCD@py& (0+255),b
 21065                           
 21066                           ;Oled.c: 603: write_buf[0]=0x80 + px;
 21067  004920  0100               	movlb	0	; () banked
 21068  004922  51FF               	movf	setYX_LCD@px& (0+255),w,b
 21069  004924  0F80               	addlw	128
 21070  004926  0102               	movlb	2	; () banked
 21071  004928  6F00               	movwf	_write_buf& (0+255),b
 21072                           
 21073                           ; BSR set to: 2
 21074                           ;Oled.c: 604: ee_WriteBytes(write_buf, 0x00, 1);
 21075  00492A  0E00               	movlw	low _write_buf
 21076  00492C  0101               	movlb	1	; () banked
 21077  00492E  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 21078  004930  0E02               	movlw	high _write_buf
 21079  004932  0101               	movlb	1	; () banked
 21080  004934  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 21081  004936  0E00               	movlw	0
 21082  004938  0101               	movlb	1	; () banked
 21083  00493A  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 21084  00493C  0E00               	movlw	0
 21085  00493E  0101               	movlb	1	; () banked
 21086  004940  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 21087  004942  0E01               	movlw	1
 21088  004944  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 21089  004946  EC88  F025         	call	_ee_WriteBytes	;wreg free
 21090                           
 21091                           ;Oled.c: 607: write_buf[0]=0x40 + py;
 21092  00494A  0101               	movlb	1	; () banked
 21093  00494C  5130               	movf	setYX_LCD@py& (0+255),w,b
 21094  00494E  0F40               	addlw	64
 21095  004950  0102               	movlb	2	; () banked
 21096  004952  6F00               	movwf	_write_buf& (0+255),b
 21097                           
 21098                           ;Oled.c: 608: ee_WriteBytes(write_buf, 0x00, 1);
 21099  004954  0E00               	movlw	low _write_buf
 21100  004956  0101               	movlb	1	; () banked
 21101  004958  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 21102  00495A  0E02               	movlw	high _write_buf
 21103  00495C  0101               	movlb	1	; () banked
 21104  00495E  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 21105  004960  0E00               	movlw	0
 21106  004962  0101               	movlb	1	; () banked
 21107  004964  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 21108  004966  0E00               	movlw	0
 21109  004968  0101               	movlb	1	; () banked
 21110  00496A  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 21111  00496C  0E01               	movlw	1
 21112  00496E  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 21113  004970  EC88  F025         	call	_ee_WriteBytes	;wreg free
 21114  004974  0012               	return	
 21115  004976                     __end_of_setYX_LCD:
 21116                           	opt stack 0
 21117                           tblptru	equ	0xFF8
 21118                           tblptrh	equ	0xFF7
 21119                           tblptrl	equ	0xFF6
 21120                           tablat	equ	0xFF5
 21121                           prodh	equ	0xFF4
 21122                           prodl	equ	0xFF3
 21123                           intcon	equ	0xFF2
 21124                           intcon3	equ	0xFF0
 21125                           postinc0	equ	0xFEE
 21126                           wreg	equ	0xFE8
 21127                           postdec1	equ	0xFE5
 21128                           fsr1h	equ	0xFE2
 21129                           fsr1l	equ	0xFE1
 21130                           postinc2	equ	0xFDE
 21131                           fsr2h	equ	0xFDA
 21132                           fsr2l	equ	0xFD9
 21133                           status	equ	0xFD8
 21134                           
 21135 ;; *************** function _KEY_Scan *****************
 21136 ;; Defined at:
 21137 ;;		line 57 in file "../Key.c"
 21138 ;; Parameters:    Size  Location     Type
 21139 ;;		None
 21140 ;; Auto vars:     Size  Location     Type
 21141 ;;  tm_cnt          2    4[BANK1 ] unsigned int 
 21142 ;; Return value:  Size  Location     Type
 21143 ;;                  1    wreg      unsigned char 
 21144 ;; Registers used:
 21145 ;;		wreg, status,2, status,0, cstack
 21146 ;; Tracked objects:
 21147 ;;		On entry : 0/0
 21148 ;;		On exit  : 0/0
 21149 ;;		Unchanged: 0/0
 21150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21151 ;;      Params:         0       0       0       0       0       0       0
 21152 ;;      Locals:         0       0       2       0       0       0       0
 21153 ;;      Temps:          0       0       0       0       0       0       0
 21154 ;;      Totals:         0       0       2       0       0       0       0
 21155 ;;Total ram usage:        2 bytes
 21156 ;; Hardware stack levels used:    1
 21157 ;; Hardware stack levels required when called:    4
 21158 ;; This function calls:
 21159 ;;		_buzz
 21160 ;;		_delay_nms
 21161 ;;		_delaynus
 21162 ;; This function is called by:
 21163 ;;		_HG_interface
 21164 ;; This function uses a non-reentrant model
 21165 ;;
 21166                           
 21167                           	psect	text48
 21168  0041C4                     __ptext48:
 21169                           	opt stack 0
 21170  0041C4                     _KEY_Scan:
 21171                           	opt stack 25
 21172                           
 21173                           ;Key.c: 60: uint16_t tm_cnt=0;
 21174                           
 21175                           ;incstack = 0
 21176  0041C4  0E00               	movlw	0
 21177  0041C6  0101               	movlb	1	; () banked
 21178  0041C8  6F2D               	movwf	(KEY_Scan@tm_cnt+1)& (0+255),b
 21179  0041CA  0E00               	movlw	0
 21180  0041CC  6F2C               	movwf	KEY_Scan@tm_cnt& (0+255),b
 21181                           
 21182                           ; BSR set to: 1
 21183                           ;Key.c: 61: if(PORTDbits.RD6 == 0)
 21184  0041CE  BC83               	btfsc	3971,6,c	;volatile
 21185  0041D0  D030               	goto	l94
 21186                           
 21187                           ; BSR set to: 1
 21188                           ;Key.c: 62: {
 21189                           ;Key.c: 63: delay_nms(5);
 21190  0041D2  0E05               	movlw	5
 21191  0041D4  0101               	movlb	1	; () banked
 21192  0041D6  6F28               	movwf	delay_nms@n& (0+255),b
 21193  0041D8  0E00               	movlw	0
 21194  0041DA  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21195  0041DC  0E00               	movlw	0
 21196  0041DE  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21197  0041E0  0E00               	movlw	0
 21198  0041E2  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21199  0041E4  EC39  F025         	call	_delay_nms	;wreg free
 21200                           
 21201                           ;Key.c: 65: if(PORTDbits.RD6 == 0)
 21202  0041E8  AC83               	btfss	3971,6,c	;volatile
 21203  0041EA  D00B               	goto	l13021
 21204  0041EC  D022               	goto	l94
 21205  0041EE                     l13017:
 21206                           
 21207                           ;Key.c: 70: {
 21208                           ;Key.c: 71: tm_cnt ++;
 21209  0041EE  0101               	movlb	1	; () banked
 21210  0041F0  4B2C               	infsnz	KEY_Scan@tm_cnt& (0+255),f,b
 21211  0041F2  2B2D               	incf	(KEY_Scan@tm_cnt+1)& (0+255),f,b
 21212                           
 21213                           ; BSR set to: 1
 21214                           ;Key.c: 73: delaynus(50 * 1000);
 21215  0041F4  0EC3               	movlw	195
 21216  0041F6  0100               	movlb	0	; () banked
 21217  0041F8  6FFE               	movwf	(delaynus@n+1)& (0+255),b
 21218  0041FA  0E50               	movlw	80
 21219  0041FC  6FFD               	movwf	delaynus@n& (0+255),b
 21220  0041FE  ECE0  F026         	call	_delaynus	;wreg free
 21221  004202                     l13021:
 21222  004202  AC83               	btfss	3971,6,c	;volatile
 21223  004204  D7F4               	goto	l13017
 21224                           
 21225                           ;Key.c: 74: }
 21226                           ;Key.c: 75: buzz();
 21227  004206  ECFE  F026         	call	_buzz	;wreg free
 21228                           
 21229                           ;Key.c: 77: if(tm_cnt > 100)
 21230  00420A  0101               	movlb	1	; () banked
 21231  00420C  512D               	movf	(KEY_Scan@tm_cnt+1)& (0+255),w,b
 21232  00420E  E105               	bnz	u15560
 21233  004210  0E65               	movlw	101
 21234  004212  0101               	movlb	1	; () banked
 21235  004214  5D2C               	subwf	KEY_Scan@tm_cnt& (0+255),w,b
 21236  004216  A0D8               	btfss	status,0,c
 21237  004218  D00A               	goto	l13037
 21238  00421A                     u15560:
 21239                           
 21240                           ; BSR set to: 1
 21241                           ;Key.c: 78: {
 21242                           ;Key.c: 79: test_mode =1;
 21243  00421A  0E01               	movlw	1
 21244  00421C  0100               	movlb	0	; () banked
 21245  00421E  6FF2               	movwf	_test_mode& (0+255),b
 21246                           
 21247                           ;Key.c: 82: hg_op.cur_working_mode = 0x04;
 21248  004220  0E04               	movlw	4
 21249  004222  0100               	movlb	0	; () banked
 21250  004224  6F81               	movwf	(_hg_op+1)& (0+255),b
 21251                           
 21252                           ; BSR set to: 0
 21253                           ;Key.c: 85: T0IE=0;
 21254  004226  9AF2               	bcf	intcon,5,c	;volatile
 21255                           
 21256                           ; BSR set to: 0
 21257                           ;Key.c: 86: T0CONbits.TMR0ON =0;
 21258  004228  9ED5               	bcf	4053,7,c	;volatile
 21259                           
 21260                           ; BSR set to: 0
 21261                           ;Key.c: 90: return 0x00;
 21262  00422A  0E00               	movlw	0
 21263                           
 21264                           ; BSR set to: 0
 21265  00422C  0012               	return	
 21266  00422E                     l13037:
 21267                           
 21268                           ;Key.c: 92: }
 21269                           ;Key.c: 95: return 0xf1;
 21270  00422E  0EF1               	movlw	241
 21271  004230  0012               	return	
 21272  004232                     l94:
 21273                           
 21274                           ;Key.c: 96: }
 21275                           ;Key.c: 97: }
 21276                           ;Key.c: 98: if(PORTDbits.RD7 == 0)
 21277  004232  BE83               	btfsc	3971,7,c	;volatile
 21278  004234  D013               	goto	l101
 21279                           
 21280                           ;Key.c: 99: {
 21281                           ;Key.c: 100: delay_nms(5);
 21282  004236  0E05               	movlw	5
 21283  004238  0101               	movlb	1	; () banked
 21284  00423A  6F28               	movwf	delay_nms@n& (0+255),b
 21285  00423C  0E00               	movlw	0
 21286  00423E  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21287  004240  0E00               	movlw	0
 21288  004242  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21289  004244  0E00               	movlw	0
 21290  004246  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21291  004248  EC39  F025         	call	_delay_nms	;wreg free
 21292                           
 21293                           ;Key.c: 101: if(PORTDbits.RD7 == 0)
 21294  00424C  BE83               	btfsc	3971,7,c	;volatile
 21295  00424E  D006               	goto	l101
 21296  004250                     l103:
 21297  004250  AE83               	btfss	3971,7,c	;volatile
 21298  004252  D7FE               	goto	l103
 21299                           
 21300                           ;Key.c: 104: buzz();
 21301  004254  ECFE  F026         	call	_buzz	;wreg free
 21302                           
 21303                           ;Key.c: 106: return 0xf2;
 21304  004258  0EF2               	movlw	242
 21305  00425A  0012               	return	
 21306  00425C                     l101:
 21307                           
 21308                           ;Key.c: 107: }
 21309                           ;Key.c: 108: }
 21310                           ;Key.c: 109: if(PORTBbits.RB3 == 0)
 21311  00425C  B681               	btfsc	3969,3,c	;volatile
 21312  00425E  D013               	goto	l13065
 21313                           
 21314                           ;Key.c: 110: {
 21315                           ;Key.c: 111: delay_nms(5);
 21316  004260  0E05               	movlw	5
 21317  004262  0101               	movlb	1	; () banked
 21318  004264  6F28               	movwf	delay_nms@n& (0+255),b
 21319  004266  0E00               	movlw	0
 21320  004268  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21321  00426A  0E00               	movlw	0
 21322  00426C  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21323  00426E  0E00               	movlw	0
 21324  004270  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21325  004272  EC39  F025         	call	_delay_nms	;wreg free
 21326                           
 21327                           ;Key.c: 112: if(PORTBbits.RB3 == 0)
 21328  004276  B681               	btfsc	3969,3,c	;volatile
 21329  004278  D006               	goto	l13065
 21330  00427A                     l108:
 21331  00427A  A681               	btfss	3969,3,c	;volatile
 21332  00427C  D7FE               	goto	l108
 21333                           
 21334                           ;Key.c: 115: buzz();
 21335  00427E  ECFE  F026         	call	_buzz	;wreg free
 21336                           
 21337                           ;Key.c: 117: return 0xf3;
 21338  004282  0EF3               	movlw	243
 21339  004284  0012               	return	
 21340  004286                     l13065:
 21341                           
 21342                           ;Key.c: 118: }
 21343                           ;Key.c: 119: }
 21344                           ;Key.c: 123: return 0x00;
 21345  004286  0E00               	movlw	0
 21346  004288  0012               	return	
 21347  00428A                     __end_of_KEY_Scan:
 21348                           	opt stack 0
 21349                           tblptru	equ	0xFF8
 21350                           tblptrh	equ	0xFF7
 21351                           tblptrl	equ	0xFF6
 21352                           tablat	equ	0xFF5
 21353                           prodh	equ	0xFF4
 21354                           prodl	equ	0xFF3
 21355                           intcon	equ	0xFF2
 21356                           intcon3	equ	0xFF0
 21357                           postinc0	equ	0xFEE
 21358                           wreg	equ	0xFE8
 21359                           postdec1	equ	0xFE5
 21360                           fsr1h	equ	0xFE2
 21361                           fsr1l	equ	0xFE1
 21362                           postinc2	equ	0xFDE
 21363                           fsr2h	equ	0xFDA
 21364                           fsr2l	equ	0xFD9
 21365                           status	equ	0xFD8
 21366                           
 21367 ;; *************** function _delaynus *****************
 21368 ;; Defined at:
 21369 ;;		line 687 in file "../Timer.c"
 21370 ;; Parameters:    Size  Location     Type
 21371 ;;  n               2    0[BANK0 ] unsigned int 
 21372 ;; Auto vars:     Size  Location     Type
 21373 ;;		None
 21374 ;; Return value:  Size  Location     Type
 21375 ;;                  1    wreg      void 
 21376 ;; Registers used:
 21377 ;;		wreg, status,2, status,0
 21378 ;; Tracked objects:
 21379 ;;		On entry : 0/0
 21380 ;;		On exit  : 0/0
 21381 ;;		Unchanged: 0/0
 21382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21383 ;;      Params:         0       2       0       0       0       0       0
 21384 ;;      Locals:         0       0       0       0       0       0       0
 21385 ;;      Temps:          0       0       0       0       0       0       0
 21386 ;;      Totals:         0       2       0       0       0       0       0
 21387 ;;Total ram usage:        2 bytes
 21388 ;; Hardware stack levels used:    1
 21389 ;; Hardware stack levels required when called:    2
 21390 ;; This function calls:
 21391 ;;		Nothing
 21392 ;; This function is called by:
 21393 ;;		_KEY_Scan
 21394 ;;		_hg_reset
 21395 ;;		_drops_routine
 21396 ;;		_c_routine
 21397 ;;		_check_acting
 21398 ;;		_initial_ui_setting
 21399 ;;		_enter_sleep
 21400 ;; This function uses a non-reentrant model
 21401 ;;
 21402                           
 21403                           	psect	text49
 21404  004DC0                     __ptext49:
 21405                           	opt stack 0
 21406  004DC0                     _delaynus:
 21407                           	opt stack 27
 21408                           
 21409                           ;Timer.c: 690: TMR1 =0;
 21410                           
 21411                           ;incstack = 0
 21412  004DC0  0E00               	movlw	0
 21413  004DC2  6ECF               	movwf	4047,c	;volatile
 21414  004DC4  0E00               	movlw	0
 21415  004DC6  6ECE               	movwf	4046,c	;volatile
 21416                           
 21417                           ;Timer.c: 691: T1CONbits.TMR1ON =1;
 21418  004DC8  80CD               	bsf	4045,0,c	;volatile
 21419  004DCA                     l11321:
 21420  004DCA  0100               	movlb	0	; () banked
 21421  004DCC  51FD               	movf	delaynus@n& (0+255),w,b
 21422  004DCE  5CCE               	subwf	4046,w,c	;volatile
 21423  004DD0  0100               	movlb	0	; () banked
 21424  004DD2  51FE               	movf	(delaynus@n+1)& (0+255),w,b
 21425  004DD4  58CF               	subwfb	4047,w,c	;volatile
 21426  004DD6  A0D8               	btfss	status,0,c
 21427  004DD8  D7F8               	goto	l11321
 21428                           
 21429                           ; BSR set to: 0
 21430                           ;Timer.c: 695: T1CONbits.TMR1ON =0;
 21431  004DDA  90CD               	bcf	4045,0,c	;volatile
 21432                           
 21433                           ; BSR set to: 0
 21434  004DDC  0012               	return		;funcret
 21435  004DDE                     __end_of_delaynus:
 21436                           	opt stack 0
 21437                           tblptru	equ	0xFF8
 21438                           tblptrh	equ	0xFF7
 21439                           tblptrl	equ	0xFF6
 21440                           tablat	equ	0xFF5
 21441                           prodh	equ	0xFF4
 21442                           prodl	equ	0xFF3
 21443                           intcon	equ	0xFF2
 21444                           intcon3	equ	0xFF0
 21445                           postinc0	equ	0xFEE
 21446                           wreg	equ	0xFE8
 21447                           postdec1	equ	0xFE5
 21448                           fsr1h	equ	0xFE2
 21449                           fsr1l	equ	0xFE1
 21450                           postinc2	equ	0xFDE
 21451                           fsr2h	equ	0xFDA
 21452                           fsr2l	equ	0xFD9
 21453                           status	equ	0xFD8
 21454                           
 21455 ;; *************** function _buzz *****************
 21456 ;; Defined at:
 21457 ;;		line 114 in file "../Beep.c"
 21458 ;; Parameters:    Size  Location     Type
 21459 ;;		None
 21460 ;; Auto vars:     Size  Location     Type
 21461 ;;		None
 21462 ;; Return value:  Size  Location     Type
 21463 ;;                  1    wreg      void 
 21464 ;; Registers used:
 21465 ;;		wreg, status,2, status,0, cstack
 21466 ;; Tracked objects:
 21467 ;;		On entry : 0/0
 21468 ;;		On exit  : 0/0
 21469 ;;		Unchanged: 0/0
 21470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21471 ;;      Params:         0       0       0       0       0       0       0
 21472 ;;      Locals:         0       0       0       0       0       0       0
 21473 ;;      Temps:          0       0       0       0       0       0       0
 21474 ;;      Totals:         0       0       0       0       0       0       0
 21475 ;;Total ram usage:        0 bytes
 21476 ;; Hardware stack levels used:    1
 21477 ;; Hardware stack levels required when called:    3
 21478 ;; This function calls:
 21479 ;;		_delay_nms
 21480 ;; This function is called by:
 21481 ;;		_KEY_Scan
 21482 ;;		_drops_routine
 21483 ;;		_check_acting
 21484 ;;		_check_shut_device
 21485 ;;		_check_wake_button
 21486 ;; This function uses a non-reentrant model
 21487 ;;
 21488                           
 21489                           	psect	text50
 21490  004DFC                     __ptext50:
 21491                           	opt stack 0
 21492  004DFC                     _buzz:
 21493                           	opt stack 25
 21494                           
 21495                           ;Beep.c: 120: LATEbits.LE2 =1;
 21496                           
 21497                           ; BSR set to: 0
 21498                           ;incstack = 0
 21499  004DFC  848D               	bsf	3981,2,c	;volatile
 21500                           
 21501                           ;Beep.c: 126: delay_nms(1);
 21502  004DFE  0E01               	movlw	1
 21503  004E00  0101               	movlb	1	; () banked
 21504  004E02  6F28               	movwf	delay_nms@n& (0+255),b
 21505  004E04  0E00               	movlw	0
 21506  004E06  6F29               	movwf	(delay_nms@n+1)& (0+255),b
 21507  004E08  0E00               	movlw	0
 21508  004E0A  6F2A               	movwf	(delay_nms@n+2)& (0+255),b
 21509  004E0C  0E00               	movlw	0
 21510  004E0E  6F2B               	movwf	(delay_nms@n+3)& (0+255),b
 21511  004E10  EC39  F025         	call	_delay_nms	;wreg free
 21512                           
 21513                           ;Beep.c: 129: LATEbits.LE2 =0;
 21514  004E14  948D               	bcf	3981,2,c	;volatile
 21515  004E16  0012               	return		;funcret
 21516  004E18                     __end_of_buzz:
 21517                           	opt stack 0
 21518                           tblptru	equ	0xFF8
 21519                           tblptrh	equ	0xFF7
 21520                           tblptrl	equ	0xFF6
 21521                           tablat	equ	0xFF5
 21522                           prodh	equ	0xFF4
 21523                           prodl	equ	0xFF3
 21524                           intcon	equ	0xFF2
 21525                           intcon3	equ	0xFF0
 21526                           postinc0	equ	0xFEE
 21527                           wreg	equ	0xFE8
 21528                           postdec1	equ	0xFE5
 21529                           fsr1h	equ	0xFE2
 21530                           fsr1l	equ	0xFE1
 21531                           postinc2	equ	0xFDE
 21532                           fsr2h	equ	0xFDA
 21533                           fsr2l	equ	0xFD9
 21534                           status	equ	0xFD8
 21535                           
 21536 ;; *************** function _delay_nms *****************
 21537 ;; Defined at:
 21538 ;;		line 10 in file "../Oled.c"
 21539 ;; Parameters:    Size  Location     Type
 21540 ;;  n               4    0[BANK1 ] unsigned long 
 21541 ;; Auto vars:     Size  Location     Type
 21542 ;;  i               2    0[BANK0 ] unsigned int 
 21543 ;; Return value:  Size  Location     Type
 21544 ;;                  1    wreg      void 
 21545 ;; Registers used:
 21546 ;;		wreg, status,2, status,0
 21547 ;; Tracked objects:
 21548 ;;		On entry : 0/0
 21549 ;;		On exit  : 0/0
 21550 ;;		Unchanged: 0/0
 21551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21552 ;;      Params:         0       0       4       0       0       0       0
 21553 ;;      Locals:         0       2       0       0       0       0       0
 21554 ;;      Temps:          0       0       0       0       0       0       0
 21555 ;;      Totals:         0       2       4       0       0       0       0
 21556 ;;Total ram usage:        6 bytes
 21557 ;; Hardware stack levels used:    1
 21558 ;; Hardware stack levels required when called:    2
 21559 ;; This function calls:
 21560 ;;		Nothing
 21561 ;; This function is called by:
 21562 ;;		_buzz
 21563 ;;		_KEY_Scan
 21564 ;;		_check_device_idle
 21565 ;;		_check_shut_device
 21566 ;;		_check_wake_button
 21567 ;; This function uses a non-reentrant model
 21568 ;;
 21569                           
 21570                           	psect	text51
 21571  004A72                     __ptext51:
 21572                           	opt stack 0
 21573  004A72                     _delay_nms:
 21574                           	opt stack 26
 21575                           
 21576                           ;Oled.c: 12: uint16_t i=0;
 21577                           
 21578                           ;incstack = 0
 21579  004A72  0E00               	movlw	0
 21580  004A74  0100               	movlb	0	; () banked
 21581  004A76  6FFE               	movwf	(delay_nms@i+1)& (0+255),b
 21582  004A78  0E00               	movlw	0
 21583  004A7A  6FFD               	movwf	delay_nms@i& (0+255),b
 21584                           
 21585                           ;Oled.c: 13: while(n)
 21586  004A7C  D018               	goto	l661
 21587  004A7E                     l11305:
 21588                           
 21589                           ;Oled.c: 14: {
 21590                           ;Oled.c: 16: for(i=0;i<5000;i++)
 21591  004A7E  0E00               	movlw	0
 21592  004A80  0100               	movlb	0	; () banked
 21593  004A82  6FFE               	movwf	(delay_nms@i+1)& (0+255),b
 21594  004A84  0E00               	movlw	0
 21595  004A86  6FFD               	movwf	delay_nms@i& (0+255),b
 21596  004A88                     l11307:
 21597                           
 21598                           ; BSR set to: 0
 21599  004A88  0E88               	movlw	136
 21600  004A8A  0100               	movlb	0	; () banked
 21601  004A8C  5DFD               	subwf	delay_nms@i& (0+255),w,b
 21602  004A8E  0E13               	movlw	19
 21603  004A90  0100               	movlb	0	; () banked
 21604  004A92  59FE               	subwfb	(delay_nms@i+1)& (0+255),w,b
 21605  004A94  B0D8               	btfsc	status,0,c
 21606  004A96  D005               	goto	l11315
 21607                           
 21608                           ; BSR set to: 0
 21609                           ;Oled.c: 17: __nop();
 21610                           
 21611                           ; BSR set to: 0
 21612  004A98  F000               	nop	
 21613  004A9A  0100               	movlb	0	; () banked
 21614  004A9C  4BFD               	infsnz	delay_nms@i& (0+255),f,b
 21615  004A9E  2BFE               	incf	(delay_nms@i+1)& (0+255),f,b
 21616  004AA0  D7F3               	goto	l11307
 21617  004AA2                     l11315:
 21618                           
 21619                           ; BSR set to: 0
 21620                           ;Oled.c: 19: n--;
 21621  004AA2  0101               	movlb	1	; () banked
 21622  004AA4  0728               	decf	delay_nms@n& (0+255),f,b
 21623  004AA6  0E00               	movlw	0
 21624  004AA8  5B29               	subwfb	(delay_nms@n+1)& (0+255),f,b
 21625  004AAA  5B2A               	subwfb	(delay_nms@n+2)& (0+255),f,b
 21626  004AAC  5B2B               	subwfb	(delay_nms@n+3)& (0+255),f,b
 21627  004AAE                     l661:
 21628  004AAE  0101               	movlb	1	; () banked
 21629  004AB0  5128               	movf	delay_nms@n& (0+255),w,b
 21630  004AB2  0101               	movlb	1	; () banked
 21631  004AB4  1129               	iorwf	(delay_nms@n+1)& (0+255),w,b
 21632  004AB6  0101               	movlb	1	; () banked
 21633  004AB8  112A               	iorwf	(delay_nms@n+2)& (0+255),w,b
 21634  004ABA  0101               	movlb	1	; () banked
 21635  004ABC  112B               	iorwf	(delay_nms@n+3)& (0+255),w,b
 21636  004ABE  B4D8               	btfsc	status,2,c
 21637  004AC0  0012               	return	
 21638  004AC2  D7DD               	goto	l11305
 21639  004AC4                     __end_of_delay_nms:
 21640                           	opt stack 0
 21641                           tblptru	equ	0xFF8
 21642                           tblptrh	equ	0xFF7
 21643                           tblptrl	equ	0xFF6
 21644                           tablat	equ	0xFF5
 21645                           prodh	equ	0xFF4
 21646                           prodl	equ	0xFF3
 21647                           intcon	equ	0xFF2
 21648                           intcon3	equ	0xFF0
 21649                           postinc0	equ	0xFEE
 21650                           wreg	equ	0xFE8
 21651                           postdec1	equ	0xFE5
 21652                           fsr1h	equ	0xFE2
 21653                           fsr1l	equ	0xFE1
 21654                           postinc2	equ	0xFDE
 21655                           fsr2h	equ	0xFDA
 21656                           fsr2l	equ	0xFD9
 21657                           status	equ	0xFD8
 21658                           
 21659 ;; *************** function _HG_device_init *****************
 21660 ;; Defined at:
 21661 ;;		line 30 in file "../gui.c"
 21662 ;; Parameters:    Size  Location     Type
 21663 ;;		None
 21664 ;; Auto vars:     Size  Location     Type
 21665 ;;		None
 21666 ;; Return value:  Size  Location     Type
 21667 ;;                  1    wreg      void 
 21668 ;; Registers used:
 21669 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 21670 ;; Tracked objects:
 21671 ;;		On entry : 0/0
 21672 ;;		On exit  : 0/0
 21673 ;;		Unchanged: 0/0
 21674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21675 ;;      Params:         0       0       0       0       0       0       0
 21676 ;;      Locals:         0       0       0       0       0       0       0
 21677 ;;      Temps:          0       0       0       0       0       0       0
 21678 ;;      Totals:         0       0       0       0       0       0       0
 21679 ;;Total ram usage:        0 bytes
 21680 ;; Hardware stack levels used:    1
 21681 ;; Hardware stack levels required when called:    6
 21682 ;; This function calls:
 21683 ;;		_AD_init
 21684 ;;		_BeepInit
 21685 ;;		_Initial_LY096BG30
 21686 ;;		_KEY_Init
 21687 ;;		_LCD_Off
 21688 ;;		_LCD_backlight_init
 21689 ;;		_MotorDriveInit
 21690 ;;		_Timer1Init
 21691 ;;		_TimerInit
 21692 ;;		_init_menu
 21693 ;;		_uart_init
 21694 ;; This function is called by:
 21695 ;;		_main
 21696 ;; This function uses a non-reentrant model
 21697 ;;
 21698                           
 21699                           	psect	text52
 21700  004D48                     __ptext52:
 21701                           	opt stack 0
 21702  004D48                     _HG_device_init:
 21703                           	opt stack 24
 21704                           
 21705                           ;gui.c: 34: uart_init();
 21706                           
 21707                           ; BSR set to: 1
 21708                           ;incstack = 0
 21709  004D48  EC2F  F027         	call	_uart_init	;wreg free
 21710                           
 21711                           ;gui.c: 35: AD_init();
 21712  004D4C  EC17  F027         	call	_AD_init	;wreg free
 21713                           
 21714                           ;gui.c: 36: MotorDriveInit();
 21715  004D50  EC8C  F026         	call	_MotorDriveInit	;wreg free
 21716                           
 21717                           ;gui.c: 37: Timer1Init();
 21718  004D54  EC36  F027         	call	_Timer1Init	;wreg free
 21719                           
 21720                           ;gui.c: 42: BeepInit();
 21721  004D58  EC4F  F027         	call	_BeepInit	;wreg free
 21722                           
 21723                           ;gui.c: 43: LCD_backlight_init();
 21724  004D5C  EC56  F027         	call	_LCD_backlight_init	;wreg free
 21725                           
 21726                           ;gui.c: 45: LCD_Off();
 21727  004D60  EC58  F027         	call	_LCD_Off	;wreg free
 21728                           
 21729                           ;gui.c: 47: Initial_LY096BG30();
 21730  004D64  EC62  F025         	call	_Initial_LY096BG30	;wreg free
 21731                           
 21732                           ;gui.c: 48: init_menu();
 21733  004D68  ECD5  F01F         	call	_init_menu	;wreg free
 21734                           
 21735                           ;gui.c: 49: KEY_Init();
 21736  004D6C  ECD0  F026         	call	_KEY_Init	;wreg free
 21737                           
 21738                           ;gui.c: 51: TimerInit();
 21739  004D70  ECEF  F026         	call	_TimerInit	;wreg free
 21740  004D74  0012               	return		;funcret
 21741  004D76                     __end_of_HG_device_init:
 21742                           	opt stack 0
 21743                           tblptru	equ	0xFF8
 21744                           tblptrh	equ	0xFF7
 21745                           tblptrl	equ	0xFF6
 21746                           tablat	equ	0xFF5
 21747                           prodh	equ	0xFF4
 21748                           prodl	equ	0xFF3
 21749                           intcon	equ	0xFF2
 21750                           intcon3	equ	0xFF0
 21751                           postinc0	equ	0xFEE
 21752                           wreg	equ	0xFE8
 21753                           postdec1	equ	0xFE5
 21754                           fsr1h	equ	0xFE2
 21755                           fsr1l	equ	0xFE1
 21756                           postinc2	equ	0xFDE
 21757                           fsr2h	equ	0xFDA
 21758                           fsr2l	equ	0xFD9
 21759                           status	equ	0xFD8
 21760                           
 21761 ;; *************** function _uart_init *****************
 21762 ;; Defined at:
 21763 ;;		line 9 in file "../Beep.c"
 21764 ;; Parameters:    Size  Location     Type
 21765 ;;		None
 21766 ;; Auto vars:     Size  Location     Type
 21767 ;;		None
 21768 ;; Return value:  Size  Location     Type
 21769 ;;                  1    wreg      void 
 21770 ;; Registers used:
 21771 ;;		wreg, status,2
 21772 ;; Tracked objects:
 21773 ;;		On entry : 0/0
 21774 ;;		On exit  : 0/0
 21775 ;;		Unchanged: 0/0
 21776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21777 ;;      Params:         0       0       0       0       0       0       0
 21778 ;;      Locals:         0       0       0       0       0       0       0
 21779 ;;      Temps:          0       0       0       0       0       0       0
 21780 ;;      Totals:         0       0       0       0       0       0       0
 21781 ;;Total ram usage:        0 bytes
 21782 ;; Hardware stack levels used:    1
 21783 ;; Hardware stack levels required when called:    2
 21784 ;; This function calls:
 21785 ;;		Nothing
 21786 ;; This function is called by:
 21787 ;;		_HG_device_init
 21788 ;; This function uses a non-reentrant model
 21789 ;;
 21790                           
 21791                           	psect	text53
 21792  004E5E                     __ptext53:
 21793                           	opt stack 0
 21794  004E5E                     _uart_init:
 21795                           	opt stack 27
 21796                           
 21797                           ;Beep.c: 12: TRISCbits.RC7 =1;
 21798                           
 21799                           ;incstack = 0
 21800  004E5E  8E94               	bsf	3988,7,c	;volatile
 21801                           
 21802                           ;Beep.c: 13: TRISCbits.RC6 =0;
 21803  004E60  9C94               	bcf	3988,6,c	;volatile
 21804                           
 21805                           ;Beep.c: 16: SPBRG = 12;
 21806  004E62  0E0C               	movlw	12
 21807  004E64  6EAF               	movwf	4015,c	;volatile
 21808                           
 21809                           ;Beep.c: 17: RCSTAbits.SPEN =1;
 21810  004E66  8EAB               	bsf	4011,7,c	;volatile
 21811                           
 21812                           ;Beep.c: 22: TXSTAbits.TXEN =1;
 21813  004E68  8AAC               	bsf	4012,5,c	;volatile
 21814  004E6A  0012               	return		;funcret
 21815  004E6C                     __end_of_uart_init:
 21816                           	opt stack 0
 21817                           tblptru	equ	0xFF8
 21818                           tblptrh	equ	0xFF7
 21819                           tblptrl	equ	0xFF6
 21820                           tablat	equ	0xFF5
 21821                           prodh	equ	0xFF4
 21822                           prodl	equ	0xFF3
 21823                           intcon	equ	0xFF2
 21824                           intcon3	equ	0xFF0
 21825                           postinc0	equ	0xFEE
 21826                           wreg	equ	0xFE8
 21827                           postdec1	equ	0xFE5
 21828                           fsr1h	equ	0xFE2
 21829                           fsr1l	equ	0xFE1
 21830                           postinc2	equ	0xFDE
 21831                           fsr2h	equ	0xFDA
 21832                           fsr2l	equ	0xFD9
 21833                           status	equ	0xFD8
 21834                           
 21835 ;; *************** function _init_menu *****************
 21836 ;; Defined at:
 21837 ;;		line 1382 in file "../gui.c"
 21838 ;; Parameters:    Size  Location     Type
 21839 ;;		None
 21840 ;; Auto vars:     Size  Location     Type
 21841 ;;		None
 21842 ;; Return value:  Size  Location     Type
 21843 ;;                  1    wreg      void 
 21844 ;; Registers used:
 21845 ;;		wreg, status,2, status,0
 21846 ;; Tracked objects:
 21847 ;;		On entry : 0/0
 21848 ;;		On exit  : 0/0
 21849 ;;		Unchanged: 0/0
 21850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21851 ;;      Params:         0       0       0       0       0       0       0
 21852 ;;      Locals:         0       0       0       0       0       0       0
 21853 ;;      Temps:          0       0       0       0       0       0       0
 21854 ;;      Totals:         0       0       0       0       0       0       0
 21855 ;;Total ram usage:        0 bytes
 21856 ;; Hardware stack levels used:    1
 21857 ;; Hardware stack levels required when called:    2
 21858 ;; This function calls:
 21859 ;;		Nothing
 21860 ;; This function is called by:
 21861 ;;		_HG_device_init
 21862 ;; This function uses a non-reentrant model
 21863 ;;
 21864                           
 21865                           	psect	text54
 21866  003FAA                     __ptext54:
 21867                           	opt stack 0
 21868  003FAA                     _init_menu:
 21869                           	opt stack 27
 21870                           
 21871                           ;gui.c: 1386: menu[0].menu_no=0;
 21872                           
 21873                           ;incstack = 0
 21874  003FAA  0E00               	movlw	0
 21875  003FAC  6E01               	movwf	_menu,c
 21876                           
 21877                           ;gui.c: 1387: menu[0].frame=0;
 21878  003FAE  0E00               	movlw	0
 21879  003FB0  6E04               	movwf	_menu+3,c
 21880                           
 21881                           ;gui.c: 1388: menu[0].mode = 0;
 21882  003FB2  0E00               	movlw	0
 21883  003FB4  6E02               	movwf	_menu+1,c
 21884                           
 21885                           ;gui.c: 1389: menu[0].cur_mode =menu[0].mode;
 21886  003FB6  C002  F003         	movff	_menu+1,_menu+2
 21887                           
 21888                           ;gui.c: 1390: menu[0].value = 0;
 21889  003FBA  0E00               	movlw	0
 21890  003FBC  6E05               	movwf	_menu+4,c
 21891                           
 21892                           ;gui.c: 1391: menu[0].parameter =0;
 21893  003FBE  0E00               	movlw	0
 21894  003FC0  6E06               	movwf	_menu+5,c
 21895                           
 21896                           ;gui.c: 1392: menu[0].MsgHandlle = menu0_MsgHandlle;
 21897  003FC2  0E58               	movlw	low _menu0_MsgHandlle
 21898  003FC4  6E07               	movwf	_menu+6,c
 21899  003FC6  0E1E               	movlw	high _menu0_MsgHandlle
 21900  003FC8  6E08               	movwf	_menu+7,c
 21901                           
 21902                           ;gui.c: 1395: menu[1].menu_no=0;
 21903  003FCA  0E00               	movlw	0
 21904  003FCC  6E09               	movwf	_menu+8,c
 21905                           
 21906                           ;gui.c: 1396: menu[1].frame=0;
 21907  003FCE  0E00               	movlw	0
 21908  003FD0  6E0C               	movwf	_menu+11,c
 21909                           
 21910                           ;gui.c: 1397: menu[1].mode = 0;
 21911  003FD2  0E00               	movlw	0
 21912  003FD4  6E0A               	movwf	_menu+9,c
 21913                           
 21914                           ;gui.c: 1398: menu[1].cur_mode =menu[1].mode;
 21915  003FD6  C00A  F00B         	movff	_menu+9,_menu+10
 21916                           
 21917                           ;gui.c: 1399: menu[1].value = 0;
 21918  003FDA  0E00               	movlw	0
 21919  003FDC  6E0D               	movwf	_menu+12,c
 21920                           
 21921                           ;gui.c: 1400: menu[1].parameter =0;
 21922  003FDE  0E00               	movlw	0
 21923  003FE0  6E0E               	movwf	_menu+13,c
 21924                           
 21925                           ;gui.c: 1401: menu[1].MsgHandlle = menu1_MsgHandlle;
 21926  003FE2  0E20               	movlw	low _menu1_MsgHandlle
 21927  003FE4  6E0F               	movwf	_menu+14,c
 21928  003FE6  0E4A               	movlw	high _menu1_MsgHandlle
 21929  003FE8  6E10               	movwf	_menu+15,c
 21930                           
 21931                           ;gui.c: 1403: menu[2].menu_no=0;
 21932  003FEA  0E00               	movlw	0
 21933  003FEC  6E11               	movwf	_menu+16,c
 21934                           
 21935                           ;gui.c: 1404: menu[2].frame=0;
 21936  003FEE  0E00               	movlw	0
 21937  003FF0  6E14               	movwf	_menu+19,c
 21938                           
 21939                           ;gui.c: 1405: menu[2].mode = 0;
 21940  003FF2  0E00               	movlw	0
 21941  003FF4  6E12               	movwf	_menu+17,c
 21942                           
 21943                           ;gui.c: 1406: menu[2].cur_mode =menu[2].mode;
 21944  003FF6  C012  F013         	movff	_menu+17,_menu+18
 21945                           
 21946                           ;gui.c: 1407: menu[2].value = 0;
 21947  003FFA  0E00               	movlw	0
 21948  003FFC  6E15               	movwf	_menu+20,c
 21949                           
 21950                           ;gui.c: 1408: menu[2].parameter =0;
 21951  003FFE  0E00               	movlw	0
 21952  004000  6E16               	movwf	_menu+21,c
 21953                           
 21954                           ;gui.c: 1409: menu[2].MsgHandlle = menu2_MsgHandlle;
 21955  004002  0ECE               	movlw	low _menu2_MsgHandlle
 21956  004004  6E17               	movwf	_menu+22,c
 21957  004006  0E49               	movlw	high _menu2_MsgHandlle
 21958  004008  6E18               	movwf	_menu+23,c
 21959                           
 21960                           ;gui.c: 1412: menu[3].menu_no=0;
 21961  00400A  0E00               	movlw	0
 21962  00400C  6E19               	movwf	_menu+24,c
 21963                           
 21964                           ;gui.c: 1413: menu[3].frame=0;
 21965  00400E  0E00               	movlw	0
 21966  004010  6E1C               	movwf	_menu+27,c
 21967                           
 21968                           ;gui.c: 1414: menu[3].mode = 0;
 21969  004012  0E00               	movlw	0
 21970  004014  6E1A               	movwf	_menu+25,c
 21971                           
 21972                           ;gui.c: 1415: menu[3].cur_mode =menu[3].mode;
 21973  004016  C01A  F01B         	movff	_menu+25,_menu+26
 21974                           
 21975                           ;gui.c: 1416: menu[3].value = 0;
 21976  00401A  0E00               	movlw	0
 21977  00401C  6E1D               	movwf	_menu+28,c
 21978                           
 21979                           ;gui.c: 1417: menu[3].parameter =0;
 21980  00401E  0E00               	movlw	0
 21981  004020  6E1E               	movwf	_menu+29,c
 21982                           
 21983                           ;gui.c: 1418: menu[3].MsgHandlle = menu3_MsgHandlle;
 21984  004022  0E90               	movlw	low _menu3_MsgHandlle
 21985  004024  6E1F               	movwf	_menu+30,c
 21986  004026  0E2A               	movlw	high _menu3_MsgHandlle
 21987  004028  6E20               	movwf	_menu+31,c
 21988                           
 21989                           ;gui.c: 1421: menu[4].menu_no=0;
 21990  00402A  0E00               	movlw	0
 21991  00402C  6E21               	movwf	_menu+32,c
 21992                           
 21993                           ;gui.c: 1422: menu[4].frame=0;
 21994  00402E  0E00               	movlw	0
 21995  004030  6E24               	movwf	_menu+35,c
 21996                           
 21997                           ;gui.c: 1423: menu[4].mode = 0;
 21998  004032  0E00               	movlw	0
 21999  004034  6E22               	movwf	_menu+33,c
 22000                           
 22001                           ;gui.c: 1424: menu[4].cur_mode =menu[4].mode;
 22002  004036  C022  F023         	movff	_menu+33,_menu+34
 22003                           
 22004                           ;gui.c: 1425: menu[4].value = 0;
 22005  00403A  0E00               	movlw	0
 22006  00403C  6E25               	movwf	_menu+36,c
 22007                           
 22008                           ;gui.c: 1426: menu[4].parameter =0;
 22009  00403E  0E00               	movlw	0
 22010  004040  6E26               	movwf	_menu+37,c
 22011                           
 22012                           ;gui.c: 1427: menu[4].MsgHandlle = menu4_MsgHandlle;
 22013  004042  0E26               	movlw	low _menu4_MsgHandlle
 22014  004044  6E27               	movwf	_menu+38,c
 22015  004046  0E26               	movlw	high _menu4_MsgHandlle
 22016  004048  6E28               	movwf	_menu+39,c
 22017                           
 22018                           ;gui.c: 1429: menu[5].menu_no=0;
 22019  00404A  0E00               	movlw	0
 22020  00404C  6E29               	movwf	_menu+40,c
 22021                           
 22022                           ;gui.c: 1430: menu[5].frame=0;
 22023  00404E  0E00               	movlw	0
 22024  004050  6E2C               	movwf	_menu+43,c
 22025                           
 22026                           ;gui.c: 1431: menu[5].mode = 0;
 22027  004052  0E00               	movlw	0
 22028  004054  6E2A               	movwf	_menu+41,c
 22029                           
 22030                           ;gui.c: 1432: menu[5].cur_mode =menu[5].mode;
 22031  004056  C02A  F02B         	movff	_menu+41,_menu+42
 22032                           
 22033                           ;gui.c: 1433: menu[5].value = 0;
 22034  00405A  0E00               	movlw	0
 22035  00405C  6E2D               	movwf	_menu+44,c
 22036                           
 22037                           ;gui.c: 1434: menu[5].parameter =0;
 22038  00405E  0E00               	movlw	0
 22039  004060  6E2E               	movwf	_menu+45,c
 22040                           
 22041                           ;gui.c: 1435: menu[5].MsgHandlle = menu5_MsgHandlle;
 22042  004062  0ECA               	movlw	low _menu5_MsgHandlle
 22043  004064  6E2F               	movwf	_menu+46,c
 22044  004066  0E30               	movlw	high _menu5_MsgHandlle
 22045  004068  6E30               	movwf	_menu+47,c
 22046                           
 22047                           ;gui.c: 1438: menu[6].menu_no=0;
 22048  00406A  0E00               	movlw	0
 22049  00406C  6E31               	movwf	_menu+48,c
 22050                           
 22051                           ;gui.c: 1439: menu[6].frame=0;
 22052  00406E  0E00               	movlw	0
 22053  004070  6E34               	movwf	_menu+51,c
 22054                           
 22055                           ;gui.c: 1440: menu[6].mode = 0;
 22056  004072  0E00               	movlw	0
 22057  004074  6E32               	movwf	_menu+49,c
 22058                           
 22059                           ;gui.c: 1441: menu[6].cur_mode =menu[6].mode;
 22060  004076  C032  F033         	movff	_menu+49,_menu+50
 22061                           
 22062                           ;gui.c: 1442: menu[6].value = 0;
 22063  00407A  0E00               	movlw	0
 22064  00407C  6E35               	movwf	_menu+52,c
 22065                           
 22066                           ;gui.c: 1443: menu[6].parameter =0;
 22067  00407E  0E00               	movlw	0
 22068  004080  6E36               	movwf	_menu+53,c
 22069                           
 22070                           ;gui.c: 1444: menu[6].MsgHandlle = menu6_MsgHandlle;
 22071  004082  0EE6               	movlw	low _menu6_MsgHandlle
 22072  004084  6E37               	movwf	_menu+54,c
 22073  004086  0E09               	movlw	high _menu6_MsgHandlle
 22074  004088  6E38               	movwf	_menu+55,c
 22075                           
 22076                           ;gui.c: 1446: menu[7].menu_no=0;
 22077  00408A  0E00               	movlw	0
 22078  00408C  6E39               	movwf	_menu+56,c
 22079                           
 22080                           ;gui.c: 1447: menu[7].frame=0;
 22081  00408E  0E00               	movlw	0
 22082  004090  6E3C               	movwf	_menu+59,c
 22083                           
 22084                           ;gui.c: 1448: menu[7].mode = 0;
 22085  004092  0E00               	movlw	0
 22086  004094  6E3A               	movwf	_menu+57,c
 22087                           
 22088                           ;gui.c: 1449: menu[7].cur_mode =menu[0].mode;
 22089  004096  C002  F03B         	movff	_menu+1,_menu+58
 22090                           
 22091                           ;gui.c: 1450: menu[7].value = 0;
 22092  00409A  0E00               	movlw	0
 22093  00409C  6E3D               	movwf	_menu+60,c
 22094                           
 22095                           ;gui.c: 1451: menu[7].parameter =0;
 22096  00409E  0E00               	movlw	0
 22097  0040A0  6E3E               	movwf	_menu+61,c
 22098                           
 22099                           ;gui.c: 1452: menu[7].MsgHandlle = menu7_MsgHandlle;
 22100  0040A2  0E00               	movlw	0
 22101  0040A4  6E3F               	movwf	_menu+62,c
 22102  0040A6  0E00               	movlw	0
 22103  0040A8  6E40               	movwf	_menu+63,c
 22104                           
 22105                           ;gui.c: 1454: focus =0;
 22106  0040AA  0E00               	movlw	0
 22107  0040AC  6E4F               	movwf	_focus,c
 22108                           
 22109                           ;gui.c: 1455: flip =0;
 22110  0040AE  0E00               	movlw	0
 22111  0040B0  6E4E               	movwf	_flip,c
 22112                           
 22113                           ;gui.c: 1456: work_mode = 0x00;
 22114  0040B2  0E00               	movlw	0
 22115  0040B4  6E4D               	movwf	_work_mode,c
 22116  0040B6  0012               	return		;funcret
 22117  0040B8                     __end_of_init_menu:
 22118                           	opt stack 0
 22119                           tblptru	equ	0xFF8
 22120                           tblptrh	equ	0xFF7
 22121                           tblptrl	equ	0xFF6
 22122                           tablat	equ	0xFF5
 22123                           prodh	equ	0xFF4
 22124                           prodl	equ	0xFF3
 22125                           intcon	equ	0xFF2
 22126                           intcon3	equ	0xFF0
 22127                           postinc0	equ	0xFEE
 22128                           wreg	equ	0xFE8
 22129                           postdec1	equ	0xFE5
 22130                           fsr1h	equ	0xFE2
 22131                           fsr1l	equ	0xFE1
 22132                           postinc2	equ	0xFDE
 22133                           fsr2h	equ	0xFDA
 22134                           fsr2l	equ	0xFD9
 22135                           status	equ	0xFD8
 22136                           
 22137 ;; *************** function _TimerInit *****************
 22138 ;; Defined at:
 22139 ;;		line 619 in file "../Timer.c"
 22140 ;; Parameters:    Size  Location     Type
 22141 ;;		None
 22142 ;; Auto vars:     Size  Location     Type
 22143 ;;		None
 22144 ;; Return value:  Size  Location     Type
 22145 ;;                  1    wreg      void 
 22146 ;; Registers used:
 22147 ;;		wreg, status,2
 22148 ;; Tracked objects:
 22149 ;;		On entry : 0/0
 22150 ;;		On exit  : 0/0
 22151 ;;		Unchanged: 0/0
 22152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22153 ;;      Params:         0       0       0       0       0       0       0
 22154 ;;      Locals:         0       0       0       0       0       0       0
 22155 ;;      Temps:          0       0       0       0       0       0       0
 22156 ;;      Totals:         0       0       0       0       0       0       0
 22157 ;;Total ram usage:        0 bytes
 22158 ;; Hardware stack levels used:    1
 22159 ;; Hardware stack levels required when called:    2
 22160 ;; This function calls:
 22161 ;;		Nothing
 22162 ;; This function is called by:
 22163 ;;		_HG_device_init
 22164 ;; This function uses a non-reentrant model
 22165 ;;
 22166                           
 22167                           	psect	text55
 22168  004DDE                     __ptext55:
 22169                           	opt stack 0
 22170  004DDE                     _TimerInit:
 22171                           	opt stack 27
 22172                           
 22173                           ;Timer.c: 621: T0CS=0;
 22174                           
 22175                           ;incstack = 0
 22176  004DDE  9AD5               	bcf	4053,5,c	;volatile
 22177                           
 22178                           ;Timer.c: 622: PSA=0;
 22179  004DE0  96D5               	bcf	4053,3,c	;volatile
 22180                           
 22181                           ;Timer.c: 625: T0PS2=1;
 22182  004DE2  84D5               	bsf	4053,2,c	;volatile
 22183                           
 22184                           ;Timer.c: 626: T0PS1=0;
 22185  004DE4  92D5               	bcf	4053,1,c	;volatile
 22186                           
 22187                           ;Timer.c: 627: T0PS0=1;
 22188  004DE6  80D5               	bsf	4053,0,c	;volatile
 22189                           
 22190                           ;Timer.c: 637: T08BIT =1;
 22191  004DE8  8CD5               	bsf	4053,6,c	;volatile
 22192                           
 22193                           ;Timer.c: 638: T0IF=0;
 22194  004DEA  94F2               	bcf	intcon,2,c	;volatile
 22195                           
 22196                           ;Timer.c: 639: TMR0=0;
 22197  004DEC  0E00               	movlw	0
 22198  004DEE  6ED7               	movwf	4055,c	;volatile
 22199  004DF0  0E00               	movlw	0
 22200  004DF2  6ED6               	movwf	4054,c	;volatile
 22201                           
 22202                           ;Timer.c: 642: T0IE=0;
 22203  004DF4  9AF2               	bcf	intcon,5,c	;volatile
 22204                           
 22205                           ;Timer.c: 643: T0CONbits.TMR0ON =0;
 22206  004DF6  9ED5               	bcf	4053,7,c	;volatile
 22207                           
 22208                           ;Timer.c: 644: GIE=1;
 22209  004DF8  8EF2               	bsf	intcon,7,c	;volatile
 22210  004DFA  0012               	return		;funcret
 22211  004DFC                     __end_of_TimerInit:
 22212                           	opt stack 0
 22213                           tblptru	equ	0xFF8
 22214                           tblptrh	equ	0xFF7
 22215                           tblptrl	equ	0xFF6
 22216                           tablat	equ	0xFF5
 22217                           prodh	equ	0xFF4
 22218                           prodl	equ	0xFF3
 22219                           intcon	equ	0xFF2
 22220                           intcon3	equ	0xFF0
 22221                           postinc0	equ	0xFEE
 22222                           wreg	equ	0xFE8
 22223                           postdec1	equ	0xFE5
 22224                           fsr1h	equ	0xFE2
 22225                           fsr1l	equ	0xFE1
 22226                           postinc2	equ	0xFDE
 22227                           fsr2h	equ	0xFDA
 22228                           fsr2l	equ	0xFD9
 22229                           status	equ	0xFD8
 22230                           
 22231 ;; *************** function _Timer1Init *****************
 22232 ;; Defined at:
 22233 ;;		line 649 in file "../Timer.c"
 22234 ;; Parameters:    Size  Location     Type
 22235 ;;		None
 22236 ;; Auto vars:     Size  Location     Type
 22237 ;;		None
 22238 ;; Return value:  Size  Location     Type
 22239 ;;                  1    wreg      void 
 22240 ;; Registers used:
 22241 ;;		wreg, status,2
 22242 ;; Tracked objects:
 22243 ;;		On entry : 0/0
 22244 ;;		On exit  : 0/0
 22245 ;;		Unchanged: 0/0
 22246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22247 ;;      Params:         0       0       0       0       0       0       0
 22248 ;;      Locals:         0       0       0       0       0       0       0
 22249 ;;      Temps:          0       0       0       0       0       0       0
 22250 ;;      Totals:         0       0       0       0       0       0       0
 22251 ;;Total ram usage:        0 bytes
 22252 ;; Hardware stack levels used:    1
 22253 ;; Hardware stack levels required when called:    2
 22254 ;; This function calls:
 22255 ;;		Nothing
 22256 ;; This function is called by:
 22257 ;;		_HG_device_init
 22258 ;; This function uses a non-reentrant model
 22259 ;;
 22260                           
 22261                           	psect	text56
 22262  004E6C                     __ptext56:
 22263                           	opt stack 0
 22264  004E6C                     _Timer1Init:
 22265                           	opt stack 27
 22266                           
 22267                           ;Timer.c: 653: T1CONbits.T1CKPS = 2;
 22268                           
 22269                           ;incstack = 0
 22270  004E6C  50CD               	movf	4045,w,c	;volatile
 22271  004E6E  0BCF               	andlw	-49
 22272  004E70  0920               	iorlw	32
 22273  004E72  6ECD               	movwf	4045,c	;volatile
 22274                           
 22275                           ;Timer.c: 654: T1CONbits.RD16 =1;
 22276  004E74  8ECD               	bsf	4045,7,c	;volatile
 22277                           
 22278                           ;Timer.c: 655: T1CONbits.TMR1ON =0;
 22279  004E76  90CD               	bcf	4045,0,c	;volatile
 22280  004E78  0012               	return		;funcret
 22281  004E7A                     __end_of_Timer1Init:
 22282                           	opt stack 0
 22283                           tblptru	equ	0xFF8
 22284                           tblptrh	equ	0xFF7
 22285                           tblptrl	equ	0xFF6
 22286                           tablat	equ	0xFF5
 22287                           prodh	equ	0xFF4
 22288                           prodl	equ	0xFF3
 22289                           intcon	equ	0xFF2
 22290                           intcon3	equ	0xFF0
 22291                           postinc0	equ	0xFEE
 22292                           wreg	equ	0xFE8
 22293                           postdec1	equ	0xFE5
 22294                           fsr1h	equ	0xFE2
 22295                           fsr1l	equ	0xFE1
 22296                           postinc2	equ	0xFDE
 22297                           fsr2h	equ	0xFDA
 22298                           fsr2l	equ	0xFD9
 22299                           status	equ	0xFD8
 22300                           
 22301 ;; *************** function _MotorDriveInit *****************
 22302 ;; Defined at:
 22303 ;;		line 50 in file "../MotorDrive.c"
 22304 ;; Parameters:    Size  Location     Type
 22305 ;;		None
 22306 ;; Auto vars:     Size  Location     Type
 22307 ;;		None
 22308 ;; Return value:  Size  Location     Type
 22309 ;;                  1    wreg      void 
 22310 ;; Registers used:
 22311 ;;		None
 22312 ;; Tracked objects:
 22313 ;;		On entry : 0/0
 22314 ;;		On exit  : 0/0
 22315 ;;		Unchanged: 0/0
 22316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22317 ;;      Params:         0       0       0       0       0       0       0
 22318 ;;      Locals:         0       0       0       0       0       0       0
 22319 ;;      Temps:          0       0       0       0       0       0       0
 22320 ;;      Totals:         0       0       0       0       0       0       0
 22321 ;;Total ram usage:        0 bytes
 22322 ;; Hardware stack levels used:    1
 22323 ;; Hardware stack levels required when called:    2
 22324 ;; This function calls:
 22325 ;;		Nothing
 22326 ;; This function is called by:
 22327 ;;		_HG_device_init
 22328 ;; This function uses a non-reentrant model
 22329 ;;
 22330                           
 22331                           	psect	text57
 22332  004D18                     __ptext57:
 22333                           	opt stack 0
 22334  004D18                     _MotorDriveInit:
 22335                           	opt stack 27
 22336                           
 22337                           ;MotorDrive.c: 67: TRISAbits.RA5 =0;
 22338                           
 22339                           ;incstack = 0
 22340  004D18  9A92               	bcf	3986,5,c	;volatile
 22341                           
 22342                           ;MotorDrive.c: 70: TRISCbits.RC2 =0;
 22343  004D1A  9494               	bcf	3988,2,c	;volatile
 22344                           
 22345                           ;MotorDrive.c: 71: TRISDbits.RD0 =0;
 22346  004D1C  9095               	bcf	3989,0,c	;volatile
 22347                           
 22348                           ;MotorDrive.c: 72: TRISDbits.RD1 =0;
 22349  004D1E  9295               	bcf	3989,1,c	;volatile
 22350                           
 22351                           ;MotorDrive.c: 74: TRISCbits.RC1 =1;
 22352  004D20  8294               	bsf	3988,1,c	;volatile
 22353                           
 22354                           ;MotorDrive.c: 75: TRISAbits.RA4 =1;
 22355  004D22  8892               	bsf	3986,4,c	;volatile
 22356                           
 22357                           ;MotorDrive.c: 78: TRISCbits.RC0 =1;
 22358  004D24  8094               	bsf	3988,0,c	;volatile
 22359                           
 22360                           ;MotorDrive.c: 79: TRISBbits.RB2 =1;
 22361  004D26  8493               	bsf	3987,2,c	;volatile
 22362                           
 22363                           ;MotorDrive.c: 83: TRISDbits.RD4 =0;
 22364  004D28  9895               	bcf	3989,4,c	;volatile
 22365                           
 22366                           ;MotorDrive.c: 84: TRISDbits.RD2 =0;
 22367  004D2A  9495               	bcf	3989,2,c	;volatile
 22368                           
 22369                           ;MotorDrive.c: 85: TRISDbits.RD3 =0;
 22370  004D2C  9695               	bcf	3989,3,c	;volatile
 22371                           
 22372                           ;MotorDrive.c: 90: LATAbits.LA5 =1;
 22373  004D2E  8A89               	bsf	3977,5,c	;volatile
 22374                           
 22375                           ;MotorDrive.c: 91: do{LATCbits.LC2 =1;LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
 22376  004D30  848B               	bsf	3979,2,c	;volatile
 22377  004D32  908C               	bcf	3980,0,c	;volatile
 22378  004D34  928C               	bcf	3980,1,c	;volatile
 22379                           
 22380                           ;MotorDrive.c: 92: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
 22381  004D36  888C               	bsf	3980,4,c	;volatile
 22382  004D38  948C               	bcf	3980,2,c	;volatile
 22383  004D3A  968C               	bcf	3980,3,c	;volatile
 22384                           
 22385                           ;MotorDrive.c: 93: LATCbits.LC2 =1;
 22386  004D3C  848B               	bsf	3979,2,c	;volatile
 22387                           
 22388                           ;MotorDrive.c: 94: LATDbits.LD4 =1;
 22389  004D3E  888C               	bsf	3980,4,c	;volatile
 22390                           
 22391                           ;MotorDrive.c: 100: INTCON2bits.INTEDG2 = 0;
 22392  004D40  98F1               	bcf	intcon2,4,c	;volatile
 22393                           
 22394                           ;MotorDrive.c: 102: INTCON3bits.INT2IF =0;
 22395  004D42  92F0               	bcf	intcon3,1,c	;volatile
 22396                           
 22397                           ;MotorDrive.c: 103: INTCON3bits.INT2E = 0;
 22398  004D44  98F0               	bcf	intcon3,4,c	;volatile
 22399  004D46  0012               	return		;funcret
 22400  004D48                     __end_of_MotorDriveInit:
 22401                           	opt stack 0
 22402                           tblptru	equ	0xFF8
 22403                           tblptrh	equ	0xFF7
 22404                           tblptrl	equ	0xFF6
 22405                           tablat	equ	0xFF5
 22406                           prodh	equ	0xFF4
 22407                           prodl	equ	0xFF3
 22408                           intcon	equ	0xFF2
 22409                           intcon2	equ	0xFF1
 22410                           intcon3	equ	0xFF0
 22411                           postinc0	equ	0xFEE
 22412                           wreg	equ	0xFE8
 22413                           postdec1	equ	0xFE5
 22414                           fsr1h	equ	0xFE2
 22415                           fsr1l	equ	0xFE1
 22416                           postinc2	equ	0xFDE
 22417                           fsr2h	equ	0xFDA
 22418                           fsr2l	equ	0xFD9
 22419                           status	equ	0xFD8
 22420                           
 22421 ;; *************** function _LCD_backlight_init *****************
 22422 ;; Defined at:
 22423 ;;		line 568 in file "../Oled.c"
 22424 ;; Parameters:    Size  Location     Type
 22425 ;;		None
 22426 ;; Auto vars:     Size  Location     Type
 22427 ;;		None
 22428 ;; Return value:  Size  Location     Type
 22429 ;;                  1    wreg      void 
 22430 ;; Registers used:
 22431 ;;		None
 22432 ;; Tracked objects:
 22433 ;;		On entry : 0/0
 22434 ;;		On exit  : 0/0
 22435 ;;		Unchanged: 0/0
 22436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22437 ;;      Params:         0       0       0       0       0       0       0
 22438 ;;      Locals:         0       0       0       0       0       0       0
 22439 ;;      Temps:          0       0       0       0       0       0       0
 22440 ;;      Totals:         0       0       0       0       0       0       0
 22441 ;;Total ram usage:        0 bytes
 22442 ;; Hardware stack levels used:    1
 22443 ;; Hardware stack levels required when called:    2
 22444 ;; This function calls:
 22445 ;;		Nothing
 22446 ;; This function is called by:
 22447 ;;		_HG_device_init
 22448 ;; This function uses a non-reentrant model
 22449 ;;
 22450                           
 22451                           	psect	text58
 22452  004EAC                     __ptext58:
 22453                           	opt stack 0
 22454  004EAC                     _LCD_backlight_init:
 22455                           	opt stack 27
 22456                           
 22457                           ;Oled.c: 570: TRISEbits.RE0 =0;
 22458                           
 22459                           ;incstack = 0
 22460  004EAC  9096               	bcf	3990,0,c	;volatile
 22461  004EAE  0012               	return		;funcret
 22462  004EB0                     __end_of_LCD_backlight_init:
 22463                           	opt stack 0
 22464                           tblptru	equ	0xFF8
 22465                           tblptrh	equ	0xFF7
 22466                           tblptrl	equ	0xFF6
 22467                           tablat	equ	0xFF5
 22468                           prodh	equ	0xFF4
 22469                           prodl	equ	0xFF3
 22470                           intcon	equ	0xFF2
 22471                           intcon2	equ	0xFF1
 22472                           intcon3	equ	0xFF0
 22473                           postinc0	equ	0xFEE
 22474                           wreg	equ	0xFE8
 22475                           postdec1	equ	0xFE5
 22476                           fsr1h	equ	0xFE2
 22477                           fsr1l	equ	0xFE1
 22478                           postinc2	equ	0xFDE
 22479                           fsr2h	equ	0xFDA
 22480                           fsr2l	equ	0xFD9
 22481                           status	equ	0xFD8
 22482                           
 22483 ;; *************** function _LCD_Off *****************
 22484 ;; Defined at:
 22485 ;;		line 582 in file "../Oled.c"
 22486 ;; Parameters:    Size  Location     Type
 22487 ;;		None
 22488 ;; Auto vars:     Size  Location     Type
 22489 ;;		None
 22490 ;; Return value:  Size  Location     Type
 22491 ;;                  1    wreg      void 
 22492 ;; Registers used:
 22493 ;;		None
 22494 ;; Tracked objects:
 22495 ;;		On entry : 0/0
 22496 ;;		On exit  : 0/0
 22497 ;;		Unchanged: 0/0
 22498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22499 ;;      Params:         0       0       0       0       0       0       0
 22500 ;;      Locals:         0       0       0       0       0       0       0
 22501 ;;      Temps:          0       0       0       0       0       0       0
 22502 ;;      Totals:         0       0       0       0       0       0       0
 22503 ;;Total ram usage:        0 bytes
 22504 ;; Hardware stack levels used:    1
 22505 ;; Hardware stack levels required when called:    2
 22506 ;; This function calls:
 22507 ;;		Nothing
 22508 ;; This function is called by:
 22509 ;;		_HG_device_init
 22510 ;;		_shut_device
 22511 ;; This function uses a non-reentrant model
 22512 ;;
 22513                           
 22514                           	psect	text59
 22515  004EB0                     __ptext59:
 22516                           	opt stack 0
 22517  004EB0                     _LCD_Off:
 22518                           	opt stack 26
 22519                           
 22520                           ;Oled.c: 585: LATEbits.LE0 =0;
 22521                           
 22522                           ;incstack = 0
 22523  004EB0  908D               	bcf	3981,0,c	;volatile
 22524  004EB2  0012               	return		;funcret
 22525  004EB4                     __end_of_LCD_Off:
 22526                           	opt stack 0
 22527                           tblptru	equ	0xFF8
 22528                           tblptrh	equ	0xFF7
 22529                           tblptrl	equ	0xFF6
 22530                           tablat	equ	0xFF5
 22531                           prodh	equ	0xFF4
 22532                           prodl	equ	0xFF3
 22533                           intcon	equ	0xFF2
 22534                           intcon2	equ	0xFF1
 22535                           intcon3	equ	0xFF0
 22536                           postinc0	equ	0xFEE
 22537                           wreg	equ	0xFE8
 22538                           postdec1	equ	0xFE5
 22539                           fsr1h	equ	0xFE2
 22540                           fsr1l	equ	0xFE1
 22541                           postinc2	equ	0xFDE
 22542                           fsr2h	equ	0xFDA
 22543                           fsr2l	equ	0xFD9
 22544                           status	equ	0xFD8
 22545                           
 22546 ;; *************** function _KEY_Init *****************
 22547 ;; Defined at:
 22548 ;;		line 10 in file "../Key.c"
 22549 ;; Parameters:    Size  Location     Type
 22550 ;;		None
 22551 ;; Auto vars:     Size  Location     Type
 22552 ;;		None
 22553 ;; Return value:  Size  Location     Type
 22554 ;;                  1    wreg      void 
 22555 ;; Registers used:
 22556 ;;		wreg, status,2
 22557 ;; Tracked objects:
 22558 ;;		On entry : 0/0
 22559 ;;		On exit  : 0/0
 22560 ;;		Unchanged: 0/0
 22561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22562 ;;      Params:         0       0       0       0       0       0       0
 22563 ;;      Locals:         0       0       0       0       0       0       0
 22564 ;;      Temps:          0       0       0       0       0       0       0
 22565 ;;      Totals:         0       0       0       0       0       0       0
 22566 ;;Total ram usage:        0 bytes
 22567 ;; Hardware stack levels used:    1
 22568 ;; Hardware stack levels required when called:    2
 22569 ;; This function calls:
 22570 ;;		Nothing
 22571 ;; This function is called by:
 22572 ;;		_HG_device_init
 22573 ;; This function uses a non-reentrant model
 22574 ;;
 22575                           
 22576                           	psect	text60
 22577  004DA0                     __ptext60:
 22578                           	opt stack 0
 22579  004DA0                     _KEY_Init:
 22580                           	opt stack 27
 22581                           
 22582                           ;Key.c: 19: ADCON1 = 0x0C;
 22583                           
 22584                           ;incstack = 0
 22585  004DA0  0E0C               	movlw	12
 22586  004DA2  6EC1               	movwf	4033,c	;volatile
 22587                           
 22588                           ;Key.c: 21: TRISBbits.RB3 =1;
 22589  004DA4  8693               	bsf	3987,3,c	;volatile
 22590                           
 22591                           ;Key.c: 22: TRISBbits.RB4 =1;
 22592  004DA6  8893               	bsf	3987,4,c	;volatile
 22593                           
 22594                           ;Key.c: 24: TRISDbits.RD6 =1;
 22595  004DA8  8C95               	bsf	3989,6,c	;volatile
 22596                           
 22597                           ;Key.c: 25: TRISDbits.RD7 =1;
 22598  004DAA  8E95               	bsf	3989,7,c	;volatile
 22599                           
 22600                           ;Key.c: 27: TRISBbits.RB5 =1;
 22601  004DAC  8A93               	bsf	3987,5,c	;volatile
 22602                           
 22603                           ;Key.c: 31: TRISBbits.RB0 =1;
 22604  004DAE  8093               	bsf	3987,0,c	;volatile
 22605                           
 22606                           ;Key.c: 34: TRISAbits.RA3 =1;
 22607  004DB0  8692               	bsf	3986,3,c	;volatile
 22608                           
 22609                           ;Key.c: 43: INTCON2bits.INTEDG0 =0;
 22610  004DB2  9CF1               	bcf	intcon2,6,c	;volatile
 22611                           
 22612                           ;Key.c: 44: INTCONbits.INT0IF = 0;
 22613  004DB4  92F2               	bcf	intcon,1,c	;volatile
 22614                           
 22615                           ;Key.c: 45: INTCONbits.INT0E = 1;
 22616  004DB6  88F2               	bsf	intcon,4,c	;volatile
 22617                           
 22618                           ;Key.c: 49: INTCONbits.RBIE =1;
 22619  004DB8  86F2               	bsf	intcon,3,c	;volatile
 22620                           
 22621                           ;Key.c: 50: INTCONbits.PEIE =1;
 22622  004DBA  8CF2               	bsf	intcon,6,c	;volatile
 22623                           
 22624                           ;Key.c: 51: INTCONbits.GIE =1;
 22625  004DBC  8EF2               	bsf	intcon,7,c	;volatile
 22626  004DBE  0012               	return		;funcret
 22627  004DC0                     __end_of_KEY_Init:
 22628                           	opt stack 0
 22629                           tblptru	equ	0xFF8
 22630                           tblptrh	equ	0xFF7
 22631                           tblptrl	equ	0xFF6
 22632                           tablat	equ	0xFF5
 22633                           prodh	equ	0xFF4
 22634                           prodl	equ	0xFF3
 22635                           intcon	equ	0xFF2
 22636                           intcon2	equ	0xFF1
 22637                           intcon3	equ	0xFF0
 22638                           postinc0	equ	0xFEE
 22639                           wreg	equ	0xFE8
 22640                           postdec1	equ	0xFE5
 22641                           fsr1h	equ	0xFE2
 22642                           fsr1l	equ	0xFE1
 22643                           postinc2	equ	0xFDE
 22644                           fsr2h	equ	0xFDA
 22645                           fsr2l	equ	0xFD9
 22646                           status	equ	0xFD8
 22647                           
 22648 ;; *************** function _Initial_LY096BG30 *****************
 22649 ;; Defined at:
 22650 ;;		line 3345 in file "../Oled.c"
 22651 ;; Parameters:    Size  Location     Type
 22652 ;;		None
 22653 ;; Auto vars:     Size  Location     Type
 22654 ;;		None
 22655 ;; Return value:  Size  Location     Type
 22656 ;;                  1    wreg      void 
 22657 ;; Registers used:
 22658 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22659 ;; Tracked objects:
 22660 ;;		On entry : 0/0
 22661 ;;		On exit  : 0/0
 22662 ;;		Unchanged: 0/0
 22663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22664 ;;      Params:         0       0       0       0       0       0       0
 22665 ;;      Locals:         0       0       0       0       0       0       0
 22666 ;;      Temps:          0       0       0       0       0       0       0
 22667 ;;      Totals:         0       0       0       0       0       0       0
 22668 ;;Total ram usage:        0 bytes
 22669 ;; Hardware stack levels used:    1
 22670 ;; Hardware stack levels required when called:    5
 22671 ;; This function calls:
 22672 ;;		_delay
 22673 ;;		_ee_WriteBytes
 22674 ;;		_i2c_CfgGpio
 22675 ;; This function is called by:
 22676 ;;		_HG_device_init
 22677 ;; This function uses a non-reentrant model
 22678 ;;
 22679                           
 22680                           	psect	text61
 22681  004AC4                     __ptext61:
 22682                           	opt stack 0
 22683  004AC4                     _Initial_LY096BG30:
 22684                           	opt stack 24
 22685                           
 22686                           ;Oled.c: 3348: i2c_CfgGpio();
 22687                           
 22688                           ;incstack = 0
 22689  004AC4  EC3D  F027         	call	_i2c_CfgGpio	;wreg free
 22690                           
 22691                           ;Oled.c: 3353: LATEbits.LATE1=0;
 22692  004AC8  928D               	bcf	3981,1,c	;volatile
 22693                           
 22694                           ;Oled.c: 3354: delay(1);
 22695  004ACA  0E00               	movlw	0
 22696  004ACC  0100               	movlb	0	; () banked
 22697  004ACE  6FFE               	movwf	(delay@x+1)& (0+255),b
 22698  004AD0  0E01               	movlw	1
 22699  004AD2  6FFD               	movwf	delay@x& (0+255),b
 22700  004AD4  ECD3  F025         	call	_delay	;wreg free
 22701                           
 22702                           ;Oled.c: 3356: LATEbits.LATE1=1;
 22703  004AD8  828D               	bsf	3981,1,c	;volatile
 22704                           
 22705                           ;Oled.c: 3357: delay(1);
 22706  004ADA  0E00               	movlw	0
 22707  004ADC  0100               	movlb	0	; () banked
 22708  004ADE  6FFE               	movwf	(delay@x+1)& (0+255),b
 22709  004AE0  0E01               	movlw	1
 22710  004AE2  6FFD               	movwf	delay@x& (0+255),b
 22711  004AE4  ECD3  F025         	call	_delay	;wreg free
 22712                           
 22713                           ;Oled.c: 3398: write_buf[0]=0x25;
 22714  004AE8  0E25               	movlw	37
 22715  004AEA  0102               	movlb	2	; () banked
 22716  004AEC  6F00               	movwf	_write_buf& (0+255),b
 22717                           
 22718                           ; BSR set to: 2
 22719                           ;Oled.c: 3399: ee_WriteBytes(write_buf, 0x00, 1);
 22720  004AEE  0E00               	movlw	low _write_buf
 22721  004AF0  0101               	movlb	1	; () banked
 22722  004AF2  6F28               	movwf	ee_WriteBytes@_pWriteBuf& (0+255),b
 22723  004AF4  0E02               	movlw	high _write_buf
 22724  004AF6  0101               	movlb	1	; () banked
 22725  004AF8  6F29               	movwf	(ee_WriteBytes@_pWriteBuf+1)& (0+255),b
 22726  004AFA  0E00               	movlw	0
 22727  004AFC  0101               	movlb	1	; () banked
 22728  004AFE  6F2A               	movwf	ee_WriteBytes@_usAddress& (0+255),b
 22729  004B00  0E00               	movlw	0
 22730  004B02  0101               	movlb	1	; () banked
 22731  004B04  6F2C               	movwf	(ee_WriteBytes@_usSize+1)& (0+255),b
 22732  004B06  0E01               	movlw	1
 22733  004B08  6F2B               	movwf	ee_WriteBytes@_usSize& (0+255),b
 22734  004B0A  EC88  F025         	call	_ee_WriteBytes	;wreg free
 22735  004B0E  0012               	return		;funcret
 22736  004B10                     __end_of_Initial_LY096BG30:
 22737                           	opt stack 0
 22738                           tblptru	equ	0xFF8
 22739                           tblptrh	equ	0xFF7
 22740                           tblptrl	equ	0xFF6
 22741                           tablat	equ	0xFF5
 22742                           prodh	equ	0xFF4
 22743                           prodl	equ	0xFF3
 22744                           intcon	equ	0xFF2
 22745                           intcon2	equ	0xFF1
 22746                           intcon3	equ	0xFF0
 22747                           postinc0	equ	0xFEE
 22748                           wreg	equ	0xFE8
 22749                           postdec1	equ	0xFE5
 22750                           fsr1h	equ	0xFE2
 22751                           fsr1l	equ	0xFE1
 22752                           postinc2	equ	0xFDE
 22753                           fsr2h	equ	0xFDA
 22754                           fsr2l	equ	0xFD9
 22755                           status	equ	0xFD8
 22756                           
 22757 ;; *************** function _i2c_CfgGpio *****************
 22758 ;; Defined at:
 22759 ;;		line 222 in file "../Oled.c"
 22760 ;; Parameters:    Size  Location     Type
 22761 ;;		None
 22762 ;; Auto vars:     Size  Location     Type
 22763 ;;		None
 22764 ;; Return value:  Size  Location     Type
 22765 ;;                  1    wreg      void 
 22766 ;; Registers used:
 22767 ;;		None
 22768 ;; Tracked objects:
 22769 ;;		On entry : 0/0
 22770 ;;		On exit  : 0/0
 22771 ;;		Unchanged: 0/0
 22772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22773 ;;      Params:         0       0       0       0       0       0       0
 22774 ;;      Locals:         0       0       0       0       0       0       0
 22775 ;;      Temps:          0       0       0       0       0       0       0
 22776 ;;      Totals:         0       0       0       0       0       0       0
 22777 ;;Total ram usage:        0 bytes
 22778 ;; Hardware stack levels used:    1
 22779 ;; Hardware stack levels required when called:    2
 22780 ;; This function calls:
 22781 ;;		Nothing
 22782 ;; This function is called by:
 22783 ;;		_Initial_LY096BG30
 22784 ;; This function uses a non-reentrant model
 22785 ;;
 22786                           
 22787                           	psect	text62
 22788  004E7A                     __ptext62:
 22789                           	opt stack 0
 22790  004E7A                     _i2c_CfgGpio:
 22791                           	opt stack 26
 22792                           
 22793                           ;Oled.c: 227: TRISCbits.RC3 =0;
 22794                           
 22795                           ;incstack = 0
 22796  004E7A  9694               	bcf	3988,3,c	;volatile
 22797                           
 22798                           ;Oled.c: 228: LATCbits.LC3 =0;
 22799  004E7C  968B               	bcf	3979,3,c	;volatile
 22800                           
 22801                           ;Oled.c: 233: TRISCbits.RC4 =0;
 22802  004E7E  9894               	bcf	3988,4,c	;volatile
 22803                           
 22804                           ;Oled.c: 234: LATCbits.LC4 =0;
 22805  004E80  988B               	bcf	3979,4,c	;volatile
 22806                           
 22807                           ;Oled.c: 241: TRISEbits.RE1 =0;
 22808  004E82  9296               	bcf	3990,1,c	;volatile
 22809                           
 22810                           ;Oled.c: 245: LATEbits.LATE1=0;
 22811  004E84  928D               	bcf	3981,1,c	;volatile
 22812  004E86  0012               	return		;funcret
 22813  004E88                     __end_of_i2c_CfgGpio:
 22814                           	opt stack 0
 22815                           tblptru	equ	0xFF8
 22816                           tblptrh	equ	0xFF7
 22817                           tblptrl	equ	0xFF6
 22818                           tablat	equ	0xFF5
 22819                           prodh	equ	0xFF4
 22820                           prodl	equ	0xFF3
 22821                           intcon	equ	0xFF2
 22822                           intcon2	equ	0xFF1
 22823                           intcon3	equ	0xFF0
 22824                           postinc0	equ	0xFEE
 22825                           wreg	equ	0xFE8
 22826                           postdec1	equ	0xFE5
 22827                           fsr1h	equ	0xFE2
 22828                           fsr1l	equ	0xFE1
 22829                           postinc2	equ	0xFDE
 22830                           fsr2h	equ	0xFDA
 22831                           fsr2l	equ	0xFD9
 22832                           status	equ	0xFD8
 22833                           
 22834 ;; *************** function _ee_WriteBytes *****************
 22835 ;; Defined at:
 22836 ;;		line 481 in file "../Oled.c"
 22837 ;; Parameters:    Size  Location     Type
 22838 ;;  _pWriteBuf      2    0[BANK1 ] PTR unsigned char 
 22839 ;;		 -> logo_eme(784), display_frame_fghi@temp(1), display_frame_de@temp(1), display_frame_abc@temp(1), 
 22840 ;;		 -> display_drop@temp(1), display_drops@temp(1), display_cmode@temp(1), display_blank_mode_pa@temp(1), 
 22841 ;;		 -> display_mem@temp(1), display_bat@temp(1), display_bat_blank@temp(1), display_num@temp(1), 
 22842 ;;		 -> display_n_blank@temp(1), write_buf(256), 
 22843 ;;  _usAddress      1    2[BANK1 ] unsigned char 
 22844 ;;  _usSize         2    3[BANK1 ] unsigned int 
 22845 ;; Auto vars:     Size  Location     Type
 22846 ;;  m               2    5[BANK1 ] unsigned int 
 22847 ;;  i               2    0        unsigned int 
 22848 ;;  usAddr          1    7[BANK1 ] unsigned char 
 22849 ;; Return value:  Size  Location     Type
 22850 ;;                  1    wreg      unsigned char 
 22851 ;; Registers used:
 22852 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22853 ;; Tracked objects:
 22854 ;;		On entry : 0/0
 22855 ;;		On exit  : 0/0
 22856 ;;		Unchanged: 0/0
 22857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22858 ;;      Params:         0       0       5       0       0       0       0
 22859 ;;      Locals:         0       0       3       0       0       0       0
 22860 ;;      Temps:          0       0       0       0       0       0       0
 22861 ;;      Totals:         0       0       8       0       0       0       0
 22862 ;;Total ram usage:        8 bytes
 22863 ;; Hardware stack levels used:    1
 22864 ;; Hardware stack levels required when called:    4
 22865 ;; This function calls:
 22866 ;;		_i2c_SendByte
 22867 ;;		_i2c_Start
 22868 ;;		_i2c_Stop
 22869 ;;		_i2c_WaitAck
 22870 ;; This function is called by:
 22871 ;;		_setYX_LCD
 22872 ;;		_display_n_blank
 22873 ;;		_display_num
 22874 ;;		_display_bat_blank
 22875 ;;		_display_bat
 22876 ;;		_display_mem
 22877 ;;		_display_blank_mode_pa
 22878 ;;		_display_cmode
 22879 ;;		_display_drops
 22880 ;;		_display_drop
 22881 ;;		_display_frame_abc
 22882 ;;		_display_frame_de
 22883 ;;		_display_frame_fghi
 22884 ;;		_display_logo
 22885 ;;		_clear_screen
 22886 ;;		_config_LCD
 22887 ;;		_Initial_LY096BG30
 22888 ;;		_shut_device
 22889 ;; This function uses a non-reentrant model
 22890 ;;
 22891                           
 22892                           	psect	text63
 22893  004B10                     __ptext63:
 22894                           	opt stack 0
 22895  004B10                     _ee_WriteBytes:
 22896                           	opt stack 21
 22897                           
 22898                           ;Oled.c: 483: uint16_t i,m;
 22899                           ;Oled.c: 485: uint8_t usAddr;
 22900                           ;Oled.c: 487: usAddr = _usAddress;
 22901                           
 22902                           ;incstack = 0
 22903  004B10  C12A  F12F         	movff	ee_WriteBytes@_usAddress,ee_WriteBytes@usAddr
 22904                           
 22905                           ;Oled.c: 489: {
 22906                           ;Oled.c: 491: {
 22907                           ;Oled.c: 496: {
 22908                           ;Oled.c: 497: i2c_Start();
 22909  004B14  EC0C  F027         	call	_i2c_Start	;wreg free
 22910                           
 22911                           ;Oled.c: 499: i2c_SendByte(0x78 | 0);
 22912  004B18  0E78               	movlw	120
 22913  004B1A  EC1B  F026         	call	_i2c_SendByte
 22914                           
 22915                           ;Oled.c: 501: if (i2c_WaitAck() == 0)
 22916  004B1E  ECBB  F026         	call	_i2c_WaitAck	;wreg free
 22917                           
 22918                           ;Oled.c: 515: }
 22919                           ;Oled.c: 517: i2c_SendByte(usAddr);
 22920                           
 22921                           ;Oled.c: 513: {
 22922                           
 22923                           ;Oled.c: 507: else
 22924                           ;Oled.c: 508: {
 22925                           
 22926                           ;Oled.c: 502: {
 22927                           ;Oled.c: 506: }
 22928  004B22  0101               	movlb	1	; () banked
 22929  004B24  512F               	movf	ee_WriteBytes@usAddr& (0+255),w,b
 22930  004B26  EC1B  F026         	call	_i2c_SendByte
 22931                           
 22932                           ;Oled.c: 519: if (i2c_WaitAck() != 0)
 22933  004B2A  ECBB  F026         	call	_i2c_WaitAck	;wreg free
 22934                           
 22935                           ;Oled.c: 523: }
 22936                           ;Oled.c: 524: }
 22937                           ;Oled.c: 527: i2c_SendByte(_pWriteBuf[0]);
 22938                           
 22939                           ;Oled.c: 520: {
 22940  004B2E  C128  FFF6         	movff	ee_WriteBytes@_pWriteBuf,tblptrl
 22941  004B32  C129  FFF7         	movff	ee_WriteBytes@_pWriteBuf+1,tblptrh
 22942  004B36  6AF8               	clrf	tblptru,c
 22943  004B38  0E05               	movlw	(high __ramtop+-1)
 22944  004B3A  64F7               	cpfsgt	tblptrh,c
 22945  004B3C  D003               	bra	u13407
 22946  004B3E  0008               	tblrd		*
 22947  004B40  50F5               	movf	tablat,w,c
 22948  004B42  D005               	bra	u13400
 22949  004B44                     u13407:
 22950  004B44  CFF6 FFE9          	movff	tblptrl,fsr0l
 22951  004B48  CFF7 FFEA          	movff	tblptrh,fsr0h
 22952  004B4C  50EF               	movf	indf0,w,c
 22953  004B4E                     u13400:
 22954  004B4E  EC1B  F026         	call	_i2c_SendByte
 22955                           
 22956                           ;Oled.c: 528: if (i2c_WaitAck() != 0)
 22957  004B52  ECBB  F026         	call	_i2c_WaitAck	;wreg free
 22958                           
 22959                           ;Oled.c: 532: }
 22960                           ;Oled.c: 535: }
 22961                           ;Oled.c: 537: i2c_Stop();
 22962                           
 22963                           ;Oled.c: 529: {
 22964  004B56  EC44  F027         	call	_i2c_Stop	;wreg free
 22965                           
 22966                           ;Oled.c: 542: return 1;
 22967                           ;	Return value of _ee_WriteBytes is never used
 22968  004B5A  0012               	return	
 22969  004B5C                     __end_of_ee_WriteBytes:
 22970                           	opt stack 0
 22971                           tblptru	equ	0xFF8
 22972                           tblptrh	equ	0xFF7
 22973                           tblptrl	equ	0xFF6
 22974                           tablat	equ	0xFF5
 22975                           prodh	equ	0xFF4
 22976                           prodl	equ	0xFF3
 22977                           intcon	equ	0xFF2
 22978                           intcon2	equ	0xFF1
 22979                           intcon3	equ	0xFF0
 22980                           indf0	equ	0xFEF
 22981                           postinc0	equ	0xFEE
 22982                           fsr0h	equ	0xFEA
 22983                           fsr0l	equ	0xFE9
 22984                           wreg	equ	0xFE8
 22985                           postdec1	equ	0xFE5
 22986                           fsr1h	equ	0xFE2
 22987                           fsr1l	equ	0xFE1
 22988                           postinc2	equ	0xFDE
 22989                           fsr2h	equ	0xFDA
 22990                           fsr2l	equ	0xFD9
 22991                           status	equ	0xFD8
 22992                           
 22993 ;; *************** function _i2c_WaitAck *****************
 22994 ;; Defined at:
 22995 ;;		line 155 in file "../Oled.c"
 22996 ;; Parameters:    Size  Location     Type
 22997 ;;		None
 22998 ;; Auto vars:     Size  Location     Type
 22999 ;;  re              1    0[BANK0 ] unsigned char 
 23000 ;; Return value:  Size  Location     Type
 23001 ;;                  1    wreg      unsigned char 
 23002 ;; Registers used:
 23003 ;;		wreg, status,2, cstack
 23004 ;; Tracked objects:
 23005 ;;		On entry : 0/0
 23006 ;;		On exit  : 0/0
 23007 ;;		Unchanged: 0/0
 23008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23009 ;;      Params:         0       0       0       0       0       0       0
 23010 ;;      Locals:         0       1       0       0       0       0       0
 23011 ;;      Temps:          0       0       0       0       0       0       0
 23012 ;;      Totals:         0       1       0       0       0       0       0
 23013 ;;Total ram usage:        1 bytes
 23014 ;; Hardware stack levels used:    1
 23015 ;; Hardware stack levels required when called:    3
 23016 ;; This function calls:
 23017 ;;		_i2c_Delay
 23018 ;; This function is called by:
 23019 ;;		_ee_WriteBytes
 23020 ;;		_ee_CheckDevice
 23021 ;; This function uses a non-reentrant model
 23022 ;;
 23023                           
 23024                           	psect	text64
 23025  004D76                     __ptext64:
 23026                           	opt stack 0
 23027  004D76                     _i2c_WaitAck:
 23028                           	opt stack 21
 23029                           
 23030                           ;Oled.c: 157: uint8_t re;
 23031                           ;Oled.c: 159: LATCbits.LC4 =1;
 23032                           
 23033                           ;incstack = 0
 23034  004D76  888B               	bsf	3979,4,c	;volatile
 23035                           
 23036                           ;Oled.c: 160: i2c_Delay();
 23037  004D78  EC5B  F027         	call	_i2c_Delay	;wreg free
 23038                           
 23039                           ;Oled.c: 161: LATCbits.LC3 =1;
 23040  004D7C  868B               	bsf	3979,3,c	;volatile
 23041                           
 23042                           ;Oled.c: 165: TRISCbits.RC4 =1;
 23043  004D7E  8894               	bsf	3988,4,c	;volatile
 23044                           
 23045                           ;Oled.c: 171: i2c_Delay();
 23046  004D80  EC5B  F027         	call	_i2c_Delay	;wreg free
 23047                           
 23048                           ;Oled.c: 172: if ((PORTC & 0x10))
 23049  004D84  A882               	btfss	3970,4,c	;volatile
 23050  004D86  D002               	goto	l11243
 23051                           
 23052                           ;Oled.c: 173: {
 23053                           ;Oled.c: 174: re = 1;
 23054  004D88  0E01               	movlw	1
 23055  004D8A  D001               	goto	L67
 23056  004D8C                     l11243:
 23057                           
 23058                           ;Oled.c: 176: else
 23059                           ;Oled.c: 177: {
 23060                           ;Oled.c: 178: re = 0;
 23061  004D8C  0E00               	movlw	0
 23062  004D8E                     L67:
 23063  004D8E  0100               	movlb	0	; () banked
 23064  004D90  6FFD               	movwf	i2c_WaitAck@re& (0+255),b
 23065                           
 23066                           ; BSR set to: 0
 23067                           ;Oled.c: 179: }
 23068                           ;Oled.c: 181: LATCbits.LC3 =0;
 23069                           
 23070                           ; BSR set to: 0
 23071  004D92  968B               	bcf	3979,3,c	;volatile
 23072                           
 23073                           ; BSR set to: 0
 23074                           ;Oled.c: 185: TRISCbits.RC4 =0;
 23075  004D94  9894               	bcf	3988,4,c	;volatile
 23076                           
 23077                           ; BSR set to: 0
 23078                           ;Oled.c: 193: i2c_Delay();
 23079  004D96  EC5B  F027         	call	_i2c_Delay	;wreg free
 23080                           
 23081                           ;Oled.c: 195: return re;
 23082  004D9A  0100               	movlb	0	; () banked
 23083  004D9C  51FD               	movf	i2c_WaitAck@re& (0+255),w,b
 23084  004D9E  0012               	return	
 23085  004DA0                     __end_of_i2c_WaitAck:
 23086                           	opt stack 0
 23087                           tblptru	equ	0xFF8
 23088                           tblptrh	equ	0xFF7
 23089                           tblptrl	equ	0xFF6
 23090                           tablat	equ	0xFF5
 23091                           prodh	equ	0xFF4
 23092                           prodl	equ	0xFF3
 23093                           intcon	equ	0xFF2
 23094                           intcon2	equ	0xFF1
 23095                           intcon3	equ	0xFF0
 23096                           indf0	equ	0xFEF
 23097                           postinc0	equ	0xFEE
 23098                           fsr0h	equ	0xFEA
 23099                           fsr0l	equ	0xFE9
 23100                           wreg	equ	0xFE8
 23101                           postdec1	equ	0xFE5
 23102                           fsr1h	equ	0xFE2
 23103                           fsr1l	equ	0xFE1
 23104                           postinc2	equ	0xFDE
 23105                           fsr2h	equ	0xFDA
 23106                           fsr2l	equ	0xFD9
 23107                           status	equ	0xFD8
 23108                           
 23109 ;; *************** function _i2c_Stop *****************
 23110 ;; Defined at:
 23111 ;;		line 87 in file "../Oled.c"
 23112 ;; Parameters:    Size  Location     Type
 23113 ;;		None
 23114 ;; Auto vars:     Size  Location     Type
 23115 ;;		None
 23116 ;; Return value:  Size  Location     Type
 23117 ;;                  1    wreg      void 
 23118 ;; Registers used:
 23119 ;;		cstack
 23120 ;; Tracked objects:
 23121 ;;		On entry : 0/0
 23122 ;;		On exit  : 0/0
 23123 ;;		Unchanged: 0/0
 23124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23125 ;;      Params:         0       0       0       0       0       0       0
 23126 ;;      Locals:         0       0       0       0       0       0       0
 23127 ;;      Temps:          0       0       0       0       0       0       0
 23128 ;;      Totals:         0       0       0       0       0       0       0
 23129 ;;Total ram usage:        0 bytes
 23130 ;; Hardware stack levels used:    1
 23131 ;; Hardware stack levels required when called:    3
 23132 ;; This function calls:
 23133 ;;		_i2c_Delay
 23134 ;; This function is called by:
 23135 ;;		_ee_WriteBytes
 23136 ;;		_ee_CheckDevice
 23137 ;; This function uses a non-reentrant model
 23138 ;;
 23139                           
 23140                           	psect	text65
 23141  004E88                     __ptext65:
 23142                           	opt stack 0
 23143  004E88                     _i2c_Stop:
 23144                           	opt stack 21
 23145                           
 23146                           ;Oled.c: 90: LATCbits.LC4 =0;
 23147                           
 23148                           ; BSR set to: 0
 23149                           ;incstack = 0
 23150  004E88  988B               	bcf	3979,4,c	;volatile
 23151                           
 23152                           ;Oled.c: 91: LATCbits.LC3 =1;
 23153  004E8A  868B               	bsf	3979,3,c	;volatile
 23154                           
 23155                           ;Oled.c: 92: i2c_Delay();
 23156  004E8C  EC5B  F027         	call	_i2c_Delay	;wreg free
 23157                           
 23158                           ;Oled.c: 93: LATCbits.LC4 =1;
 23159  004E90  888B               	bsf	3979,4,c	;volatile
 23160  004E92  0012               	return		;funcret
 23161  004E94                     __end_of_i2c_Stop:
 23162                           	opt stack 0
 23163                           tblptru	equ	0xFF8
 23164                           tblptrh	equ	0xFF7
 23165                           tblptrl	equ	0xFF6
 23166                           tablat	equ	0xFF5
 23167                           prodh	equ	0xFF4
 23168                           prodl	equ	0xFF3
 23169                           intcon	equ	0xFF2
 23170                           intcon2	equ	0xFF1
 23171                           intcon3	equ	0xFF0
 23172                           indf0	equ	0xFEF
 23173                           postinc0	equ	0xFEE
 23174                           fsr0h	equ	0xFEA
 23175                           fsr0l	equ	0xFE9
 23176                           wreg	equ	0xFE8
 23177                           postdec1	equ	0xFE5
 23178                           fsr1h	equ	0xFE2
 23179                           fsr1l	equ	0xFE1
 23180                           postinc2	equ	0xFDE
 23181                           fsr2h	equ	0xFDA
 23182                           fsr2l	equ	0xFD9
 23183                           status	equ	0xFD8
 23184                           
 23185 ;; *************** function _i2c_Start *****************
 23186 ;; Defined at:
 23187 ;;		line 74 in file "../Oled.c"
 23188 ;; Parameters:    Size  Location     Type
 23189 ;;		None
 23190 ;; Auto vars:     Size  Location     Type
 23191 ;;		None
 23192 ;; Return value:  Size  Location     Type
 23193 ;;                  1    wreg      void 
 23194 ;; Registers used:
 23195 ;;		cstack
 23196 ;; Tracked objects:
 23197 ;;		On entry : 0/0
 23198 ;;		On exit  : 0/0
 23199 ;;		Unchanged: 0/0
 23200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23201 ;;      Params:         0       0       0       0       0       0       0
 23202 ;;      Locals:         0       0       0       0       0       0       0
 23203 ;;      Temps:          0       0       0       0       0       0       0
 23204 ;;      Totals:         0       0       0       0       0       0       0
 23205 ;;Total ram usage:        0 bytes
 23206 ;; Hardware stack levels used:    1
 23207 ;; Hardware stack levels required when called:    3
 23208 ;; This function calls:
 23209 ;;		_i2c_Delay
 23210 ;; This function is called by:
 23211 ;;		_ee_WriteBytes
 23212 ;;		_ee_CheckDevice
 23213 ;; This function uses a non-reentrant model
 23214 ;;
 23215                           
 23216                           	psect	text66
 23217  004E18                     __ptext66:
 23218                           	opt stack 0
 23219  004E18                     _i2c_Start:
 23220                           	opt stack 21
 23221                           
 23222                           ;Oled.c: 77: LATCbits.LC4 =1;
 23223                           
 23224                           ;incstack = 0
 23225  004E18  888B               	bsf	3979,4,c	;volatile
 23226                           
 23227                           ;Oled.c: 78: LATCbits.LC3 =1;
 23228  004E1A  868B               	bsf	3979,3,c	;volatile
 23229                           
 23230                           ;Oled.c: 79: i2c_Delay();
 23231  004E1C  EC5B  F027         	call	_i2c_Delay	;wreg free
 23232                           
 23233                           ;Oled.c: 80: LATCbits.LC4 =0;
 23234  004E20  988B               	bcf	3979,4,c	;volatile
 23235                           
 23236                           ;Oled.c: 81: i2c_Delay();
 23237  004E22  EC5B  F027         	call	_i2c_Delay	;wreg free
 23238                           
 23239                           ;Oled.c: 82: LATCbits.LC3 =0;
 23240  004E26  968B               	bcf	3979,3,c	;volatile
 23241                           
 23242                           ;Oled.c: 83: i2c_Delay();
 23243  004E28  EC5B  F027         	call	_i2c_Delay	;wreg free
 23244  004E2C  0012               	return		;funcret
 23245  004E2E                     __end_of_i2c_Start:
 23246                           	opt stack 0
 23247                           tblptru	equ	0xFF8
 23248                           tblptrh	equ	0xFF7
 23249                           tblptrl	equ	0xFF6
 23250                           tablat	equ	0xFF5
 23251                           prodh	equ	0xFF4
 23252                           prodl	equ	0xFF3
 23253                           intcon	equ	0xFF2
 23254                           intcon2	equ	0xFF1
 23255                           intcon3	equ	0xFF0
 23256                           indf0	equ	0xFEF
 23257                           postinc0	equ	0xFEE
 23258                           fsr0h	equ	0xFEA
 23259                           fsr0l	equ	0xFE9
 23260                           wreg	equ	0xFE8
 23261                           postdec1	equ	0xFE5
 23262                           fsr1h	equ	0xFE2
 23263                           fsr1l	equ	0xFE1
 23264                           postinc2	equ	0xFDE
 23265                           fsr2h	equ	0xFDA
 23266                           fsr2l	equ	0xFD9
 23267                           status	equ	0xFD8
 23268                           
 23269 ;; *************** function _i2c_SendByte *****************
 23270 ;; Defined at:
 23271 ;;		line 97 in file "../Oled.c"
 23272 ;; Parameters:    Size  Location     Type
 23273 ;;  _ucByte         1    wreg     unsigned char 
 23274 ;; Auto vars:     Size  Location     Type
 23275 ;;  _ucByte         1    0[BANK0 ] unsigned char 
 23276 ;;  i               1    1[BANK0 ] unsigned char 
 23277 ;; Return value:  Size  Location     Type
 23278 ;;                  1    wreg      void 
 23279 ;; Registers used:
 23280 ;;		wreg, status,2, status,0, cstack
 23281 ;; Tracked objects:
 23282 ;;		On entry : 0/0
 23283 ;;		On exit  : 0/0
 23284 ;;		Unchanged: 0/0
 23285 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23286 ;;      Params:         0       0       0       0       0       0       0
 23287 ;;      Locals:         0       2       0       0       0       0       0
 23288 ;;      Temps:          0       0       0       0       0       0       0
 23289 ;;      Totals:         0       2       0       0       0       0       0
 23290 ;;Total ram usage:        2 bytes
 23291 ;; Hardware stack levels used:    1
 23292 ;; Hardware stack levels required when called:    3
 23293 ;; This function calls:
 23294 ;;		_i2c_Delay
 23295 ;; This function is called by:
 23296 ;;		_ee_WriteBytes
 23297 ;;		_ee_CheckDevice
 23298 ;; This function uses a non-reentrant model
 23299 ;;
 23300                           
 23301                           	psect	text67
 23302  004C36                     __ptext67:
 23303                           	opt stack 0
 23304  004C36                     _i2c_SendByte:
 23305                           	opt stack 21
 23306                           
 23307                           ;incstack = 0
 23308                           ;i2c_SendByte@_ucByte stored from wreg
 23309  004C36  0100               	movlb	0	; () banked
 23310  004C38  6FFD               	movwf	i2c_SendByte@_ucByte& (0+255),b
 23311                           
 23312                           ;Oled.c: 99: uint8_t i;
 23313                           ;Oled.c: 101: for (i = 0; i < 8; i++)
 23314  004C3A  0E00               	movlw	0
 23315  004C3C  0100               	movlb	0	; () banked
 23316  004C3E  6FFE               	movwf	i2c_SendByte@i& (0+255),b
 23317  004C40                     l11207:
 23318                           
 23319                           ; BSR set to: 0
 23320  004C40  0E07               	movlw	7
 23321  004C42  0100               	movlb	0	; () banked
 23322  004C44  65FE               	cpfsgt	i2c_SendByte@i& (0+255),b
 23323  004C46  D001               	goto	l700
 23324  004C48  0012               	return	
 23325  004C4A                     l700:
 23326                           
 23327                           ; BSR set to: 0
 23328                           ;Oled.c: 102: {
 23329                           ;Oled.c: 103: if (_ucByte & 0x80)
 23330  004C4A  0100               	movlb	0	; () banked
 23331  004C4C  AFFD               	btfss	i2c_SendByte@_ucByte& (0+255),7,b
 23332  004C4E  D002               	goto	l702
 23333                           
 23334                           ; BSR set to: 0
 23335                           ;Oled.c: 104: {
 23336                           ;Oled.c: 105: LATCbits.LC4 =1;
 23337  004C50  888B               	bsf	3979,4,c	;volatile
 23338                           
 23339                           ;Oled.c: 106: }
 23340  004C52  D001               	goto	l11213
 23341  004C54                     l702:
 23342                           
 23343                           ; BSR set to: 0
 23344                           ;Oled.c: 107: else
 23345                           ;Oled.c: 108: {
 23346                           ;Oled.c: 109: LATCbits.LC4 =0;
 23347  004C54  988B               	bcf	3979,4,c	;volatile
 23348  004C56                     l11213:
 23349                           
 23350                           ; BSR set to: 0
 23351                           ;Oled.c: 110: }
 23352                           ;Oled.c: 111: i2c_Delay();
 23353  004C56  EC5B  F027         	call	_i2c_Delay	;wreg free
 23354                           
 23355                           ;Oled.c: 112: LATCbits.LC3 =1;
 23356  004C5A  868B               	bsf	3979,3,c	;volatile
 23357                           
 23358                           ;Oled.c: 113: i2c_Delay();
 23359  004C5C  EC5B  F027         	call	_i2c_Delay	;wreg free
 23360                           
 23361                           ;Oled.c: 114: LATCbits.LC3 =0;
 23362  004C60  968B               	bcf	3979,3,c	;volatile
 23363                           
 23364                           ;Oled.c: 115: if (i == 7)
 23365  004C62  0E07               	movlw	7
 23366  004C64  0100               	movlb	0	; () banked
 23367  004C66  19FE               	xorwf	i2c_SendByte@i& (0+255),w,b
 23368  004C68  B4D8               	btfsc	status,2,c
 23369                           
 23370                           ; BSR set to: 0
 23371                           ;Oled.c: 116: {
 23372                           ;Oled.c: 117: LATCbits.LC4 =1;
 23373  004C6A  888B               	bsf	3979,4,c	;volatile
 23374                           
 23375                           ; BSR set to: 0
 23376                           ;Oled.c: 118: }
 23377                           ;Oled.c: 119: _ucByte <<= 1;
 23378                           
 23379                           ; BSR set to: 0
 23380  004C6C  0100               	movlb	0	; () banked
 23381  004C6E  90D8               	bcf	status,0,c
 23382  004C70  37FD               	rlcf	i2c_SendByte@_ucByte& (0+255),f,b
 23383                           
 23384                           ; BSR set to: 0
 23385                           ;Oled.c: 120: i2c_Delay();
 23386  004C72  EC5B  F027         	call	_i2c_Delay	;wreg free
 23387  004C76  0100               	movlb	0	; () banked
 23388  004C78  2BFE               	incf	i2c_SendByte@i& (0+255),f,b
 23389  004C7A  D7E2               	goto	l11207
 23390  004C7C                     __end_of_i2c_SendByte:
 23391                           	opt stack 0
 23392                           tblptru	equ	0xFF8
 23393                           tblptrh	equ	0xFF7
 23394                           tblptrl	equ	0xFF6
 23395                           tablat	equ	0xFF5
 23396                           prodh	equ	0xFF4
 23397                           prodl	equ	0xFF3
 23398                           intcon	equ	0xFF2
 23399                           intcon2	equ	0xFF1
 23400                           intcon3	equ	0xFF0
 23401                           indf0	equ	0xFEF
 23402                           postinc0	equ	0xFEE
 23403                           fsr0h	equ	0xFEA
 23404                           fsr0l	equ	0xFE9
 23405                           wreg	equ	0xFE8
 23406                           postdec1	equ	0xFE5
 23407                           fsr1h	equ	0xFE2
 23408                           fsr1l	equ	0xFE1
 23409                           postinc2	equ	0xFDE
 23410                           fsr2h	equ	0xFDA
 23411                           fsr2l	equ	0xFD9
 23412                           status	equ	0xFD8
 23413                           
 23414 ;; *************** function _i2c_Delay *****************
 23415 ;; Defined at:
 23416 ;;		line 62 in file "../Oled.c"
 23417 ;; Parameters:    Size  Location     Type
 23418 ;;		None
 23419 ;; Auto vars:     Size  Location     Type
 23420 ;;  i               4    0        unsigned long 
 23421 ;; Return value:  Size  Location     Type
 23422 ;;                  1    wreg      void 
 23423 ;; Registers used:
 23424 ;;		None
 23425 ;; Tracked objects:
 23426 ;;		On entry : 0/0
 23427 ;;		On exit  : 0/0
 23428 ;;		Unchanged: 0/0
 23429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23430 ;;      Params:         0       0       0       0       0       0       0
 23431 ;;      Locals:         0       0       0       0       0       0       0
 23432 ;;      Temps:          0       0       0       0       0       0       0
 23433 ;;      Totals:         0       0       0       0       0       0       0
 23434 ;;Total ram usage:        0 bytes
 23435 ;; Hardware stack levels used:    1
 23436 ;; Hardware stack levels required when called:    2
 23437 ;; This function calls:
 23438 ;;		Nothing
 23439 ;; This function is called by:
 23440 ;;		_i2c_Start
 23441 ;;		_i2c_Stop
 23442 ;;		_i2c_SendByte
 23443 ;;		_i2c_WaitAck
 23444 ;;		_i2c_Ack
 23445 ;;		_i2c_NAck
 23446 ;; This function uses a non-reentrant model
 23447 ;;
 23448                           
 23449                           	psect	text68
 23450  004EB6                     __ptext68:
 23451                           	opt stack 0
 23452  004EB6                     _i2c_Delay:
 23453                           	opt stack 21
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;incstack = 0
 23457  004EB6  0012               	return		;funcret
 23458  004EB8                     __end_of_i2c_Delay:
 23459                           	opt stack 0
 23460                           tblptru	equ	0xFF8
 23461                           tblptrh	equ	0xFF7
 23462                           tblptrl	equ	0xFF6
 23463                           tablat	equ	0xFF5
 23464                           prodh	equ	0xFF4
 23465                           prodl	equ	0xFF3
 23466                           intcon	equ	0xFF2
 23467                           intcon2	equ	0xFF1
 23468                           intcon3	equ	0xFF0
 23469                           indf0	equ	0xFEF
 23470                           postinc0	equ	0xFEE
 23471                           fsr0h	equ	0xFEA
 23472                           fsr0l	equ	0xFE9
 23473                           wreg	equ	0xFE8
 23474                           postdec1	equ	0xFE5
 23475                           fsr1h	equ	0xFE2
 23476                           fsr1l	equ	0xFE1
 23477                           postinc2	equ	0xFDE
 23478                           fsr2h	equ	0xFDA
 23479                           fsr2l	equ	0xFD9
 23480                           status	equ	0xFD8
 23481                           
 23482 ;; *************** function _delay *****************
 23483 ;; Defined at:
 23484 ;;		line 55 in file "../Oled.c"
 23485 ;; Parameters:    Size  Location     Type
 23486 ;;  x               2    0[BANK0 ] unsigned int 
 23487 ;; Auto vars:     Size  Location     Type
 23488 ;;  j               2    2[BANK1 ] unsigned int 
 23489 ;;  i               2    0[BANK1 ] unsigned int 
 23490 ;; Return value:  Size  Location     Type
 23491 ;;                  1    wreg      void 
 23492 ;; Registers used:
 23493 ;;		wreg, status,2, status,0
 23494 ;; Tracked objects:
 23495 ;;		On entry : 0/0
 23496 ;;		On exit  : 0/0
 23497 ;;		Unchanged: 0/0
 23498 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23499 ;;      Params:         0       2       0       0       0       0       0
 23500 ;;      Locals:         0       0       4       0       0       0       0
 23501 ;;      Temps:          0       0       0       0       0       0       0
 23502 ;;      Totals:         0       2       4       0       0       0       0
 23503 ;;Total ram usage:        6 bytes
 23504 ;; Hardware stack levels used:    1
 23505 ;; Hardware stack levels required when called:    2
 23506 ;; This function calls:
 23507 ;;		Nothing
 23508 ;; This function is called by:
 23509 ;;		_Initial_LY096BG30
 23510 ;;		_LCD_Blink
 23511 ;; This function uses a non-reentrant model
 23512 ;;
 23513                           
 23514                           	psect	text69
 23515  004BA6                     __ptext69:
 23516                           	opt stack 0
 23517  004BA6                     _delay:
 23518                           	opt stack 26
 23519                           
 23520                           ;Oled.c: 57: unsigned int i,j;
 23521                           ;Oled.c: 58: for(i=0;i<x;i++)
 23522                           
 23523                           ;incstack = 0
 23524  004BA6  0E00               	movlw	0
 23525  004BA8  0101               	movlb	1	; () banked
 23526  004BAA  6F29               	movwf	(delay@i+1)& (0+255),b
 23527  004BAC  0E00               	movlw	0
 23528  004BAE  6F28               	movwf	delay@i& (0+255),b
 23529  004BB0  D014               	goto	l12381
 23530  004BB2                     l12369:
 23531                           
 23532                           ; BSR set to: 1
 23533                           ;Oled.c: 59: for(j=0;j<10000;j++);
 23534  004BB2  0E00               	movlw	0
 23535  004BB4  0101               	movlb	1	; () banked
 23536  004BB6  6F2B               	movwf	(delay@j+1)& (0+255),b
 23537  004BB8  0E00               	movlw	0
 23538  004BBA  6F2A               	movwf	delay@j& (0+255),b
 23539  004BBC                     l12371:
 23540                           
 23541                           ; BSR set to: 1
 23542  004BBC  0E10               	movlw	16
 23543  004BBE  0101               	movlb	1	; () banked
 23544  004BC0  5D2A               	subwf	delay@j& (0+255),w,b
 23545  004BC2  0E27               	movlw	39
 23546  004BC4  0101               	movlb	1	; () banked
 23547  004BC6  592B               	subwfb	(delay@j+1)& (0+255),w,b
 23548  004BC8  B0D8               	btfsc	status,0,c
 23549  004BCA  D004               	goto	l12379
 23550                           
 23551                           ; BSR set to: 1
 23552                           
 23553                           ; BSR set to: 1
 23554                           
 23555                           ; BSR set to: 1
 23556  004BCC  0101               	movlb	1	; () banked
 23557  004BCE  4B2A               	infsnz	delay@j& (0+255),f,b
 23558  004BD0  2B2B               	incf	(delay@j+1)& (0+255),f,b
 23559  004BD2  D7F4               	goto	l12371
 23560  004BD4                     l12379:
 23561                           
 23562                           ; BSR set to: 1
 23563  004BD4  0101               	movlb	1	; () banked
 23564  004BD6  4B28               	infsnz	delay@i& (0+255),f,b
 23565  004BD8  2B29               	incf	(delay@i+1)& (0+255),f,b
 23566  004BDA                     l12381:
 23567                           
 23568                           ; BSR set to: 1
 23569  004BDA  0100               	movlb	0	; () banked
 23570  004BDC  51FD               	movf	delay@x& (0+255),w,b
 23571  004BDE  0101               	movlb	1	; () banked
 23572  004BE0  5D28               	subwf	delay@i& (0+255),w,b
 23573  004BE2  0100               	movlb	0	; () banked
 23574  004BE4  51FE               	movf	(delay@x+1)& (0+255),w,b
 23575  004BE6  0101               	movlb	1	; () banked
 23576  004BE8  5929               	subwfb	(delay@i+1)& (0+255),w,b
 23577  004BEA  B0D8               	btfsc	status,0,c
 23578  004BEC  0012               	return	
 23579  004BEE  D7E1               	goto	l12369
 23580  004BF0                     __end_of_delay:
 23581                           	opt stack 0
 23582                           tblptru	equ	0xFF8
 23583                           tblptrh	equ	0xFF7
 23584                           tblptrl	equ	0xFF6
 23585                           tablat	equ	0xFF5
 23586                           prodh	equ	0xFF4
 23587                           prodl	equ	0xFF3
 23588                           intcon	equ	0xFF2
 23589                           intcon2	equ	0xFF1
 23590                           intcon3	equ	0xFF0
 23591                           indf0	equ	0xFEF
 23592                           postinc0	equ	0xFEE
 23593                           fsr0h	equ	0xFEA
 23594                           fsr0l	equ	0xFE9
 23595                           wreg	equ	0xFE8
 23596                           postdec1	equ	0xFE5
 23597                           fsr1h	equ	0xFE2
 23598                           fsr1l	equ	0xFE1
 23599                           postinc2	equ	0xFDE
 23600                           fsr2h	equ	0xFDA
 23601                           fsr2l	equ	0xFD9
 23602                           status	equ	0xFD8
 23603                           
 23604 ;; *************** function _BeepInit *****************
 23605 ;; Defined at:
 23606 ;;		line 78 in file "../Beep.c"
 23607 ;; Parameters:    Size  Location     Type
 23608 ;;		None
 23609 ;; Auto vars:     Size  Location     Type
 23610 ;;		None
 23611 ;; Return value:  Size  Location     Type
 23612 ;;                  1    wreg      void 
 23613 ;; Registers used:
 23614 ;;		None
 23615 ;; Tracked objects:
 23616 ;;		On entry : 0/0
 23617 ;;		On exit  : 0/0
 23618 ;;		Unchanged: 0/0
 23619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23620 ;;      Params:         0       0       0       0       0       0       0
 23621 ;;      Locals:         0       0       0       0       0       0       0
 23622 ;;      Temps:          0       0       0       0       0       0       0
 23623 ;;      Totals:         0       0       0       0       0       0       0
 23624 ;;Total ram usage:        0 bytes
 23625 ;; Hardware stack levels used:    1
 23626 ;; Hardware stack levels required when called:    2
 23627 ;; This function calls:
 23628 ;;		Nothing
 23629 ;; This function is called by:
 23630 ;;		_HG_device_init
 23631 ;; This function uses a non-reentrant model
 23632 ;;
 23633                           
 23634                           	psect	text70
 23635  004E9E                     __ptext70:
 23636                           	opt stack 0
 23637  004E9E                     _BeepInit:
 23638                           	opt stack 27
 23639                           
 23640                           ;Beep.c: 87: TRISEbits.RE2 =0;
 23641                           
 23642                           ; BSR set to: 1
 23643                           ;incstack = 0
 23644  004E9E  9496               	bcf	3990,2,c	;volatile
 23645                           
 23646                           ;Beep.c: 88: LATEbits.LE2 =0;
 23647  004EA0  948D               	bcf	3981,2,c	;volatile
 23648                           
 23649                           ;Beep.c: 91: TRISDbits.RD5 =0;
 23650  004EA2  9A95               	bcf	3989,5,c	;volatile
 23651                           
 23652                           ;Beep.c: 92: LATDbits.LD5 =1;
 23653  004EA4  8A8C               	bsf	3980,5,c	;volatile
 23654  004EA6  0012               	return		;funcret
 23655  004EA8                     __end_of_BeepInit:
 23656                           	opt stack 0
 23657                           tblptru	equ	0xFF8
 23658                           tblptrh	equ	0xFF7
 23659                           tblptrl	equ	0xFF6
 23660                           tablat	equ	0xFF5
 23661                           prodh	equ	0xFF4
 23662                           prodl	equ	0xFF3
 23663                           intcon	equ	0xFF2
 23664                           intcon2	equ	0xFF1
 23665                           intcon3	equ	0xFF0
 23666                           indf0	equ	0xFEF
 23667                           postinc0	equ	0xFEE
 23668                           fsr0h	equ	0xFEA
 23669                           fsr0l	equ	0xFE9
 23670                           wreg	equ	0xFE8
 23671                           postdec1	equ	0xFE5
 23672                           fsr1h	equ	0xFE2
 23673                           fsr1l	equ	0xFE1
 23674                           postinc2	equ	0xFDE
 23675                           fsr2h	equ	0xFDA
 23676                           fsr2l	equ	0xFD9
 23677                           status	equ	0xFD8
 23678                           
 23679 ;; *************** function _AD_init *****************
 23680 ;; Defined at:
 23681 ;;		line 272 in file "../Oled.c"
 23682 ;; Parameters:    Size  Location     Type
 23683 ;;		None
 23684 ;; Auto vars:     Size  Location     Type
 23685 ;;		None
 23686 ;; Return value:  Size  Location     Type
 23687 ;;                  1    wreg      unsigned char 
 23688 ;; Registers used:
 23689 ;;		wreg, status,2
 23690 ;; Tracked objects:
 23691 ;;		On entry : 0/0
 23692 ;;		On exit  : 0/0
 23693 ;;		Unchanged: 0/0
 23694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23695 ;;      Params:         0       0       0       0       0       0       0
 23696 ;;      Locals:         0       0       0       0       0       0       0
 23697 ;;      Temps:          0       0       0       0       0       0       0
 23698 ;;      Totals:         0       0       0       0       0       0       0
 23699 ;;Total ram usage:        0 bytes
 23700 ;; Hardware stack levels used:    1
 23701 ;; Hardware stack levels required when called:    2
 23702 ;; This function calls:
 23703 ;;		Nothing
 23704 ;; This function is called by:
 23705 ;;		_HG_device_init
 23706 ;; This function uses a non-reentrant model
 23707 ;;
 23708                           
 23709                           	psect	text71
 23710  004E2E                     __ptext71:
 23711                           	opt stack 0
 23712  004E2E                     _AD_init:
 23713                           	opt stack 27
 23714                           
 23715                           ;Oled.c: 275: TRISAbits.RA0 =1;
 23716                           
 23717                           ;incstack = 0
 23718  004E2E  8092               	bsf	3986,0,c	;volatile
 23719                           
 23720                           ;Oled.c: 276: TRISAbits.RA1 =1;
 23721  004E30  8292               	bsf	3986,1,c	;volatile
 23722                           
 23723                           ;Oled.c: 277: TRISAbits.RA2 =1;
 23724  004E32  8492               	bsf	3986,2,c	;volatile
 23725                           
 23726                           ;Oled.c: 281: ADCON2bits.ACQT = 4;
 23727  004E34  50C0               	movf	4032,w,c	;volatile
 23728  004E36  0BC7               	andlw	-57
 23729  004E38  0920               	iorlw	32
 23730  004E3A  6EC0               	movwf	4032,c	;volatile
 23731                           
 23732                           ;Oled.c: 283: ADCON0bits.ADON = 1;
 23733  004E3C  80C2               	bsf	4034,0,c	;volatile
 23734  004E3E  0012               	return	
 23735  004E40                     __end_of_AD_init:
 23736                           	opt stack 0
 23737                           tblptru	equ	0xFF8
 23738                           tblptrh	equ	0xFF7
 23739                           tblptrl	equ	0xFF6
 23740                           tablat	equ	0xFF5
 23741                           prodh	equ	0xFF4
 23742                           prodl	equ	0xFF3
 23743                           intcon	equ	0xFF2
 23744                           intcon2	equ	0xFF1
 23745                           intcon3	equ	0xFF0
 23746                           indf0	equ	0xFEF
 23747                           postinc0	equ	0xFEE
 23748                           fsr0h	equ	0xFEA
 23749                           fsr0l	equ	0xFE9
 23750                           wreg	equ	0xFE8
 23751                           postdec1	equ	0xFE5
 23752                           fsr1h	equ	0xFE2
 23753                           fsr1l	equ	0xFE1
 23754                           postinc2	equ	0xFDE
 23755                           fsr2h	equ	0xFDA
 23756                           fsr2l	equ	0xFD9
 23757                           status	equ	0xFD8
 23758                           
 23759 ;; *************** function _ISR *****************
 23760 ;; Defined at:
 23761 ;;		line 46 in file "../Timer.c"
 23762 ;; Parameters:    Size  Location     Type
 23763 ;;		None
 23764 ;; Auto vars:     Size  Location     Type
 23765 ;;  temp            1    0        unsigned char 
 23766 ;; Return value:  Size  Location     Type
 23767 ;;                  1    wreg      void 
 23768 ;; Registers used:
 23769 ;;		wreg, status,2, status,0, cstack
 23770 ;; Tracked objects:
 23771 ;;		On entry : 0/0
 23772 ;;		On exit  : 0/0
 23773 ;;		Unchanged: 0/0
 23774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23775 ;;      Params:         0       0       0       0       0       0       0
 23776 ;;      Locals:         0       0       0       0       0       0       0
 23777 ;;      Temps:         14       0       0       0       0       0       0
 23778 ;;      Totals:        14       0       0       0       0       0       0
 23779 ;;Total ram usage:       14 bytes
 23780 ;; Hardware stack levels used:    1
 23781 ;; Hardware stack levels required when called:    1
 23782 ;; This function calls:
 23783 ;;		_get_SenseA_AD_vaule
 23784 ;; This function is called by:
 23785 ;;		Interrupt level 2
 23786 ;; This function uses a non-reentrant model
 23787 ;;
 23788                           
 23789                           	psect	intcode
 23790  000008                     __pintcode:
 23791                           	opt stack 0
 23792  000008                     _ISR:
 23793                           	opt stack 21
 23794                           
 23795                           ;incstack = 0
 23796  000008  826A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 23797  00000A  ED32  F014         	call	int_func,f	;refresh shadow registers
 23798                           tblptru	equ	0xFF8
 23799                           tblptrh	equ	0xFF7
 23800                           tblptrl	equ	0xFF6
 23801                           tablat	equ	0xFF5
 23802                           prodh	equ	0xFF4
 23803                           prodl	equ	0xFF3
 23804                           intcon	equ	0xFF2
 23805                           intcon2	equ	0xFF1
 23806                           intcon3	equ	0xFF0
 23807                           indf0	equ	0xFEF
 23808                           postinc0	equ	0xFEE
 23809                           fsr0h	equ	0xFEA
 23810                           fsr0l	equ	0xFE9
 23811                           wreg	equ	0xFE8
 23812                           postdec1	equ	0xFE5
 23813                           fsr1h	equ	0xFE2
 23814                           fsr1l	equ	0xFE1
 23815                           postinc2	equ	0xFDE
 23816                           fsr2h	equ	0xFDA
 23817                           fsr2l	equ	0xFD9
 23818                           status	equ	0xFD8
 23819                           
 23820                           	psect	intcode_body
 23821  002864                     __pintcode_body:
 23822                           	opt stack 21
 23823  002864                     int_func:
 23824                           	opt stack 21
 23825  002864  0006               	pop		; remove dummy address from shadow register refresh
 23826  002866  CFFA F05A          	movff	pclath,??_ISR
 23827  00286A  CFFB F05B          	movff	pclatu,??_ISR+1
 23828  00286E  CFE9 F05C          	movff	fsr0l,??_ISR+2
 23829  002872  CFEA F05D          	movff	fsr0h,??_ISR+3
 23830  002876  CFE1 F05E          	movff	fsr1l,??_ISR+4
 23831  00287A  CFE2 F05F          	movff	fsr1h,??_ISR+5
 23832  00287E  CFD9 F060          	movff	fsr2l,??_ISR+6
 23833  002882  CFDA F061          	movff	fsr2h,??_ISR+7
 23834  002886  CFF3 F062          	movff	prodl,??_ISR+8
 23835  00288A  CFF4 F063          	movff	prodh,??_ISR+9
 23836  00288E  CFF6 F064          	movff	tblptrl,??_ISR+10
 23837  002892  CFF7 F065          	movff	tblptrh,??_ISR+11
 23838  002896  CFF8 F066          	movff	tblptru,??_ISR+12
 23839  00289A  CFF5 F067          	movff	tablat,??_ISR+13
 23840                           
 23841                           ;Timer.c: 48: uint8_t temp;
 23842                           ;Timer.c: 49: static uint8_t tcnt=0;
 23843                           ;Timer.c: 50: static uint8_t cnt_action_btn = 0;
 23844                           ;Timer.c: 51: static uint16_t tcnt_bat = 0;
 23845                           ;Timer.c: 52: static uint16_t tcnt_overload_ma;
 23846                           ;Timer.c: 58: if(INTCON3bits.INT2IF)
 23847  00289E  A2F0               	btfss	intcon3,1,c	;volatile
 23848  0028A0  D082               	goto	i2l1339
 23849                           
 23850                           ;Timer.c: 59: {
 23851                           ;Timer.c: 60: INTCON3bits.INT2IF = 0;
 23852  0028A2  92F0               	bcf	intcon3,1,c	;volatile
 23853                           
 23854                           ;Timer.c: 62: if(INTCON2bits.INTEDG2 == 0)
 23855  0028A4  B8F1               	btfsc	intcon2,4,c	;volatile
 23856  0028A6  D002               	goto	i2l1340
 23857                           
 23858                           ;Timer.c: 63: {
 23859                           ;Timer.c: 64: INTCON2bits.INTEDG2 = 1;
 23860  0028A8  88F1               	bsf	intcon2,4,c	;volatile
 23861                           
 23862                           ;Timer.c: 65: }
 23863  0028AA  D002               	goto	i2l10993
 23864  0028AC                     i2l1340:
 23865                           
 23866                           ;Timer.c: 66: else if(INTCON2bits.INTEDG2 == 1)
 23867  0028AC  B8F1               	btfsc	intcon2,4,c	;volatile
 23868                           
 23869                           ;Timer.c: 67: {
 23870                           ;Timer.c: 68: INTCON2bits.INTEDG2 = 0;
 23871  0028AE  98F1               	bcf	intcon2,4,c	;volatile
 23872  0028B0                     i2l10993:
 23873                           
 23874                           ;Timer.c: 75: {
 23875                           ;Timer.c: 78: if(1)
 23876  0028B0  0100               	movlb	0	; () banked
 23877  0028B2  5185               	movf	(_hg_op+5)& (0+255),w,b
 23878  0028B4  B4D8               	btfsc	status,2,c
 23879  0028B6  D01A               	goto	i2l11013
 23880                           
 23881                           ; BSR set to: 0
 23882                           ;Timer.c: 79: {
 23883                           ;Timer.c: 83: if(hg_op.in_reset == 1)
 23884  0028B8  0100               	movlb	0	; () banked
 23885  0028BA  0590               	decf	(_hg_op+16)& (0+255),w,b
 23886  0028BC  A4D8               	btfss	status,2,c
 23887  0028BE  D073               	goto	i2l1339
 23888                           
 23889                           ; BSR set to: 0
 23890                           ;Timer.c: 84: {
 23891                           ;Timer.c: 90: if( INTCON2bits.INTEDG2 == 1)
 23892  0028C0  A8F1               	btfss	intcon2,4,c	;volatile
 23893  0028C2  D005               	goto	i2l1346
 23894                           
 23895                           ; BSR set to: 0
 23896                           ;Timer.c: 91: {
 23897                           ;Timer.c: 92: if(PORTCbits.RC0 == 0)
 23898  0028C4  A082               	btfss	3970,0,c	;volatile
 23899  0028C6  D00E               	goto	i2l11009
 23900                           
 23901                           ; BSR set to: 0
 23902                           ;Timer.c: 97: else if(PORTCbits.RC0 == 1)
 23903                           
 23904                           ;Timer.c: 96: }
 23905                           
 23906                           ; BSR set to: 0
 23907                           ;Timer.c: 93: {
 23908                           ;Timer.c: 94: hg_op.cnt_posrst ++;
 23909  0028C8  A082               	btfss	3970,0,c	;volatile
 23910  0028CA  D06D               	goto	i2l1339
 23911  0028CC  D004               	goto	i2l11007
 23912  0028CE                     i2l1346:
 23913                           
 23914                           ; BSR set to: 0
 23915                           ;Timer.c: 106: else if( INTCON2bits.INTEDG2 == 0)
 23916  0028CE  B8F1               	btfsc	intcon2,4,c	;volatile
 23917  0028D0  D06A               	goto	i2l1339
 23918                           
 23919                           ; BSR set to: 0
 23920                           ;Timer.c: 107: {
 23921                           ;Timer.c: 109: if(PORTCbits.RC0 == 0)
 23922  0028D2  B082               	btfsc	3970,0,c	;volatile
 23923  0028D4  D005               	goto	i2l1352
 23924  0028D6                     i2l11007:
 23925                           
 23926                           ; BSR set to: 0
 23927                           ;Timer.c: 110: {
 23928                           ;Timer.c: 111: hg_op.cnt_posrst --;
 23929  0028D6  0100               	movlb	0	; () banked
 23930  0028D8  07B5               	decf	(_hg_op+53)& (0+255),f,b
 23931  0028DA  A0D8               	btfss	status,0,c
 23932  0028DC  07B6               	decf	(_hg_op+54)& (0+255),f,b
 23933                           
 23934                           ;Timer.c: 113: }
 23935  0028DE  D063               	goto	i2l1339
 23936  0028E0                     i2l1352:
 23937                           
 23938                           ; BSR set to: 0
 23939                           ;Timer.c: 114: else if(PORTCbits.RC0 == 1)
 23940  0028E0  A082               	btfss	3970,0,c	;volatile
 23941  0028E2  D061               	goto	i2l1339
 23942  0028E4                     i2l11009:
 23943                           
 23944                           ; BSR set to: 0
 23945                           ;Timer.c: 115: {
 23946                           ;Timer.c: 116: hg_op.cnt_posrst ++;
 23947  0028E4  0100               	movlb	0	; () banked
 23948  0028E6  4BB5               	infsnz	(_hg_op+53)& (0+255),f,b
 23949  0028E8  2BB6               	incf	(_hg_op+54)& (0+255),f,b
 23950                           
 23951                           ; BSR set to: 0
 23952                           ;Timer.c: 134: }
 23953                           ;Timer.c: 172: }
 23954                           ;Timer.c: 173: }
 23955                           
 23956                           ; BSR set to: 0
 23957                           
 23958                           ;Timer.c: 129: {
 23959                           
 23960                           ; BSR set to: 0
 23961                           
 23962                           ; BSR set to: 0
 23963                           
 23964                           ; BSR set to: 0
 23965                           
 23966                           ; BSR set to: 0
 23967                           
 23968                           ; BSR set to: 0
 23969                           
 23970                           ; BSR set to: 0
 23971  0028EA  D05D               	goto	i2l1339
 23972  0028EC                     i2l11013:
 23973                           
 23974                           ; BSR set to: 0
 23975                           ;Timer.c: 174: else
 23976                           ;Timer.c: 175: {
 23977                           ;Timer.c: 176: if(hg_op.working_mode == 0x01)
 23978  0028EC  0100               	movlb	0	; () banked
 23979  0028EE  0580               	decf	_hg_op& (0+255),w,b
 23980  0028F0  A4D8               	btfss	status,2,c
 23981  0028F2  D038               	goto	i2l11047
 23982                           
 23983                           ; BSR set to: 0
 23984                           ;Timer.c: 177: {
 23985                           ;Timer.c: 178: if(hg_op.drops_sa == 1)
 23986  0028F4  0100               	movlb	0	; () banked
 23987  0028F6  059F               	decf	(_hg_op+31)& (0+255),w,b
 23988  0028F8  A4D8               	btfss	status,2,c
 23989  0028FA  D01A               	goto	i2l11031
 23990                           
 23991                           ; BSR set to: 0
 23992                           ;Timer.c: 179: {
 23993                           ;Timer.c: 206: if( INTCON2bits.INTEDG2 == 1)
 23994  0028FC  A8F1               	btfss	intcon2,4,c	;volatile
 23995  0028FE  D005               	goto	i2l1359
 23996                           
 23997                           ; BSR set to: 0
 23998                           ;Timer.c: 207: {
 23999                           ;Timer.c: 208: if(PORTCbits.RC0 == 0)
 24000  002900  A082               	btfss	3970,0,c	;volatile
 24001  002902  D012               	goto	i2l11029
 24002                           
 24003                           ; BSR set to: 0
 24004                           ;Timer.c: 216: else if(PORTCbits.RC0 == 1)
 24005                           
 24006                           ;Timer.c: 215: }
 24007                           
 24008                           ;Timer.c: 214: hg_op.cnt_posa ++;
 24009                           
 24010                           ; BSR set to: 0
 24011                           ;Timer.c: 209: {
 24012                           ;Timer.c: 213: hg_op.cnt_pos_nmm ++;
 24013  002904  A082               	btfss	3970,0,c	;volatile
 24014  002906  D04F               	goto	i2l1339
 24015  002908  D004               	goto	i2l11027
 24016  00290A                     i2l1359:
 24017                           
 24018                           ; BSR set to: 0
 24019                           ;Timer.c: 225: else if( INTCON2bits.INTEDG2 == 0)
 24020  00290A  B8F1               	btfsc	intcon2,4,c	;volatile
 24021  00290C  D04C               	goto	i2l1339
 24022                           
 24023                           ; BSR set to: 0
 24024                           ;Timer.c: 226: {
 24025                           ;Timer.c: 228: if(PORTCbits.RC0 == 0)
 24026  00290E  B082               	btfsc	3970,0,c	;volatile
 24027  002910  D009               	goto	i2l1365
 24028  002912                     i2l11027:
 24029                           
 24030                           ; BSR set to: 0
 24031                           ;Timer.c: 229: {
 24032                           ;Timer.c: 231: hg_op.cnt_pos_nmm --;
 24033  002912  0100               	movlb	0	; () banked
 24034  002914  07AD               	decf	(_hg_op+45)& (0+255),f,b
 24035  002916  A0D8               	btfss	status,0,c
 24036  002918  07AE               	decf	(_hg_op+46)& (0+255),f,b
 24037                           
 24038                           ;Timer.c: 232: hg_op.cnt_posa --;
 24039  00291A  0100               	movlb	0	; () banked
 24040  00291C  07A5               	decf	(_hg_op+37)& (0+255),f,b
 24041  00291E  A0D8               	btfss	status,0,c
 24042  002920  07A6               	decf	(_hg_op+38)& (0+255),f,b
 24043                           
 24044                           ;Timer.c: 233: }
 24045  002922  D041               	goto	i2l1339
 24046  002924                     i2l1365:
 24047                           
 24048                           ; BSR set to: 0
 24049                           ;Timer.c: 234: else if(PORTCbits.RC0 == 1)
 24050  002924  A082               	btfss	3970,0,c	;volatile
 24051  002926  D03F               	goto	i2l1339
 24052  002928                     i2l11029:
 24053                           
 24054                           ; BSR set to: 0
 24055                           ;Timer.c: 235: {
 24056                           ;Timer.c: 237: hg_op.cnt_pos_nmm ++;
 24057  002928  0100               	movlb	0	; () banked
 24058  00292A  4BAD               	infsnz	(_hg_op+45)& (0+255),f,b
 24059  00292C  2BAE               	incf	(_hg_op+46)& (0+255),f,b
 24060  00292E  D038               	goto	i2l11065
 24061  002930                     i2l11031:
 24062                           
 24063                           ; BSR set to: 0
 24064                           ;Timer.c: 271: else if(hg_op.drops_sb == 1)
 24065  002930  0100               	movlb	0	; () banked
 24066  002932  05A0               	decf	(_hg_op+32)& (0+255),w,b
 24067  002934  A4D8               	btfss	status,2,c
 24068  002936  D037               	goto	i2l1339
 24069                           
 24070                           ; BSR set to: 0
 24071                           ;Timer.c: 272: {
 24072                           ;Timer.c: 306: if( INTCON2bits.INTEDG2 == 1)
 24073  002938  A8F1               	btfss	intcon2,4,c	;volatile
 24074  00293A  D005               	goto	i2l1371
 24075                           
 24076                           ; BSR set to: 0
 24077                           ;Timer.c: 307: {
 24078                           ;Timer.c: 308: if(PORTCbits.RC0 == 0)
 24079  00293C  A082               	btfss	3970,0,c	;volatile
 24080  00293E  D00E               	goto	i2l11045
 24081                           
 24082                           ; BSR set to: 0
 24083                           ;Timer.c: 315: else if(PORTCbits.RC0 == 1)
 24084                           
 24085                           ;Timer.c: 314: }
 24086                           
 24087                           ; BSR set to: 0
 24088                           ;Timer.c: 309: {
 24089                           ;Timer.c: 313: hg_op.cnt_pos_nmm ++;
 24090  002940  A082               	btfss	3970,0,c	;volatile
 24091  002942  D031               	goto	i2l1339
 24092  002944  D004               	goto	i2l11043
 24093  002946                     i2l1371:
 24094                           
 24095                           ; BSR set to: 0
 24096                           ;Timer.c: 325: else if( INTCON2bits.INTEDG2 == 0)
 24097  002946  B8F1               	btfsc	intcon2,4,c	;volatile
 24098  002948  D02E               	goto	i2l1339
 24099                           
 24100                           ; BSR set to: 0
 24101                           ;Timer.c: 326: {
 24102                           ;Timer.c: 328: if(PORTCbits.RC0 == 0)
 24103  00294A  B082               	btfsc	3970,0,c	;volatile
 24104  00294C  D005               	goto	i2l1377
 24105  00294E                     i2l11043:
 24106                           
 24107                           ; BSR set to: 0
 24108                           ;Timer.c: 329: {
 24109                           ;Timer.c: 331: hg_op.cnt_pos_nmm --;
 24110  00294E  0100               	movlb	0	; () banked
 24111  002950  07AD               	decf	(_hg_op+45)& (0+255),f,b
 24112  002952  A0D8               	btfss	status,0,c
 24113  002954  07AE               	decf	(_hg_op+46)& (0+255),f,b
 24114                           
 24115                           ;Timer.c: 332: }
 24116  002956  D027               	goto	i2l1339
 24117  002958                     i2l1377:
 24118                           
 24119                           ; BSR set to: 0
 24120                           ;Timer.c: 333: else if(PORTCbits.RC0 == 1)
 24121  002958  A082               	btfss	3970,0,c	;volatile
 24122  00295A  D025               	goto	i2l1339
 24123  00295C                     i2l11045:
 24124                           
 24125                           ; BSR set to: 0
 24126                           ;Timer.c: 334: {
 24127                           ;Timer.c: 337: hg_op.cnt_pos_nmm ++;
 24128  00295C  0100               	movlb	0	; () banked
 24129  00295E  4BAD               	infsnz	(_hg_op+45)& (0+255),f,b
 24130  002960  2BAE               	incf	(_hg_op+46)& (0+255),f,b
 24131                           
 24132                           ; BSR set to: 0
 24133                           ;Timer.c: 367: }
 24134                           ;Timer.c: 370: }
 24135                           ;Timer.c: 372: }
 24136                           
 24137                           ; BSR set to: 0
 24138                           
 24139                           ; BSR set to: 0
 24140                           
 24141                           ;Timer.c: 352: {
 24142                           
 24143                           ; BSR set to: 0
 24144                           ;Timer.c: 338: }
 24145                           ;Timer.c: 341: }
 24146                           ;Timer.c: 351: if(0)
 24147                           
 24148                           ; BSR set to: 0
 24149                           
 24150                           ; BSR set to: 0
 24151                           
 24152                           ; BSR set to: 0
 24153  002962  D021               	goto	i2l1339
 24154  002964                     i2l11047:
 24155                           
 24156                           ; BSR set to: 0
 24157                           ;Timer.c: 373: else if(hg_op.working_mode == 0x02)
 24158  002964  0E02               	movlw	2
 24159  002966  0100               	movlb	0	; () banked
 24160  002968  1980               	xorwf	_hg_op& (0+255),w,b
 24161  00296A  B4D8               	btfsc	status,2,c
 24162  00296C  D01C               	goto	i2l1339
 24163                           
 24164                           ; BSR set to: 0
 24165                           ;Timer.c: 377: else if(hg_op.working_mode == 0x00)
 24166                           
 24167                           ; BSR set to: 0
 24168                           
 24169                           ; BSR set to: 0
 24170                           ;Timer.c: 374: {
 24171                           ;Timer.c: 376: }
 24172  00296E  0100               	movlb	0	; () banked
 24173  002970  5180               	movf	_hg_op& (0+255),w,b
 24174  002972  A4D8               	btfss	status,2,c
 24175  002974  D00C               	goto	i2l11061
 24176                           
 24177                           ; BSR set to: 0
 24178                           ;Timer.c: 378: {
 24179                           ;Timer.c: 379: if(hg_op.drops_sa == 1)
 24180  002976  0100               	movlb	0	; () banked
 24181  002978  059F               	decf	(_hg_op+31)& (0+255),w,b
 24182  00297A  B4D8               	btfsc	status,2,c
 24183  00297C  D011               	goto	i2l11065
 24184  00297E                     i2l11057:
 24185                           
 24186                           ; BSR set to: 0
 24187                           ;Timer.c: 383: else if(hg_op.drops_sb == 1)
 24188  00297E  0100               	movlb	0	; () banked
 24189  002980  05A0               	decf	(_hg_op+32)& (0+255),w,b
 24190  002982  A4D8               	btfss	status,2,c
 24191  002984  D010               	goto	i2l1339
 24192                           
 24193                           ; BSR set to: 0
 24194                           ;Timer.c: 384: {
 24195                           ;Timer.c: 385: hg_op.cnt_posb ++;
 24196  002986  0100               	movlb	0	; () banked
 24197  002988  4BA7               	infsnz	(_hg_op+39)& (0+255),f,b
 24198  00298A  2BA8               	incf	(_hg_op+40)& (0+255),f,b
 24199                           
 24200                           ; BSR set to: 0
 24201                           ;Timer.c: 386: }
 24202                           ;Timer.c: 387: }
 24203                           
 24204                           ; BSR set to: 0
 24205  00298C  D00C               	goto	i2l1339
 24206  00298E                     i2l11061:
 24207                           
 24208                           ; BSR set to: 0
 24209                           ;Timer.c: 388: else if(hg_op.working_mode == 0x04)
 24210  00298E  0E04               	movlw	4
 24211  002990  0100               	movlb	0	; () banked
 24212  002992  1980               	xorwf	_hg_op& (0+255),w,b
 24213  002994  A4D8               	btfss	status,2,c
 24214  002996  D007               	goto	i2l1339
 24215                           
 24216                           ; BSR set to: 0
 24217                           ;Timer.c: 389: {
 24218                           ;Timer.c: 390: if(hg_op.drops_sa == 1)
 24219  002998  0100               	movlb	0	; () banked
 24220  00299A  059F               	decf	(_hg_op+31)& (0+255),w,b
 24221  00299C  A4D8               	btfss	status,2,c
 24222  00299E  D7EF               	goto	i2l11057
 24223  0029A0                     i2l11065:
 24224                           
 24225                           ; BSR set to: 0
 24226                           ;Timer.c: 391: {
 24227                           ;Timer.c: 392: hg_op.cnt_posa ++;
 24228  0029A0  0100               	movlb	0	; () banked
 24229  0029A2  4BA5               	infsnz	(_hg_op+37)& (0+255),f,b
 24230  0029A4  2BA6               	incf	(_hg_op+38)& (0+255),f,b
 24231  0029A6                     i2l1339:
 24232                           
 24233                           ;Timer.c: 402: }
 24234                           ;Timer.c: 405: }
 24235                           ;Timer.c: 412: }
 24236                           ;Timer.c: 430: if(T0IF)
 24237  0029A6  A4F2               	btfss	intcon,2,c	;volatile
 24238  0029A8  D039               	goto	i2l11091
 24239                           
 24240                           ;Timer.c: 431: {
 24241                           ;Timer.c: 433: tcnt ++;
 24242  0029AA  0100               	movlb	0	; () banked
 24243  0029AC  2BDC               	incf	ISR@tcnt& (0+255),f,b
 24244                           
 24245                           ;Timer.c: 434: tcnt_bat ++;
 24246  0029AE  0100               	movlb	0	; () banked
 24247  0029B0  4BC7               	infsnz	ISR@tcnt_bat& (0+255),f,b
 24248  0029B2  2BC8               	incf	(ISR@tcnt_bat+1)& (0+255),f,b
 24249                           
 24250                           ; BSR set to: 0
 24251                           ;Timer.c: 436: if( hg_op.drops_push == 1)
 24252  0029B4  0100               	movlb	0	; () banked
 24253  0029B6  05A1               	decf	(_hg_op+33)& (0+255),w,b
 24254  0029B8  A4D8               	btfss	status,2,c
 24255  0029BA  D016               	goto	i2l11081
 24256                           
 24257                           ; BSR set to: 0
 24258                           ;Timer.c: 437: {
 24259                           ;Timer.c: 438: tva = get_SenseA_AD_vaule();
 24260  0029BC  EC32  F024         	call	_get_SenseA_AD_vaule	;wreg free
 24261  0029C0  C051  F0CD         	movff	?_get_SenseA_AD_vaule,_tva
 24262  0029C4  C052  F0CE         	movff	?_get_SenseA_AD_vaule+1,_tva+1
 24263                           
 24264                           ;Timer.c: 439: if(tva >600)
 24265  0029C8  0E59               	movlw	89
 24266  0029CA  0100               	movlb	0	; () banked
 24267  0029CC  5DCD               	subwf	_tva& (0+255),w,b
 24268  0029CE  0E02               	movlw	2
 24269  0029D0  0100               	movlb	0	; () banked
 24270  0029D2  59CE               	subwfb	(_tva+1)& (0+255),w,b
 24271  0029D4  A0D8               	btfss	status,0,c
 24272  0029D6  D008               	goto	i2l11081
 24273                           
 24274                           ; BSR set to: 0
 24275                           ;Timer.c: 440: {
 24276                           ;Timer.c: 445: {
 24277                           ;Timer.c: 446: hg_op.tcnt_overload_ma =0;
 24278  0029D8  0E00               	movlw	0
 24279  0029DA  0100               	movlb	0	; () banked
 24280  0029DC  6F8D               	movwf	(_hg_op+13)& (0+255),b
 24281  0029DE  0E00               	movlw	0
 24282  0029E0  6F8C               	movwf	(_hg_op+12)& (0+255),b
 24283                           
 24284                           ;Timer.c: 447: hg_op.flag_warning_ma = 1;
 24285  0029E2  0E01               	movlw	1
 24286  0029E4  0100               	movlb	0	; () banked
 24287  0029E6  6F8E               	movwf	(_hg_op+14)& (0+255),b
 24288  0029E8                     i2l11081:
 24289                           
 24290                           ; BSR set to: 0
 24291                           ;Timer.c: 455: }
 24292                           ;Timer.c: 459: if(tcnt_bat > (125))
 24293  0029E8  0100               	movlb	0	; () banked
 24294  0029EA  51C8               	movf	(ISR@tcnt_bat+1)& (0+255),w,b
 24295  0029EC  E105               	bnz	i2u1316_40
 24296  0029EE  0E7E               	movlw	126
 24297  0029F0  0100               	movlb	0	; () banked
 24298  0029F2  5DC7               	subwf	ISR@tcnt_bat& (0+255),w,b
 24299  0029F4  A0D8               	btfss	status,0,c
 24300  0029F6  D008               	goto	i2l11085
 24301  0029F8                     i2u1316_40:
 24302                           
 24303                           ; BSR set to: 0
 24304                           ;Timer.c: 460: {
 24305                           ;Timer.c: 461: hg_op.bat_volume =1;
 24306  0029F8  0E01               	movlw	1
 24307  0029FA  0100               	movlb	0	; () banked
 24308  0029FC  6F87               	movwf	(_hg_op+7)& (0+255),b
 24309                           
 24310                           ;Timer.c: 462: tcnt_bat =0;
 24311  0029FE  0E00               	movlw	0
 24312  002A00  0100               	movlb	0	; () banked
 24313  002A02  6FC8               	movwf	(ISR@tcnt_bat+1)& (0+255),b
 24314  002A04  0E00               	movlw	0
 24315  002A06  6FC7               	movwf	ISR@tcnt_bat& (0+255),b
 24316  002A08                     i2l11085:
 24317                           
 24318                           ; BSR set to: 0
 24319                           ;Timer.c: 463: }
 24320                           ;Timer.c: 470: if(tcnt > 125)
 24321  002A08  0E7D               	movlw	125
 24322  002A0A  0100               	movlb	0	; () banked
 24323  002A0C  65DC               	cpfsgt	ISR@tcnt& (0+255),b
 24324  002A0E  D005               	goto	i2l11089
 24325                           
 24326                           ; BSR set to: 0
 24327                           ;Timer.c: 472: {
 24328                           ;Timer.c: 473: flag_blink =1;
 24329  002A10  0E01               	movlw	1
 24330  002A12  6E50               	movwf	_flag_blink,c
 24331                           
 24332                           ;Timer.c: 474: tcnt = 0;
 24333  002A14  0E00               	movlw	0
 24334  002A16  0100               	movlb	0	; () banked
 24335  002A18  6FDC               	movwf	ISR@tcnt& (0+255),b
 24336  002A1A                     i2l11089:
 24337                           
 24338                           ; BSR set to: 0
 24339                           ;Timer.c: 475: }
 24340                           ;Timer.c: 477: T0IF = 0;
 24341  002A1A  94F2               	bcf	intcon,2,c	;volatile
 24342  002A1C                     i2l11091:
 24343                           
 24344                           ;Timer.c: 479: }
 24345                           ;Timer.c: 489: if(INTCONbits.RBIF)
 24346  002A1C  A0F2               	btfss	intcon,0,c	;volatile
 24347  002A1E  D014               	goto	i2l11107
 24348                           
 24349                           ;Timer.c: 490: {
 24350                           ;Timer.c: 491: if(hg_op.status_powerup == 0x00)
 24351  002A20  0100               	movlb	0	; () banked
 24352  002A22  5183               	movf	(_hg_op+3)& (0+255),w,b
 24353  002A24  A4D8               	btfss	status,2,c
 24354  002A26  D003               	goto	i2l11097
 24355                           
 24356                           ; BSR set to: 0
 24357                           ;Timer.c: 492: {
 24358                           ;Timer.c: 493: hg_op.flag_wake_device =1;
 24359  002A28  0E01               	movlw	1
 24360  002A2A  0100               	movlb	0	; () banked
 24361  002A2C  6F91               	movwf	(_hg_op+17)& (0+255),b
 24362  002A2E                     i2l11097:
 24363                           
 24364                           ; BSR set to: 0
 24365                           ;Timer.c: 494: }
 24366                           ;Timer.c: 495: if(hg_op.status_powerup == 0x01)
 24367  002A2E  0100               	movlb	0	; () banked
 24368  002A30  0583               	decf	(_hg_op+3)& (0+255),w,b
 24369  002A32  A4D8               	btfss	status,2,c
 24370  002A34  D003               	goto	i2l11101
 24371                           
 24372                           ; BSR set to: 0
 24373                           ;Timer.c: 496: {
 24374                           ;Timer.c: 497: hg_op.flag_shut_device =1;
 24375  002A36  0E01               	movlw	1
 24376  002A38  0100               	movlb	0	; () banked
 24377  002A3A  6F92               	movwf	(_hg_op+18)& (0+255),b
 24378  002A3C                     i2l11101:
 24379                           
 24380                           ; BSR set to: 0
 24381                           ;Timer.c: 498: }
 24382                           ;Timer.c: 579: if(PORTBbits.RB5 == 0)
 24383  002A3C  BA81               	btfsc	3969,5,c	;volatile
 24384  002A3E  D003               	goto	i2l11105
 24385                           
 24386                           ; BSR set to: 0
 24387                           ;Timer.c: 580: {
 24388                           ;Timer.c: 583: hg_op.acting_flag = 1;
 24389  002A40  0E01               	movlw	1
 24390  002A42  0100               	movlb	0	; () banked
 24391  002A44  6F9E               	movwf	(_hg_op+30)& (0+255),b
 24392  002A46                     i2l11105:
 24393                           
 24394                           ; BSR set to: 0
 24395                           ;Timer.c: 585: }
 24396                           ;Timer.c: 590: INTCONbits.RBIF=0;
 24397  002A46  90F2               	bcf	intcon,0,c	;volatile
 24398  002A48                     i2l11107:
 24399                           
 24400                           ;Timer.c: 593: }
 24401                           ;Timer.c: 596: if(INTCONbits.INT0IF)
 24402  002A48  A2F2               	btfss	intcon,1,c	;volatile
 24403  002A4A  D004               	goto	i2l1405
 24404                           
 24405                           ;Timer.c: 597: {
 24406                           ;Timer.c: 601: hg_op.status_hit_lp =1;
 24407  002A4C  0E01               	movlw	1
 24408  002A4E  0100               	movlb	0	; () banked
 24409  002A50  6F86               	movwf	(_hg_op+6)& (0+255),b
 24410                           
 24411                           ; BSR set to: 0
 24412                           ;Timer.c: 605: INTCONbits.INT0IF = 0;
 24413  002A52  92F2               	bcf	intcon,1,c	;volatile
 24414  002A54                     i2l1405:
 24415  002A54  C067  FFF5         	movff	??_ISR+13,tablat
 24416  002A58  C066  FFF8         	movff	??_ISR+12,tblptru
 24417  002A5C  C065  FFF7         	movff	??_ISR+11,tblptrh
 24418  002A60  C064  FFF6         	movff	??_ISR+10,tblptrl
 24419  002A64  C063  FFF4         	movff	??_ISR+9,prodh
 24420  002A68  C062  FFF3         	movff	??_ISR+8,prodl
 24421  002A6C  C061  FFDA         	movff	??_ISR+7,fsr2h
 24422  002A70  C060  FFD9         	movff	??_ISR+6,fsr2l
 24423  002A74  C05F  FFE2         	movff	??_ISR+5,fsr1h
 24424  002A78  C05E  FFE1         	movff	??_ISR+4,fsr1l
 24425  002A7C  C05D  FFEA         	movff	??_ISR+3,fsr0h
 24426  002A80  C05C  FFE9         	movff	??_ISR+2,fsr0l
 24427  002A84  C05B  FFFB         	movff	??_ISR+1,pclatu
 24428  002A88  C05A  FFFA         	movff	??_ISR,pclath
 24429  002A8C  926A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 24430  002A8E  0011               	retfie		f
 24431  002A90                     __end_of_ISR:
 24432                           	opt stack 0
 24433                           pclatu	equ	0xFFB
 24434                           pclath	equ	0xFFA
 24435                           tblptru	equ	0xFF8
 24436                           tblptrh	equ	0xFF7
 24437                           tblptrl	equ	0xFF6
 24438                           tablat	equ	0xFF5
 24439                           prodh	equ	0xFF4
 24440                           prodl	equ	0xFF3
 24441                           intcon	equ	0xFF2
 24442                           intcon2	equ	0xFF1
 24443                           intcon3	equ	0xFF0
 24444                           indf0	equ	0xFEF
 24445                           postinc0	equ	0xFEE
 24446                           fsr0h	equ	0xFEA
 24447                           fsr0l	equ	0xFE9
 24448                           wreg	equ	0xFE8
 24449                           postdec1	equ	0xFE5
 24450                           fsr1h	equ	0xFE2
 24451                           fsr1l	equ	0xFE1
 24452                           postinc2	equ	0xFDE
 24453                           fsr2h	equ	0xFDA
 24454                           fsr2l	equ	0xFD9
 24455                           status	equ	0xFD8
 24456                           
 24457 ;; *************** function _get_SenseA_AD_vaule *****************
 24458 ;; Defined at:
 24459 ;;		line 322 in file "../Oled.c"
 24460 ;; Parameters:    Size  Location     Type
 24461 ;;		None
 24462 ;; Auto vars:     Size  Location     Type
 24463 ;;  rv              2    5[COMRAM] unsigned int 
 24464 ;;  lv              1    8[COMRAM] unsigned char 
 24465 ;;  hv              1    7[COMRAM] unsigned char 
 24466 ;; Return value:  Size  Location     Type
 24467 ;;                  2    0[COMRAM] unsigned int 
 24468 ;; Registers used:
 24469 ;;		wreg, status,2, status,0
 24470 ;; Tracked objects:
 24471 ;;		On entry : 0/0
 24472 ;;		On exit  : 0/0
 24473 ;;		Unchanged: 0/0
 24474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 24475 ;;      Params:         2       0       0       0       0       0       0
 24476 ;;      Locals:         4       0       0       0       0       0       0
 24477 ;;      Temps:          3       0       0       0       0       0       0
 24478 ;;      Totals:         9       0       0       0       0       0       0
 24479 ;;Total ram usage:        9 bytes
 24480 ;; Hardware stack levels used:    1
 24481 ;; This function calls:
 24482 ;;		Nothing
 24483 ;; This function is called by:
 24484 ;;		_ISR
 24485 ;; This function uses a non-reentrant model
 24486 ;;
 24487                           
 24488                           	psect	text73
 24489  004864                     __ptext73:
 24490                           	opt stack 0
 24491  004864                     _get_SenseA_AD_vaule:
 24492                           	opt stack 21
 24493                           
 24494                           ;Oled.c: 325: uint8_t hv=0;
 24495                           
 24496                           ;incstack = 0
 24497  004864  0E00               	movlw	0
 24498  004866  6E58               	movwf	get_SenseA_AD_vaule@hv,c
 24499                           
 24500                           ;Oled.c: 326: uint8_t lv=0;
 24501  004868  0E00               	movlw	0
 24502  00486A  6E59               	movwf	get_SenseA_AD_vaule@lv,c
 24503                           
 24504                           ;Oled.c: 328: uint16_t rv=0;
 24505  00486C  0E00               	movlw	0
 24506  00486E  6E57               	movwf	get_SenseA_AD_vaule@rv+1,c
 24507  004870  0E00               	movlw	0
 24508  004872  6E56               	movwf	get_SenseA_AD_vaule@rv,c
 24509                           
 24510                           ;Oled.c: 329: ADCON0bits.CHS = 1;
 24511  004874  50C2               	movf	4034,w,c	;volatile
 24512  004876  0BC3               	andlw	-61
 24513  004878  0904               	iorlw	4
 24514  00487A  6EC2               	movwf	4034,c	;volatile
 24515                           
 24516                           ;Oled.c: 330: ADCON0bits.GO =1;
 24517  00487C  82C2               	bsf	4034,1,c	;volatile
 24518  00487E                     i2l743:
 24519  00487E  B2C2               	btfsc	4034,1,c	;volatile
 24520  004880  D7FE               	goto	i2l743
 24521                           
 24522                           ;Oled.c: 334: hv = ADRESH;
 24523  004882  CFC4 F058          	movff	4036,get_SenseA_AD_vaule@hv	;volatile
 24524                           
 24525                           ;Oled.c: 335: lv = ADRESL;
 24526  004886  CFC3 F059          	movff	4035,get_SenseA_AD_vaule@lv	;volatile
 24527                           
 24528                           ;Oled.c: 337: rv = ((uint16_t)(hv<<8 | lv) >>6)& 0x03ff;
 24529  00488A  5059               	movf	get_SenseA_AD_vaule@lv,w,c
 24530  00488C  C058  F053         	movff	get_SenseA_AD_vaule@hv,??_get_SenseA_AD_vaule
 24531  004890  6A54               	clrf	(??_get_SenseA_AD_vaule+1)& (0+255),c
 24532  004892  C053  F054         	movff	??_get_SenseA_AD_vaule,??_get_SenseA_AD_vaule+1
 24533  004896  6A53               	clrf	??_get_SenseA_AD_vaule,c
 24534  004898  1253               	iorwf	??_get_SenseA_AD_vaule,f,c
 24535  00489A  0E00               	movlw	0
 24536  00489C  1254               	iorwf	??_get_SenseA_AD_vaule+1,f,c
 24537  00489E  0E06               	movlw	6
 24538  0048A0  6E55               	movwf	(??_get_SenseA_AD_vaule+2)& (0+255),c
 24539  0048A2                     i2u1271_45:
 24540  0048A2  90D8               	bcf	status,0,c
 24541  0048A4  3254               	rrcf	??_get_SenseA_AD_vaule+1,f,c
 24542  0048A6  3253               	rrcf	??_get_SenseA_AD_vaule,f,c
 24543  0048A8  2E55               	decfsz	(??_get_SenseA_AD_vaule+2)& (0+255),f,c
 24544  0048AA  D7FB               	goto	i2u1271_45
 24545  0048AC  0EFF               	movlw	255
 24546  0048AE  1453               	andwf	??_get_SenseA_AD_vaule,w,c
 24547  0048B0  6E56               	movwf	get_SenseA_AD_vaule@rv,c
 24548  0048B2  0E03               	movlw	3
 24549  0048B4  1454               	andwf	??_get_SenseA_AD_vaule+1,w,c
 24550  0048B6  6E57               	movwf	get_SenseA_AD_vaule@rv+1,c
 24551                           
 24552                           ;Oled.c: 339: return rv;
 24553  0048B8  C056  F051         	movff	get_SenseA_AD_vaule@rv,?_get_SenseA_AD_vaule
 24554  0048BC  C057  F052         	movff	get_SenseA_AD_vaule@rv+1,?_get_SenseA_AD_vaule+1
 24555  0048C0  0012               	return	
 24556  0048C2                     __end_of_get_SenseA_AD_vaule:
 24557                           	opt stack 0
 24558                           pclatu	equ	0xFFB
 24559                           pclath	equ	0xFFA
 24560                           tblptru	equ	0xFF8
 24561                           tblptrh	equ	0xFF7
 24562                           tblptrl	equ	0xFF6
 24563                           tablat	equ	0xFF5
 24564                           prodh	equ	0xFF4
 24565                           prodl	equ	0xFF3
 24566                           intcon	equ	0xFF2
 24567                           intcon2	equ	0xFF1
 24568                           intcon3	equ	0xFF0
 24569                           indf0	equ	0xFEF
 24570                           postinc0	equ	0xFEE
 24571                           fsr0h	equ	0xFEA
 24572                           fsr0l	equ	0xFE9
 24573                           wreg	equ	0xFE8
 24574                           postdec1	equ	0xFE5
 24575                           fsr1h	equ	0xFE2
 24576                           fsr1l	equ	0xFE1
 24577                           postinc2	equ	0xFDE
 24578                           fsr2h	equ	0xFDA
 24579                           fsr2l	equ	0xFD9
 24580                           status	equ	0xFD8
 24581                           pclatu	equ	0xFFB
 24582                           pclath	equ	0xFFA
 24583                           tblptru	equ	0xFF8
 24584                           tblptrh	equ	0xFF7
 24585                           tblptrl	equ	0xFF6
 24586                           tablat	equ	0xFF5
 24587                           prodh	equ	0xFF4
 24588                           prodl	equ	0xFF3
 24589                           intcon	equ	0xFF2
 24590                           intcon2	equ	0xFF1
 24591                           intcon3	equ	0xFF0
 24592                           indf0	equ	0xFEF
 24593                           postinc0	equ	0xFEE
 24594                           fsr0h	equ	0xFEA
 24595                           fsr0l	equ	0xFE9
 24596                           wreg	equ	0xFE8
 24597                           postdec1	equ	0xFE5
 24598                           fsr1h	equ	0xFE2
 24599                           fsr1l	equ	0xFE1
 24600                           postinc2	equ	0xFDE
 24601                           fsr2h	equ	0xFDA
 24602                           fsr2l	equ	0xFD9
 24603                           status	equ	0xFD8
 24604                           
 24605                           	psect	text74
 24606  000000                     __ptext74:
 24607                           	opt stack 0
 24608                           pclatu	equ	0xFFB
 24609                           pclath	equ	0xFFA
 24610                           tblptru	equ	0xFF8
 24611                           tblptrh	equ	0xFF7
 24612                           tblptrl	equ	0xFF6
 24613                           tablat	equ	0xFF5
 24614                           prodh	equ	0xFF4
 24615                           prodl	equ	0xFF3
 24616                           intcon	equ	0xFF2
 24617                           intcon2	equ	0xFF1
 24618                           intcon3	equ	0xFF0
 24619                           indf0	equ	0xFEF
 24620                           postinc0	equ	0xFEE
 24621                           fsr0h	equ	0xFEA
 24622                           fsr0l	equ	0xFE9
 24623                           wreg	equ	0xFE8
 24624                           postdec1	equ	0xFE5
 24625                           fsr1h	equ	0xFE2
 24626                           fsr1l	equ	0xFE1
 24627                           postinc2	equ	0xFDE
 24628                           fsr2h	equ	0xFDA
 24629                           fsr2l	equ	0xFD9
 24630                           status	equ	0xFD8
 24631                           
 24632                           	psect	rparam
 24633  0000                     pclatu	equ	0xFFB
 24634                           pclath	equ	0xFFA
 24635                           tblptru	equ	0xFF8
 24636                           tblptrh	equ	0xFF7
 24637                           tblptrl	equ	0xFF6
 24638                           tablat	equ	0xFF5
 24639                           prodh	equ	0xFF4
 24640                           prodl	equ	0xFF3
 24641                           intcon	equ	0xFF2
 24642                           intcon2	equ	0xFF1
 24643                           intcon3	equ	0xFF0
 24644                           indf0	equ	0xFEF
 24645                           postinc0	equ	0xFEE
 24646                           fsr0h	equ	0xFEA
 24647                           fsr0l	equ	0xFE9
 24648                           wreg	equ	0xFE8
 24649                           postdec1	equ	0xFE5
 24650                           fsr1h	equ	0xFE2
 24651                           fsr1l	equ	0xFE1
 24652                           postinc2	equ	0xFDE
 24653                           fsr2h	equ	0xFDA
 24654                           fsr2l	equ	0xFD9
 24655                           status	equ	0xFD8
 24656                           
 24657                           	psect	temp
 24658  00006A                     btemp:
 24659                           	opt stack 0
 24660  00006A                     	ds	1
 24661  0000                     int$flags	set	btemp
 24662                           pclatu	equ	0xFFB
 24663                           pclath	equ	0xFFA
 24664                           tblptru	equ	0xFF8
 24665                           tblptrh	equ	0xFF7
 24666                           tblptrl	equ	0xFF6
 24667                           tablat	equ	0xFF5
 24668                           prodh	equ	0xFF4
 24669                           prodl	equ	0xFF3
 24670                           intcon	equ	0xFF2
 24671                           intcon2	equ	0xFF1
 24672                           intcon3	equ	0xFF0
 24673                           indf0	equ	0xFEF
 24674                           postinc0	equ	0xFEE
 24675                           fsr0h	equ	0xFEA
 24676                           fsr0l	equ	0xFE9
 24677                           wreg	equ	0xFE8
 24678                           postdec1	equ	0xFE5
 24679                           fsr1h	equ	0xFE2
 24680                           fsr1l	equ	0xFE1
 24681                           postinc2	equ	0xFDE
 24682                           fsr2h	equ	0xFDA
 24683                           fsr2l	equ	0xFD9
 24684                           status	equ	0xFD8


Data Sizes:
    Strings     15
    Constant    3179
    Data        12
    BSS         747
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     23     105
    BANK0           128      3     128
    BANK1           256     18      58
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 15
		 -> STR_1(CODE[15]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK0[2]), 

    S1958xmenu$MsgHandlle	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> menu7_MsgHandlle(), menu6_MsgHandlle(), menu5_MsgHandlle(), menu4_MsgHandlle(), 
		 -> menu3_MsgHandlle(), menu2_MsgHandlle(), menu1_MsgHandlle(), menu0_MsgHandlle(), 

    menu.MsgHandlle	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> menu7_MsgHandlle(), menu6_MsgHandlle(), menu5_MsgHandlle(), menu4_MsgHandlle(), 
		 -> menu3_MsgHandlle(), menu2_MsgHandlle(), menu1_MsgHandlle(), menu0_MsgHandlle(), 

    ptnx_frame	PTR unsigned char [48] size(2) Largest target is 144
		 -> ptni_frame(CODE[144]), ptnh_frame(CODE[144]), ptng_frame(CODE[144]), ptnf_frame(CODE[144]), 
		 -> NULL(NULL[0]), 

    bat_x_m	PTR unsigned char [23] size(2) Largest target is 46
		 -> bat20_m(CODE[46]), bat40_m(CODE[46]), bat60_m(CODE[46]), bat80_m(CODE[46]), 
		 -> bat100_m(CODE[46]), bat00_m(CODE[46]), NULL(NULL[0]), 

    n_x_m	PTR unsigned char [19] size(2) Largest target is 57
		 -> n_2P5_m(CODE[57]), n_1P5_m(CODE[57]), n_300_m(CODE[57]), n_250_m(CODE[57]), 
		 -> n_200_m(CODE[57]), n_150_m(CODE[57]), n_100_m(CODE[57]), n_13_m(CODE[57]), 
		 -> n_10_m(CODE[57]), n_6_m(CODE[57]), n_5_m(CODE[57]), n_4_m(CODE[57]), 
		 -> n_3_m(CODE[57]), n_2_m(CODE[57]), n_1_m(CODE[57]), n_0_m(CODE[57]), 
		 -> NULL(NULL[0]), 

    ee_WriteBytes@_pWriteBuf	PTR unsigned char  size(2) Largest target is 784
		 -> logo_eme(CODE[784]), display_frame_fghi@temp(BANK1[1]), display_frame_de@temp(BANK1[1]), display_frame_abc@temp(BANK1[1]), 
		 -> display_drop@temp(BANK1[1]), display_drops@temp(BANK1[1]), display_cmode@temp(BANK1[1]), display_blank_mode_pa@temp(BANK1[1]), 
		 -> display_mem@temp(BANK1[1]), display_bat@temp(BANK1[1]), display_bat_blank@temp(BANK1[1]), display_num@temp(BANK1[1]), 
		 -> display_n_blank@temp(BANK1[1]), write_buf(BANK2[256]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->_get_SenseA_AD_vaule

Critical Paths under _main in BANK0

    _test_routine->_printf
    _printf->_putch
    _hg_reset->_delaynus
    _display_mem->_setYX_LCD
    _display_logo->_setYX_LCD
    _clear_screen->_setYX_LCD
    _drops_routine->_delaynus
    _display_n_blank->_setYX_LCD
    _display_blank_mode_pa->_setYX_LCD
    _check_shut_device->_delay_nms
    _check_device_idle->_delay_nms
    _display_bat_blank->_setYX_LCD
    _display_bat->_setYX_LCD
    _check_acting->_delaynus
    _c_routine->___wmul
    _c_routine->_delaynus
    _delay_pwm->___wmul
    _HG_interface->_update_focus
    _display_frame_de->_setYX_LCD
    _display_num->_setYX_LCD
    _display_frame_fghi->_setYX_LCD
    _display_frame_abc->_setYX_LCD
    _display_drops->_setYX_LCD
    _display_drop->_setYX_LCD
    _display_cmode->_setYX_LCD
    _KEY_Scan->_delay_nms
    _KEY_Scan->_delaynus
    _buzz->_delay_nms
    _Initial_LY096BG30->_delay
    _ee_WriteBytes->_i2c_SendByte

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_HG_interface
    _main->_enter_sleep
    _test_routine->_delay_pwm
    _check_wake_button->_initial_ui_setting
    _initial_ui_setting->_display_frame_fghi
    _initial_ui_setting->_display_num
    _display_mem->_setYX_LCD
    _display_logo->_setYX_LCD
    _clear_screen->_setYX_LCD
    _config_LCD->_ee_WriteBytes
    _check_ui_status->_display_frame_fghi
    _check_ui_status->_display_num
    _blink_mode->_display_num
    _display_n_blank->_setYX_LCD
    _display_blank_mode_pa->_setYX_LCD
    _check_shut_device->_delay_pwm
    _shut_device->_ee_WriteBytes
    _check_bat->_display_bat
    _check_bat->_display_bat_blank
    _display_bat_blank->_setYX_LCD
    _display_bat->_setYX_LCD
    _c_routine->_delay_pwm
    _delay_pwm->___wmul
    _HG_interface->_menu0_MsgHandlle
    _HG_interface->_menu3_MsgHandlle
    _HG_interface->_menu4_MsgHandlle
    _HG_interface->_menu5_MsgHandlle
    _HG_interface->_menu6_MsgHandlle
    _menu6_MsgHandlle->_display_frame_fghi
    _menu6_MsgHandlle->_display_num
    _menu5_MsgHandlle->_display_frame_fghi
    _menu5_MsgHandlle->_display_num
    _menu4_MsgHandlle->_display_num
    _menu3_MsgHandlle->_display_num
    _display_frame_de->_setYX_LCD
    _menu0_MsgHandlle->_display_frame_fghi
    _menu0_MsgHandlle->_display_num
    _display_num->_setYX_LCD
    _display_frame_fghi->_setYX_LCD
    _display_frame_abc->_setYX_LCD
    _display_drops->_setYX_LCD
    _display_drop->_setYX_LCD
    _display_cmode->_setYX_LCD
    _setYX_LCD->_ee_WriteBytes
    _KEY_Scan->_delay_nms
    _buzz->_delay_nms
    _Initial_LY096BG30->_ee_WriteBytes

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0 1913995
                     _HG_device_init
                       _HG_interface
                          _c_routine
                       _check_acting
                          _check_bat
                  _check_device_idle
                  _check_shut_device
                     _check_ui_blink
                    _check_ui_status
                      _drops_routine
                        _enter_sleep
                           _hg_reset
               _initial_para_setting
                       _test_routine
 ---------------------------------------------------------------------------------
 (1) _test_routine                                         4     4      0    1600
                                              8 BANK1      4     4      0
                             ___wmul
                          _delay_pwm
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              18    16      2     176
                                              1 BANK0      2     0      2
                                              0 BANK1      3     3      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _initial_para_setting                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hg_reset                                             0     0      0    2880
                           _delaynus
 ---------------------------------------------------------------------------------
 (1) _enter_sleep                                          1     1      0  441626
                                             17 BANK1      1     1      0
                  _check_wake_button
                           _delaynus
 ---------------------------------------------------------------------------------
 (2) _check_wake_button                                    0     0      0  438703
                             _LCD_On
                               _buzz
                         _config_LCD
                          _delay_nms
                 _initial_ui_setting
 ---------------------------------------------------------------------------------
 (3) _initial_ui_setting                                   1     1      0  418407
                                             16 BANK1      1     1      0
                       _clear_screen
                           _delaynus
                        _display_bat
                      _display_cmode
                  _display_frame_abc
                   _display_frame_de
                 _display_frame_fghi
                       _display_logo
                        _display_mem
                        _display_num
 ---------------------------------------------------------------------------------
 (4) _display_mem                                          5     3      2   44058
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_logo                                         4     4      0   43697
                                              9 BANK1      4     4      0
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _clear_screen                                         2     2      0   43635
                                              9 BANK1      2     2      0
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (3) _config_LCD                                           0     0      0   19008
                      _ee_WriteBytes
 ---------------------------------------------------------------------------------
 (3) _LCD_On                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drops_routine                                        4     4      0    3564
                                              4 BANK1      4     4      0
                               _buzz
                           _delaynus
 ---------------------------------------------------------------------------------
 (1) _check_ui_status                                      0     0      0  329707
                      _display_cmode
                       _display_drop
                      _display_drops
                  _display_frame_abc
                   _display_frame_de
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (1) _check_ui_blink                                       0     0      0  280595
                         _blink_mode
 ---------------------------------------------------------------------------------
 (2) _blink_mode                                           0     0      0  280595
              _display_blank_mode_pa
                      _display_cmode
                       _display_drop
                      _display_drops
                    _display_n_blank
                        _display_num
 ---------------------------------------------------------------------------------
 (3) _display_n_blank                                      5     3      2   45565
                                              9 BANK1      5     3      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (3) _display_blank_mode_pa                                5     3      2   44058
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (1) _check_shut_device                                    0     0      0   20792
                               _buzz
                          _delay_nms
                          _delay_pwm
                        _shut_device
 ---------------------------------------------------------------------------------
 (1) _check_device_idle                                    0     0      0   19652
                          _delay_nms
                        _shut_device
 ---------------------------------------------------------------------------------
 (2) _shut_device                                          0     0      0   19008
                            _LCD_Off
                      _ee_WriteBytes
 ---------------------------------------------------------------------------------
 (1) _check_bat                                            0     0      0   88384
                        _display_bat
                  _display_bat_blank
 ---------------------------------------------------------------------------------
 (2) _display_bat_blank                                    7     5      2   44058
                                              9 BANK1      6     4      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_bat                                          7     5      2   44326
                                              9 BANK1      6     4      2
                      _ee_WriteBytes
                       _get_AD_vaule
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (5) _get_AD_vaule                                        10     8      2     114
                                              0 BANK0      2     0      2
                                              0 BANK1      8     8      0
 ---------------------------------------------------------------------------------
 (1) _check_acting                                         0     0      0    3524
                               _buzz
                           _delaynus
 ---------------------------------------------------------------------------------
 (1) _c_routine                                            2     2      0    4307
                                              8 BANK1      2     2      0
                             ___wmul
                          _delay_pwm
                           _delaynus
 ---------------------------------------------------------------------------------
 (2) _delay_pwm                                            4     0      4     496
                                              4 BANK1      4     0      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     848
                                              0 BANK0      2     2      0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _HG_interface                                         1     1      0  697989
                                             17 BANK1      1     1      0
                           _KEY_Scan
                   _menu0_MsgHandlle
                   _menu1_MsgHandlle
                   _menu2_MsgHandlle
                   _menu3_MsgHandlle
                   _menu4_MsgHandlle
                   _menu5_MsgHandlle
                   _menu6_MsgHandlle
                       _update_focus
 ---------------------------------------------------------------------------------
 (2) _update_focus                                         3     3      0     136
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _menu6_MsgHandlle                                     1     1      0  102761
                                             16 BANK1      1     1      0
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (2) _menu5_MsgHandlle                                     1     1      0  102761
                                             16 BANK1      1     1      0
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (2) _menu4_MsgHandlle                                     1     1      0  102138
                                             16 BANK1      1     1      0
                   _display_frame_de
                        _display_num
 ---------------------------------------------------------------------------------
 (2) _menu3_MsgHandlle                                     1     1      0  102138
                                             16 BANK1      1     1      0
                   _display_frame_de
                        _display_num
 ---------------------------------------------------------------------------------
 (4) _display_frame_de                                     5     3      2   46235
                                              9 BANK1      5     3      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (2) _menu2_MsgHandlle                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _menu1_MsgHandlle                                     1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _menu0_MsgHandlle                                     1     1      0  283503
                                             16 BANK1      1     1      0
                      _display_cmode
                       _display_drop
                      _display_drops
                  _display_frame_abc
                 _display_frame_fghi
                        _display_num
 ---------------------------------------------------------------------------------
 (4) _display_num                                          7     5      2   55872
                                              9 BANK1      7     5      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_frame_fghi                                   7     5      2   46858
                                              9 BANK1      7     5      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_frame_abc                                    5     3      2   45642
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (2) _display_drops                                        5     3      2   44982
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (2) _display_drop                                         5     3      2   44982
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (4) _display_cmode                                        5     3      2   45136
                                              9 BANK1      4     2      2
                      _ee_WriteBytes
                          _setYX_LCD
 ---------------------------------------------------------------------------------
 (5) _setYX_LCD                                            2     1      1   24460
                                              2 BANK0      1     0      1
                                              8 BANK1      1     1      0
                      _ee_WriteBytes
 ---------------------------------------------------------------------------------
 (2) _KEY_Scan                                             2     2      0    4205
                                              4 BANK1      2     2      0
                               _buzz
                          _delay_nms
                           _delaynus
 ---------------------------------------------------------------------------------
 (2) _delaynus                                             2     0      2    2880
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (3) _buzz                                                 0     0      0     644
                          _delay_nms
 ---------------------------------------------------------------------------------
 (3) _delay_nms                                            6     2      4     644
                                              0 BANK0      2     2      0
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _HG_device_init                                       0     0      0   19375
                            _AD_init
                           _BeepInit
                  _Initial_LY096BG30
                           _KEY_Init
                            _LCD_Off
                 _LCD_backlight_init
                     _MotorDriveInit
                         _Timer1Init
                          _TimerInit
                          _init_menu
                          _uart_init
 ---------------------------------------------------------------------------------
 (2) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_menu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TimerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Timer1Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _MotorDriveInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight_init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _LCD_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KEY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _Initial_LY096BG30                                    0     0      0   19375
                              _delay
                      _ee_WriteBytes
                        _i2c_CfgGpio
 ---------------------------------------------------------------------------------
 (3) _i2c_CfgGpio                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ee_WriteBytes                                       10     5      5   19008
                                              0 BANK1      8     3      5
                       _i2c_SendByte
                          _i2c_Start
                           _i2c_Stop
                        _i2c_WaitAck
 ---------------------------------------------------------------------------------
 (7) _i2c_WaitAck                                          1     1      0      37
                                              0 BANK0      1     1      0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (7) _i2c_Stop                                             0     0      0       0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (7) _i2c_Start                                            0     0      0       0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (7) _i2c_SendByte                                         2     2      0     133
                                              0 BANK0      2     2      0
                          _i2c_Delay
 ---------------------------------------------------------------------------------
 (8) _i2c_Delay                                            4     4      0       0
 ---------------------------------------------------------------------------------
 (3) _delay                                                6     4      2     367
                                              0 BANK0      2     0      2
                                              0 BANK1      4     4      0
 ---------------------------------------------------------------------------------
 (2) _BeepInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (9) _ISR                                                 15    15      0      72
                                              9 COMRAM    14    14      0
                _get_SenseA_AD_vaule
 ---------------------------------------------------------------------------------
 (10) _get_SenseA_AD_vaule                                 9     7      2      72
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _HG_device_init
     _AD_init
     _BeepInit
     _Initial_LY096BG30
       _delay
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _i2c_CfgGpio
     _KEY_Init
     _LCD_Off
     _LCD_backlight_init
     _MotorDriveInit
     _Timer1Init
     _TimerInit
     _init_menu
     _uart_init
   _HG_interface
     _KEY_Scan
       _buzz
         _delay_nms
       _delay_nms
       _delaynus
     _menu0_MsgHandlle
       _display_cmode
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drop
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drops
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_frame_abc
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_frame_fghi
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu1_MsgHandlle
     _menu2_MsgHandlle
     _menu3_MsgHandlle
       _display_frame_de
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu4_MsgHandlle
       _display_frame_de
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu5_MsgHandlle
       _display_frame_fghi
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _menu6_MsgHandlle
       _display_frame_fghi
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
     _update_focus
   _c_routine
     ___wmul
     _delay_pwm
       ___wmul (ARG)
     _delaynus
   _check_acting
     _buzz
       _delay_nms
     _delaynus
   _check_bat
     _display_bat
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _get_AD_vaule
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_bat_blank
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
   _check_device_idle
     _delay_nms
     _shut_device
       _LCD_Off
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
   _check_shut_device
     _buzz
       _delay_nms
     _delay_nms
     _delay_pwm
       ___wmul (ARG)
     _shut_device
       _LCD_Off
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
   _check_ui_blink
     _blink_mode
       _display_blank_mode_pa
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_cmode
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drop
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_drops
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_n_blank
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
       _display_num
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
         _setYX_LCD
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
   _check_ui_status
     _display_cmode
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_drop
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_drops
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_frame_abc
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_frame_de
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_frame_fghi
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
     _display_num
       _ee_WriteBytes
         _i2c_SendByte
           _i2c_Delay
         _i2c_Start
           _i2c_Delay
         _i2c_Stop
           _i2c_Delay
         _i2c_WaitAck
           _i2c_Delay
       _setYX_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
   _drops_routine
     _buzz
       _delay_nms
     _delaynus
   _enter_sleep
     _check_wake_button
       _LCD_On
       _buzz
         _delay_nms
       _config_LCD
         _ee_WriteBytes
           _i2c_SendByte
             _i2c_Delay
           _i2c_Start
             _i2c_Delay
           _i2c_Stop
             _i2c_Delay
           _i2c_WaitAck
             _i2c_Delay
       _delay_nms
       _initial_ui_setting
         _clear_screen
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _delaynus
         _display_bat
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _get_AD_vaule
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_cmode
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_frame_abc
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_frame_de
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_frame_fghi
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_logo
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_mem
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
         _display_num
           _ee_WriteBytes
             _i2c_SendByte
               _i2c_Delay
             _i2c_Start
               _i2c_Delay
             _i2c_Stop
               _i2c_Delay
             _i2c_WaitAck
               _i2c_Delay
           _setYX_LCD
             _ee_WriteBytes
               _i2c_SendByte
                 _i2c_Delay
               _i2c_Start
                 _i2c_Delay
               _i2c_Stop
                 _i2c_Delay
               _i2c_WaitAck
                 _i2c_Delay
     _delaynus
   _hg_reset
     _delaynus
   _initial_para_setting
   _test_routine
     ___wmul
     _delay_pwm
       ___wmul (ARG)
     _printf
       _putch

 _ISR (ROOT)
   _get_SenseA_AD_vaule

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     12      3A       7       22.7%
BITBANK0            80      0       0       4        0.0%
BANK0               80      3      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     17      69       1       83.3%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     323      15        0.0%
DATA                 0      0     323       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Wed Dec 16 00:34:55 2020

           menu4_MsgHandlle@key 0138                    _update_focus 462E                   ??_i2c_CfgGpio 00FD  
    __end_of_LCD_backlight_init 4EB0                    ?_display_bat 0131                    ?_display_mem 0131  
              _menu3_MsgHandlle 2A90                              l43 4E58                              l94 4232  
                  ?_display_num 0131                              _bv 00D7                              _cv 00F5  
                            _dv 00F3                              _ms 0069                              _ss 00E4  
           ___wmul@multiplicand 012A                     __CFG_BORV$0 000000            __end_of_check_acting 4804  
                  __CFG_CP0$OFF 000000     _flag_do_reset_in_drops_mode 00E5                    __CFG_CP1$OFF 000000  
                  __CFG_CP2$OFF 000000                    __CFG_CP3$OFF 000000                     __CFG_OSC$HS 000000  
                           l101 425C                             l103 4250                             l108 427A  
                           l311 33BC                             l401 163E                             l306 32F4  
                           l420 1732                             l324 341C                             l316 33C8  
                           l308 335C                             l406 166E                             l327 3438  
                           l432 176A                             l417 1750                             l522 3090  
                           l515 306C                             l371 1588                             l603 25DA  
                           l700 4C4A                             l188 43D8                             l437 1806  
                           l702 4C54                             l518 3076                             l622 47F8  
                           l446 17A8                             l366 156C                             l471 2F0A  
                           l560 2492                             l552 2432                             l449 17B2  
                           l385 15DA                             l545 240E                             l538 2408  
                           l571 2530                             l563 249C                             l492 2F90  
                           l572 252A                             l548 2418                             l661 4AAE  
                           l485 2F6C                             l581 2540                             l398 1634  
                           l903 0EEE                             l488 2F76                             l737 45D4  
                           l585 255A                             l498 2FF4                             l578 2536  
                           l499 2FEE                             l940 4C14                             l596 25B6  
                           l677 4D02                             l678 4CE8                             l919 1034  
                           l599 25C0                   ?_display_drop 0131                             _GIE 007F97  
                  __CFG_CPB$OFF 000000                   ?_display_logo 0051                    __CFG_CPD$OFF 000000  
                           _ISR 0008                             _PSA 007EAB                             _c_m 759E  
                           _css 00E3                             _tva 00CD                             _tvb 00CB  
                           _tss 75FA                             _xtt 00CF                             wreg 000FE8  
                 ??_i2c_WaitAck 00FD                    __CFG_LVP$OFF 000000                 __end_of_AD_init 4E40  
               __end_of_LCD_Off 4EB4                            ?_ISR 0051         __end_of_display_n_blank 09E6  
                  __CFG_WDT$OFF 000000                            l1136 0202                            l1219 1418  
                          l1173 04A0                            l1558 209A                            l1930 1CE0  
                          l1922 1C62          __end_of_HG_device_init 4D76                            l1881 4420  
                          l1946 1E30                            l1938 1D60                            l1884 4428  
                          l1897 4470                  ?_display_cmode 0131                            STR_1 7FF0  
                _check_ui_blink 4E40                            _T0IE 007F95                            _T0IF 007F92  
                          _T0CS 007EAD                  ?_display_drops 0131                _menu4_MsgHandlle 2626  
                          _TMR0 000FD6                            _TMR1 000FCE            _initial_para_setting 4976  
                          _flag 00E0                            _flip 004E                            _main 4346  
                          _page 00E1                            _menu 0001                            _buzz 4DFC  
                          _rcnt 00E2                            fsr0h 000FEA                            fsr1h 000FE2  
                          indf0 000FEF                            fsr2h 000FDA                            fsr0l 000FE9  
                          fsr1l 000FE1                            fsr2l 000FD9                            _tv_s 0100  
                          btemp 006A                            _ttte 00DD                    ?_enter_sleep 0051  
                          prodh 000FF4                            prodl 000FF3                  ??_i2c_SendByte 00FD  
                          start 000E                   __CFG_IESO$OFF 000000                   __CFG_MCLRE$ON 000000  
                  ___param_bank 000000                           ??_ISR 005A             _test_mode_break_cnt 0114  
               __end_of_n_100_m 7C69                 __end_of_n_200_m 7C30                 __end_of_n_300_m 7BBE  
               __end_of_n_150_m 7BF7                 __end_of_n_250_m 7B85                _menu5_MsgHandlle 30CA  
               __end_of_n_1P5_m 7E6A                 __end_of_n_2P5_m 7E31                 __end_of_bat00_m 7FF0  
               __end_of_bat20_m 7FC2                 __end_of_bat40_m 7F94                 __end_of_bat60_m 7F66  
                         l12011 02BE                           l11213 4C56                           l12101 046C  
                         l12005 029A                 __end_of_bat80_m 7F38                           l11207 4C40  
                         l12111 04A6                           l12031 0322                           l12023 02E8  
                         l11305 4A7E                           l11321 4DCA                           l12201 12BE  
                         l11401 0FE0                           l12113 04AA                           l12105 0474  
                         l11243 4D8C                           l11315 4AA2                           l11307 4A88  
                         l11331 0E0A                           l12123 04DC                           l12051 0388  
                         l12035 0330                           l12019 02E0                           l13021 4202  
                         l12301 14C2                           l12205 12CC                           l11413 104C  
                         l11341 0E32                           l11333 0E12                           l11325 0DF2  
                         l12141 052A                           l12133 0510                           l13101 34DA  
                         l12223 1340                           l11431 10AC                           l11351 0E5A  
                         l11343 0E3A                           l11335 0E1A                           l11327 0DFA  
                         l12135 0514                           l12127 04E4                           l12119 04CE  
                         l12055 0390                           l12047 037A                           l12039 0338  
                         l12063 03D2                           l11503 21E0                           l13017 41EE  
                         l12241 1396                           l12233 137C                           l12209 12D4  
                         l12217 1328                           l12161 11C4                           l11417 1054  
                         l11353 0E62                           l11345 0E42                           l11337 0E22  
                         l11329 0E02                           l12081 041A                           l12073 03F2  
                         l11521 222C                           l11513 2216                           l13113 3532  
                         l12313 4532                           l12235 1380                           l12251 13C4  
                         l12227 1348                           l12155 11AC                           l11451 1122  
                         l11435 10BE                           l11355 0E6A                           l11347 0E4A  
                         l11339 0E2A                           l12139 0522                           l12147 0538  
                         l12091 043A                           l14003 0CCC                           l12411 05CE  
                         l12403 0594                           l12323 4556                           l11611 3896  
                         l13037 422E                           l11701 3EE0                           l12245 13A0  
                         l12173 1202                           l12157 11B4                           l12165 11CE  
                         l11381 0F6A                           l11365 0F06                           l11349 0E52  
                         l12085 0428                           l12069 03EA                           l14013 0CF4  
                         l14021 0D1C                           l11533 2284                           l11517 2224  
                         l11509 2200                           l13133 35A4                           l13125 358E  
                         l13117 353A                           l13109 3524                           l12309 4528  
                         l12255 13D2                           l12239 138E                           l12159 11BC  
                         l12167 11EA                           l11455 1134                           l11439 10C6  
                         l11359 0E74                           l13303 1EB4                           l12087 0430  
                         l12079 0416                           l14031 0D44                           l12431 0634  
                         l12415 05DC                           l12335 480A                           l12319 454C  
                         l11631 38F6                           l11623 38E0                           l11615 389E  
                         l11607 3888                           l13065 4286                           l11721 3F38  
                         l11705 3EEE                           l11801 2DC2                           l12281 145C  
                         l12265 141E                           l12273 1446                           l12193 126A  
                         l12185 1254                           l12177 120A                           l11393 0FC6  
                         l11385 0F72                           l11377 0F58                           l11369 0F0E  
                         l13401 2090                           l13313 1EDC                           l12097 045E  
                         l14009 0CE0                           l11553 22F6                           l11545 22E0  
                         l11537 228C                           l11529 2276                           l13153 360C  
                         l13145 35F6                           l13129 359C                           l12345 482E  
                         l12329 45A8                           l12371 4BBC                           l11811 2DE2  
                         l12267 1422                           l12259 13DA                           l11459 113C  
                         l13331 1F40                           l13323 1F10                           l13307 1ECC  
                         l14027 0D30                           l11491 21A0                           l12611 099A  
                         l12603 0984                           l12531 081A                           l12515 07CA  
                         l12435 063C                           l12427 0626                           l12419 05E4  
                         l12443 067E                           l12507 07A8                           l12355 485E  
                         l12339 4814                           l11651 394E                           l11643 3938  
                         l11627 38EE                           l12381 4BDA                           l11725 3F46  
                         l11709 3EF6                           l11805 2DD0                           l11821 2E12  
                         l12293 14AC                           l12277 1454                           l12189 1262  
                         l11397 0FD8                           l13405 209E                           l13341 1F5A  
                         l13333 1F46                           l13309 1ED2                           l14045 0D82  
                         l14061 0DC8                           l11573 235E                           l11565 2348  
                         l11549 22EE                           l11485 2180                           l13149 3604  
                         l13093 34C4                           l12453 069E                           l15005 1E24  
                         l12349 4838                           l13077 4CC0                           l11743 3F98  
                         l12711 3B4E                           l12703 3B38                           l11815 2DEE  
                         l11751 2CD6                           l12295 14B4                           l12287 149A  
                         l13431 2136                           l13351 1F9A                           l13327 1F2A  
                         l13511 2ABA                           l14047 0D94                           l14039 0D6C  
                         l13167 3668                           l15103 4784                           l12607 0992  
                         l12551 087A                           l12543 0864                           l12535 0822  
                         l12527 080C                           l12519 07D2                           l12471 06F4  
                         l14303 1A66                           l14231 18C4                           l14215 1868  
                         l14223 189E                           l11647 3946                           l11591 3838  
                         l13079 4CC8                           l12369 4BB2                           l11729 3F4E  
                         l11673 3E46                           l12801 3D16                           l11825 2E20  
                         l12289 149E                           l13425 2118                           l13361 1FC2  
                         l11913 00F2                           l11905 00DC                           l11921 0134  
                         l13601 2C6A                           l13521 2AF2                           l14049 0D9A  
                         l14057 0DC2                           l14081 4684                           l14073 4670  
                         l14065 463E                           l11569 2356                           l11497 21C0  
                         l13097 34D2                           l12641 3A08                           l12633 39CE  
                         l12625 39B8                           l12449 0696                           l14313 1A8A  
                         l14305 1A6C                           l14241 1902                           l14209 1844  
                         l15009 1E46                           l11665 3998                           l12379 4BD4  
                         l12723 3B96                           l12707 3B46                           l11843 2E6C  
                         l11771 2D2E                           l11763 2D18                           l11755 2CDE  
                         l11747 2CC8                           l13419 20FE                           l13371 1FF6  
                         l13355 1FB2                           l13347 1F82                           l13435 213C  
                         l13451 4A42                           l11931 0154                           l13531 2B30  
                         l13507 2AAE                           l14083 4688                           l14091 4698  
                         l11587 23BA                           l12547 0872                           l12491 0754  
                         l12475 06FC                           l12467 06E6                           l14331 1AFA  
                         l14315 1A9E                           l14219 1882                           l11595 3846  
                         l14411 4486                           l11693 3E9E                           l11685 3E88  
                         l11677 3E4E                           l11669 3E38                           l12821 3D76  
                         l12813 3D60                           l12805 3D1E                           l11853 2E8C  
                         l11837 2E58                           l11829 2E28                           l13381 202C  
                         l13357 1FB8                           l13293 1E74                           l13285 1E5E  
                         l11909 00EA                           l13613 2C9C                           l13525 2B0E  
                         l13621 262C                           l14077 4676                           l14069 4648  
                         l12661 3A6E                           l12645 3A16                           l12629 39C6  
                         l12565 08D4                           l14325 1ACC                           l14253 1944  
                         l14237 18E8                           l14245 191E                           l15141 43C6  
                         l15133 43AC                           l15125 4390                           l12743 3BF6  
                         l12735 3BE0                           l12727 3B9E                           l12719 3B88  
                         l11847 2E7A                           l11783 2D7E                           l11767 2D26  
                         l13375 2010                           l13447 4A3C                           l13439 4A26  
                         l11943 018A                           l11927 014C                           l13543 2B52  
                         l13711 27D0                           l14087 4694                           l15063 47C6  
                         l12591 093A                           l12583 0924                           l12559 08BC  
                         l12495 075C                           l12487 0746                           l12399 058C  
                         l14327 1AE0                           l14319 1AB8                           l14263 1982  
                         l11599 384E                           l14175 433E                           l15119 437E  
                         l11689 3E96                           l12841 3DCE                           l12833 3DB8  
                         l12817 3D6E                           l11857 2E98                           l11865 2EBC  
                         l13385 203E                           l13465 4A5E                           l13481 49F0  
                         l11945 0192                           l11937 0178                           l11881 004A  
                         l13561 2BC2                           l13553 2B8A                           l13529 2B2A  
                         l13617 2CA2                           l13633 2650                           l13801 31E0  
                         l15065 47CC                           l15049 471A                           l12681 3AC6  
                         l12665 3A76                           l12657 3A60                           l12649 3A1E  
                         l12569 08DC                           l14337 1B10                           l14281 19E8  
                         l14601 16EE                           l14521 151E                           l14441 3394  
                         l14417 32CC                           l15129 439E                           l12763 3C4E  
                         l12755 3C38                           l12739 3BEE                           l11795 2DAE  
                         l11787 2D86                           l11779 2D70                           l13379 2026  
                         l13299 1E9C                           l13459 4A58                           l11971 020C  
                         l11963 01D6                           l11939 017C                           l11955 01C0  
                         l13571 2BE6                           l13563 2BC8                           l13539 2B46  
                         l13723 280C                           l13651 26BC                           l13643 2688  
                         l13811 3214                           l15075 47E4                           l15083 47FC  
                         l12587 0932                           l14339 1B24                           l14275 19C4  
                         l14259 1968                           l14267 199E                           l14523 1530  
                         l15147 43DC                           l15155 43EC                           l12837 3DC6  
                         l12781 3CB8                           l13397 2084                           l13477 49EA  
                         l13469 49D4                           l11981 023E                           l11949 019C  
                         l11893 0092                           l11877 0042        __end_of_display_frame_de 055C  
                         l13557 2BA6                           l13661 26D8                           l13653 26C2  
                         l13629 2644                           l13805 31FC                           l12685 3ACE  
                         l12677 3AB8                           l14285 1A02                           l14605 1706  
                         l14533 155C                           l14445 33A8                           l14429 334C  
                         l14437 3380                           l12855 3E18                           l12759 3C46  
                         l13495 4A0C                           l11991 0272                           l11959 01CE  
                         l13567 2BDA                           l13735 2846                           l13647 26A4  
                         l13815 3220                           l13807 3202                           l13751 30E8  
                         l13743 30D0                           l13911 0B0A                           l13903 0ADE  
                         l14703 2F80                           l14623 177E                           l14615 174C  
                         l14607 171A                           l14527 153E                           l12863 3688  
                         l14375 4430                           l12785 3CC6                           l12777 3C98  
                         l13489 4A06                           l11993 0276                           l11985 0246  
                         l11969 0208                           l11977 0230                           l11897 009A  
                         l11889 0084                           l13665 26E4                           l14297 1A3A  
                         l14289 1A1E                           l14553 15C4                           l14529 1550  
                         l12873 36A6                           l14457 33E8                           l13587 2C34  
                         l13499 2A96                           l13683 2750                           l13675 271C  
                         l13739 284C                           l13827 325C                           l13755 30F4  
                         l13915 0B24                           l14707 2FA4                           l12699 3B18  
                         l14299 1A4E                           l14643 17F8                           l14635 17BC  
                         l14627 1782                           l14619 1756                           l14547 15A0  
                         l14571 1616                           l12867 3692                           l14379 444C  
                         l14811 24A6                           l12797 3D08                           l12789 3CCE  
                         l11997 0284                           l13589 2C3C                           l13693 2774  
                         l13685 2756                           l13837 3280                           l13829 3264  
                         l13845 32A0                           l13773 3164                           l13765 312C  
                         l13925 0B40                           l13917 0B2A                           l13909 0AF4  
                         l13861 0A04                           l13853 09EC                           l14717 2FCE  
                         l14549 15B8                           l14565 1602                           l14477 3458  
                         l14821 250A                           l11999 028C                           l13679 2738  
                         l13783 3180                           l13775 316A                           l13951 0BB8  
                         l13943 0B8E                           l14727 3006                           l14671 2EF8  
                         l14903 1BC4                           l13689 2768                           l13769 3148  
                         l13849 32A6                           l13961 0BE8                           l13937 0B66  
                         l13929 0B4C                           l13873 0A2A                           l13865 0A10  
                         l14913 1BEA                           l14593 1650                           l14833 254A  
                         l13787 318C                           l13963 0BFE                           l13955 0BD4  
                         l13939 0B78                           l13891 0A98                           l13875 0A3C  
                         l14755 30BC                           l14747 3080                           l14691 2F5A  
                         l14675 2F1C                           l14931 1C56                           l13797 31C4  
                         l13981 0C66                           l13973 0C30                           l13949 0BA2  
                         l13885 0A66                           l14917 1BF6                           l14909 1BDE  
                         l14853 260A                           l14845 25CA                           l14781 23F6  
                         l13975 0C46                           l13967 0C1A                           l13887 0A7C  
                         l13879 0A52                           l14687 2F50                           l14927 1C4A  
                         l14935 1C78                           l14599 1696                           l14855 2612  
                         l13985 0C78                           l13897 0AAC                           l14881 4C2A  
                         l14945 1CCA                           l14953 1CF6                           l13979 0C60  
                         l13899 0AC2                           l14963 1D48                           l14971 1D76  
                         l14787 2422                           l13997 0CA0                           l13989 0C84  
                         l14949 1CD6                           l14797 2478                           l13999 0CB4  
                         l14967 1D54                           l14895 1B90                           l14985 1DFA  
                         l14987 1DFE                           l14995 1E0A                           l14979 1DC8  
                         l14899 1BAC                           l14989 1E06                  ??_display_drop 0100  
                ??_display_logo 0131                           ?_main 0051                           ?_buzz 0051  
           menu6_MsgHandlle@key 0138                           u13400 4B4E                           u13407 4B44  
                         u13425 4602                           _T0PS0 007EA8                           _T0PS1 007EA9  
                         _T0PS2 007EAA                           u15560 421A                           u19280 476C  
                         u18820 1C1C                           u18750 1B64                           u18920 1D1C  
              __end_of_KEY_Init 4DC0                           u18870 1C9E                           u18970 1D9C  
              __end_of_KEY_Scan 428A                           i2l743 487E                           _SPBRG 000FAF  
                         _PORTC 000F82                   __CFG_WDTPS$64 000000                           _TXREG 000FAD  
           __end_of_i2c_CfgGpio 4E88                   __CFG_PWRT$OFF 000000                 __end_of_blank_m 75FA  
          __end_of_get_AD_vaule 462E                   __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000  
                 __CFG_WRT2$OFF 000000                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
          __end_of_clear_screen 4864                  __CFG_EBTR3$OFF 000000                 _check_ui_status 1B3E  
                _action_btn_cnt 00D1                   __CFG_WRTB$OFF 000000                           _n_0_m 7EA3  
                 __CFG_WRTC$OFF 000000                           _n_1_m 7E6A                           _n_2_m 7DBF  
                         _n_3_m 7D86                           _n_4_m 7D4D                   __CFG_WRTD$OFF 000000  
                         _n_5_m 7CDB                           _n_6_m 7D14          __end_of_check_ui_blink 4E50  
                __CFG_EBTRB$OFF 000000                           _delay 4BA6                           _hg_op 0080  
               __end_of_drops_m 759E                           _mbcnt 00C9                           _focus 004F  
                         _mem_m 7514                           _n_x_m 004B                           _old_c 00DE  
                         _tflag 00F8                           _tmcnt 011C                           _putch 4E50  
    __end_of_display_frame_fghi 14E6                 ?_HG_device_init 0051                  __CFG_BOREN$OFF 000000  
              _menu6_MsgHandlle 09E6                    display_bat@x 0131                    display_bat@y 0051  
                         pclath 000FFA                           tablat 000FF5           ?_initial_para_setting 0051  
              __end_of_BeepInit 4EA8                    display_mem@x 0131                    display_mem@y 0051  
           __end_of_i2c_WaitAck 4DA0                    display_num@x 0131                    display_num@y 0136  
                         status 000FD8                  ee_WriteBytes@m 012D                   i2c_SendByte@i 00FE  
             _check_device_idle 4722                 __initialization 4490                    __end_of_main 43FA  
            ?_check_device_idle 0051                    __end_of_buzz 4E18                __end_of_i2c_Stop 4E94  
                 i2c_WaitAck@re 00FD        __end_of_menu0_MsgHandlle 2154                _menu7_MsgHandlle 000000  
           i2c_SendByte@_ucByte 00FD                 update_focus@key 00FE          __size_of_drops_routine 0338  
     display_blank_mode_pa@mode 0132             _get_SenseA_AD_vaule 4864                          ??_main 0100  
     display_blank_mode_pa@temp 0134                          ??_buzz 00FF       display_blank_mode_pa@tori 0133  
           ??_check_device_idle 00FF                   __activetblptr 000002          display_frame_fghi@mode 0132  
                     ??_AD_init 00FD                       ??_LCD_Off 00FD          display_frame_fghi@temp 0137  
        display_frame_fghi@tori 0135                __end_of_bat100_m 7F0A                 ??_display_cmode 0100  
               ?_check_ui_blink 0051                          ?_delay 00FD                 ??_display_drops 0100  
                        _ADCON1 000FC1              __size_of_i2c_Delay 0002                          _ADRESH 000FC4  
                        _ADRESL 000FC3         ??_display_blank_mode_pa 0100                          _T08BIT 007EAE  
              ?_display_n_blank 0131                          ?_putch 0051        __end_of_menu1_MsgHandlle 4A72  
            __size_of_i2c_Start 0016                          _LCD_On 4EA8                          i2l1340 28AC  
                        i2l1405 2A54                          i2l1352 28E0                          i2l1346 28CE  
                        i2l1371 2946                          i2l1339 29A6                          i2l1365 2924  
                        i2l1359 290A                          i2l1377 2958            ?_get_SenseA_AD_vaule 0051  
     __end_of_check_device_idle 4798                  get_AD_vaule@hv 012E                  get_AD_vaule@lv 012F  
                get_AD_vaule@rv 012C                  get_AD_vaule@ts 012B            test_routine@cnt_push 0132  
              __end_of_delaynus 4DDE                  _MotorDriveInit 4D18                  __CFG_XINST$OFF 000000  
                    _Timer1Init 4E6C                __end_of_hg_reset 34AE                          _n_10_m 7CA2  
                        _n_13_m 7C69     check_ui_status@cnt_ui_check 0041           __size_of_check_acting 006C  
          _flag_test_mode_break 00D9                          ___wmul 4C7C                          _cnt_ma 00C1  
                        _cnt_mb 00BD        __end_of_menu2_MsgHandlle 4A20                          _drop_m 7542  
                   _i2c_CfgGpio 4E7A                          delay@i 0128                          delay@j 012A  
                        delay@x 00FD                          clear_0 44D0                          clear_1 44E4  
                        clear_2 44F6                          clear_3 4502                          clear_4 450E  
                        _msleep 00B9         __end_of_check_ui_status 1E58                          _printf 4CB2  
              __end_of_logo_eme 790C                          _tv_cnt 00DF            __size_of_display_bat 0278  
          __size_of_display_mem 0180            __size_of_display_num 03BA              __size_of_TimerInit 001E  
                  __pdataCOMRAM 0068            __end_of_i2c_SendByte 4C7C                    __mediumconst 7384  
                        tblptrh 000FF7                          tblptrl 000FF6                   display_drop@x 0131  
                 display_drop@y 0051                          tblptru 000FF8                     _i2c_WaitAck 4D76  
                        putch@c 00FD          ??_initial_para_setting 00FD        __end_of_menu3_MsgHandlle 2CBA  
         ??_get_SenseA_AD_vaule 0053                   _drops_routine 14E6                      __accesstop 0080  
       __end_of__initialization 4514                    _check_acting 4798                 __CFG_PBADEN$OFF 000000  
          __end_of_display_drop 3E2A          __end_of_MotorDriveInit 4D48            __end_of_display_logo 45AE  
                 ___rparam_used 000001               check_bat@bat_flip 0068                    ?_shut_device 0051  
                     ?_KEY_Init 0051                       ?_KEY_Scan 0051            __size_of_enter_sleep 0096  
                __pcstackCOMRAM 0051                   __end_of_n_0_m 7EDC                   __end_of_n_1_m 7EA3  
                 __end_of_n_2_m 7DF8                   __end_of_n_3_m 7DBF                    __pidataBANK0 4E94  
                 __end_of_n_4_m 7D86                   __end_of_n_5_m 7D14                   __end_of_n_6_m 7D4D  
                 __end_of_delay 4BF0               __end_of_i2c_Delay 4EB8              __size_of_check_bat 0046  
                 __end_of_mem_m 7542      __end_of_initial_ui_setting 382A        __end_of_menu4_MsgHandlle 2864  
                 __end_of_putch 4E5E               __end_of_i2c_Start 4E2E           __size_of_get_AD_vaule 0080  
            __size_of_c_routine 01FC              __size_of_delay_nms 0052              __size_of_delay_pwm 0032  
         __size_of_clear_screen 0060                   update_focus@i 00FF                       ?_BeepInit 0051  
            display_bat_blank@x 0131              display_bat_blank@y 0051               _prev_state_phb_ma 00F0  
        __size_of_ee_WriteBytes 004C              _LCD_backlight_init 4EAC                         ??_delay 00FF  
              _flag_go_to_sleep 00FB               _Initial_LY096BG30 4AC4                     ISR@tcnt_bat 00C7  
                       ??_putch 00FD                      __pbssBANK0 0080                      __pbssBANK1 0100  
                    __pbssBANK2 0200                      __pbssBANK3 0300                  ?_drops_routine 0051  
                       ?_LCD_On 0051        __end_of_menu5_MsgHandlle 32BE                       ?_i2c_Stop 0051  
            ?_Initial_LY096BG30 0051           display_bat_blank@mode 0132           display_bat_blank@temp 0136  
         display_bat_blank@tori 0135                   ?_HG_interface 0051             ?_LCD_backlight_init 0051  
    __size_of_check_device_idle 0076                 ?_MotorDriveInit 0051               __end_of_TimerInit 4DFC  
            __size_of_init_menu 010E                     setYX_LCD@px 00FF                     setYX_LCD@py 0130  
                    ??_KEY_Init 00FD             ??_Initial_LY096BG30 00FF                      ??_KEY_Scan 00FF  
                   ?_Timer1Init 0051                    _get_AD_vaule 45AE                         ISR@tcnt 00DC  
                  _clear_screen 4804              __size_of_setYX_LCD 005A                         ?___wmul 0128  
                    _blink_mode 181E        __end_of_menu6_MsgHandlle 0DE0                      _flag_blink 0050  
          ??_LCD_backlight_init 00FD                         ?_printf 00FE                ?_check_ui_status 0051  
             ?_display_frame_de 0131                      ??_BeepInit 00FD              __size_of_uart_init 000E  
                       i2l11101 2A3C                         i2l11013 28EC                         i2l11031 2930  
                       i2l11007 28D6                         i2l11105 2A46                         i2l11009 28E4  
                       i2l11107 2A48                         i2l11043 294E                         i2l11027 2912  
                       i2l11061 298E                         i2l11045 295C                         i2l11029 2928  
                       _AD_init 4E2E                         i2l11047 2964                         i2l11081 29E8  
                       i2l11065 29A0                         i2l11057 297E                         i2l11091 2A1C  
                       i2l11085 2A08                         i2l11097 2A2E                         i2l11089 2A1A  
                       _LCD_Off 4EB0                         i2l10993 28B0           get_SenseA_AD_vaule@hv 0058  
         get_SenseA_AD_vaule@lv 0059           get_SenseA_AD_vaule@rv 0056                      _config_LCD 40B8  
            ??_display_frame_de 0100                ??_HG_device_init 00FF       __end_of_Initial_LY096BG30 4B10  
             _check_wake_button 428A                       ?_delaynus 00FD                       ?_hg_reset 0051  
            ?_check_wake_button 0051                 enter_sleep@temp 0139               __end_of_check_bat 4C36  
           menu1_MsgHandlle@key 00FD                      ??_i2c_Stop 00FD                  ??_HG_interface 0100  
               __size_of_LCD_On 0004               __end_of_c_routine 30CA               __end_of_delay_nms 4AC4  
             __end_of_delay_pwm 4D18             ??_check_wake_button 0100                         __Hparam 0000  
                 _ee_WriteBytes 4B10                      _needle_len 00F7                         _n_100_m 7C30  
                       _n_200_m 7BF7                         _n_300_m 7B85                         _n_150_m 7BBE  
                       _n_250_m 7B4C                         __Lparam 0000                         _n_1P5_m 7E31  
                       _n_2P5_m 7DF8              _display_frame_fghi 119A                         _bat00_m 7FC2  
                       _bat20_m 7F94                         _bat40_m 7F66                         _bat60_m 7F38  
                       _bat80_m 7F0A                    _flag_wake_up 00FA               __end_of_n_blank_m 74DE  
               __size_of___wmul 0036                 __CFG_STVREN$OFF 000000               ?_menu0_MsgHandlle 0051  
                       _bat_x_m 0049                         _bat_vol 0047                         __pcinit 4490  
         __size_of_i2c_SendByte 0046                         _blank_m 75CC                         __ramtop 0600  
           ?_display_frame_fghi 0131                         __ptext0 4346                         __ptext1 23CC  
                       __ptext2 4CB2                         _flag_tv 00F9                         __ptext3 4E50  
                       __ptext4 4976                         __ptext5 32BE                         __ptext6 43FA  
                       __ptext7 428A                         __ptext8 367A                         __ptext9 382A  
               __size_of_printf 0034                         _cnta_mb 00D5                         _cntb_mb 00D3  
                     _T0CONbits 000FD5              ??_menu0_MsgHandlle 0100                ??_check_ui_blink 0100  
                  __size_of_ISR 2A88                       _T1CONbits 000FCD       __end_of_check_wake_button 4346  
                       _drops_m 7570               _check_shut_device 46AC               __end_of_init_menu 40B8  
                    ??_delaynus 00FF              ?_check_shut_device 0051                 clear_screen@col 0131  
           __size_of_Timer1Init 000E                 ??_drops_routine 012C                      ??_hg_reset 00FF  
             __end_of_setYX_LCD 4976           __size_of_display_drop 0180           __size_of_display_logo 008C  
                __pintcode_body 2864            end_of_initialization 4514              display_frame_abc@x 0131  
            display_frame_abc@y 0051                      delay_nms@i 00FD                      delay_nms@n 0128  
        display_blank_mode_pa@x 0131          display_blank_mode_pa@y 0051                      delay_pwm@n 012C  
__size_of_display_blank_mode_pa 0180               ?_menu1_MsgHandlle 0051   __end_of_display_blank_mode_pa 3B2A  
          ??_display_frame_fghi 0133             ??_check_shut_device 00FF                   __Lmediumconst 7384  
                       int_func 2864              ??_menu1_MsgHandlle 00FD                       i2u1316_40 29F8  
                     i2u1271_45 48A2                  ?_ee_WriteBytes 0128               __end_of_uart_init 4E6C  
                display_cmode@x 0131                  display_cmode@y 0051             menu3_MsgHandlle@key 0138  
                  _i2c_SendByte 4C36                  display_drops@x 0131                  display_drops@y 0051  
          __size_of_shut_device 004A                       _RCSTAbits 000FAB                         printf@c 012A  
                       printf@f 00FE                         postdec1 000FE5                         postinc0 000FEE  
                       postinc2 000FDE                     ?_blink_mode 0051                    ?_i2c_CfgGpio 0051  
             ?_menu2_MsgHandlle 0051                       _PORTAbits 000F80       __end_of_check_shut_device 4722  
                     _PORTBbits 000F81                       _PORTCbits 000F82                       _PORTDbits 000F83  
                    _ptna_frame 74DE              ??_menu2_MsgHandlle 00FD                    _display_drop 3CAA  
                    _ptnd_frame 7415                    _display_logo 4522                      _ptne_frame 7385  
                    _ptnf_frame 7ABC                      _ptng_frame 7A2C                     ?_config_LCD 0051  
                    _ptnh_frame 799C                      _ptni_frame 790C      __size_of_Initial_LY096BG30 004C  
                     _TRISAbits 000F92                       _TRISBbits 000F93                       _TRISCbits 000F94  
                     _TRISDbits 000F95                       _TRISEbits 000F96                    ?_i2c_WaitAck 0051  
                 ?_test_routine 0051           __end_of_display_cmode 3FAA           __end_of_display_drops 3CAA  
                    _ptnx_frame 0045               ?_menu3_MsgHandlle 0051                  __end_of_LCD_On 4EAC  
                     _TXSTAbits 000FAC              ??_menu3_MsgHandlle 0100        __size_of_display_n_blank 048A  
                 ?_update_focus 0051               __size_of_KEY_Init 0020               __size_of_KEY_Scan 00C6  
                __end_of_n_10_m 7CDB                  __end_of_n_13_m 7CA2                   ??_display_bat 0133  
                 ??_display_mem 0100                   ??_display_num 0133             menu5_MsgHandlle@key 0138  
                __end_of___wmul 4CB2                   __pidataCOMRAM 4EB4               ?_menu4_MsgHandlle 0051  
          __end_of_HG_interface 491C                  __end_of_drop_m 7570                       _i2c_Delay 4EB6  
         display_frame_abc@mode 0132           display_frame_abc@temp 0134              ??_menu4_MsgHandlle 0100  
         display_frame_abc@tori 0133      __size_of_check_wake_button 00BC                  __end_of_printf 4CE6  
                     _i2c_Start 4E18             start_initialization 4490               __size_of_BeepInit 000A  
                   __end_of_ISR 2A90     __end_of_get_SenseA_AD_vaule 48C2                     __end_of_c_m 75CC  
                ??_test_routine 0130                     __end_of_tss 75FC              _initial_ui_setting 367A  
           initial_ui_setting@i 0138                ??_MotorDriveInit 00FD                        ??_LCD_On 00FD  
           __size_of_blink_mode 0320               ?_menu5_MsgHandlle 0051   __size_of_initial_para_setting 0058  
                _flag_inject_sa 00EA                  _flag_inject_sb 00E9                 ??_ee_WriteBytes 00FF  
                 ??_enter_sleep 0100             ?_initial_ui_setting 0051               __size_of_i2c_Stop 000C  
            ??_menu5_MsgHandlle 0100                    ??_Timer1Init 00FD                  ??_update_focus 00FD  
           __size_of_config_LCD 010C                       _TimerInit 4DDE                        ??___wmul 00FD  
                   __pdataBANK0 00F3                __CFG_LPT1OSC$OFF 000000               ?_menu6_MsgHandlle 0051  
                      ??_printf 0100      __size_of_check_shut_device 0076            ??_initial_ui_setting 0100  
                    ?_i2c_Delay 0051              ??_menu6_MsgHandlle 0100                        ?_AD_init 0051  
                      ?_LCD_Off 0051                      ?_i2c_Start 0051             __end_of_display_bat 23CC  
           __end_of_display_mem 39AA             __end_of_display_num 119A                     __pbssCOMRAM 0001  
       ee_WriteBytes@_pWriteBuf 0128                   __pcstackBANK0 00FD                   __pcstackBANK1 0128  
            __end_of_Timer1Init 4E7A               __size_of_delaynus 001E               __size_of_hg_reset 01F0  
     __size_of_display_frame_de 054A                       _check_bat 4BF0         ee_WriteBytes@_usAddress 012A  
             _display_bat_blank 34AE                       _c_routine 2ECE                       _delay_nms 4A72  
                     _delay_pwm 4CE6               __CFG_CCP2MX$PORTC 000000              ?_display_bat_blank 0131  
                     __pintcode 0008                      ?_TimerInit 0051                   __pmediumconst 7384  
           __end_of_enter_sleep 4490                       _flag_push 00E8               ??_display_n_blank 0100  
            _flag_action_button 00E6                       _cnt_mb_sa 0124                       _cnt_mb_sb 0120  
                     _n_blank_m 74A5             ??_display_bat_blank 0133     __size_of_LCD_backlight_init 0004  
          __size_of_i2c_CfgGpio 000E               display_cmode@mode 0132               display_cmode@temp 0134  
             display_cmode@tori 0133                     _flag_action 00E7                     _flag_inject 00EB  
             _display_frame_abc 2CBA                _cur_state_phb_ma 00F1                     _flag_mreset 00FC  
      __size_of_check_ui_status 031A                  __size_of_delay 004A                       _init_menu 3FAA  
            ?_display_frame_abc 0131            __size_of_i2c_WaitAck 002A       __size_of_menu0_MsgHandlle 02FC  
                __size_of_putch 000E                  ___wmul@product 00FD                       _setYX_LCD 491C  
     __end_of_display_bat_blank 367A                        _LATAbits 000F89                        _LATCbits 000F8B  
                      _LATDbits 000F8C                        _LATEbits 000F8D               display_frame_de@x 0131  
             display_frame_de@y 0134                      ?_check_bat 0051             ??_display_frame_abc 0100  
                     delaynus@n 00FD                        _KEY_Init 4DA0                      ?_c_routine 0051  
                      _KEY_Scan 41C4                      ?_delay_nms 0128                        _PIR1bits 000F9E  
                    ?_delay_pwm 012C           __size_of_HG_interface 005A            __end_of_test_routine 2626  
                     _uart_init 4E5E               display_drops@mode 0132                       _prev_edge 00EE  
             display_drops@temp 0134               display_drops@tori 0133                    ??_blink_mode 0100  
     __size_of_menu1_MsgHandlle 0052                     _display_bat 2154                       _test_mode 00F2  
                   _display_mem 382A                     _display_num 0DE0                      _ADCON0bits 000FC2  
                    _ADCON2bits 000FC0                     ??_i2c_Delay 00FD               ___wmul@multiplier 0128  
                      _BeepInit 4E9E             ISR@tcnt_overload_ma 00C5       __end_of_display_frame_abc 2ECE  
                   ??_i2c_Start 00FD                    ??_config_LCD 00FF                __size_of_AD_init 0012  
              __size_of_LCD_Off 0004            __end_of_update_focus 46AC                       _work_mode 004D  
                    ?_init_menu 0051                       _write_buf 0200                     _INTCON2bits 000FF1  
                   _INTCON3bits 000FF0                       copy_data0 44A4       __size_of_menu2_MsgHandlle 0052  
         __end_of_drops_routine 181E            display_frame_de@mode 0132            display_frame_de@temp 0135  
                      _i2c_Stop 4E88            display_frame_de@tori 0133                   ?_check_acting 0051  
            __end_of_blink_mode 1B3E                    _HG_interface 48C2     __size_of_display_frame_fghi 034C  
                    ?_setYX_LCD 00FF         __size_of_HG_device_init 002E                   ??_shut_device 00FF  
                   _enter_sleep 43FA           _display_blank_mode_pa 39AA           drops_routine@cnt_push 012E  
                      __Hrparam 0000                        __Lrparam 0000              _flag_mreset_hit_lp 00EC  
                      _bat100_m 7EDC              __end_of_config_LCD 41C4                     ??_TimerInit 00FD  
                    ?_uart_init 0051       __size_of_menu3_MsgHandlle 022A                   _flag_power_up 00EF  
                HG_interface@kv 0139                        _delaynus 4DC0             menu0_MsgHandlle@key 0138  
                      __ptext10 4522                        __ptext11 4804                        __ptext20 46AC  
                      __ptext12 40B8                        __ptext21 4722                        __ptext13 4EA8  
                      __ptext30 4C7C                        __ptext22 4B5C                        __ptext14 14E6  
                      __ptext31 48C2                        __ptext23 4BF0                        __ptext15 1B3E  
                      __ptext40 1E58                        __ptext32 462E                        __ptext24 34AE  
                      __ptext16 4E40                        __ptext41 0DE0                        __ptext33 09E6  
                      __ptext25 2154                        __ptext17 181E                        __ptext50 4DFC  
                      __ptext42 119A                        __ptext34 30CA                        __ptext26 45AE  
                      __ptext18 055C                        __ptext51 4A72                        __ptext43 2CBA  
                      __ptext35 2626                        __ptext27 4798                        __ptext19 39AA  
                      __ptext60 4DA0                        __ptext52 4D48                        __ptext44 3B2A  
                      __ptext36 2A90                        __ptext28 2ECE                        __ptext61 4AC4  
                      __ptext53 4E5E                        __ptext45 3CAA                        __ptext37 0012  
                      __ptext29 4CE6                        __ptext70 4E9E                        __ptext62 4E7A  
                      __ptext54 3FAA                        __ptext46 3E2A                        __ptext38 49CE  
                      __ptext71 4E2E                        __ptext63 4B10                        __ptext55 4DDE  
                      __ptext47 491C                        __ptext39 4A20                        __ptext64 4D76  
                      __ptext56 4E6C                        __ptext48 41C4                        __ptext73 4864  
                      __ptext65 4E88                        __ptext57 4D18                        __ptext49 4DC0  
                      __ptext74 0000                        __ptext66 4E18                        __ptext58 4EAC  
                      __ptext67 4C36                        __ptext59 4EB0                        __ptext68 4EB6  
                      __ptext69 4BA6                        _hg_reset 32BE       __size_of_menu4_MsgHandlle 023E  
                ??_check_acting 00FF         __size_of_check_ui_blink 0010                        _cur_edge 00ED  
           display_n_blank@mode 0132                _display_frame_de 0012             display_n_blank@temp 0135  
           display_n_blank@tori 0134                   __size_of_main 00B4      __size_of_display_bat_blank 01CC  
                 __size_of_buzz 001C                        _read_buf 0300                     ??_check_bat 0100  
             ??_check_ui_status 0100                display_n_blank@x 0131                display_n_blank@y 0133  
                      _logo_eme 75FC                display_drop@mode 0132                     ??_c_routine 00FF  
                 ?_get_AD_vaule 00FD                display_drop@temp 0134                display_drop@tori 0133  
                   ??_delay_nms 00FD                     ??_delay_pwm 00FF                   ?_clear_screen 0051  
              clear_screen@page 0132                        int$flags 006A             __end_of_shut_device 4BA6  
  __end_of_initial_para_setting 49CE       __size_of_menu5_MsgHandlle 01F4                display_logo@page 0134  
        __size_of_display_cmode 0180          __size_of_display_drops 0180      __size_of_display_frame_abc 0214  
                    _INTCONbits 000FF2             display_frame_fghi@x 0131             display_frame_fghi@y 0136  
               display_bat@mode 0132                 display_bat@temp 0136                 display_bat@tori 0135  
                   ??_init_menu 00FD                _menu0_MsgHandlle 1E58                        intlevel2 0000  
     __size_of_menu6_MsgHandlle 03FA          ?_display_blank_mode_pa 0131    __size_of_get_SenseA_AD_vaule 005E  
                   ??_setYX_LCD 0100             menu2_MsgHandlle@key 00FD                   _test_mode_cnt 0118  
               _display_n_blank 055C               c_routine@cnt_push 0130           __size_of_test_routine 025A  
         __end_of_ee_WriteBytes 4B5C                  ??_get_AD_vaule 0128                 display_mem@mode 0132  
            __end_of_ptna_frame 7514                 display_mem@temp 0134                  ??_clear_screen 0100  
               display_mem@tori 0133              __end_of_ptnd_frame 74A5              __end_of_ptne_frame 7415  
            __end_of_ptnf_frame 7B4C              __end_of_ptng_frame 7ABC              __end_of_ptnh_frame 7A2C  
            __end_of_ptni_frame 799C                     ??_uart_init 00FD                        printf@ap 0128  
               display_logo@col 0133               ISR@cnt_action_btn 00DB                _menu1_MsgHandlle 4A20  
               display_num@mode 0132                 display_num@temp 0137                 display_num@tori 0135  
         __size_of_update_focus 007E     __size_of_initial_ui_setting 01B0            ee_WriteBytes@_usSize 012B  
                KEY_Scan@tm_cnt 012C                _work_mode_choice 00DA                    _test_routine 23CC  
              _menu2_MsgHandlle 49CE                   _display_cmode 3E2A                   _display_drops 3B2A  
                _HG_device_init 4D48             ee_WriteBytes@usAddr 012F                     _shut_device 4B5C  
                 ?_i2c_SendByte 0051         __size_of_MotorDriveInit 0030  
