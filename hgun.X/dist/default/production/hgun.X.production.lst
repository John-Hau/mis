

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Sun Nov 29 01:42:57 2020

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1,noexec
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    16                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    17                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    18                           	psect	text0,global,reloc=2,class=CODE,delta=1
    19                           	psect	text1,global,reloc=2,class=CODE,delta=1
    20                           	psect	text2,global,reloc=2,class=CODE,delta=1
    21                           	psect	text3,global,reloc=2,class=CODE,delta=1
    22                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    24                           	psect	text6,global,reloc=2,class=CODE,delta=1
    25                           	psect	text7,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	text11,global,reloc=2,class=CODE,delta=1
    30                           	psect	text12,global,reloc=2,class=CODE,delta=1
    31                           	psect	text13,global,reloc=2,class=CODE,delta=1
    32                           	psect	text14,global,reloc=2,class=CODE,delta=1
    33                           	psect	text15,global,reloc=2,class=CODE,delta=1
    34                           	psect	text16,global,reloc=2,class=CODE,delta=1
    35                           	psect	text17,global,reloc=2,class=CODE,delta=1
    36                           	psect	text18,global,reloc=2,class=CODE,delta=1
    37                           	psect	text19,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    46                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    47  0000                     
    48                           ; Version 1.41
    49                           ; Generated 25/01/2017 GMT
    50                           ; 
    51                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    52                           ; All rights reserved.
    53                           ; 
    54                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    55                           ; 
    56                           ; Redistribution and use in source and binary forms, with or without modification, are
    57                           ; permitted provided that the following conditions are met:
    58                           ; 
    59                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    60                           ;        conditions and the following disclaimer.
    61                           ; 
    62                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    63                           ;        of conditions and the following disclaimer in the documentation and/or other
    64                           ;        materials provided with the distribution.
    65                           ; 
    66                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    67                           ;        software without specific prior written permission.
    68                           ; 
    69                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    70                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    71                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    72                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    73                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    74                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    75                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    76                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    77                           ; 
    78                           ; 
    79                           ; Code-generator required, PIC18F4520 Definitions
    80                           ; 
    81                           ; SFR Addresses
    82  0000                     
    83 ;; Function _menu0_MsgHandlle is unused but had its address taken
    84  0000                     
    85 ;; Function _menu1_MsgHandlle is unused but had its address taken
    86  0000                     
    87 ;; Function _menu2_MsgHandlle is unused but had its address taken
    88  0000                     
    89 ;; Function _menu3_MsgHandlle is unused but had its address taken
    90  0000                     
    91 ;; Function _menu4_MsgHandlle is unused but had its address taken
    92  0000                     
    93 ;; Function _menu5_MsgHandlle is unused but had its address taken
    94  0000                     
    95 ;; Function _menu6_MsgHandlle is unused but had its address taken
    96  0000                     
    97 ;; Function _menu7_MsgHandlle is unused but had its address taken
    98  0000                     
    99                           	psect	idataCOMRAM
   100  000F28                     __pidataCOMRAM:
   101                           	opt stack 0
   102                           
   103                           ;initializer for _dv
   104  000F28  000A               	dw	10
   105                           
   106                           ;initializer for _cv
   107  000F2A  000A               	dw	10
   108                           
   109                           ;initializer for _needle_len
   110  000F2C  04                 	db	4
   111                           
   112                           ;initializer for _tflag
   113  000F2D  01                 	db	1
   114                           
   115                           ;initializer for _flag_tv
   116  000F2E  FF                 	db	255
   117                           
   118                           ;initializer for _ms
   119  000F2F  66                 	db	102
   120                           
   121                           ;initializer for _flag_wake_up
   122  000F30  01                 	db	1
   123                           
   124                           ;initializer for _flag_go_to_sleep
   125  000F31  01                 	db	1
   126                           
   127                           ;initializer for _flag_mreset
   128  000F32  01                 	db	1
   129                           
   130                           	psect	mediumconst
   131  007388                     __pmediumconst:
   132                           	opt stack 0
   133  007388  00                 	db	0
   134  007389                     _ptne_frame:
   135                           	opt stack 0
   136  007389  0F                 	db	15
   137  00738A  10                 	db	16
   138  00738B  20                 	db	32
   139  00738C  20                 	db	32
   140  00738D  20                 	db	32
   141  00738E  20                 	db	32
   142  00738F  20                 	db	32
   143  007390  20                 	db	32
   144  007391  20                 	db	32
   145  007392  20                 	db	32
   146  007393  20                 	db	32
   147  007394  20                 	db	32
   148  007395  20                 	db	32
   149  007396  20                 	db	32
   150  007397  20                 	db	32
   151  007398  20                 	db	32
   152  007399  20                 	db	32
   153  00739A  20                 	db	32
   154  00739B  20                 	db	32
   155  00739C  20                 	db	32
   156  00739D  20                 	db	32
   157  00739E  20                 	db	32
   158  00739F  20                 	db	32
   159  0073A0  20                 	db	32
   160  0073A1  20                 	db	32
   161  0073A2  20                 	db	32
   162  0073A3  20                 	db	32
   163  0073A4  20                 	db	32
   164  0073A5  20                 	db	32
   165  0073A6  20                 	db	32
   166  0073A7  20                 	db	32
   167  0073A8  20                 	db	32
   168  0073A9  20                 	db	32
   169  0073AA  20                 	db	32
   170  0073AB  20                 	db	32
   171  0073AC  20                 	db	32
   172  0073AD  20                 	db	32
   173  0073AE  20                 	db	32
   174  0073AF  20                 	db	32
   175  0073B0  20                 	db	32
   176  0073B1  20                 	db	32
   177  0073B2  20                 	db	32
   178  0073B3  2F                 	db	47
   179  0073B4  27                 	db	39
   180  0073B5  23                 	db	35
   181  0073B6  21                 	db	33
   182  0073B7  10                 	db	16
   183  0073B8  0F                 	db	15
   184  0073B9  FF                 	db	255
   185  0073BA  00                 	db	0
   186  0073BB  1F                 	db	31
   187  0073BC  08                 	db	8
   188  0073BD  04                 	db	4
   189  0073BE  08                 	db	8
   190  0073BF  1F                 	db	31
   191  0073C0  00                 	db	0
   192  0073C1  1F                 	db	31
   193  0073C2  08                 	db	8
   194  0073C3  04                 	db	4
   195  0073C4  08                 	db	8
   196  0073C5  1F                 	db	31
   197  0073C6  00                 	db	0
   198  0073C7  00                 	db	0
   199  0073C8  00                 	db	0
   200  0073C9  00                 	db	0
   201  0073CA  00                 	db	0
   202  0073CB  00                 	db	0
   203  0073CC  00                 	db	0
   204  0073CD  00                 	db	0
   205  0073CE  00                 	db	0
   206  0073CF  00                 	db	0
   207  0073D0  00                 	db	0
   208  0073D1  00                 	db	0
   209  0073D2  00                 	db	0
   210  0073D3  00                 	db	0
   211  0073D4  00                 	db	0
   212  0073D5  00                 	db	0
   213  0073D6  00                 	db	0
   214  0073D7  00                 	db	0
   215  0073D8  00                 	db	0
   216  0073D9  04                 	db	4
   217  0073DA  06                 	db	6
   218  0073DB  07                 	db	7
   219  0073DC  07                 	db	7
   220  0073DD  70                 	db	112
   221  0073DE  88                 	db	136
   222  0073DF  88                 	db	136
   223  0073E0  88                 	db	136
   224  0073E1  FF                 	db	255
   225  0073E2  00                 	db	0
   226  0073E3  00                 	db	0
   227  0073E4  00                 	db	0
   228  0073E5  00                 	db	0
   229  0073E6  00                 	db	0
   230  0073E7  00                 	db	0
   231  0073E8  FF                 	db	255
   232  0073E9  C0                 	db	192
   233  0073EA  20                 	db	32
   234  0073EB  10                 	db	16
   235  0073EC  10                 	db	16
   236  0073ED  10                 	db	16
   237  0073EE  10                 	db	16
   238  0073EF  10                 	db	16
   239  0073F0  10                 	db	16
   240  0073F1  10                 	db	16
   241  0073F2  10                 	db	16
   242  0073F3  10                 	db	16
   243  0073F4  10                 	db	16
   244  0073F5  10                 	db	16
   245  0073F6  10                 	db	16
   246  0073F7  10                 	db	16
   247  0073F8  10                 	db	16
   248  0073F9  10                 	db	16
   249  0073FA  10                 	db	16
   250  0073FB  10                 	db	16
   251  0073FC  10                 	db	16
   252  0073FD  10                 	db	16
   253  0073FE  10                 	db	16
   254  0073FF  10                 	db	16
   255  007400  10                 	db	16
   256  007401  10                 	db	16
   257  007402  10                 	db	16
   258  007403  10                 	db	16
   259  007404  10                 	db	16
   260  007405  10                 	db	16
   261  007406  10                 	db	16
   262  007407  10                 	db	16
   263  007408  10                 	db	16
   264  007409  10                 	db	16
   265  00740A  10                 	db	16
   266  00740B  10                 	db	16
   267  00740C  90                 	db	144
   268  00740D  10                 	db	16
   269  00740E  10                 	db	16
   270  00740F  10                 	db	16
   271  007410  10                 	db	16
   272  007411  D0                 	db	208
   273  007412  10                 	db	16
   274  007413  10                 	db	16
   275  007414  10                 	db	16
   276  007415  10                 	db	16
   277  007416  10                 	db	16
   278  007417  20                 	db	32
   279  007418  C0                 	db	192
   280  007419                     __end_of_ptne_frame:
   281                           	opt stack 0
   282  007419                     _ptnd_frame:
   283                           	opt stack 0
   284  007419  0F                 	db	15
   285  00741A  10                 	db	16
   286  00741B  20                 	db	32
   287  00741C  20                 	db	32
   288  00741D  20                 	db	32
   289  00741E  20                 	db	32
   290  00741F  20                 	db	32
   291  007420  20                 	db	32
   292  007421  20                 	db	32
   293  007422  20                 	db	32
   294  007423  20                 	db	32
   295  007424  20                 	db	32
   296  007425  20                 	db	32
   297  007426  20                 	db	32
   298  007427  20                 	db	32
   299  007428  20                 	db	32
   300  007429  20                 	db	32
   301  00742A  20                 	db	32
   302  00742B  20                 	db	32
   303  00742C  20                 	db	32
   304  00742D  20                 	db	32
   305  00742E  20                 	db	32
   306  00742F  20                 	db	32
   307  007430  20                 	db	32
   308  007431  20                 	db	32
   309  007432  20                 	db	32
   310  007433  20                 	db	32
   311  007434  20                 	db	32
   312  007435  20                 	db	32
   313  007436  20                 	db	32
   314  007437  20                 	db	32
   315  007438  20                 	db	32
   316  007439  20                 	db	32
   317  00743A  20                 	db	32
   318  00743B  20                 	db	32
   319  00743C  20                 	db	32
   320  00743D  20                 	db	32
   321  00743E  20                 	db	32
   322  00743F  20                 	db	32
   323  007440  20                 	db	32
   324  007441  21                 	db	33
   325  007442  23                 	db	35
   326  007443  2F                 	db	47
   327  007444  27                 	db	39
   328  007445  23                 	db	35
   329  007446  21                 	db	33
   330  007447  10                 	db	16
   331  007448  0F                 	db	15
   332  007449  FF                 	db	255
   333  00744A  00                 	db	0
   334  00744B  1F                 	db	31
   335  00744C  08                 	db	8
   336  00744D  04                 	db	4
   337  00744E  08                 	db	8
   338  00744F  1F                 	db	31
   339  007450  00                 	db	0
   340  007451  1F                 	db	31
   341  007452  08                 	db	8
   342  007453  04                 	db	4
   343  007454  08                 	db	8
   344  007455  1F                 	db	31
   345  007456  00                 	db	0
   346  007457  00                 	db	0
   347  007458  00                 	db	0
   348  007459  00                 	db	0
   349  00745A  00                 	db	0
   350  00745B  00                 	db	0
   351  00745C  00                 	db	0
   352  00745D  00                 	db	0
   353  00745E  00                 	db	0
   354  00745F  00                 	db	0
   355  007460  00                 	db	0
   356  007461  00                 	db	0
   357  007462  00                 	db	0
   358  007463  00                 	db	0
   359  007464  00                 	db	0
   360  007465  00                 	db	0
   361  007466  00                 	db	0
   362  007467  00                 	db	0
   363  007468  00                 	db	0
   364  007469  00                 	db	0
   365  00746A  00                 	db	0
   366  00746B  01                 	db	1
   367  00746C  02                 	db	2
   368  00746D  04                 	db	4
   369  00746E  08                 	db	8
   370  00746F  10                 	db	16
   371  007470  E0                 	db	224
   372  007471  E0                 	db	224
   373  007472  E0                 	db	224
   374  007473  C0                 	db	192
   375  007474  80                 	db	128
   376  007475  00                 	db	0
   377  007476  00                 	db	0
   378  007477  00                 	db	0
   379  007478  FF                 	db	255
   380  007479  C0                 	db	192
   381  00747A  20                 	db	32
   382  00747B  10                 	db	16
   383  00747C  10                 	db	16
   384  00747D  10                 	db	16
   385  00747E  10                 	db	16
   386  00747F  10                 	db	16
   387  007480  10                 	db	16
   388  007481  10                 	db	16
   389  007482  10                 	db	16
   390  007483  10                 	db	16
   391  007484  10                 	db	16
   392  007485  10                 	db	16
   393  007486  10                 	db	16
   394  007487  10                 	db	16
   395  007488  10                 	db	16
   396  007489  10                 	db	16
   397  00748A  10                 	db	16
   398  00748B  10                 	db	16
   399  00748C  10                 	db	16
   400  00748D  10                 	db	16
   401  00748E  10                 	db	16
   402  00748F  10                 	db	16
   403  007490  10                 	db	16
   404  007491  10                 	db	16
   405  007492  10                 	db	16
   406  007493  10                 	db	16
   407  007494  10                 	db	16
   408  007495  10                 	db	16
   409  007496  10                 	db	16
   410  007497  10                 	db	16
   411  007498  10                 	db	16
   412  007499  10                 	db	16
   413  00749A  10                 	db	16
   414  00749B  10                 	db	16
   415  00749C  10                 	db	16
   416  00749D  10                 	db	16
   417  00749E  10                 	db	16
   418  00749F  10                 	db	16
   419  0074A0  10                 	db	16
   420  0074A1  10                 	db	16
   421  0074A2  10                 	db	16
   422  0074A3  10                 	db	16
   423  0074A4  10                 	db	16
   424  0074A5  10                 	db	16
   425  0074A6  10                 	db	16
   426  0074A7  20                 	db	32
   427  0074A8  C0                 	db	192
   428  0074A9                     __end_of_ptnd_frame:
   429                           	opt stack 0
   430  0074A9                     _n_blank_m:
   431                           	opt stack 0
   432  0074A9  20                 	db	32
   433  0074AA  20                 	db	32
   434  0074AB  20                 	db	32
   435  0074AC  20                 	db	32
   436  0074AD  20                 	db	32
   437  0074AE  20                 	db	32
   438  0074AF  20                 	db	32
   439  0074B0  20                 	db	32
   440  0074B1  20                 	db	32
   441  0074B2  20                 	db	32
   442  0074B3  20                 	db	32
   443  0074B4  20                 	db	32
   444  0074B5  20                 	db	32
   445  0074B6  20                 	db	32
   446  0074B7  20                 	db	32
   447  0074B8  20                 	db	32
   448  0074B9  20                 	db	32
   449  0074BA  20                 	db	32
   450  0074BB  20                 	db	32
   451  0074BC  00                 	db	0
   452  0074BD  00                 	db	0
   453  0074BE  00                 	db	0
   454  0074BF  00                 	db	0
   455  0074C0  00                 	db	0
   456  0074C1  00                 	db	0
   457  0074C2  00                 	db	0
   458  0074C3  00                 	db	0
   459  0074C4  00                 	db	0
   460  0074C5  00                 	db	0
   461  0074C6  00                 	db	0
   462  0074C7  00                 	db	0
   463  0074C8  00                 	db	0
   464  0074C9  00                 	db	0
   465  0074CA  00                 	db	0
   466  0074CB  00                 	db	0
   467  0074CC  00                 	db	0
   468  0074CD  00                 	db	0
   469  0074CE  00                 	db	0
   470  0074CF  10                 	db	16
   471  0074D0  10                 	db	16
   472  0074D1  10                 	db	16
   473  0074D2  10                 	db	16
   474  0074D3  10                 	db	16
   475  0074D4  10                 	db	16
   476  0074D5  10                 	db	16
   477  0074D6  10                 	db	16
   478  0074D7  10                 	db	16
   479  0074D8  10                 	db	16
   480  0074D9  10                 	db	16
   481  0074DA  10                 	db	16
   482  0074DB  10                 	db	16
   483  0074DC  10                 	db	16
   484  0074DD  10                 	db	16
   485  0074DE  10                 	db	16
   486  0074DF  10                 	db	16
   487  0074E0  10                 	db	16
   488  0074E1  10                 	db	16
   489  0074E2                     __end_of_n_blank_m:
   490                           	opt stack 0
   491  0074E2                     _ptna_frame:
   492                           	opt stack 0
   493  0074E2  3F                 	db	63
   494  0074E3  40                 	db	64
   495  0074E4  80                 	db	128
   496  0074E5  80                 	db	128
   497  0074E6  80                 	db	128
   498  0074E7  80                 	db	128
   499  0074E8  80                 	db	128
   500  0074E9  80                 	db	128
   501  0074EA  80                 	db	128
   502  0074EB  80                 	db	128
   503  0074EC  80                 	db	128
   504  0074ED  80                 	db	128
   505  0074EE  80                 	db	128
   506  0074EF  80                 	db	128
   507  0074F0  80                 	db	128
   508  0074F1  80                 	db	128
   509  0074F2  80                 	db	128
   510  0074F3  80                 	db	128
   511  0074F4  80                 	db	128
   512  0074F5  80                 	db	128
   513  0074F6  80                 	db	128
   514  0074F7  80                 	db	128
   515  0074F8  80                 	db	128
   516  0074F9  80                 	db	128
   517  0074FA  80                 	db	128
   518  0074FB  40                 	db	64
   519  0074FC  3F                 	db	63
   520  0074FD  FC                 	db	252
   521  0074FE  02                 	db	2
   522  0074FF  01                 	db	1
   523  007500  01                 	db	1
   524  007501  01                 	db	1
   525  007502  01                 	db	1
   526  007503  01                 	db	1
   527  007504  01                 	db	1
   528  007505  01                 	db	1
   529  007506  01                 	db	1
   530  007507  01                 	db	1
   531  007508  01                 	db	1
   532  007509  01                 	db	1
   533  00750A  01                 	db	1
   534  00750B  01                 	db	1
   535  00750C  01                 	db	1
   536  00750D  01                 	db	1
   537  00750E  01                 	db	1
   538  00750F  01                 	db	1
   539  007510  01                 	db	1
   540  007511  01                 	db	1
   541  007512  01                 	db	1
   542  007513  01                 	db	1
   543  007514  01                 	db	1
   544  007515  01                 	db	1
   545  007516  02                 	db	2
   546  007517  FC                 	db	252
   547  007518                     __end_of_ptna_frame:
   548                           	opt stack 0
   549  007518                     _bat_m:
   550                           	opt stack 0
   551  007518  80                 	db	128
   552  007519  80                 	db	128
   553  00751A  80                 	db	128
   554  00751B  80                 	db	128
   555  00751C  80                 	db	128
   556  00751D  80                 	db	128
   557  00751E  80                 	db	128
   558  00751F  8F                 	db	143
   559  007520  8B                 	db	139
   560  007521  BB                 	db	187
   561  007522  A3                 	db	163
   562  007523  A3                 	db	163
   563  007524  A3                 	db	163
   564  007525  BB                 	db	187
   565  007526  8B                 	db	139
   566  007527  8F                 	db	143
   567  007528  80                 	db	128
   568  007529  80                 	db	128
   569  00752A  80                 	db	128
   570  00752B  80                 	db	128
   571  00752C  80                 	db	128
   572  00752D  80                 	db	128
   573  00752E  80                 	db	128
   574  00752F  01                 	db	1
   575  007530  01                 	db	1
   576  007531  01                 	db	1
   577  007532  01                 	db	1
   578  007533  01                 	db	1
   579  007534  01                 	db	1
   580  007535  01                 	db	1
   581  007536  FD                 	db	253
   582  007537  FD                 	db	253
   583  007538  FD                 	db	253
   584  007539  FD                 	db	253
   585  00753A  FD                 	db	253
   586  00753B  FD                 	db	253
   587  00753C  FD                 	db	253
   588  00753D  FD                 	db	253
   589  00753E  FD                 	db	253
   590  00753F  01                 	db	1
   591  007540  01                 	db	1
   592  007541  01                 	db	1
   593  007542  01                 	db	1
   594  007543  01                 	db	1
   595  007544  01                 	db	1
   596  007545  01                 	db	1
   597  007546                     __end_of_bat_m:
   598                           	opt stack 0
   599  007546                     _mem_m:
   600                           	opt stack 0
   601  007546  9F                 	db	159
   602  007547  9F                 	db	159
   603  007548  90                 	db	144
   604  007549  9F                 	db	159
   605  00754A  9F                 	db	159
   606  00754B  90                 	db	144
   607  00754C  9F                 	db	159
   608  00754D  9F                 	db	159
   609  00754E  80                 	db	128
   610  00754F  9D                 	db	157
   611  007550  95                 	db	149
   612  007551  95                 	db	149
   613  007552  9F                 	db	159
   614  007553  8E                 	db	142
   615  007554  80                 	db	128
   616  007555  BF                 	db	191
   617  007556  BF                 	db	191
   618  007557  90                 	db	144
   619  007558  88                 	db	136
   620  007559  90                 	db	144
   621  00755A  BF                 	db	191
   622  00755B  BF                 	db	191
   623  00755C  80                 	db	128
   624  00755D  01                 	db	1
   625  00755E  01                 	db	1
   626  00755F  01                 	db	1
   627  007560  01                 	db	1
   628  007561  01                 	db	1
   629  007562  51                 	db	81
   630  007563  7D                 	db	125
   631  007564  3D                 	db	61
   632  007565  01                 	db	1
   633  007566  51                 	db	81
   634  007567  7D                 	db	125
   635  007568  3D                 	db	61
   636  007569  01                 	db	1
   637  00756A  39                 	db	57
   638  00756B  7D                 	db	125
   639  00756C  45                 	db	69
   640  00756D  7D                 	db	125
   641  00756E  39                 	db	57
   642  00756F  01                 	db	1
   643  007570  01                 	db	1
   644  007571  01                 	db	1
   645  007572  01                 	db	1
   646  007573  01                 	db	1
   647  007574                     __end_of_mem_m:
   648                           	opt stack 0
   649  007574                     _drop_m:
   650                           	opt stack 0
   651  007574  80                 	db	128
   652  007575  80                 	db	128
   653  007576  80                 	db	128
   654  007577  80                 	db	128
   655  007578  80                 	db	128
   656  007579  80                 	db	128
   657  00757A  80                 	db	128
   658  00757B  81                 	db	129
   659  00757C  83                 	db	131
   660  00757D  86                 	db	134
   661  00757E  9D                 	db	157
   662  00757F  BD                 	db	189
   663  007580  9D                 	db	157
   664  007581  86                 	db	134
   665  007582  83                 	db	131
   666  007583  81                 	db	129
   667  007584  80                 	db	128
   668  007585  80                 	db	128
   669  007586  80                 	db	128
   670  007587  80                 	db	128
   671  007588  80                 	db	128
   672  007589  80                 	db	128
   673  00758A  80                 	db	128
   674  00758B  01                 	db	1
   675  00758C  01                 	db	1
   676  00758D  01                 	db	1
   677  00758E  01                 	db	1
   678  00758F  01                 	db	1
   679  007590  01                 	db	1
   680  007591  01                 	db	1
   681  007592  F1                 	db	241
   682  007593  F9                 	db	249
   683  007594  CD                 	db	205
   684  007595  B5                 	db	181
   685  007596  B5                 	db	181
   686  007597  B5                 	db	181
   687  007598  6D                 	db	109
   688  007599  F9                 	db	249
   689  00759A  F1                 	db	241
   690  00759B  01                 	db	1
   691  00759C  01                 	db	1
   692  00759D  01                 	db	1
   693  00759E  01                 	db	1
   694  00759F  01                 	db	1
   695  0075A0  01                 	db	1
   696  0075A1  01                 	db	1
   697  0075A2                     __end_of_drop_m:
   698                           	opt stack 0
   699  0075A2                     _drops_m:
   700                           	opt stack 0
   701  0075A2  80                 	db	128
   702  0075A3  83                 	db	131
   703  0075A4  8F                 	db	143
   704  0075A5  BF                 	db	191
   705  0075A6  8F                 	db	143
   706  0075A7  83                 	db	131
   707  0075A8  80                 	db	128
   708  0075A9  80                 	db	128
   709  0075AA  80                 	db	128
   710  0075AB  83                 	db	131
   711  0075AC  8F                 	db	143
   712  0075AD  BF                 	db	191
   713  0075AE  8F                 	db	143
   714  0075AF  83                 	db	131
   715  0075B0  80                 	db	128
   716  0075B1  80                 	db	128
   717  0075B2  80                 	db	128
   718  0075B3  83                 	db	131
   719  0075B4  8F                 	db	143
   720  0075B5  BF                 	db	191
   721  0075B6  8F                 	db	143
   722  0075B7  83                 	db	131
   723  0075B8  80                 	db	128
   724  0075B9  F1                 	db	241
   725  0075BA  F9                 	db	249
   726  0075BB  FD                 	db	253
   727  0075BC  FD                 	db	253
   728  0075BD  FD                 	db	253
   729  0075BE  F9                 	db	249
   730  0075BF  F1                 	db	241
   731  0075C0  01                 	db	1
   732  0075C1  F1                 	db	241
   733  0075C2  F9                 	db	249
   734  0075C3  FD                 	db	253
   735  0075C4  FD                 	db	253
   736  0075C5  FD                 	db	253
   737  0075C6  F9                 	db	249
   738  0075C7  F1                 	db	241
   739  0075C8  01                 	db	1
   740  0075C9  F1                 	db	241
   741  0075CA  F9                 	db	249
   742  0075CB  FD                 	db	253
   743  0075CC  FD                 	db	253
   744  0075CD  FD                 	db	253
   745  0075CE  F9                 	db	249
   746  0075CF  F1                 	db	241
   747  0075D0                     __end_of_drops_m:
   748                           	opt stack 0
   749  0075D0                     _c_m:
   750                           	opt stack 0
   751  0075D0  80                 	db	128
   752  0075D1  80                 	db	128
   753  0075D2  80                 	db	128
   754  0075D3  80                 	db	128
   755  0075D4  80                 	db	128
   756  0075D5  80                 	db	128
   757  0075D6  80                 	db	128
   758  0075D7  80                 	db	128
   759  0075D8  80                 	db	128
   760  0075D9  98                 	db	152
   761  0075DA  B8                 	db	184
   762  0075DB  B0                 	db	176
   763  0075DC  B0                 	db	176
   764  0075DD  B0                 	db	176
   765  0075DE  B8                 	db	184
   766  0075DF  9F                 	db	159
   767  0075E0  8F                 	db	143
   768  0075E1  80                 	db	128
   769  0075E2  80                 	db	128
   770  0075E3  80                 	db	128
   771  0075E4  80                 	db	128
   772  0075E5  80                 	db	128
   773  0075E6  80                 	db	128
   774  0075E7  01                 	db	1
   775  0075E8  01                 	db	1
   776  0075E9  01                 	db	1
   777  0075EA  01                 	db	1
   778  0075EB  01                 	db	1
   779  0075EC  01                 	db	1
   780  0075ED  01                 	db	1
   781  0075EE  01                 	db	1
   782  0075EF  01                 	db	1
   783  0075F0  19                 	db	25
   784  0075F1  1D                 	db	29
   785  0075F2  0D                 	db	13
   786  0075F3  0D                 	db	13
   787  0075F4  0D                 	db	13
   788  0075F5  1D                 	db	29
   789  0075F6  F9                 	db	249
   790  0075F7  F1                 	db	241
   791  0075F8  01                 	db	1
   792  0075F9  01                 	db	1
   793  0075FA  01                 	db	1
   794  0075FB  01                 	db	1
   795  0075FC  01                 	db	1
   796  0075FD  01                 	db	1
   797  0075FE                     __end_of_c_m:
   798                           	opt stack 0
   799  0075FE                     _blank_m:
   800                           	opt stack 0
   801  0075FE  80                 	db	128
   802  0075FF  80                 	db	128
   803  007600  80                 	db	128
   804  007601  80                 	db	128
   805  007602  80                 	db	128
   806  007603  80                 	db	128
   807  007604  80                 	db	128
   808  007605  80                 	db	128
   809  007606  80                 	db	128
   810  007607  80                 	db	128
   811  007608  80                 	db	128
   812  007609  80                 	db	128
   813  00760A  80                 	db	128
   814  00760B  80                 	db	128
   815  00760C  80                 	db	128
   816  00760D  80                 	db	128
   817  00760E  80                 	db	128
   818  00760F  80                 	db	128
   819  007610  80                 	db	128
   820  007611  80                 	db	128
   821  007612  80                 	db	128
   822  007613  80                 	db	128
   823  007614  80                 	db	128
   824  007615  01                 	db	1
   825  007616  01                 	db	1
   826  007617  01                 	db	1
   827  007618  01                 	db	1
   828  007619  01                 	db	1
   829  00761A  01                 	db	1
   830  00761B  01                 	db	1
   831  00761C  01                 	db	1
   832  00761D  01                 	db	1
   833  00761E  01                 	db	1
   834  00761F  01                 	db	1
   835  007620  01                 	db	1
   836  007621  01                 	db	1
   837  007622  01                 	db	1
   838  007623  01                 	db	1
   839  007624  01                 	db	1
   840  007625  01                 	db	1
   841  007626  01                 	db	1
   842  007627  01                 	db	1
   843  007628  01                 	db	1
   844  007629  01                 	db	1
   845  00762A  01                 	db	1
   846  00762B  01                 	db	1
   847  00762C                     __end_of_blank_m:
   848                           	opt stack 0
   849  00762C                     _dpowers:
   850                           	opt stack 0
   851  00762C  0001               	dw	1
   852  00762E  000A               	dw	10
   853  007630  0064               	dw	100
   854  007632  03E8               	dw	1000
   855  007634  2710               	dw	10000
   856  007636                     __end_of_dpowers:
   857                           	opt stack 0
   858  007636                     _logo_eme:
   859                           	opt stack 0
   860  007636  00                 	db	0
   861  007637  00                 	db	0
   862  007638  00                 	db	0
   863  007639  00                 	db	0
   864  00763A  00                 	db	0
   865  00763B  00                 	db	0
   866  00763C  00                 	db	0
   867  00763D  00                 	db	0
   868  00763E  00                 	db	0
   869  00763F  00                 	db	0
   870  007640  00                 	db	0
   871  007641  00                 	db	0
   872  007642  00                 	db	0
   873  007643  00                 	db	0
   874  007644  00                 	db	0
   875  007645  00                 	db	0
   876  007646  00                 	db	0
   877  007647  00                 	db	0
   878  007648  00                 	db	0
   879  007649  00                 	db	0
   880  00764A  00                 	db	0
   881  00764B  00                 	db	0
   882  00764C  00                 	db	0
   883  00764D  00                 	db	0
   884  00764E  00                 	db	0
   885  00764F  00                 	db	0
   886  007650  00                 	db	0
   887  007651  00                 	db	0
   888  007652  00                 	db	0
   889  007653  00                 	db	0
   890  007654  00                 	db	0
   891  007655  00                 	db	0
   892  007656  00                 	db	0
   893  007657  00                 	db	0
   894  007658  00                 	db	0
   895  007659  00                 	db	0
   896  00765A  00                 	db	0
   897  00765B  00                 	db	0
   898  00765C  00                 	db	0
   899  00765D  00                 	db	0
   900  00765E  00                 	db	0
   901  00765F  00                 	db	0
   902  007660  00                 	db	0
   903  007661  00                 	db	0
   904  007662  00                 	db	0
   905  007663  00                 	db	0
   906  007664  00                 	db	0
   907  007665  00                 	db	0
   908  007666  00                 	db	0
   909  007667  00                 	db	0
   910  007668  00                 	db	0
   911  007669  00                 	db	0
   912  00766A  00                 	db	0
   913  00766B  00                 	db	0
   914  00766C  00                 	db	0
   915  00766D  00                 	db	0
   916  00766E  00                 	db	0
   917  00766F  00                 	db	0
   918  007670  00                 	db	0
   919  007671  00                 	db	0
   920  007672  00                 	db	0
   921  007673  00                 	db	0
   922  007674  00                 	db	0
   923  007675  00                 	db	0
   924  007676  00                 	db	0
   925  007677  00                 	db	0
   926  007678  00                 	db	0
   927  007679  00                 	db	0
   928  00767A  00                 	db	0
   929  00767B  00                 	db	0
   930  00767C  00                 	db	0
   931  00767D  00                 	db	0
   932  00767E  00                 	db	0
   933  00767F  00                 	db	0
   934  007680  00                 	db	0
   935  007681  00                 	db	0
   936  007682  00                 	db	0
   937  007683  00                 	db	0
   938  007684  00                 	db	0
   939  007685  00                 	db	0
   940  007686  00                 	db	0
   941  007687  00                 	db	0
   942  007688  00                 	db	0
   943  007689  00                 	db	0
   944  00768A  00                 	db	0
   945  00768B  00                 	db	0
   946  00768C  00                 	db	0
   947  00768D  00                 	db	0
   948  00768E  00                 	db	0
   949  00768F  00                 	db	0
   950  007690  00                 	db	0
   951  007691  00                 	db	0
   952  007692  00                 	db	0
   953  007693  00                 	db	0
   954  007694  00                 	db	0
   955  007695  00                 	db	0
   956  007696  00                 	db	0
   957  007697  00                 	db	0
   958  007698  00                 	db	0
   959  007699  00                 	db	0
   960  00769A  00                 	db	0
   961  00769B  00                 	db	0
   962  00769C  00                 	db	0
   963  00769D  00                 	db	0
   964  00769E  80                 	db	128
   965  00769F  C0                 	db	192
   966  0076A0  E0                 	db	224
   967  0076A1  F0                 	db	240
   968  0076A2  F0                 	db	240
   969  0076A3  F0                 	db	240
   970  0076A4  F0                 	db	240
   971  0076A5  F0                 	db	240
   972  0076A6  F0                 	db	240
   973  0076A7  F0                 	db	240
   974  0076A8  F0                 	db	240
   975  0076A9  F0                 	db	240
   976  0076AA  F0                 	db	240
   977  0076AB  F0                 	db	240
   978  0076AC  F0                 	db	240
   979  0076AD  F0                 	db	240
   980  0076AE  F0                 	db	240
   981  0076AF  F0                 	db	240
   982  0076B0  F0                 	db	240
   983  0076B1  FF                 	db	255
   984  0076B2  FF                 	db	255
   985  0076B3  FF                 	db	255
   986  0076B4  FF                 	db	255
   987  0076B5  00                 	db	0
   988  0076B6  00                 	db	0
   989  0076B7  00                 	db	0
   990  0076B8  FF                 	db	255
   991  0076B9  FF                 	db	255
   992  0076BA  FF                 	db	255
   993  0076BB  7F                 	db	127
   994  0076BC  3F                 	db	63
   995  0076BD  0F                 	db	15
   996  0076BE  07                 	db	7
   997  0076BF  01                 	db	1
   998  0076C0  00                 	db	0
   999  0076C1  00                 	db	0
  1000  0076C2  00                 	db	0
  1001  0076C3  00                 	db	0
  1002  0076C4  00                 	db	0
  1003  0076C5  00                 	db	0
  1004  0076C6  00                 	db	0
  1005  0076C7  00                 	db	0
  1006  0076C8  00                 	db	0
  1007  0076C9  00                 	db	0
  1008  0076CA  00                 	db	0
  1009  0076CB  00                 	db	0
  1010  0076CC  00                 	db	0
  1011  0076CD  00                 	db	0
  1012  0076CE  00                 	db	0
  1013  0076CF  00                 	db	0
  1014  0076D0  00                 	db	0
  1015  0076D1  00                 	db	0
  1016  0076D2  01                 	db	1
  1017  0076D3  07                 	db	7
  1018  0076D4  0F                 	db	15
  1019  0076D5  3F                 	db	63
  1020  0076D6  7F                 	db	127
  1021  0076D7  FF                 	db	255
  1022  0076D8  FF                 	db	255
  1023  0076D9  FF                 	db	255
  1024  0076DA  00                 	db	0
  1025  0076DB  00                 	db	0
  1026  0076DC  00                 	db	0
  1027  0076DD  80                 	db	128
  1028  0076DE  C0                 	db	192
  1029  0076DF  E0                 	db	224
  1030  0076E0  F0                 	db	240
  1031  0076E1  F0                 	db	240
  1032  0076E2  F0                 	db	240
  1033  0076E3  F0                 	db	240
  1034  0076E4  F0                 	db	240
  1035  0076E5  F0                 	db	240
  1036  0076E6  F0                 	db	240
  1037  0076E7  F0                 	db	240
  1038  0076E8  F0                 	db	240
  1039  0076E9  F0                 	db	240
  1040  0076EA  F0                 	db	240
  1041  0076EB  F0                 	db	240
  1042  0076EC  F0                 	db	240
  1043  0076ED  F0                 	db	240
  1044  0076EE  F0                 	db	240
  1045  0076EF  F0                 	db	240
  1046  0076F0  FF                 	db	255
  1047  0076F1  FF                 	db	255
  1048  0076F2  FF                 	db	255
  1049  0076F3  FF                 	db	255
  1050  0076F4  00                 	db	0
  1051  0076F5  00                 	db	0
  1052  0076F6  00                 	db	0
  1053  0076F7  00                 	db	0
  1054  0076F8  00                 	db	0
  1055  0076F9  00                 	db	0
  1056  0076FA  00                 	db	0
  1057  0076FB  00                 	db	0
  1058  0076FC  00                 	db	0
  1059  0076FD  00                 	db	0
  1060  0076FE  00                 	db	0
  1061  0076FF  00                 	db	0
  1062  007700  00                 	db	0
  1063  007701  00                 	db	0
  1064  007702  00                 	db	0
  1065  007703  00                 	db	0
  1066  007704  00                 	db	0
  1067  007705  00                 	db	0
  1068  007706  00                 	db	0
  1069  007707  00                 	db	0
  1070  007708  00                 	db	0
  1071  007709  00                 	db	0
  1072  00770A  00                 	db	0
  1073  00770B  00                 	db	0
  1074  00770C  00                 	db	0
  1075  00770D  00                 	db	0
  1076  00770E  00                 	db	0
  1077  00770F  00                 	db	0
  1078  007710  00                 	db	0
  1079  007711  00                 	db	0
  1080  007712  00                 	db	0
  1081  007713  FF                 	db	255
  1082  007714  FF                 	db	255
  1083  007715  FF                 	db	255
  1084  007716  FF                 	db	255
  1085  007717  00                 	db	0
  1086  007718  00                 	db	0
  1087  007719  00                 	db	0
  1088  00771A  FF                 	db	255
  1089  00771B  FF                 	db	255
  1090  00771C  FF                 	db	255
  1091  00771D  FF                 	db	255
  1092  00771E  E0                 	db	224
  1093  00771F  E0                 	db	224
  1094  007720  F0                 	db	240
  1095  007721  F8                 	db	248
  1096  007722  FC                 	db	252
  1097  007723  3E                 	db	62
  1098  007724  1F                 	db	31
  1099  007725  07                 	db	7
  1100  007726  03                 	db	3
  1101  007727  01                 	db	1
  1102  007728  00                 	db	0
  1103  007729  00                 	db	0
  1104  00772A  00                 	db	0
  1105  00772B  00                 	db	0
  1106  00772C  00                 	db	0
  1107  00772D  00                 	db	0
  1108  00772E  01                 	db	1
  1109  00772F  03                 	db	3
  1110  007730  07                 	db	7
  1111  007731  0F                 	db	15
  1112  007732  3E                 	db	62
  1113  007733  FC                 	db	252
  1114  007734  F8                 	db	248
  1115  007735  F0                 	db	240
  1116  007736  E0                 	db	224
  1117  007737  E0                 	db	224
  1118  007738  FF                 	db	255
  1119  007739  FF                 	db	255
  1120  00773A  FF                 	db	255
  1121  00773B  FF                 	db	255
  1122  00773C  00                 	db	0
  1123  00773D  00                 	db	0
  1124  00773E  00                 	db	0
  1125  00773F  00                 	db	0
  1126  007740  00                 	db	0
  1127  007741  00                 	db	0
  1128  007742  00                 	db	0
  1129  007743  00                 	db	0
  1130  007744  00                 	db	0
  1131  007745  00                 	db	0
  1132  007746  00                 	db	0
  1133  007747  00                 	db	0
  1134  007748  00                 	db	0
  1135  007749  00                 	db	0
  1136  00774A  00                 	db	0
  1137  00774B  00                 	db	0
  1138  00774C  00                 	db	0
  1139  00774D  00                 	db	0
  1140  00774E  00                 	db	0
  1141  00774F  00                 	db	0
  1142  007750  00                 	db	0
  1143  007751  00                 	db	0
  1144  007752  FF                 	db	255
  1145  007753  FF                 	db	255
  1146  007754  FF                 	db	255
  1147  007755  FF                 	db	255
  1148  007756  00                 	db	0
  1149  007757  00                 	db	0
  1150  007758  00                 	db	0
  1151  007759  00                 	db	0
  1152  00775A  00                 	db	0
  1153  00775B  00                 	db	0
  1154  00775C  00                 	db	0
  1155  00775D  00                 	db	0
  1156  00775E  00                 	db	0
  1157  00775F  00                 	db	0
  1158  007760  00                 	db	0
  1159  007761  00                 	db	0
  1160  007762  00                 	db	0
  1161  007763  00                 	db	0
  1162  007764  00                 	db	0
  1163  007765  00                 	db	0
  1164  007766  00                 	db	0
  1165  007767  00                 	db	0
  1166  007768  00                 	db	0
  1167  007769  00                 	db	0
  1168  00776A  00                 	db	0
  1169  00776B  0F                 	db	15
  1170  00776C  0F                 	db	15
  1171  00776D  0F                 	db	15
  1172  00776E  0F                 	db	15
  1173  00776F  0F                 	db	15
  1174  007770  0F                 	db	15
  1175  007771  0F                 	db	15
  1176  007772  0F                 	db	15
  1177  007773  0F                 	db	15
  1178  007774  0F                 	db	15
  1179  007775  FF                 	db	255
  1180  007776  FF                 	db	255
  1181  007777  FF                 	db	255
  1182  007778  FF                 	db	255
  1183  007779  00                 	db	0
  1184  00777A  00                 	db	0
  1185  00777B  00                 	db	0
  1186  00777C  FF                 	db	255
  1187  00777D  FF                 	db	255
  1188  00777E  FF                 	db	255
  1189  00777F  FF                 	db	255
  1190  007780  00                 	db	0
  1191  007781  00                 	db	0
  1192  007782  00                 	db	0
  1193  007783  00                 	db	0
  1194  007784  00                 	db	0
  1195  007785  00                 	db	0
  1196  007786  00                 	db	0
  1197  007787  C0                 	db	192
  1198  007788  E0                 	db	224
  1199  007789  F0                 	db	240
  1200  00778A  78                 	db	120
  1201  00778B  3C                 	db	60
  1202  00778C  0E                 	db	14
  1203  00778D  3E                 	db	62
  1204  00778E  7C                 	db	124
  1205  00778F  F8                 	db	248
  1206  007790  F0                 	db	240
  1207  007791  E0                 	db	224
  1208  007792  C0                 	db	192
  1209  007793  00                 	db	0
  1210  007794  00                 	db	0
  1211  007795  00                 	db	0
  1212  007796  00                 	db	0
  1213  007797  00                 	db	0
  1214  007798  00                 	db	0
  1215  007799  00                 	db	0
  1216  00779A  FF                 	db	255
  1217  00779B  FF                 	db	255
  1218  00779C  FF                 	db	255
  1219  00779D  FF                 	db	255
  1220  00779E  00                 	db	0
  1221  00779F  00                 	db	0
  1222  0077A0  00                 	db	0
  1223  0077A1  00                 	db	0
  1224  0077A2  00                 	db	0
  1225  0077A3  00                 	db	0
  1226  0077A4  00                 	db	0
  1227  0077A5  00                 	db	0
  1228  0077A6  00                 	db	0
  1229  0077A7  00                 	db	0
  1230  0077A8  00                 	db	0
  1231  0077A9  00                 	db	0
  1232  0077AA  0F                 	db	15
  1233  0077AB  0F                 	db	15
  1234  0077AC  0F                 	db	15
  1235  0077AD  0F                 	db	15
  1236  0077AE  0F                 	db	15
  1237  0077AF  0F                 	db	15
  1238  0077B0  0F                 	db	15
  1239  0077B1  0F                 	db	15
  1240  0077B2  0F                 	db	15
  1241  0077B3  0F                 	db	15
  1242  0077B4  FF                 	db	255
  1243  0077B5  FF                 	db	255
  1244  0077B6  FF                 	db	255
  1245  0077B7  FF                 	db	255
  1246  0077B8  00                 	db	0
  1247  0077B9  00                 	db	0
  1248  0077BA  00                 	db	0
  1249  0077BB  00                 	db	0
  1250  0077BC  00                 	db	0
  1251  0077BD  00                 	db	0
  1252  0077BE  00                 	db	0
  1253  0077BF  00                 	db	0
  1254  0077C0  00                 	db	0
  1255  0077C1  00                 	db	0
  1256  0077C2  00                 	db	0
  1257  0077C3  00                 	db	0
  1258  0077C4  00                 	db	0
  1259  0077C5  00                 	db	0
  1260  0077C6  00                 	db	0
  1261  0077C7  00                 	db	0
  1262  0077C8  00                 	db	0
  1263  0077C9  00                 	db	0
  1264  0077CA  00                 	db	0
  1265  0077CB  00                 	db	0
  1266  0077CC  00                 	db	0
  1267  0077CD  80                 	db	128
  1268  0077CE  80                 	db	128
  1269  0077CF  80                 	db	128
  1270  0077D0  80                 	db	128
  1271  0077D1  80                 	db	128
  1272  0077D2  80                 	db	128
  1273  0077D3  80                 	db	128
  1274  0077D4  80                 	db	128
  1275  0077D5  80                 	db	128
  1276  0077D6  80                 	db	128
  1277  0077D7  FF                 	db	255
  1278  0077D8  FF                 	db	255
  1279  0077D9  FF                 	db	255
  1280  0077DA  FF                 	db	255
  1281  0077DB  00                 	db	0
  1282  0077DC  00                 	db	0
  1283  0077DD  00                 	db	0
  1284  0077DE  FF                 	db	255
  1285  0077DF  FF                 	db	255
  1286  0077E0  FF                 	db	255
  1287  0077E1  FF                 	db	255
  1288  0077E2  00                 	db	0
  1289  0077E3  00                 	db	0
  1290  0077E4  00                 	db	0
  1291  0077E5  00                 	db	0
  1292  0077E6  00                 	db	0
  1293  0077E7  00                 	db	0
  1294  0077E8  00                 	db	0
  1295  0077E9  00                 	db	0
  1296  0077EA  00                 	db	0
  1297  0077EB  00                 	db	0
  1298  0077EC  00                 	db	0
  1299  0077ED  00                 	db	0
  1300  0077EE  00                 	db	0
  1301  0077EF  00                 	db	0
  1302  0077F0  00                 	db	0
  1303  0077F1  00                 	db	0
  1304  0077F2  00                 	db	0
  1305  0077F3  00                 	db	0
  1306  0077F4  00                 	db	0
  1307  0077F5  00                 	db	0
  1308  0077F6  00                 	db	0
  1309  0077F7  00                 	db	0
  1310  0077F8  00                 	db	0
  1311  0077F9  00                 	db	0
  1312  0077FA  00                 	db	0
  1313  0077FB  00                 	db	0
  1314  0077FC  FF                 	db	255
  1315  0077FD  FF                 	db	255
  1316  0077FE  FF                 	db	255
  1317  0077FF  FF                 	db	255
  1318  007800  00                 	db	0
  1319  007801  00                 	db	0
  1320  007802  00                 	db	0
  1321  007803  00                 	db	0
  1322  007804  00                 	db	0
  1323  007805  00                 	db	0
  1324  007806  00                 	db	0
  1325  007807  00                 	db	0
  1326  007808  00                 	db	0
  1327  007809  00                 	db	0
  1328  00780A  00                 	db	0
  1329  00780B  00                 	db	0
  1330  00780C  00                 	db	0
  1331  00780D  00                 	db	0
  1332  00780E  00                 	db	0
  1333  00780F  00                 	db	0
  1334  007810  00                 	db	0
  1335  007811  00                 	db	0
  1336  007812  00                 	db	0
  1337  007813  00                 	db	0
  1338  007814  00                 	db	0
  1339  007815  00                 	db	0
  1340  007816  FF                 	db	255
  1341  007817  FF                 	db	255
  1342  007818  FF                 	db	255
  1343  007819  FF                 	db	255
  1344  00781A  00                 	db	0
  1345  00781B  00                 	db	0
  1346  00781C  00                 	db	0
  1347  00781D  00                 	db	0
  1348  00781E  00                 	db	0
  1349  00781F  00                 	db	0
  1350  007820  00                 	db	0
  1351  007821  00                 	db	0
  1352  007822  00                 	db	0
  1353  007823  00                 	db	0
  1354  007824  00                 	db	0
  1355  007825  00                 	db	0
  1356  007826  00                 	db	0
  1357  007827  00                 	db	0
  1358  007828  00                 	db	0
  1359  007829  00                 	db	0
  1360  00782A  00                 	db	0
  1361  00782B  00                 	db	0
  1362  00782C  00                 	db	0
  1363  00782D  00                 	db	0
  1364  00782E  00                 	db	0
  1365  00782F  00                 	db	0
  1366  007830  00                 	db	0
  1367  007831  00                 	db	0
  1368  007832  00                 	db	0
  1369  007833  00                 	db	0
  1370  007834  00                 	db	0
  1371  007835  00                 	db	0
  1372  007836  00                 	db	0
  1373  007837  00                 	db	0
  1374  007838  00                 	db	0
  1375  007839  FF                 	db	255
  1376  00783A  FF                 	db	255
  1377  00783B  FF                 	db	255
  1378  00783C  FF                 	db	255
  1379  00783D  00                 	db	0
  1380  00783E  00                 	db	0
  1381  00783F  00                 	db	0
  1382  007840  FF                 	db	255
  1383  007841  FF                 	db	255
  1384  007842  FF                 	db	255
  1385  007843  FF                 	db	255
  1386  007844  00                 	db	0
  1387  007845  00                 	db	0
  1388  007846  00                 	db	0
  1389  007847  00                 	db	0
  1390  007848  00                 	db	0
  1391  007849  00                 	db	0
  1392  00784A  00                 	db	0
  1393  00784B  00                 	db	0
  1394  00784C  00                 	db	0
  1395  00784D  00                 	db	0
  1396  00784E  00                 	db	0
  1397  00784F  00                 	db	0
  1398  007850  00                 	db	0
  1399  007851  00                 	db	0
  1400  007852  00                 	db	0
  1401  007853  00                 	db	0
  1402  007854  00                 	db	0
  1403  007855  00                 	db	0
  1404  007856  00                 	db	0
  1405  007857  00                 	db	0
  1406  007858  00                 	db	0
  1407  007859  00                 	db	0
  1408  00785A  00                 	db	0
  1409  00785B  00                 	db	0
  1410  00785C  00                 	db	0
  1411  00785D  00                 	db	0
  1412  00785E  FF                 	db	255
  1413  00785F  FF                 	db	255
  1414  007860  FF                 	db	255
  1415  007861  FF                 	db	255
  1416  007862  00                 	db	0
  1417  007863  00                 	db	0
  1418  007864  00                 	db	0
  1419  007865  00                 	db	0
  1420  007866  00                 	db	0
  1421  007867  00                 	db	0
  1422  007868  00                 	db	0
  1423  007869  00                 	db	0
  1424  00786A  00                 	db	0
  1425  00786B  00                 	db	0
  1426  00786C  00                 	db	0
  1427  00786D  00                 	db	0
  1428  00786E  00                 	db	0
  1429  00786F  00                 	db	0
  1430  007870  00                 	db	0
  1431  007871  00                 	db	0
  1432  007872  00                 	db	0
  1433  007873  00                 	db	0
  1434  007874  00                 	db	0
  1435  007875  00                 	db	0
  1436  007876  00                 	db	0
  1437  007877  00                 	db	0
  1438  007878  FF                 	db	255
  1439  007879  FF                 	db	255
  1440  00787A  FF                 	db	255
  1441  00787B  FF                 	db	255
  1442  00787C  00                 	db	0
  1443  00787D  00                 	db	0
  1444  00787E  00                 	db	0
  1445  00787F  00                 	db	0
  1446  007880  00                 	db	0
  1447  007881  00                 	db	0
  1448  007882  00                 	db	0
  1449  007883  00                 	db	0
  1450  007884  00                 	db	0
  1451  007885  00                 	db	0
  1452  007886  00                 	db	0
  1453  007887  00                 	db	0
  1454  007888  00                 	db	0
  1455  007889  00                 	db	0
  1456  00788A  01                 	db	1
  1457  00788B  03                 	db	3
  1458  00788C  07                 	db	7
  1459  00788D  0F                 	db	15
  1460  00788E  0F                 	db	15
  1461  00788F  0F                 	db	15
  1462  007890  0F                 	db	15
  1463  007891  0F                 	db	15
  1464  007892  0F                 	db	15
  1465  007893  0F                 	db	15
  1466  007894  0F                 	db	15
  1467  007895  0F                 	db	15
  1468  007896  0F                 	db	15
  1469  007897  0F                 	db	15
  1470  007898  0F                 	db	15
  1471  007899  0F                 	db	15
  1472  00789A  0F                 	db	15
  1473  00789B  FF                 	db	255
  1474  00789C  FF                 	db	255
  1475  00789D  FF                 	db	255
  1476  00789E  FF                 	db	255
  1477  00789F  00                 	db	0
  1478  0078A0  00                 	db	0
  1479  0078A1  00                 	db	0
  1480  0078A2  FF                 	db	255
  1481  0078A3  FF                 	db	255
  1482  0078A4  FF                 	db	255
  1483  0078A5  FF                 	db	255
  1484  0078A6  00                 	db	0
  1485  0078A7  00                 	db	0
  1486  0078A8  00                 	db	0
  1487  0078A9  00                 	db	0
  1488  0078AA  00                 	db	0
  1489  0078AB  00                 	db	0
  1490  0078AC  00                 	db	0
  1491  0078AD  00                 	db	0
  1492  0078AE  00                 	db	0
  1493  0078AF  00                 	db	0
  1494  0078B0  00                 	db	0
  1495  0078B1  00                 	db	0
  1496  0078B2  00                 	db	0
  1497  0078B3  00                 	db	0
  1498  0078B4  00                 	db	0
  1499  0078B5  00                 	db	0
  1500  0078B6  00                 	db	0
  1501  0078B7  00                 	db	0
  1502  0078B8  00                 	db	0
  1503  0078B9  00                 	db	0
  1504  0078BA  00                 	db	0
  1505  0078BB  00                 	db	0
  1506  0078BC  00                 	db	0
  1507  0078BD  00                 	db	0
  1508  0078BE  00                 	db	0
  1509  0078BF  00                 	db	0
  1510  0078C0  FF                 	db	255
  1511  0078C1  FF                 	db	255
  1512  0078C2  FF                 	db	255
  1513  0078C3  FF                 	db	255
  1514  0078C4  00                 	db	0
  1515  0078C5  00                 	db	0
  1516  0078C6  00                 	db	0
  1517  0078C7  01                 	db	1
  1518  0078C8  03                 	db	3
  1519  0078C9  07                 	db	7
  1520  0078CA  0F                 	db	15
  1521  0078CB  0F                 	db	15
  1522  0078CC  0F                 	db	15
  1523  0078CD  0F                 	db	15
  1524  0078CE  0F                 	db	15
  1525  0078CF  0F                 	db	15
  1526  0078D0  0F                 	db	15
  1527  0078D1  0F                 	db	15
  1528  0078D2  0F                 	db	15
  1529  0078D3  0F                 	db	15
  1530  0078D4  0F                 	db	15
  1531  0078D5  0F                 	db	15
  1532  0078D6  0F                 	db	15
  1533  0078D7  0F                 	db	15
  1534  0078D8  0F                 	db	15
  1535  0078D9  0F                 	db	15
  1536  0078DA  FF                 	db	255
  1537  0078DB  FF                 	db	255
  1538  0078DC  FF                 	db	255
  1539  0078DD  FF                 	db	255
  1540  0078DE  00                 	db	0
  1541  0078DF  00                 	db	0
  1542  0078E0  00                 	db	0
  1543  0078E1  00                 	db	0
  1544  0078E2  00                 	db	0
  1545  0078E3  00                 	db	0
  1546  0078E4  00                 	db	0
  1547  0078E5  00                 	db	0
  1548  0078E6  00                 	db	0
  1549  0078E7  00                 	db	0
  1550  0078E8  00                 	db	0
  1551  0078E9  00                 	db	0
  1552  0078EA  00                 	db	0
  1553  0078EB  00                 	db	0
  1554  0078EC  00                 	db	0
  1555  0078ED  00                 	db	0
  1556  0078EE  00                 	db	0
  1557  0078EF  00                 	db	0
  1558  0078F0  00                 	db	0
  1559  0078F1  00                 	db	0
  1560  0078F2  00                 	db	0
  1561  0078F3  00                 	db	0
  1562  0078F4  00                 	db	0
  1563  0078F5  00                 	db	0
  1564  0078F6  00                 	db	0
  1565  0078F7  00                 	db	0
  1566  0078F8  00                 	db	0
  1567  0078F9  00                 	db	0
  1568  0078FA  00                 	db	0
  1569  0078FB  00                 	db	0
  1570  0078FC  00                 	db	0
  1571  0078FD  00                 	db	0
  1572  0078FE  00                 	db	0
  1573  0078FF  00                 	db	0
  1574  007900  00                 	db	0
  1575  007901  00                 	db	0
  1576  007902  00                 	db	0
  1577  007903  00                 	db	0
  1578  007904  00                 	db	0
  1579  007905  00                 	db	0
  1580  007906  00                 	db	0
  1581  007907  00                 	db	0
  1582  007908  00                 	db	0
  1583  007909  00                 	db	0
  1584  00790A  00                 	db	0
  1585  00790B  00                 	db	0
  1586  00790C  00                 	db	0
  1587  00790D  00                 	db	0
  1588  00790E  00                 	db	0
  1589  00790F  00                 	db	0
  1590  007910  00                 	db	0
  1591  007911  00                 	db	0
  1592  007912  00                 	db	0
  1593  007913  00                 	db	0
  1594  007914  00                 	db	0
  1595  007915  00                 	db	0
  1596  007916  00                 	db	0
  1597  007917  00                 	db	0
  1598  007918  00                 	db	0
  1599  007919  00                 	db	0
  1600  00791A  00                 	db	0
  1601  00791B  00                 	db	0
  1602  00791C  00                 	db	0
  1603  00791D  00                 	db	0
  1604  00791E  00                 	db	0
  1605  00791F  00                 	db	0
  1606  007920  00                 	db	0
  1607  007921  00                 	db	0
  1608  007922  00                 	db	0
  1609  007923  00                 	db	0
  1610  007924  00                 	db	0
  1611  007925  00                 	db	0
  1612  007926  00                 	db	0
  1613  007927  00                 	db	0
  1614  007928  00                 	db	0
  1615  007929  00                 	db	0
  1616  00792A  00                 	db	0
  1617  00792B  00                 	db	0
  1618  00792C  00                 	db	0
  1619  00792D  00                 	db	0
  1620  00792E  00                 	db	0
  1621  00792F  00                 	db	0
  1622  007930  00                 	db	0
  1623  007931  00                 	db	0
  1624  007932  00                 	db	0
  1625  007933  00                 	db	0
  1626  007934  00                 	db	0
  1627  007935  00                 	db	0
  1628  007936  00                 	db	0
  1629  007937  00                 	db	0
  1630  007938  00                 	db	0
  1631  007939  00                 	db	0
  1632  00793A  00                 	db	0
  1633  00793B  00                 	db	0
  1634  00793C  00                 	db	0
  1635  00793D  00                 	db	0
  1636  00793E  00                 	db	0
  1637  00793F  00                 	db	0
  1638  007940  00                 	db	0
  1639  007941  00                 	db	0
  1640  007942  00                 	db	0
  1641  007943  00                 	db	0
  1642  007944  00                 	db	0
  1643  007945  00                 	db	0
  1644  007946                     __end_of_logo_eme:
  1645                           	opt stack 0
  1646  007946                     _ptni_frame:
  1647                           	opt stack 0
  1648  007946  0F                 	db	15
  1649  007947  10                 	db	16
  1650  007948  20                 	db	32
  1651  007949  20                 	db	32
  1652  00794A  20                 	db	32
  1653  00794B  20                 	db	32
  1654  00794C  20                 	db	32
  1655  00794D  20                 	db	32
  1656  00794E  20                 	db	32
  1657  00794F  20                 	db	32
  1658  007950  20                 	db	32
  1659  007951  20                 	db	32
  1660  007952  20                 	db	32
  1661  007953  20                 	db	32
  1662  007954  20                 	db	32
  1663  007955  20                 	db	32
  1664  007956  20                 	db	32
  1665  007957  20                 	db	32
  1666  007958  20                 	db	32
  1667  007959  20                 	db	32
  1668  00795A  20                 	db	32
  1669  00795B  20                 	db	32
  1670  00795C  20                 	db	32
  1671  00795D  20                 	db	32
  1672  00795E  20                 	db	32
  1673  00795F  20                 	db	32
  1674  007960  20                 	db	32
  1675  007961  20                 	db	32
  1676  007962  20                 	db	32
  1677  007963  20                 	db	32
  1678  007964  20                 	db	32
  1679  007965  20                 	db	32
  1680  007966  20                 	db	32
  1681  007967  20                 	db	32
  1682  007968  20                 	db	32
  1683  007969  20                 	db	32
  1684  00796A  24                 	db	36
  1685  00796B  27                 	db	39
  1686  00796C  24                 	db	36
  1687  00796D  24                 	db	36
  1688  00796E  24                 	db	36
  1689  00796F  24                 	db	36
  1690  007970  24                 	db	36
  1691  007971  27                 	db	39
  1692  007972  24                 	db	36
  1693  007973  20                 	db	32
  1694  007974  10                 	db	16
  1695  007975  0F                 	db	15
  1696  007976  FF                 	db	255
  1697  007977  00                 	db	0
  1698  007978  00                 	db	0
  1699  007979  00                 	db	0
  1700  00797A  00                 	db	0
  1701  00797B  13                 	db	19
  1702  00797C  24                 	db	36
  1703  00797D  24                 	db	36
  1704  00797E  24                 	db	36
  1705  00797F  19                 	db	25
  1706  007980  00                 	db	0
  1707  007981  00                 	db	0
  1708  007982  00                 	db	0
  1709  007983  00                 	db	0
  1710  007984  00                 	db	0
  1711  007985  00                 	db	0
  1712  007986  00                 	db	0
  1713  007987  00                 	db	0
  1714  007988  00                 	db	0
  1715  007989  00                 	db	0
  1716  00798A  00                 	db	0
  1717  00798B  00                 	db	0
  1718  00798C  00                 	db	0
  1719  00798D  00                 	db	0
  1720  00798E  00                 	db	0
  1721  00798F  00                 	db	0
  1722  007990  00                 	db	0
  1723  007991  00                 	db	0
  1724  007992  00                 	db	0
  1725  007993  00                 	db	0
  1726  007994  00                 	db	0
  1727  007995  00                 	db	0
  1728  007996  00                 	db	0
  1729  007997  00                 	db	0
  1730  007998  00                 	db	0
  1731  007999  00                 	db	0
  1732  00799A  00                 	db	0
  1733  00799B  07                 	db	7
  1734  00799C  8B                 	db	139
  1735  00799D  D3                 	db	211
  1736  00799E  E3                 	db	227
  1737  00799F  D3                 	db	211
  1738  0079A0  8B                 	db	139
  1739  0079A1  07                 	db	7
  1740  0079A2  00                 	db	0
  1741  0079A3  00                 	db	0
  1742  0079A4  00                 	db	0
  1743  0079A5  FF                 	db	255
  1744  0079A6  C0                 	db	192
  1745  0079A7  20                 	db	32
  1746  0079A8  10                 	db	16
  1747  0079A9  10                 	db	16
  1748  0079AA  10                 	db	16
  1749  0079AB  10                 	db	16
  1750  0079AC  90                 	db	144
  1751  0079AD  90                 	db	144
  1752  0079AE  90                 	db	144
  1753  0079AF  10                 	db	16
  1754  0079B0  10                 	db	16
  1755  0079B1  10                 	db	16
  1756  0079B2  10                 	db	16
  1757  0079B3  10                 	db	16
  1758  0079B4  10                 	db	16
  1759  0079B5  10                 	db	16
  1760  0079B6  10                 	db	16
  1761  0079B7  10                 	db	16
  1762  0079B8  10                 	db	16
  1763  0079B9  10                 	db	16
  1764  0079BA  10                 	db	16
  1765  0079BB  10                 	db	16
  1766  0079BC  10                 	db	16
  1767  0079BD  10                 	db	16
  1768  0079BE  10                 	db	16
  1769  0079BF  10                 	db	16
  1770  0079C0  10                 	db	16
  1771  0079C1  10                 	db	16
  1772  0079C2  10                 	db	16
  1773  0079C3  10                 	db	16
  1774  0079C4  10                 	db	16
  1775  0079C5  10                 	db	16
  1776  0079C6  10                 	db	16
  1777  0079C7  10                 	db	16
  1778  0079C8  10                 	db	16
  1779  0079C9  10                 	db	16
  1780  0079CA  90                 	db	144
  1781  0079CB  90                 	db	144
  1782  0079CC  90                 	db	144
  1783  0079CD  90                 	db	144
  1784  0079CE  90                 	db	144
  1785  0079CF  90                 	db	144
  1786  0079D0  90                 	db	144
  1787  0079D1  90                 	db	144
  1788  0079D2  90                 	db	144
  1789  0079D3  10                 	db	16
  1790  0079D4  20                 	db	32
  1791  0079D5  C0                 	db	192
  1792  0079D6                     __end_of_ptni_frame:
  1793                           	opt stack 0
  1794  0079D6                     _ptnh_frame:
  1795                           	opt stack 0
  1796  0079D6  0F                 	db	15
  1797  0079D7  10                 	db	16
  1798  0079D8  20                 	db	32
  1799  0079D9  25                 	db	37
  1800  0079DA  25                 	db	37
  1801  0079DB  27                 	db	39
  1802  0079DC  20                 	db	32
  1803  0079DD  27                 	db	39
  1804  0079DE  25                 	db	37
  1805  0079DF  27                 	db	39
  1806  0079E0  20                 	db	32
  1807  0079E1  24                 	db	36
  1808  0079E2  24                 	db	36
  1809  0079E3  27                 	db	39
  1810  0079E4  20                 	db	32
  1811  0079E5  20                 	db	32
  1812  0079E6  20                 	db	32
  1813  0079E7  20                 	db	32
  1814  0079E8  20                 	db	32
  1815  0079E9  20                 	db	32
  1816  0079EA  20                 	db	32
  1817  0079EB  20                 	db	32
  1818  0079EC  20                 	db	32
  1819  0079ED  20                 	db	32
  1820  0079EE  20                 	db	32
  1821  0079EF  20                 	db	32
  1822  0079F0  20                 	db	32
  1823  0079F1  20                 	db	32
  1824  0079F2  20                 	db	32
  1825  0079F3  20                 	db	32
  1826  0079F4  20                 	db	32
  1827  0079F5  20                 	db	32
  1828  0079F6  20                 	db	32
  1829  0079F7  20                 	db	32
  1830  0079F8  20                 	db	32
  1831  0079F9  20                 	db	32
  1832  0079FA  20                 	db	32
  1833  0079FB  20                 	db	32
  1834  0079FC  20                 	db	32
  1835  0079FD  26                 	db	38
  1836  0079FE  26                 	db	38
  1837  0079FF  26                 	db	38
  1838  007A00  26                 	db	38
  1839  007A01  26                 	db	38
  1840  007A02  27                 	db	39
  1841  007A03  27                 	db	39
  1842  007A04  10                 	db	16
  1843  007A05  0F                 	db	15
  1844  007A06  FF                 	db	255
  1845  007A07  00                 	db	0
  1846  007A08  10                 	db	16
  1847  007A09  D1                 	db	209
  1848  007A0A  51                 	db	81
  1849  007A0B  51                 	db	81
  1850  007A0C  10                 	db	16
  1851  007A0D  15                 	db	21
  1852  007A0E  10                 	db	16
  1853  007A0F  D7                 	db	215
  1854  007A10  12                 	db	18
  1855  007A11  51                 	db	81
  1856  007A12  52                 	db	82
  1857  007A13  D7                 	db	215
  1858  007A14  10                 	db	16
  1859  007A15  00                 	db	0
  1860  007A16  00                 	db	0
  1861  007A17  00                 	db	0
  1862  007A18  00                 	db	0
  1863  007A19  00                 	db	0
  1864  007A1A  00                 	db	0
  1865  007A1B  00                 	db	0
  1866  007A1C  00                 	db	0
  1867  007A1D  00                 	db	0
  1868  007A1E  00                 	db	0
  1869  007A1F  00                 	db	0
  1870  007A20  00                 	db	0
  1871  007A21  00                 	db	0
  1872  007A22  00                 	db	0
  1873  007A23  00                 	db	0
  1874  007A24  00                 	db	0
  1875  007A25  00                 	db	0
  1876  007A26  00                 	db	0
  1877  007A27  00                 	db	0
  1878  007A28  00                 	db	0
  1879  007A29  00                 	db	0
  1880  007A2A  00                 	db	0
  1881  007A2B  00                 	db	0
  1882  007A2C  00                 	db	0
  1883  007A2D  00                 	db	0
  1884  007A2E  60                 	db	96
  1885  007A2F  60                 	db	96
  1886  007A30  60                 	db	96
  1887  007A31  60                 	db	96
  1888  007A32  FF                 	db	255
  1889  007A33  FF                 	db	255
  1890  007A34  00                 	db	0
  1891  007A35  FF                 	db	255
  1892  007A36  C0                 	db	192
  1893  007A37  20                 	db	32
  1894  007A38  10                 	db	16
  1895  007A39  D0                 	db	208
  1896  007A3A  10                 	db	16
  1897  007A3B  D0                 	db	208
  1898  007A3C  10                 	db	16
  1899  007A3D  D0                 	db	208
  1900  007A3E  10                 	db	16
  1901  007A3F  D0                 	db	208
  1902  007A40  10                 	db	16
  1903  007A41  10                 	db	16
  1904  007A42  10                 	db	16
  1905  007A43  D0                 	db	208
  1906  007A44  10                 	db	16
  1907  007A45  10                 	db	16
  1908  007A46  10                 	db	16
  1909  007A47  10                 	db	16
  1910  007A48  10                 	db	16
  1911  007A49  10                 	db	16
  1912  007A4A  10                 	db	16
  1913  007A4B  10                 	db	16
  1914  007A4C  10                 	db	16
  1915  007A4D  10                 	db	16
  1916  007A4E  10                 	db	16
  1917  007A4F  10                 	db	16
  1918  007A50  10                 	db	16
  1919  007A51  10                 	db	16
  1920  007A52  10                 	db	16
  1921  007A53  10                 	db	16
  1922  007A54  10                 	db	16
  1923  007A55  10                 	db	16
  1924  007A56  10                 	db	16
  1925  007A57  10                 	db	16
  1926  007A58  10                 	db	16
  1927  007A59  10                 	db	16
  1928  007A5A  10                 	db	16
  1929  007A5B  10                 	db	16
  1930  007A5C  10                 	db	16
  1931  007A5D  10                 	db	16
  1932  007A5E  10                 	db	16
  1933  007A5F  10                 	db	16
  1934  007A60  10                 	db	16
  1935  007A61  10                 	db	16
  1936  007A62  90                 	db	144
  1937  007A63  90                 	db	144
  1938  007A64  20                 	db	32
  1939  007A65  C0                 	db	192
  1940  007A66                     __end_of_ptnh_frame:
  1941                           	opt stack 0
  1942  007A66                     _ptng_frame:
  1943                           	opt stack 0
  1944  007A66  0F                 	db	15
  1945  007A67  10                 	db	16
  1946  007A68  20                 	db	32
  1947  007A69  20                 	db	32
  1948  007A6A  20                 	db	32
  1949  007A6B  2F                 	db	47
  1950  007A6C  20                 	db	32
  1951  007A6D  2F                 	db	47
  1952  007A6E  24                 	db	36
  1953  007A6F  22                 	db	34
  1954  007A70  24                 	db	36
  1955  007A71  2F                 	db	47
  1956  007A72  20                 	db	32
  1957  007A73  20                 	db	32
  1958  007A74  20                 	db	32
  1959  007A75  20                 	db	32
  1960  007A76  20                 	db	32
  1961  007A77  20                 	db	32
  1962  007A78  20                 	db	32
  1963  007A79  20                 	db	32
  1964  007A7A  20                 	db	32
  1965  007A7B  20                 	db	32
  1966  007A7C  20                 	db	32
  1967  007A7D  20                 	db	32
  1968  007A7E  20                 	db	32
  1969  007A7F  20                 	db	32
  1970  007A80  20                 	db	32
  1971  007A81  20                 	db	32
  1972  007A82  20                 	db	32
  1973  007A83  20                 	db	32
  1974  007A84  20                 	db	32
  1975  007A85  20                 	db	32
  1976  007A86  20                 	db	32
  1977  007A87  20                 	db	32
  1978  007A88  20                 	db	32
  1979  007A89  20                 	db	32
  1980  007A8A  20                 	db	32
  1981  007A8B  28                 	db	40
  1982  007A8C  29                 	db	41
  1983  007A8D  2F                 	db	47
  1984  007A8E  2F                 	db	47
  1985  007A8F  29                 	db	41
  1986  007A90  28                 	db	40
  1987  007A91  20                 	db	32
  1988  007A92  21                 	db	33
  1989  007A93  23                 	db	35
  1990  007A94  10                 	db	16
  1991  007A95  0F                 	db	15
  1992  007A96  FF                 	db	255
  1993  007A97  00                 	db	0
  1994  007A98  23                 	db	35
  1995  007A99  A2                 	db	162
  1996  007A9A  A3                 	db	163
  1997  007A9B  A0                 	db	160
  1998  007A9C  2B                 	db	43
  1999  007A9D  A0                 	db	160
  2000  007A9E  2F                 	db	47
  2001  007A9F  24                 	db	36
  2002  007AA0  26                 	db	38
  2003  007AA1  A4                 	db	164
  2004  007AA2  2F                 	db	47
  2005  007AA3  00                 	db	0
  2006  007AA4  00                 	db	0
  2007  007AA5  00                 	db	0
  2008  007AA6  00                 	db	0
  2009  007AA7  00                 	db	0
  2010  007AA8  00                 	db	0
  2011  007AA9  00                 	db	0
  2012  007AAA  00                 	db	0
  2013  007AAB  00                 	db	0
  2014  007AAC  00                 	db	0
  2015  007AAD  00                 	db	0
  2016  007AAE  00                 	db	0
  2017  007AAF  00                 	db	0
  2018  007AB0  00                 	db	0
  2019  007AB1  00                 	db	0
  2020  007AB2  00                 	db	0
  2021  007AB3  00                 	db	0
  2022  007AB4  00                 	db	0
  2023  007AB5  00                 	db	0
  2024  007AB6  00                 	db	0
  2025  007AB7  00                 	db	0
  2026  007AB8  7A                 	db	122
  2027  007AB9  F9                 	db	249
  2028  007ABA  C0                 	db	192
  2029  007ABB  C0                 	db	192
  2030  007ABC  E0                 	db	224
  2031  007ABD  F0                 	db	240
  2032  007ABE  F0                 	db	240
  2033  007ABF  E0                 	db	224
  2034  007AC0  C0                 	db	192
  2035  007AC1  C0                 	db	192
  2036  007AC2  E0                 	db	224
  2037  007AC3  F0                 	db	240
  2038  007AC4  00                 	db	0
  2039  007AC5  FF                 	db	255
  2040  007AC6  C0                 	db	192
  2041  007AC7  20                 	db	32
  2042  007AC8  90                 	db	144
  2043  007AC9  10                 	db	16
  2044  007ACA  90                 	db	144
  2045  007ACB  10                 	db	16
  2046  007ACC  90                 	db	144
  2047  007ACD  10                 	db	16
  2048  007ACE  90                 	db	144
  2049  007ACF  10                 	db	16
  2050  007AD0  10                 	db	16
  2051  007AD1  10                 	db	16
  2052  007AD2  90                 	db	144
  2053  007AD3  10                 	db	16
  2054  007AD4  10                 	db	16
  2055  007AD5  10                 	db	16
  2056  007AD6  10                 	db	16
  2057  007AD7  10                 	db	16
  2058  007AD8  10                 	db	16
  2059  007AD9  10                 	db	16
  2060  007ADA  10                 	db	16
  2061  007ADB  10                 	db	16
  2062  007ADC  10                 	db	16
  2063  007ADD  10                 	db	16
  2064  007ADE  10                 	db	16
  2065  007ADF  10                 	db	16
  2066  007AE0  10                 	db	16
  2067  007AE1  10                 	db	16
  2068  007AE2  10                 	db	16
  2069  007AE3  10                 	db	16
  2070  007AE4  10                 	db	16
  2071  007AE5  10                 	db	16
  2072  007AE6  10                 	db	16
  2073  007AE7  10                 	db	16
  2074  007AE8  90                 	db	144
  2075  007AE9  10                 	db	16
  2076  007AEA  10                 	db	16
  2077  007AEB  10                 	db	16
  2078  007AEC  10                 	db	16
  2079  007AED  10                 	db	16
  2080  007AEE  10                 	db	16
  2081  007AEF  10                 	db	16
  2082  007AF0  10                 	db	16
  2083  007AF1  10                 	db	16
  2084  007AF2  10                 	db	16
  2085  007AF3  10                 	db	16
  2086  007AF4  20                 	db	32
  2087  007AF5  C0                 	db	192
  2088  007AF6                     __end_of_ptng_frame:
  2089                           	opt stack 0
  2090  007AF6                     _ptnf_frame:
  2091                           	opt stack 0
  2092  007AF6  0F                 	db	15
  2093  007AF7  10                 	db	16
  2094  007AF8  20                 	db	32
  2095  007AF9  20                 	db	32
  2096  007AFA  20                 	db	32
  2097  007AFB  20                 	db	32
  2098  007AFC  20                 	db	32
  2099  007AFD  20                 	db	32
  2100  007AFE  20                 	db	32
  2101  007AFF  20                 	db	32
  2102  007B00  20                 	db	32
  2103  007B01  20                 	db	32
  2104  007B02  20                 	db	32
  2105  007B03  20                 	db	32
  2106  007B04  20                 	db	32
  2107  007B05  20                 	db	32
  2108  007B06  20                 	db	32
  2109  007B07  20                 	db	32
  2110  007B08  20                 	db	32
  2111  007B09  20                 	db	32
  2112  007B0A  20                 	db	32
  2113  007B0B  20                 	db	32
  2114  007B0C  20                 	db	32
  2115  007B0D  20                 	db	32
  2116  007B0E  20                 	db	32
  2117  007B0F  20                 	db	32
  2118  007B10  20                 	db	32
  2119  007B11  20                 	db	32
  2120  007B12  20                 	db	32
  2121  007B13  20                 	db	32
  2122  007B14  20                 	db	32
  2123  007B15  20                 	db	32
  2124  007B16  20                 	db	32
  2125  007B17  20                 	db	32
  2126  007B18  20                 	db	32
  2127  007B19  20                 	db	32
  2128  007B1A  20                 	db	32
  2129  007B1B  20                 	db	32
  2130  007B1C  20                 	db	32
  2131  007B1D  25                 	db	37
  2132  007B1E  22                 	db	34
  2133  007B1F  21                 	db	33
  2134  007B20  2A                 	db	42
  2135  007B21  24                 	db	36
  2136  007B22  22                 	db	34
  2137  007B23  20                 	db	32
  2138  007B24  10                 	db	16
  2139  007B25  0F                 	db	15
  2140  007B26  FF                 	db	255
  2141  007B27  00                 	db	0
  2142  007B28  00                 	db	0
  2143  007B29  00                 	db	0
  2144  007B2A  01                 	db	1
  2145  007B2B  01                 	db	1
  2146  007B2C  1F                 	db	31
  2147  007B2D  00                 	db	0
  2148  007B2E  1F                 	db	31
  2149  007B2F  08                 	db	8
  2150  007B30  04                 	db	4
  2151  007B31  08                 	db	8
  2152  007B32  1F                 	db	31
  2153  007B33  00                 	db	0
  2154  007B34  00                 	db	0
  2155  007B35  00                 	db	0
  2156  007B36  00                 	db	0
  2157  007B37  00                 	db	0
  2158  007B38  00                 	db	0
  2159  007B39  00                 	db	0
  2160  007B3A  00                 	db	0
  2161  007B3B  00                 	db	0
  2162  007B3C  00                 	db	0
  2163  007B3D  00                 	db	0
  2164  007B3E  00                 	db	0
  2165  007B3F  00                 	db	0
  2166  007B40  00                 	db	0
  2167  007B41  00                 	db	0
  2168  007B42  00                 	db	0
  2169  007B43  00                 	db	0
  2170  007B44  00                 	db	0
  2171  007B45  00                 	db	0
  2172  007B46  00                 	db	0
  2173  007B47  00                 	db	0
  2174  007B48  02                 	db	2
  2175  007B49  1C                 	db	28
  2176  007B4A  24                 	db	36
  2177  007B4B  44                 	db	68
  2178  007B4C  88                 	db	136
  2179  007B4D  10                 	db	16
  2180  007B4E  20                 	db	32
  2181  007B4F  40                 	db	64
  2182  007B50  80                 	db	128
  2183  007B51  40                 	db	64
  2184  007B52  00                 	db	0
  2185  007B53  00                 	db	0
  2186  007B54  00                 	db	0
  2187  007B55  FF                 	db	255
  2188  007B56  C0                 	db	192
  2189  007B57  20                 	db	32
  2190  007B58  10                 	db	16
  2191  007B59  10                 	db	16
  2192  007B5A  10                 	db	16
  2193  007B5B  10                 	db	16
  2194  007B5C  10                 	db	16
  2195  007B5D  10                 	db	16
  2196  007B5E  10                 	db	16
  2197  007B5F  10                 	db	16
  2198  007B60  10                 	db	16
  2199  007B61  10                 	db	16
  2200  007B62  10                 	db	16
  2201  007B63  10                 	db	16
  2202  007B64  10                 	db	16
  2203  007B65  10                 	db	16
  2204  007B66  10                 	db	16
  2205  007B67  10                 	db	16
  2206  007B68  10                 	db	16
  2207  007B69  10                 	db	16
  2208  007B6A  10                 	db	16
  2209  007B6B  10                 	db	16
  2210  007B6C  10                 	db	16
  2211  007B6D  10                 	db	16
  2212  007B6E  10                 	db	16
  2213  007B6F  10                 	db	16
  2214  007B70  10                 	db	16
  2215  007B71  10                 	db	16
  2216  007B72  10                 	db	16
  2217  007B73  10                 	db	16
  2218  007B74  10                 	db	16
  2219  007B75  10                 	db	16
  2220  007B76  10                 	db	16
  2221  007B77  10                 	db	16
  2222  007B78  10                 	db	16
  2223  007B79  10                 	db	16
  2224  007B7A  10                 	db	16
  2225  007B7B  10                 	db	16
  2226  007B7C  10                 	db	16
  2227  007B7D  10                 	db	16
  2228  007B7E  10                 	db	16
  2229  007B7F  10                 	db	16
  2230  007B80  10                 	db	16
  2231  007B81  10                 	db	16
  2232  007B82  10                 	db	16
  2233  007B83  10                 	db	16
  2234  007B84  20                 	db	32
  2235  007B85  C0                 	db	192
  2236  007B86                     __end_of_ptnf_frame:
  2237                           	opt stack 0
  2238  007B86                     _n_250_m:
  2239                           	opt stack 0
  2240  007B86  23                 	db	35
  2241  007B87  27                 	db	39
  2242  007B88  26                 	db	38
  2243  007B89  27                 	db	39
  2244  007B8A  23                 	db	35
  2245  007B8B  20                 	db	32
  2246  007B8C  26                 	db	38
  2247  007B8D  26                 	db	38
  2248  007B8E  26                 	db	38
  2249  007B8F  27                 	db	39
  2250  007B90  27                 	db	39
  2251  007B91  20                 	db	32
  2252  007B92  23                 	db	35
  2253  007B93  27                 	db	39
  2254  007B94  26                 	db	38
  2255  007B95  26                 	db	38
  2256  007B96  27                 	db	39
  2257  007B97  23                 	db	35
  2258  007B98  20                 	db	32
  2259  007B99  FE                 	db	254
  2260  007B9A  FF                 	db	255
  2261  007B9B  03                 	db	3
  2262  007B9C  FF                 	db	255
  2263  007B9D  FE                 	db	254
  2264  007B9E  00                 	db	0
  2265  007B9F  3E                 	db	62
  2266  007BA0  7F                 	db	127
  2267  007BA1  63                 	db	99
  2268  007BA2  E3                 	db	227
  2269  007BA3  C3                 	db	195
  2270  007BA4  00                 	db	0
  2271  007BA5  83                 	db	131
  2272  007BA6  C3                 	db	195
  2273  007BA7  63                 	db	99
  2274  007BA8  33                 	db	51
  2275  007BA9  1F                 	db	31
  2276  007BAA  0F                 	db	15
  2277  007BAB  00                 	db	0
  2278  007BAC  10                 	db	16
  2279  007BAD  10                 	db	16
  2280  007BAE  10                 	db	16
  2281  007BAF  10                 	db	16
  2282  007BB0  10                 	db	16
  2283  007BB1  10                 	db	16
  2284  007BB2  10                 	db	16
  2285  007BB3  10                 	db	16
  2286  007BB4  10                 	db	16
  2287  007BB5  10                 	db	16
  2288  007BB6  10                 	db	16
  2289  007BB7  10                 	db	16
  2290  007BB8  10                 	db	16
  2291  007BB9  10                 	db	16
  2292  007BBA  10                 	db	16
  2293  007BBB  10                 	db	16
  2294  007BBC  10                 	db	16
  2295  007BBD  10                 	db	16
  2296  007BBE  10                 	db	16
  2297  007BBF                     __end_of_n_250_m:
  2298                           	opt stack 0
  2299  007BBF                     _n_300_m:
  2300                           	opt stack 0
  2301  007BBF  23                 	db	35
  2302  007BC0  27                 	db	39
  2303  007BC1  26                 	db	38
  2304  007BC2  27                 	db	39
  2305  007BC3  23                 	db	35
  2306  007BC4  20                 	db	32
  2307  007BC5  23                 	db	35
  2308  007BC6  27                 	db	39
  2309  007BC7  26                 	db	38
  2310  007BC8  27                 	db	39
  2311  007BC9  23                 	db	35
  2312  007BCA  20                 	db	32
  2313  007BCB  23                 	db	35
  2314  007BCC  27                 	db	39
  2315  007BCD  26                 	db	38
  2316  007BCE  26                 	db	38
  2317  007BCF  27                 	db	39
  2318  007BD0  23                 	db	35
  2319  007BD1  20                 	db	32
  2320  007BD2  FE                 	db	254
  2321  007BD3  FF                 	db	255
  2322  007BD4  03                 	db	3
  2323  007BD5  FF                 	db	255
  2324  007BD6  FE                 	db	254
  2325  007BD7  00                 	db	0
  2326  007BD8  FE                 	db	254
  2327  007BD9  FF                 	db	255
  2328  007BDA  03                 	db	3
  2329  007BDB  FF                 	db	255
  2330  007BDC  FE                 	db	254
  2331  007BDD  00                 	db	0
  2332  007BDE  DE                 	db	222
  2333  007BDF  FF                 	db	255
  2334  007BE0  63                 	db	99
  2335  007BE1  63                 	db	99
  2336  007BE2  07                 	db	7
  2337  007BE3  06                 	db	6
  2338  007BE4  00                 	db	0
  2339  007BE5  10                 	db	16
  2340  007BE6  10                 	db	16
  2341  007BE7  10                 	db	16
  2342  007BE8  10                 	db	16
  2343  007BE9  10                 	db	16
  2344  007BEA  10                 	db	16
  2345  007BEB  10                 	db	16
  2346  007BEC  10                 	db	16
  2347  007BED  10                 	db	16
  2348  007BEE  10                 	db	16
  2349  007BEF  10                 	db	16
  2350  007BF0  10                 	db	16
  2351  007BF1  10                 	db	16
  2352  007BF2  10                 	db	16
  2353  007BF3  10                 	db	16
  2354  007BF4  10                 	db	16
  2355  007BF5  10                 	db	16
  2356  007BF6  10                 	db	16
  2357  007BF7  10                 	db	16
  2358  007BF8                     __end_of_n_300_m:
  2359                           	opt stack 0
  2360  007BF8                     _n_150_m:
  2361                           	opt stack 0
  2362  007BF8  23                 	db	35
  2363  007BF9  27                 	db	39
  2364  007BFA  26                 	db	38
  2365  007BFB  27                 	db	39
  2366  007BFC  23                 	db	35
  2367  007BFD  20                 	db	32
  2368  007BFE  26                 	db	38
  2369  007BFF  26                 	db	38
  2370  007C00  26                 	db	38
  2371  007C01  27                 	db	39
  2372  007C02  27                 	db	39
  2373  007C03  20                 	db	32
  2374  007C04  20                 	db	32
  2375  007C05  27                 	db	39
  2376  007C06  27                 	db	39
  2377  007C07  23                 	db	35
  2378  007C08  20                 	db	32
  2379  007C09  20                 	db	32
  2380  007C0A  20                 	db	32
  2381  007C0B  FE                 	db	254
  2382  007C0C  FF                 	db	255
  2383  007C0D  03                 	db	3
  2384  007C0E  FF                 	db	255
  2385  007C0F  FE                 	db	254
  2386  007C10  00                 	db	0
  2387  007C11  3E                 	db	62
  2388  007C12  7F                 	db	127
  2389  007C13  63                 	db	99
  2390  007C14  E3                 	db	227
  2391  007C15  C3                 	db	195
  2392  007C16  00                 	db	0
  2393  007C17  03                 	db	3
  2394  007C18  FF                 	db	255
  2395  007C19  FF                 	db	255
  2396  007C1A  03                 	db	3
  2397  007C1B  00                 	db	0
  2398  007C1C  00                 	db	0
  2399  007C1D  00                 	db	0
  2400  007C1E  10                 	db	16
  2401  007C1F  10                 	db	16
  2402  007C20  10                 	db	16
  2403  007C21  10                 	db	16
  2404  007C22  10                 	db	16
  2405  007C23  10                 	db	16
  2406  007C24  10                 	db	16
  2407  007C25  10                 	db	16
  2408  007C26  10                 	db	16
  2409  007C27  10                 	db	16
  2410  007C28  10                 	db	16
  2411  007C29  10                 	db	16
  2412  007C2A  10                 	db	16
  2413  007C2B  10                 	db	16
  2414  007C2C  10                 	db	16
  2415  007C2D  10                 	db	16
  2416  007C2E  10                 	db	16
  2417  007C2F  10                 	db	16
  2418  007C30  10                 	db	16
  2419  007C31                     __end_of_n_150_m:
  2420                           	opt stack 0
  2421  007C31                     _n_200_m:
  2422                           	opt stack 0
  2423  007C31  23                 	db	35
  2424  007C32  27                 	db	39
  2425  007C33  26                 	db	38
  2426  007C34  27                 	db	39
  2427  007C35  23                 	db	35
  2428  007C36  20                 	db	32
  2429  007C37  23                 	db	35
  2430  007C38  27                 	db	39
  2431  007C39  26                 	db	38
  2432  007C3A  27                 	db	39
  2433  007C3B  23                 	db	35
  2434  007C3C  20                 	db	32
  2435  007C3D  23                 	db	35
  2436  007C3E  27                 	db	39
  2437  007C3F  26                 	db	38
  2438  007C40  26                 	db	38
  2439  007C41  27                 	db	39
  2440  007C42  23                 	db	35
  2441  007C43  20                 	db	32
  2442  007C44  FE                 	db	254
  2443  007C45  FF                 	db	255
  2444  007C46  03                 	db	3
  2445  007C47  FF                 	db	255
  2446  007C48  FE                 	db	254
  2447  007C49  00                 	db	0
  2448  007C4A  FE                 	db	254
  2449  007C4B  FF                 	db	255
  2450  007C4C  03                 	db	3
  2451  007C4D  FF                 	db	255
  2452  007C4E  FE                 	db	254
  2453  007C4F  00                 	db	0
  2454  007C50  83                 	db	131
  2455  007C51  C3                 	db	195
  2456  007C52  63                 	db	99
  2457  007C53  33                 	db	51
  2458  007C54  1F                 	db	31
  2459  007C55  0F                 	db	15
  2460  007C56  00                 	db	0
  2461  007C57  10                 	db	16
  2462  007C58  10                 	db	16
  2463  007C59  10                 	db	16
  2464  007C5A  10                 	db	16
  2465  007C5B  10                 	db	16
  2466  007C5C  10                 	db	16
  2467  007C5D  10                 	db	16
  2468  007C5E  10                 	db	16
  2469  007C5F  10                 	db	16
  2470  007C60  10                 	db	16
  2471  007C61  10                 	db	16
  2472  007C62  10                 	db	16
  2473  007C63  10                 	db	16
  2474  007C64  10                 	db	16
  2475  007C65  10                 	db	16
  2476  007C66  10                 	db	16
  2477  007C67  10                 	db	16
  2478  007C68  10                 	db	16
  2479  007C69  10                 	db	16
  2480  007C6A                     __end_of_n_200_m:
  2481                           	opt stack 0
  2482  007C6A                     _n_100_m:
  2483                           	opt stack 0
  2484  007C6A  23                 	db	35
  2485  007C6B  27                 	db	39
  2486  007C6C  26                 	db	38
  2487  007C6D  27                 	db	39
  2488  007C6E  23                 	db	35
  2489  007C6F  20                 	db	32
  2490  007C70  23                 	db	35
  2491  007C71  27                 	db	39
  2492  007C72  26                 	db	38
  2493  007C73  27                 	db	39
  2494  007C74  23                 	db	35
  2495  007C75  20                 	db	32
  2496  007C76  20                 	db	32
  2497  007C77  27                 	db	39
  2498  007C78  27                 	db	39
  2499  007C79  23                 	db	35
  2500  007C7A  20                 	db	32
  2501  007C7B  20                 	db	32
  2502  007C7C  20                 	db	32
  2503  007C7D  FE                 	db	254
  2504  007C7E  FF                 	db	255
  2505  007C7F  03                 	db	3
  2506  007C80  FF                 	db	255
  2507  007C81  FE                 	db	254
  2508  007C82  00                 	db	0
  2509  007C83  FE                 	db	254
  2510  007C84  FF                 	db	255
  2511  007C85  03                 	db	3
  2512  007C86  FF                 	db	255
  2513  007C87  FE                 	db	254
  2514  007C88  00                 	db	0
  2515  007C89  03                 	db	3
  2516  007C8A  FF                 	db	255
  2517  007C8B  FF                 	db	255
  2518  007C8C  03                 	db	3
  2519  007C8D  00                 	db	0
  2520  007C8E  00                 	db	0
  2521  007C8F  00                 	db	0
  2522  007C90  10                 	db	16
  2523  007C91  10                 	db	16
  2524  007C92  10                 	db	16
  2525  007C93  10                 	db	16
  2526  007C94  10                 	db	16
  2527  007C95  10                 	db	16
  2528  007C96  10                 	db	16
  2529  007C97  10                 	db	16
  2530  007C98  10                 	db	16
  2531  007C99  10                 	db	16
  2532  007C9A  10                 	db	16
  2533  007C9B  10                 	db	16
  2534  007C9C  10                 	db	16
  2535  007C9D  10                 	db	16
  2536  007C9E  10                 	db	16
  2537  007C9F  10                 	db	16
  2538  007CA0  10                 	db	16
  2539  007CA1  10                 	db	16
  2540  007CA2  10                 	db	16
  2541  007CA3                     __end_of_n_100_m:
  2542                           	opt stack 0
  2543  007CA3                     _n_13_m:
  2544                           	opt stack 0
  2545  007CA3  20                 	db	32
  2546  007CA4  20                 	db	32
  2547  007CA5  20                 	db	32
  2548  007CA6  20                 	db	32
  2549  007CA7  20                 	db	32
  2550  007CA8  20                 	db	32
  2551  007CA9  23                 	db	35
  2552  007CAA  27                 	db	39
  2553  007CAB  26                 	db	38
  2554  007CAC  26                 	db	38
  2555  007CAD  27                 	db	39
  2556  007CAE  23                 	db	35
  2557  007CAF  20                 	db	32
  2558  007CB0  20                 	db	32
  2559  007CB1  20                 	db	32
  2560  007CB2  27                 	db	39
  2561  007CB3  27                 	db	39
  2562  007CB4  23                 	db	35
  2563  007CB5  20                 	db	32
  2564  007CB6  00                 	db	0
  2565  007CB7  00                 	db	0
  2566  007CB8  00                 	db	0
  2567  007CB9  00                 	db	0
  2568  007CBA  00                 	db	0
  2569  007CBB  00                 	db	0
  2570  007CBC  DE                 	db	222
  2571  007CBD  FF                 	db	255
  2572  007CBE  63                 	db	99
  2573  007CBF  63                 	db	99
  2574  007CC0  07                 	db	7
  2575  007CC1  06                 	db	6
  2576  007CC2  00                 	db	0
  2577  007CC3  00                 	db	0
  2578  007CC4  03                 	db	3
  2579  007CC5  FF                 	db	255
  2580  007CC6  FF                 	db	255
  2581  007CC7  03                 	db	3
  2582  007CC8  00                 	db	0
  2583  007CC9  10                 	db	16
  2584  007CCA  10                 	db	16
  2585  007CCB  10                 	db	16
  2586  007CCC  10                 	db	16
  2587  007CCD  10                 	db	16
  2588  007CCE  10                 	db	16
  2589  007CCF  10                 	db	16
  2590  007CD0  10                 	db	16
  2591  007CD1  10                 	db	16
  2592  007CD2  10                 	db	16
  2593  007CD3  10                 	db	16
  2594  007CD4  10                 	db	16
  2595  007CD5  10                 	db	16
  2596  007CD6  10                 	db	16
  2597  007CD7  10                 	db	16
  2598  007CD8  10                 	db	16
  2599  007CD9  10                 	db	16
  2600  007CDA  10                 	db	16
  2601  007CDB  10                 	db	16
  2602  007CDC                     __end_of_n_13_m:
  2603                           	opt stack 0
  2604  007CDC                     _n_10_m:
  2605                           	opt stack 0
  2606  007CDC  20                 	db	32
  2607  007CDD  20                 	db	32
  2608  007CDE  20                 	db	32
  2609  007CDF  20                 	db	32
  2610  007CE0  20                 	db	32
  2611  007CE1  20                 	db	32
  2612  007CE2  20                 	db	32
  2613  007CE3  23                 	db	35
  2614  007CE4  27                 	db	39
  2615  007CE5  26                 	db	38
  2616  007CE6  26                 	db	38
  2617  007CE7  27                 	db	39
  2618  007CE8  23                 	db	35
  2619  007CE9  20                 	db	32
  2620  007CEA  20                 	db	32
  2621  007CEB  27                 	db	39
  2622  007CEC  27                 	db	39
  2623  007CED  23                 	db	35
  2624  007CEE  20                 	db	32
  2625  007CEF  00                 	db	0
  2626  007CF0  00                 	db	0
  2627  007CF1  00                 	db	0
  2628  007CF2  00                 	db	0
  2629  007CF3  00                 	db	0
  2630  007CF4  00                 	db	0
  2631  007CF5  00                 	db	0
  2632  007CF6  FE                 	db	254
  2633  007CF7  FF                 	db	255
  2634  007CF8  03                 	db	3
  2635  007CF9  03                 	db	3
  2636  007CFA  FF                 	db	255
  2637  007CFB  FE                 	db	254
  2638  007CFC  00                 	db	0
  2639  007CFD  03                 	db	3
  2640  007CFE  FF                 	db	255
  2641  007CFF  FF                 	db	255
  2642  007D00  03                 	db	3
  2643  007D01  00                 	db	0
  2644  007D02  10                 	db	16
  2645  007D03  10                 	db	16
  2646  007D04  10                 	db	16
  2647  007D05  10                 	db	16
  2648  007D06  10                 	db	16
  2649  007D07  10                 	db	16
  2650  007D08  10                 	db	16
  2651  007D09  10                 	db	16
  2652  007D0A  10                 	db	16
  2653  007D0B  10                 	db	16
  2654  007D0C  10                 	db	16
  2655  007D0D  10                 	db	16
  2656  007D0E  10                 	db	16
  2657  007D0F  10                 	db	16
  2658  007D10  10                 	db	16
  2659  007D11  10                 	db	16
  2660  007D12  10                 	db	16
  2661  007D13  10                 	db	16
  2662  007D14  10                 	db	16
  2663  007D15                     __end_of_n_10_m:
  2664                           	opt stack 0
  2665  007D15                     _n_5_m:
  2666                           	opt stack 0
  2667  007D15  20                 	db	32
  2668  007D16  20                 	db	32
  2669  007D17  20                 	db	32
  2670  007D18  20                 	db	32
  2671  007D19  20                 	db	32
  2672  007D1A  20                 	db	32
  2673  007D1B  26                 	db	38
  2674  007D1C  26                 	db	38
  2675  007D1D  26                 	db	38
  2676  007D1E  26                 	db	38
  2677  007D1F  26                 	db	38
  2678  007D20  27                 	db	39
  2679  007D21  27                 	db	39
  2680  007D22  20                 	db	32
  2681  007D23  20                 	db	32
  2682  007D24  20                 	db	32
  2683  007D25  20                 	db	32
  2684  007D26  20                 	db	32
  2685  007D27  20                 	db	32
  2686  007D28  00                 	db	0
  2687  007D29  00                 	db	0
  2688  007D2A  00                 	db	0
  2689  007D2B  00                 	db	0
  2690  007D2C  00                 	db	0
  2691  007D2D  00                 	db	0
  2692  007D2E  3E                 	db	62
  2693  007D2F  7F                 	db	127
  2694  007D30  63                 	db	99
  2695  007D31  63                 	db	99
  2696  007D32  63                 	db	99
  2697  007D33  E3                 	db	227
  2698  007D34  E3                 	db	227
  2699  007D35  00                 	db	0
  2700  007D36  00                 	db	0
  2701  007D37  00                 	db	0
  2702  007D38  00                 	db	0
  2703  007D39  00                 	db	0
  2704  007D3A  00                 	db	0
  2705  007D3B  10                 	db	16
  2706  007D3C  10                 	db	16
  2707  007D3D  10                 	db	16
  2708  007D3E  10                 	db	16
  2709  007D3F  10                 	db	16
  2710  007D40  10                 	db	16
  2711  007D41  10                 	db	16
  2712  007D42  10                 	db	16
  2713  007D43  10                 	db	16
  2714  007D44  10                 	db	16
  2715  007D45  10                 	db	16
  2716  007D46  10                 	db	16
  2717  007D47  10                 	db	16
  2718  007D48  10                 	db	16
  2719  007D49  10                 	db	16
  2720  007D4A  10                 	db	16
  2721  007D4B  10                 	db	16
  2722  007D4C  10                 	db	16
  2723  007D4D  10                 	db	16
  2724  007D4E                     __end_of_n_5_m:
  2725                           	opt stack 0
  2726  007D4E                     _n_6_m:
  2727                           	opt stack 0
  2728  007D4E  20                 	db	32
  2729  007D4F  20                 	db	32
  2730  007D50  20                 	db	32
  2731  007D51  20                 	db	32
  2732  007D52  20                 	db	32
  2733  007D53  20                 	db	32
  2734  007D54  23                 	db	35
  2735  007D55  27                 	db	39
  2736  007D56  26                 	db	38
  2737  007D57  26                 	db	38
  2738  007D58  26                 	db	38
  2739  007D59  27                 	db	39
  2740  007D5A  23                 	db	35
  2741  007D5B  20                 	db	32
  2742  007D5C  20                 	db	32
  2743  007D5D  20                 	db	32
  2744  007D5E  20                 	db	32
  2745  007D5F  20                 	db	32
  2746  007D60  20                 	db	32
  2747  007D61  00                 	db	0
  2748  007D62  00                 	db	0
  2749  007D63  00                 	db	0
  2750  007D64  00                 	db	0
  2751  007D65  00                 	db	0
  2752  007D66  00                 	db	0
  2753  007D67  3E                 	db	62
  2754  007D68  7F                 	db	127
  2755  007D69  63                 	db	99
  2756  007D6A  63                 	db	99
  2757  007D6B  63                 	db	99
  2758  007D6C  FF                 	db	255
  2759  007D6D  FE                 	db	254
  2760  007D6E  00                 	db	0
  2761  007D6F  00                 	db	0
  2762  007D70  00                 	db	0
  2763  007D71  00                 	db	0
  2764  007D72  00                 	db	0
  2765  007D73  00                 	db	0
  2766  007D74  10                 	db	16
  2767  007D75  10                 	db	16
  2768  007D76  10                 	db	16
  2769  007D77  10                 	db	16
  2770  007D78  10                 	db	16
  2771  007D79  10                 	db	16
  2772  007D7A  10                 	db	16
  2773  007D7B  10                 	db	16
  2774  007D7C  10                 	db	16
  2775  007D7D  10                 	db	16
  2776  007D7E  10                 	db	16
  2777  007D7F  10                 	db	16
  2778  007D80  10                 	db	16
  2779  007D81  10                 	db	16
  2780  007D82  10                 	db	16
  2781  007D83  10                 	db	16
  2782  007D84  10                 	db	16
  2783  007D85  10                 	db	16
  2784  007D86  10                 	db	16
  2785  007D87                     __end_of_n_6_m:
  2786                           	opt stack 0
  2787  007D87                     _n_4_m:
  2788                           	opt stack 0
  2789  007D87  20                 	db	32
  2790  007D88  20                 	db	32
  2791  007D89  20                 	db	32
  2792  007D8A  20                 	db	32
  2793  007D8B  20                 	db	32
  2794  007D8C  20                 	db	32
  2795  007D8D  27                 	db	39
  2796  007D8E  27                 	db	39
  2797  007D8F  20                 	db	32
  2798  007D90  20                 	db	32
  2799  007D91  20                 	db	32
  2800  007D92  27                 	db	39
  2801  007D93  27                 	db	39
  2802  007D94  20                 	db	32
  2803  007D95  20                 	db	32
  2804  007D96  20                 	db	32
  2805  007D97  20                 	db	32
  2806  007D98  20                 	db	32
  2807  007D99  20                 	db	32
  2808  007D9A  00                 	db	0
  2809  007D9B  00                 	db	0
  2810  007D9C  00                 	db	0
  2811  007D9D  00                 	db	0
  2812  007D9E  00                 	db	0
  2813  007D9F  00                 	db	0
  2814  007DA0  FF                 	db	255
  2815  007DA1  FF                 	db	255
  2816  007DA2  60                 	db	96
  2817  007DA3  60                 	db	96
  2818  007DA4  60                 	db	96
  2819  007DA5  E0                 	db	224
  2820  007DA6  E0                 	db	224
  2821  007DA7  00                 	db	0
  2822  007DA8  00                 	db	0
  2823  007DA9  00                 	db	0
  2824  007DAA  00                 	db	0
  2825  007DAB  00                 	db	0
  2826  007DAC  00                 	db	0
  2827  007DAD  10                 	db	16
  2828  007DAE  10                 	db	16
  2829  007DAF  10                 	db	16
  2830  007DB0  10                 	db	16
  2831  007DB1  10                 	db	16
  2832  007DB2  10                 	db	16
  2833  007DB3  10                 	db	16
  2834  007DB4  10                 	db	16
  2835  007DB5  10                 	db	16
  2836  007DB6  10                 	db	16
  2837  007DB7  10                 	db	16
  2838  007DB8  10                 	db	16
  2839  007DB9  10                 	db	16
  2840  007DBA  10                 	db	16
  2841  007DBB  10                 	db	16
  2842  007DBC  10                 	db	16
  2843  007DBD  10                 	db	16
  2844  007DBE  10                 	db	16
  2845  007DBF  10                 	db	16
  2846  007DC0                     __end_of_n_4_m:
  2847                           	opt stack 0
  2848  007DC0                     _n_3_m:
  2849                           	opt stack 0
  2850  007DC0  20                 	db	32
  2851  007DC1  20                 	db	32
  2852  007DC2  20                 	db	32
  2853  007DC3  20                 	db	32
  2854  007DC4  20                 	db	32
  2855  007DC5  20                 	db	32
  2856  007DC6  20                 	db	32
  2857  007DC7  23                 	db	35
  2858  007DC8  27                 	db	39
  2859  007DC9  26                 	db	38
  2860  007DCA  26                 	db	38
  2861  007DCB  27                 	db	39
  2862  007DCC  23                 	db	35
  2863  007DCD  20                 	db	32
  2864  007DCE  20                 	db	32
  2865  007DCF  20                 	db	32
  2866  007DD0  20                 	db	32
  2867  007DD1  20                 	db	32
  2868  007DD2  20                 	db	32
  2869  007DD3  00                 	db	0
  2870  007DD4  00                 	db	0
  2871  007DD5  00                 	db	0
  2872  007DD6  00                 	db	0
  2873  007DD7  00                 	db	0
  2874  007DD8  00                 	db	0
  2875  007DD9  00                 	db	0
  2876  007DDA  DE                 	db	222
  2877  007DDB  FF                 	db	255
  2878  007DDC  63                 	db	99
  2879  007DDD  63                 	db	99
  2880  007DDE  07                 	db	7
  2881  007DDF  06                 	db	6
  2882  007DE0  00                 	db	0
  2883  007DE1  00                 	db	0
  2884  007DE2  00                 	db	0
  2885  007DE3  00                 	db	0
  2886  007DE4  00                 	db	0
  2887  007DE5  00                 	db	0
  2888  007DE6  10                 	db	16
  2889  007DE7  10                 	db	16
  2890  007DE8  10                 	db	16
  2891  007DE9  10                 	db	16
  2892  007DEA  10                 	db	16
  2893  007DEB  10                 	db	16
  2894  007DEC  10                 	db	16
  2895  007DED  10                 	db	16
  2896  007DEE  10                 	db	16
  2897  007DEF  10                 	db	16
  2898  007DF0  10                 	db	16
  2899  007DF1  10                 	db	16
  2900  007DF2  10                 	db	16
  2901  007DF3  10                 	db	16
  2902  007DF4  10                 	db	16
  2903  007DF5  10                 	db	16
  2904  007DF6  10                 	db	16
  2905  007DF7  10                 	db	16
  2906  007DF8  10                 	db	16
  2907  007DF9                     __end_of_n_3_m:
  2908                           	opt stack 0
  2909  007DF9                     _n_2_m:
  2910                           	opt stack 0
  2911  007DF9  20                 	db	32
  2912  007DFA  20                 	db	32
  2913  007DFB  20                 	db	32
  2914  007DFC  20                 	db	32
  2915  007DFD  20                 	db	32
  2916  007DFE  20                 	db	32
  2917  007DFF  20                 	db	32
  2918  007E00  23                 	db	35
  2919  007E01  27                 	db	39
  2920  007E02  26                 	db	38
  2921  007E03  26                 	db	38
  2922  007E04  27                 	db	39
  2923  007E05  23                 	db	35
  2924  007E06  20                 	db	32
  2925  007E07  20                 	db	32
  2926  007E08  20                 	db	32
  2927  007E09  20                 	db	32
  2928  007E0A  20                 	db	32
  2929  007E0B  20                 	db	32
  2930  007E0C  00                 	db	0
  2931  007E0D  00                 	db	0
  2932  007E0E  00                 	db	0
  2933  007E0F  00                 	db	0
  2934  007E10  00                 	db	0
  2935  007E11  00                 	db	0
  2936  007E12  00                 	db	0
  2937  007E13  83                 	db	131
  2938  007E14  C3                 	db	195
  2939  007E15  63                 	db	99
  2940  007E16  33                 	db	51
  2941  007E17  1F                 	db	31
  2942  007E18  0F                 	db	15
  2943  007E19  00                 	db	0
  2944  007E1A  00                 	db	0
  2945  007E1B  00                 	db	0
  2946  007E1C  00                 	db	0
  2947  007E1D  00                 	db	0
  2948  007E1E  00                 	db	0
  2949  007E1F  10                 	db	16
  2950  007E20  10                 	db	16
  2951  007E21  10                 	db	16
  2952  007E22  10                 	db	16
  2953  007E23  10                 	db	16
  2954  007E24  10                 	db	16
  2955  007E25  10                 	db	16
  2956  007E26  10                 	db	16
  2957  007E27  10                 	db	16
  2958  007E28  10                 	db	16
  2959  007E29  10                 	db	16
  2960  007E2A  10                 	db	16
  2961  007E2B  10                 	db	16
  2962  007E2C  10                 	db	16
  2963  007E2D  10                 	db	16
  2964  007E2E  10                 	db	16
  2965  007E2F  10                 	db	16
  2966  007E30  10                 	db	16
  2967  007E31  10                 	db	16
  2968  007E32                     __end_of_n_2_m:
  2969                           	opt stack 0
  2970  007E32                     _n_2P5_m:
  2971                           	opt stack 0
  2972  007E32  26                 	db	38
  2973  007E33  26                 	db	38
  2974  007E34  26                 	db	38
  2975  007E35  27                 	db	39
  2976  007E36  27                 	db	39
  2977  007E37  20                 	db	32
  2978  007E38  20                 	db	32
  2979  007E39  20                 	db	32
  2980  007E3A  20                 	db	32
  2981  007E3B  23                 	db	35
  2982  007E3C  27                 	db	39
  2983  007E3D  26                 	db	38
  2984  007E3E  26                 	db	38
  2985  007E3F  27                 	db	39
  2986  007E40  23                 	db	35
  2987  007E41  20                 	db	32
  2988  007E42  20                 	db	32
  2989  007E43  20                 	db	32
  2990  007E44  20                 	db	32
  2991  007E45  3E                 	db	62
  2992  007E46  7F                 	db	127
  2993  007E47  63                 	db	99
  2994  007E48  E3                 	db	227
  2995  007E49  C3                 	db	195
  2996  007E4A  00                 	db	0
  2997  007E4B  06                 	db	6
  2998  007E4C  06                 	db	6
  2999  007E4D  00                 	db	0
  3000  007E4E  83                 	db	131
  3001  007E4F  C3                 	db	195
  3002  007E50  63                 	db	99
  3003  007E51  33                 	db	51
  3004  007E52  1F                 	db	31
  3005  007E53  0F                 	db	15
  3006  007E54  00                 	db	0
  3007  007E55  00                 	db	0
  3008  007E56  00                 	db	0
  3009  007E57  00                 	db	0
  3010  007E58  10                 	db	16
  3011  007E59  10                 	db	16
  3012  007E5A  10                 	db	16
  3013  007E5B  10                 	db	16
  3014  007E5C  10                 	db	16
  3015  007E5D  10                 	db	16
  3016  007E5E  10                 	db	16
  3017  007E5F  10                 	db	16
  3018  007E60  10                 	db	16
  3019  007E61  10                 	db	16
  3020  007E62  10                 	db	16
  3021  007E63  10                 	db	16
  3022  007E64  10                 	db	16
  3023  007E65  10                 	db	16
  3024  007E66  10                 	db	16
  3025  007E67  10                 	db	16
  3026  007E68  10                 	db	16
  3027  007E69  10                 	db	16
  3028  007E6A  10                 	db	16
  3029  007E6B                     __end_of_n_2P5_m:
  3030                           	opt stack 0
  3031  007E6B                     _n_1P5_m:
  3032                           	opt stack 0
  3033  007E6B  26                 	db	38
  3034  007E6C  26                 	db	38
  3035  007E6D  26                 	db	38
  3036  007E6E  27                 	db	39
  3037  007E6F  27                 	db	39
  3038  007E70  20                 	db	32
  3039  007E71  20                 	db	32
  3040  007E72  20                 	db	32
  3041  007E73  20                 	db	32
  3042  007E74  20                 	db	32
  3043  007E75  27                 	db	39
  3044  007E76  27                 	db	39
  3045  007E77  23                 	db	35
  3046  007E78  20                 	db	32
  3047  007E79  20                 	db	32
  3048  007E7A  20                 	db	32
  3049  007E7B  20                 	db	32
  3050  007E7C  20                 	db	32
  3051  007E7D  20                 	db	32
  3052  007E7E  3E                 	db	62
  3053  007E7F  7F                 	db	127
  3054  007E80  63                 	db	99
  3055  007E81  E3                 	db	227
  3056  007E82  C3                 	db	195
  3057  007E83  00                 	db	0
  3058  007E84  06                 	db	6
  3059  007E85  06                 	db	6
  3060  007E86  00                 	db	0
  3061  007E87  03                 	db	3
  3062  007E88  FF                 	db	255
  3063  007E89  FF                 	db	255
  3064  007E8A  03                 	db	3
  3065  007E8B  00                 	db	0
  3066  007E8C  00                 	db	0
  3067  007E8D  00                 	db	0
  3068  007E8E  00                 	db	0
  3069  007E8F  00                 	db	0
  3070  007E90  00                 	db	0
  3071  007E91  10                 	db	16
  3072  007E92  10                 	db	16
  3073  007E93  10                 	db	16
  3074  007E94  10                 	db	16
  3075  007E95  10                 	db	16
  3076  007E96  10                 	db	16
  3077  007E97  10                 	db	16
  3078  007E98  10                 	db	16
  3079  007E99  10                 	db	16
  3080  007E9A  10                 	db	16
  3081  007E9B  10                 	db	16
  3082  007E9C  10                 	db	16
  3083  007E9D  10                 	db	16
  3084  007E9E  10                 	db	16
  3085  007E9F  10                 	db	16
  3086  007EA0  10                 	db	16
  3087  007EA1  10                 	db	16
  3088  007EA2  10                 	db	16
  3089  007EA3  10                 	db	16
  3090  007EA4                     __end_of_n_1P5_m:
  3091                           	opt stack 0
  3092  007EA4                     _n_1_m:
  3093                           	opt stack 0
  3094  007EA4  20                 	db	32
  3095  007EA5  20                 	db	32
  3096  007EA6  20                 	db	32
  3097  007EA7  20                 	db	32
  3098  007EA8  20                 	db	32
  3099  007EA9  20                 	db	32
  3100  007EAA  20                 	db	32
  3101  007EAB  20                 	db	32
  3102  007EAC  27                 	db	39
  3103  007EAD  27                 	db	39
  3104  007EAE  23                 	db	35
  3105  007EAF  20                 	db	32
  3106  007EB0  20                 	db	32
  3107  007EB1  20                 	db	32
  3108  007EB2  20                 	db	32
  3109  007EB3  20                 	db	32
  3110  007EB4  20                 	db	32
  3111  007EB5  20                 	db	32
  3112  007EB6  20                 	db	32
  3113  007EB7  00                 	db	0
  3114  007EB8  00                 	db	0
  3115  007EB9  00                 	db	0
  3116  007EBA  00                 	db	0
  3117  007EBB  00                 	db	0
  3118  007EBC  00                 	db	0
  3119  007EBD  00                 	db	0
  3120  007EBE  03                 	db	3
  3121  007EBF  FF                 	db	255
  3122  007EC0  FF                 	db	255
  3123  007EC1  03                 	db	3
  3124  007EC2  00                 	db	0
  3125  007EC3  00                 	db	0
  3126  007EC4  00                 	db	0
  3127  007EC5  00                 	db	0
  3128  007EC6  00                 	db	0
  3129  007EC7  00                 	db	0
  3130  007EC8  00                 	db	0
  3131  007EC9  00                 	db	0
  3132  007ECA  10                 	db	16
  3133  007ECB  10                 	db	16
  3134  007ECC  10                 	db	16
  3135  007ECD  10                 	db	16
  3136  007ECE  10                 	db	16
  3137  007ECF  10                 	db	16
  3138  007ED0  10                 	db	16
  3139  007ED1  10                 	db	16
  3140  007ED2  10                 	db	16
  3141  007ED3  10                 	db	16
  3142  007ED4  10                 	db	16
  3143  007ED5  10                 	db	16
  3144  007ED6  10                 	db	16
  3145  007ED7  10                 	db	16
  3146  007ED8  10                 	db	16
  3147  007ED9  10                 	db	16
  3148  007EDA  10                 	db	16
  3149  007EDB  10                 	db	16
  3150  007EDC  10                 	db	16
  3151  007EDD                     __end_of_n_1_m:
  3152                           	opt stack 0
  3153  007EDD                     _n_0_m:
  3154                           	opt stack 0
  3155  007EDD  20                 	db	32
  3156  007EDE  20                 	db	32
  3157  007EDF  20                 	db	32
  3158  007EE0  20                 	db	32
  3159  007EE1  20                 	db	32
  3160  007EE2  20                 	db	32
  3161  007EE3  23                 	db	35
  3162  007EE4  27                 	db	39
  3163  007EE5  26                 	db	38
  3164  007EE6  26                 	db	38
  3165  007EE7  26                 	db	38
  3166  007EE8  27                 	db	39
  3167  007EE9  23                 	db	35
  3168  007EEA  20                 	db	32
  3169  007EEB  20                 	db	32
  3170  007EEC  20                 	db	32
  3171  007EED  20                 	db	32
  3172  007EEE  20                 	db	32
  3173  007EEF  20                 	db	32
  3174  007EF0  00                 	db	0
  3175  007EF1  00                 	db	0
  3176  007EF2  00                 	db	0
  3177  007EF3  00                 	db	0
  3178  007EF4  00                 	db	0
  3179  007EF5  00                 	db	0
  3180  007EF6  FE                 	db	254
  3181  007EF7  FF                 	db	255
  3182  007EF8  03                 	db	3
  3183  007EF9  03                 	db	3
  3184  007EFA  03                 	db	3
  3185  007EFB  FF                 	db	255
  3186  007EFC  FE                 	db	254
  3187  007EFD  00                 	db	0
  3188  007EFE  00                 	db	0
  3189  007EFF  00                 	db	0
  3190  007F00  00                 	db	0
  3191  007F01  00                 	db	0
  3192  007F02  00                 	db	0
  3193  007F03  10                 	db	16
  3194  007F04  10                 	db	16
  3195  007F05  10                 	db	16
  3196  007F06  10                 	db	16
  3197  007F07  10                 	db	16
  3198  007F08  10                 	db	16
  3199  007F09  10                 	db	16
  3200  007F0A  10                 	db	16
  3201  007F0B  10                 	db	16
  3202  007F0C  10                 	db	16
  3203  007F0D  10                 	db	16
  3204  007F0E  10                 	db	16
  3205  007F0F  10                 	db	16
  3206  007F10  10                 	db	16
  3207  007F11  10                 	db	16
  3208  007F12  10                 	db	16
  3209  007F13  10                 	db	16
  3210  007F14  10                 	db	16
  3211  007F15  10                 	db	16
  3212  007F16                     __end_of_n_0_m:
  3213                           	opt stack 0
  3214  007F16                     STR_9:
  3215  007F16  39                 	db	57	;'9'
  3216  007F17  39                 	db	57	;'9'
  3217  007F18  39                 	db	57	;'9'
  3218  007F19  2D                 	db	45
  3219  007F1A  68                 	db	104	;'h'
  3220  007F1B  67                 	db	103	;'g'
  3221  007F1C  5F                 	db	95	;'_'
  3222  007F1D  6F                 	db	111	;'o'
  3223  007F1E  70                 	db	112	;'p'
  3224  007F1F  2E                 	db	46
  3225  007F20  63                 	db	99	;'c'
  3226  007F21  6E                 	db	110	;'n'
  3227  007F22  74                 	db	116	;'t'
  3228  007F23  5F                 	db	95	;'_'
  3229  007F24  70                 	db	112	;'p'
  3230  007F25  6F                 	db	111	;'o'
  3231  007F26  73                 	db	115	;'s'
  3232  007F27  62                 	db	98	;'b'
  3233  007F28  20                 	db	32
  3234  007F29  69                 	db	105	;'i'
  3235  007F2A  73                 	db	115	;'s'
  3236  007F2B  20                 	db	32
  3237  007F2C  25                 	db	37
  3238  007F2D  64                 	db	100	;'d'
  3239  007F2E  0D                 	db	13
  3240  007F2F  0A                 	db	10
  3241  007F30  3D                 	db	61	;'='
  3242  007F31  3D                 	db	61	;'='
  3243  007F32  3D                 	db	61	;'='
  3244  007F33  3D                 	db	61	;'='
  3245  007F34  3D                 	db	61	;'='
  3246  007F35  3D                 	db	61	;'='
  3247  007F36  3D                 	db	61	;'='
  3248  007F37  0D                 	db	13
  3249  007F38  0A                 	db	10
  3250  007F39  00                 	db	0
  3251  007F3A                     STR_6:
  3252  007F3A  33                 	db	51	;'3'
  3253  007F3B  33                 	db	51	;'3'
  3254  007F3C  33                 	db	51	;'3'
  3255  007F3D  2D                 	db	45
  3256  007F3E  68                 	db	104	;'h'
  3257  007F3F  67                 	db	103	;'g'
  3258  007F40  5F                 	db	95	;'_'
  3259  007F41  6F                 	db	111	;'o'
  3260  007F42  70                 	db	112	;'p'
  3261  007F43  2E                 	db	46
  3262  007F44  63                 	db	99	;'c'
  3263  007F45  6E                 	db	110	;'n'
  3264  007F46  74                 	db	116	;'t'
  3265  007F47  5F                 	db	95	;'_'
  3266  007F48  70                 	db	112	;'p'
  3267  007F49  6F                 	db	111	;'o'
  3268  007F4A  73                 	db	115	;'s'
  3269  007F4B  61                 	db	97	;'a'
  3270  007F4C  20                 	db	32
  3271  007F4D  69                 	db	105	;'i'
  3272  007F4E  73                 	db	115	;'s'
  3273  007F4F  20                 	db	32
  3274  007F50  25                 	db	37
  3275  007F51  64                 	db	100	;'d'
  3276  007F52  0D                 	db	13
  3277  007F53  0A                 	db	10
  3278  007F54  00                 	db	0
  3279  007F55                     STR_7:
  3280  007F55  34                 	db	52	;'4'
  3281  007F56  34                 	db	52	;'4'
  3282  007F57  34                 	db	52	;'4'
  3283  007F58  2D                 	db	45
  3284  007F59  68                 	db	104	;'h'
  3285  007F5A  67                 	db	103	;'g'
  3286  007F5B  5F                 	db	95	;'_'
  3287  007F5C  6F                 	db	111	;'o'
  3288  007F5D  70                 	db	112	;'p'
  3289  007F5E  2E                 	db	46
  3290  007F5F  63                 	db	99	;'c'
  3291  007F60  6E                 	db	110	;'n'
  3292  007F61  74                 	db	116	;'t'
  3293  007F62  5F                 	db	95	;'_'
  3294  007F63  70                 	db	112	;'p'
  3295  007F64  6F                 	db	111	;'o'
  3296  007F65  73                 	db	115	;'s'
  3297  007F66  61                 	db	97	;'a'
  3298  007F67  20                 	db	32
  3299  007F68  69                 	db	105	;'i'
  3300  007F69  73                 	db	115	;'s'
  3301  007F6A  20                 	db	32
  3302  007F6B  25                 	db	37
  3303  007F6C  64                 	db	100	;'d'
  3304  007F6D  0D                 	db	13
  3305  007F6E  0A                 	db	10
  3306  007F6F  00                 	db	0
  3307  007F70                     STR_8:
  3308  007F70  38                 	db	56	;'8'
  3309  007F71  38                 	db	56	;'8'
  3310  007F72  38                 	db	56	;'8'
  3311  007F73  2D                 	db	45
  3312  007F74  68                 	db	104	;'h'
  3313  007F75  67                 	db	103	;'g'
  3314  007F76  5F                 	db	95	;'_'
  3315  007F77  6F                 	db	111	;'o'
  3316  007F78  70                 	db	112	;'p'
  3317  007F79  2E                 	db	46
  3318  007F7A  63                 	db	99	;'c'
  3319  007F7B  6E                 	db	110	;'n'
  3320  007F7C  74                 	db	116	;'t'
  3321  007F7D  5F                 	db	95	;'_'
  3322  007F7E  70                 	db	112	;'p'
  3323  007F7F  6F                 	db	111	;'o'
  3324  007F80  73                 	db	115	;'s'
  3325  007F81  62                 	db	98	;'b'
  3326  007F82  20                 	db	32
  3327  007F83  69                 	db	105	;'i'
  3328  007F84  73                 	db	115	;'s'
  3329  007F85  20                 	db	32
  3330  007F86  25                 	db	37
  3331  007F87  64                 	db	100	;'d'
  3332  007F88  0D                 	db	13
  3333  007F89  0A                 	db	10
  3334  007F8A  00                 	db	0
  3335  007F8B                     STR_3:
  3336  007F8B  41                 	db	65	;'A'
  3337  007F8C  2D                 	db	45
  3338  007F8D  72                 	db	114	;'r'
  3339  007F8E  65                 	db	101	;'e'
  3340  007F8F  73                 	db	115	;'s'
  3341  007F90  65                 	db	101	;'e'
  3342  007F91  74                 	db	116	;'t'
  3343  007F92  20                 	db	32
  3344  007F93  6C                 	db	108	;'l'
  3345  007F94  65                 	db	101	;'e'
  3346  007F95  6E                 	db	110	;'n'
  3347  007F96  20                 	db	32
  3348  007F97  69                 	db	105	;'i'
  3349  007F98  73                 	db	115	;'s'
  3350  007F99  20                 	db	32
  3351  007F9A  25                 	db	37
  3352  007F9B  64                 	db	100	;'d'
  3353  007F9C  0D                 	db	13
  3354  007F9D  0A                 	db	10
  3355  007F9E  00                 	db	0
  3356  007F9F                     STR_4:
  3357  007F9F  42                 	db	66	;'B'
  3358  007FA0  2D                 	db	45
  3359  007FA1  72                 	db	114	;'r'
  3360  007FA2  65                 	db	101	;'e'
  3361  007FA3  73                 	db	115	;'s'
  3362  007FA4  65                 	db	101	;'e'
  3363  007FA5  74                 	db	116	;'t'
  3364  007FA6  20                 	db	32
  3365  007FA7  6C                 	db	108	;'l'
  3366  007FA8  65                 	db	101	;'e'
  3367  007FA9  6E                 	db	110	;'n'
  3368  007FAA  20                 	db	32
  3369  007FAB  69                 	db	105	;'i'
  3370  007FAC  73                 	db	115	;'s'
  3371  007FAD  20                 	db	32
  3372  007FAE  25                 	db	37
  3373  007FAF  64                 	db	100	;'d'
  3374  007FB0  0D                 	db	13
  3375  007FB1  0A                 	db	10
  3376  007FB2  00                 	db	0
  3377  007FB3                     STR_1:
  3378  007FB3  65                 	db	101	;'e'
  3379  007FB4  6E                 	db	110	;'n'
  3380  007FB5  74                 	db	116	;'t'
  3381  007FB6  65                 	db	101	;'e'
  3382  007FB7  72                 	db	114	;'r'
  3383  007FB8  20                 	db	32
  3384  007FB9  74                 	db	116	;'t'
  3385  007FBA  65                 	db	101	;'e'
  3386  007FBB  73                 	db	115	;'s'
  3387  007FBC  74                 	db	116	;'t'
  3388  007FBD  20                 	db	32
  3389  007FBE  6D                 	db	109	;'m'
  3390  007FBF  6F                 	db	111	;'o'
  3391  007FC0  64                 	db	100	;'d'
  3392  007FC1  65                 	db	101	;'e'
  3393  007FC2  0D                 	db	13
  3394  007FC3  0A                 	db	10
  3395  007FC4  00                 	db	0
  3396  007FC5                     STR_2:
  3397  007FC5  73                 	db	115	;'s'
  3398  007FC6  6C                 	db	108	;'l'
  3399  007FC7  65                 	db	101	;'e'
  3400  007FC8  65                 	db	101	;'e'
  3401  007FC9  70                 	db	112	;'p'
  3402  007FCA  20                 	db	32
  3403  007FCB  6D                 	db	109	;'m'
  3404  007FCC  6F                 	db	111	;'o'
  3405  007FCD  64                 	db	100	;'d'
  3406  007FCE  65                 	db	101	;'e'
  3407  007FCF  0D                 	db	13
  3408  007FD0  0A                 	db	10
  3409  007FD1  00                 	db	0
  3410  007FD2                     STR_10:
  3411  007FD2  64                 	db	100	;'d'
  3412  007FD3  72                 	db	114	;'r'
  3413  007FD4  6F                 	db	111	;'o'
  3414  007FD5  70                 	db	112	;'p'
  3415  007FD6  73                 	db	115	;'s'
  3416  007FD7  20                 	db	32
  3417  007FD8  6D                 	db	109	;'m'
  3418  007FD9  6F                 	db	111	;'o'
  3419  007FDA  64                 	db	100	;'d'
  3420  007FDB  65                 	db	101	;'e'
  3421  007FDC  0D                 	db	13
  3422  007FDD  0A                 	db	10
  3423  007FDE  00                 	db	0
  3424  007FDF                     STR_5:
  3425  007FDF  69                 	db	105	;'i'
  3426  007FE0  6E                 	db	110	;'n'
  3427  007FE1  20                 	db	32
  3428  007FE2  73                 	db	115	;'s'
  3429  007FE3  61                 	db	97	;'a'
  3430  007FE4  20                 	db	32
  3431  007FE5  64                 	db	100	;'d'
  3432  007FE6  72                 	db	114	;'r'
  3433  007FE7  6F                 	db	111	;'o'
  3434  007FE8  70                 	db	112	;'p'
  3435  007FE9  73                 	db	115	;'s'
  3436  007FEA  0A                 	db	10
  3437  007FEB  00                 	db	0
  3438  007FEC                     STR_11:
  3439  007FEC  63                 	db	99	;'c'
  3440  007FED  20                 	db	32
  3441  007FEE  6D                 	db	109	;'m'
  3442  007FEF  6F                 	db	111	;'o'
  3443  007FF0  64                 	db	100	;'d'
  3444  007FF1  65                 	db	101	;'e'
  3445  007FF2  0D                 	db	13
  3446  007FF3  0A                 	db	10
  3447  007FF4  00                 	db	0
  3448  007FF5                     STR_14:
  3449  007FF5  6C                 	db	108	;'l'
  3450  007FF6  70                 	db	112	;'p'
  3451  007FF7  0D                 	db	13
  3452  007FF8  0A                 	db	10
  3453  007FF9  00                 	db	0
  3454  007FFA                     STR_13:
  3455  007FFA  61                 	db	97	;'a'
  3456  007FFB  63                 	db	99	;'c'
  3457  007FFC  74                 	db	116	;'t'
  3458  007FFD  0A                 	db	10
  3459  007FFE  00                 	db	0
  3460  0000                     
  3461                           ; #config settings
  3462  007FFF  00                 	db	0	; dummy byte at the end
  3463  0000                     
  3464                           	psect	nvBANK0
  3465  0000FE                     __pnvBANK0:
  3466                           	opt stack 0
  3467  0000FE                     _flag_power_up:
  3468                           	opt stack 0
  3469  0000FE                     	ds	1
  3470  0000                     _TMR0	set	4054
  3471  0000                     _TMR1	set	4046
  3472  0000                     _PORTCbits	set	3970
  3473  0000                     _ADRESL	set	4035
  3474  0000                     _ADRESH	set	4036
  3475  0000                     _ADCON0bits	set	4034
  3476  0000                     _ADCON2bits	set	4032
  3477  0000                     _PORTC	set	3970
  3478  0000                     _INTCON3bits	set	4080
  3479  0000                     _LATAbits	set	3977
  3480  0000                     _PORTAbits	set	3968
  3481  0000                     _LATCbits	set	3979
  3482  0000                     _T1CONbits	set	4045
  3483  0000                     _PORTBbits	set	3969
  3484  0000                     _T0CONbits	set	4053
  3485  0000                     _PORTDbits	set	3971
  3486  0000                     _INTCONbits	set	4082
  3487  0000                     _INTCON2bits	set	4081
  3488  0000                     _TRISAbits	set	3986
  3489  0000                     _TRISBbits	set	3987
  3490  0000                     _ADCON1	set	4033
  3491  0000                     _LATDbits	set	3980
  3492  0000                     _TRISDbits	set	3989
  3493  0000                     _LATEbits	set	3981
  3494  0000                     _TRISEbits	set	3990
  3495  0000                     _TXREG	set	4013
  3496  0000                     _PIR1bits	set	3998
  3497  0000                     _TXSTAbits	set	4012
  3498  0000                     _RCSTAbits	set	4011
  3499  0000                     _SPBRG	set	4015
  3500  0000                     _TRISCbits	set	3988
  3501  0000                     _GIE	set	32663
  3502  0000                     _T0IF	set	32658
  3503  0000                     _T08BIT	set	32430
  3504  0000                     _T0PS0	set	32424
  3505  0000                     _T0PS1	set	32425
  3506  0000                     _T0PS2	set	32426
  3507  0000                     _PSA	set	32427
  3508  0000                     _T0CS	set	32429
  3509  0000                     _T0IE	set	32661
  3510                           
  3511                           	psect	cinit
  3512  000BC0                     __pcinit:
  3513                           	opt stack 0
  3514  000BC0                     start_initialization:
  3515                           	opt stack 0
  3516  000BC0                     __initialization:
  3517                           	opt stack 0
  3518                           
  3519                           ; Initialize objects allocated to COMRAM (11 bytes)
  3520                           ; load TBLPTR registers with __pidataCOMRAM
  3521  000BC0  0E28               	movlw	low __pidataCOMRAM
  3522  000BC2  6EF6               	movwf	tblptrl,c
  3523  000BC4  0E0F               	movlw	high __pidataCOMRAM
  3524  000BC6  6EF7               	movwf	tblptrh,c
  3525  000BC8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  3526  000BCA  6EF8               	movwf	tblptru,c
  3527  000BCC  EE00  F05A         	lfsr	0,__pdataCOMRAM
  3528  000BD0  EE10 F00B          	lfsr	1,11
  3529  000BD4                     copy_data0:
  3530  000BD4  0009               	tblrd		*+
  3531  000BD6  CFF5 FFEE          	movff	tablat,postinc0
  3532  000BDA  50E5               	movf	postdec1,w,c
  3533  000BDC  50E1               	movf	fsr1l,w,c
  3534  000BDE  E1FA               	bnz	copy_data0
  3535                           
  3536                           ; Clear objects allocated to BANK3 (256 bytes)
  3537  000BE0  EE03  F000         	lfsr	0,__pbssBANK3
  3538  000BE4  EE11 F000          	lfsr	1,256
  3539  000BE8                     clear_0:
  3540  000BE8  6AEE               	clrf	postinc0,c
  3541  000BEA  50E5               	movf	postdec1,w,c
  3542  000BEC  50E1               	movf	fsr1l,w,c
  3543  000BEE  E1FC               	bnz	clear_0
  3544  000BF0  50E2               	movf	fsr1h,w,c
  3545  000BF2  E1FA               	bnz	clear_0
  3546                           
  3547                           ; Clear objects allocated to BANK2 (256 bytes)
  3548  000BF4  EE02  F000         	lfsr	0,__pbssBANK2
  3549  000BF8  EE11 F000          	lfsr	1,256
  3550  000BFC                     clear_1:
  3551  000BFC  6AEE               	clrf	postinc0,c
  3552  000BFE  50E5               	movf	postdec1,w,c
  3553  000C00  50E1               	movf	fsr1l,w,c
  3554  000C02  E1FC               	bnz	clear_1
  3555  000C04  50E2               	movf	fsr1h,w,c
  3556  000C06  E1FA               	bnz	clear_1
  3557                           
  3558                           ; Clear objects allocated to BANK1 (112 bytes)
  3559  000C08  EE01  F000         	lfsr	0,__pbssBANK1
  3560  000C0C  0E70               	movlw	112
  3561  000C0E                     clear_2:
  3562  000C0E  6AEE               	clrf	postinc0,c
  3563  000C10  06E8               	decf	wreg,f,c
  3564  000C12  E1FD               	bnz	clear_2
  3565                           
  3566                           ; Clear objects allocated to BANK0 (126 bytes)
  3567  000C14  EE00  F080         	lfsr	0,__pbssBANK0
  3568  000C18  0E7E               	movlw	126
  3569  000C1A                     clear_3:
  3570  000C1A  6AEE               	clrf	postinc0,c
  3571  000C1C  06E8               	decf	wreg,f,c
  3572  000C1E  E1FD               	bnz	clear_3
  3573                           
  3574                           ; Clear objects allocated to COMRAM (53 bytes)
  3575  000C20  EE00  F001         	lfsr	0,__pbssCOMRAM
  3576  000C24  0E35               	movlw	53
  3577  000C26                     clear_4:
  3578  000C26  6AEE               	clrf	postinc0,c
  3579  000C28  06E8               	decf	wreg,f,c
  3580  000C2A  E1FD               	bnz	clear_4
  3581  000C2C                     end_of_initialization:
  3582                           	opt stack 0
  3583  000C2C                     __end_of__initialization:
  3584                           	opt stack 0
  3585  000C2C  9065               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  3586  000C2E  9265               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  3587  000C30  0E00               	movlw	low (__Lmediumconst shr (0+16))
  3588  000C32  6EF8               	movwf	tblptru,c
  3589  000C34  0100               	movlb	0
  3590  000C36  EF09  F000         	goto	_main	;jump to C main() function
  3591                           tblptru	equ	0xFF8
  3592                           tblptrh	equ	0xFF7
  3593                           tblptrl	equ	0xFF6
  3594                           tablat	equ	0xFF5
  3595                           postinc0	equ	0xFEE
  3596                           wreg	equ	0xFE8
  3597                           postdec1	equ	0xFE5
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           
  3601                           	psect	bssCOMRAM
  3602  000001                     __pbssCOMRAM:
  3603                           	opt stack 0
  3604  000001                     _mbcnt:
  3605                           	opt stack 0
  3606  000001                     	ds	2
  3607  000003                     _tvb:
  3608                           	opt stack 0
  3609  000003                     	ds	2
  3610  000005                     _tva:
  3611                           	opt stack 0
  3612  000005                     	ds	2
  3613  000007                     _ptnx_frame:
  3614                           	opt stack 0
  3615  000007                     	ds	2
  3616  000009                     _n_x_m:
  3617                           	opt stack 0
  3618  000009                     	ds	2
  3619  00000B                     _xtt:
  3620                           	opt stack 0
  3621  00000B                     	ds	2
  3622  00000D                     _cntb_mb:
  3623                           	opt stack 0
  3624  00000D                     	ds	2
  3625  00000F                     _cnta_mb:
  3626                           	opt stack 0
  3627  00000F                     	ds	2
  3628  000011                     _bv:
  3629                           	opt stack 0
  3630  000011                     	ds	2
  3631  000013                     _cnt_push:
  3632                           	opt stack 0
  3633  000013                     	ds	2
  3634  000015                     _ann:
  3635                           	opt stack 0
  3636  000015                     	ds	2
  3637  000017                     _xn:
  3638                           	opt stack 0
  3639  000017                     	ds	2
  3640  000019                     _action_btn_cnt:
  3641                           	opt stack 0
  3642  000019                     	ds	2
  3643  00001B                     _flag_test_mode_break:
  3644                           	opt stack 0
  3645  00001B                     	ds	1
  3646  00001C                     _work_mode_choice:
  3647                           	opt stack 0
  3648  00001C                     	ds	1
  3649  00001D                     _work_mode:
  3650                           	opt stack 0
  3651  00001D                     	ds	1
  3652  00001E                     _flip:
  3653                           	opt stack 0
  3654  00001E                     	ds	1
  3655  00001F                     _focus:
  3656                           	opt stack 0
  3657  00001F                     	ds	1
  3658  000020                     	ds	1
  3659  000021                     _ttte:
  3660                           	opt stack 0
  3661  000021                     	ds	1
  3662  000022                     _old_c:
  3663                           	opt stack 0
  3664  000022                     	ds	1
  3665  000023                     _tv_cnt:
  3666                           	opt stack 0
  3667  000023                     	ds	1
  3668  000024                     _flag:
  3669                           	opt stack 0
  3670  000024                     	ds	1
  3671  000025                     _page:
  3672                           	opt stack 0
  3673  000025                     	ds	1
  3674  000026                     _rcnt:
  3675                           	opt stack 0
  3676  000026                     	ds	1
  3677  000027                     _css:
  3678                           	opt stack 0
  3679  000027                     	ds	1
  3680  000028                     _ss:
  3681                           	opt stack 0
  3682  000028                     	ds	1
  3683  000029                     _flag_do_reset_in_drops_mode:
  3684                           	opt stack 0
  3685  000029                     	ds	1
  3686  00002A                     _flag_action_button:
  3687                           	opt stack 0
  3688  00002A                     	ds	1
  3689  00002B                     _flag_action:
  3690                           	opt stack 0
  3691  00002B                     	ds	1
  3692  00002C                     _flag_push:
  3693                           	opt stack 0
  3694  00002C                     	ds	1
  3695  00002D                     _flag_inject_sb:
  3696                           	opt stack 0
  3697  00002D                     	ds	1
  3698  00002E                     _flag_inject_sa:
  3699                           	opt stack 0
  3700  00002E                     	ds	1
  3701  00002F                     _flag_inject:
  3702                           	opt stack 0
  3703  00002F                     	ds	1
  3704  000030                     _flag_mreset_hit_lp:
  3705                           	opt stack 0
  3706  000030                     	ds	1
  3707  000031                     _cur_edge:
  3708                           	opt stack 0
  3709  000031                     	ds	1
  3710  000032                     _prev_edge:
  3711                           	opt stack 0
  3712  000032                     	ds	1
  3713  000033                     _prev_state_phb_ma:
  3714                           	opt stack 0
  3715  000033                     	ds	1
  3716  000034                     _cur_state_phb_ma:
  3717                           	opt stack 0
  3718  000034                     	ds	1
  3719  000035                     _test_mode:
  3720                           	opt stack 0
  3721  000035                     	ds	1
  3722                           tblptru	equ	0xFF8
  3723                           tblptrh	equ	0xFF7
  3724                           tblptrl	equ	0xFF6
  3725                           tablat	equ	0xFF5
  3726                           postinc0	equ	0xFEE
  3727                           wreg	equ	0xFE8
  3728                           postdec1	equ	0xFE5
  3729                           fsr1h	equ	0xFE2
  3730                           fsr1l	equ	0xFE1
  3731                           
  3732                           	psect	dataCOMRAM
  3733  00005A                     __pdataCOMRAM:
  3734                           	opt stack 0
  3735  00005A                     _dv:
  3736                           	opt stack 0
  3737  00005A                     	ds	2
  3738  00005C                     _cv:
  3739                           	opt stack 0
  3740  00005C                     	ds	2
  3741  00005E                     _needle_len:
  3742                           	opt stack 0
  3743  00005E                     	ds	1
  3744  00005F                     _tflag:
  3745                           	opt stack 0
  3746  00005F                     	ds	1
  3747  000060                     _flag_tv:
  3748                           	opt stack 0
  3749  000060                     	ds	1
  3750  000061                     _ms:
  3751                           	opt stack 0
  3752  000061                     	ds	1
  3753  000062                     _flag_wake_up:
  3754                           	opt stack 0
  3755  000062                     	ds	1
  3756  000063                     _flag_go_to_sleep:
  3757                           	opt stack 0
  3758  000063                     	ds	1
  3759  000064                     _flag_mreset:
  3760                           	opt stack 0
  3761  000064                     	ds	1
  3762                           tblptru	equ	0xFF8
  3763                           tblptrh	equ	0xFF7
  3764                           tblptrl	equ	0xFF6
  3765                           tablat	equ	0xFF5
  3766                           postinc0	equ	0xFEE
  3767                           wreg	equ	0xFE8
  3768                           postdec1	equ	0xFE5
  3769                           fsr1h	equ	0xFE2
  3770                           fsr1l	equ	0xFE1
  3771                           
  3772                           	psect	bssBANK0
  3773  000080                     __pbssBANK0:
  3774                           	opt stack 0
  3775  000080                     _menu:
  3776                           	opt stack 0
  3777  000080                     	ds	64
  3778  0000C0                     _hg_op:
  3779                           	opt stack 0
  3780  0000C0                     	ds	58
  3781  0000FA                     _cnt_ma:
  3782                           	opt stack 0
  3783  0000FA                     	ds	4
  3784                           tblptru	equ	0xFF8
  3785                           tblptrh	equ	0xFF7
  3786                           tblptrl	equ	0xFF6
  3787                           tablat	equ	0xFF5
  3788                           postinc0	equ	0xFEE
  3789                           wreg	equ	0xFE8
  3790                           postdec1	equ	0xFE5
  3791                           fsr1h	equ	0xFE2
  3792                           fsr1l	equ	0xFE1
  3793                           
  3794                           	psect	bssBANK1
  3795  000100                     __pbssBANK1:
  3796                           	opt stack 0
  3797  000100                     _r_motor:
  3798                           	opt stack 0
  3799  000100                     	ds	30
  3800  00011E                     _f_motor:
  3801                           	opt stack 0
  3802  00011E                     	ds	30
  3803  00013C                     _tv_s:
  3804                           	opt stack 0
  3805  00013C                     	ds	20
  3806  000150                     	ds	4
  3807  000154                     	ds	4
  3808  000158                     	ds	4
  3809  00015C                     _tmcnt:
  3810                           	opt stack 0
  3811  00015C                     	ds	4
  3812  000160                     _cnt_mb_sb:
  3813                           	opt stack 0
  3814  000160                     	ds	4
  3815  000164                     _cnt_mb_sa:
  3816                           	opt stack 0
  3817  000164                     	ds	4
  3818  000168                     _msleep:
  3819                           	opt stack 0
  3820  000168                     	ds	4
  3821  00016C                     _cnt_mb:
  3822                           	opt stack 0
  3823  00016C                     	ds	4
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           postinc0	equ	0xFEE
  3829                           wreg	equ	0xFE8
  3830                           postdec1	equ	0xFE5
  3831                           fsr1h	equ	0xFE2
  3832                           fsr1l	equ	0xFE1
  3833                           
  3834                           	psect	bssBANK2
  3835  000200                     __pbssBANK2:
  3836                           	opt stack 0
  3837  000200                     _write_buf:
  3838                           	opt stack 0
  3839  000200                     	ds	256
  3840                           tblptru	equ	0xFF8
  3841                           tblptrh	equ	0xFF7
  3842                           tblptrl	equ	0xFF6
  3843                           tablat	equ	0xFF5
  3844                           postinc0	equ	0xFEE
  3845                           wreg	equ	0xFE8
  3846                           postdec1	equ	0xFE5
  3847                           fsr1h	equ	0xFE2
  3848                           fsr1l	equ	0xFE1
  3849                           
  3850                           	psect	bssBANK3
  3851  000300                     __pbssBANK3:
  3852                           	opt stack 0
  3853  000300                     _read_buf:
  3854                           	opt stack 0
  3855  000300                     	ds	256
  3856                           tblptru	equ	0xFF8
  3857                           tblptrh	equ	0xFF7
  3858                           tblptrl	equ	0xFF6
  3859                           tablat	equ	0xFF5
  3860                           postinc0	equ	0xFEE
  3861                           wreg	equ	0xFE8
  3862                           postdec1	equ	0xFE5
  3863                           fsr1h	equ	0xFE2
  3864                           fsr1l	equ	0xFE1
  3865                           
  3866                           	psect	cstackBANK1
  3867  000170                     __pcstackBANK1:
  3868                           	opt stack 0
  3869  000170                     ?___lwdiv:
  3870                           	opt stack 0
  3871  000170                     delaynus@n:
  3872                           	opt stack 0
  3873  000170                     ___lwdiv@dividend:
  3874                           	opt stack 0
  3875  000170                     delay_nms@n:
  3876                           	opt stack 0
  3877  000170                     delay_pwm@n:
  3878                           	opt stack 0
  3879                           
  3880                           ; 4 bytes @ 0x0
  3881  000170                     	ds	2
  3882  000172                     ___lwdiv@divisor:
  3883                           	opt stack 0
  3884                           
  3885                           ; 2 bytes @ 0x2
  3886  000172                     	ds	2
  3887  000174                     ___lwdiv@counter:
  3888                           	opt stack 0
  3889  000174                     delay_nms@i:
  3890                           	opt stack 0
  3891                           
  3892                           ; 2 bytes @ 0x4
  3893  000174                     	ds	1
  3894  000175                     ___lwdiv@quotient:
  3895                           	opt stack 0
  3896                           
  3897                           ; 2 bytes @ 0x5
  3898  000175                     	ds	2
  3899  000177                     ?___lwmod:
  3900                           	opt stack 0
  3901  000177                     ___lwmod@dividend:
  3902                           	opt stack 0
  3903                           
  3904                           ; 2 bytes @ 0x7
  3905  000177                     	ds	2
  3906  000179                     ___lwmod@divisor:
  3907                           	opt stack 0
  3908                           
  3909                           ; 2 bytes @ 0x9
  3910  000179                     	ds	2
  3911  00017B                     ?_printf:
  3912                           	opt stack 0
  3913  00017B                     printf@f:
  3914                           	opt stack 0
  3915                           
  3916                           ; 2 bytes @ 0xB
  3917  00017B                     	ds	4
  3918  00017F                     ??_printf:
  3919                           
  3920                           ; 1 bytes @ 0xF
  3921  00017F                     	ds	1
  3922  000180                     printf@ap:
  3923                           	opt stack 0
  3924                           
  3925                           ; 2 bytes @ 0x10
  3926  000180                     	ds	2
  3927  000182                     printf@flag:
  3928                           	opt stack 0
  3929                           
  3930                           ; 1 bytes @ 0x12
  3931  000182                     	ds	1
  3932  000183                     printf@prec:
  3933                           	opt stack 0
  3934                           
  3935                           ; 1 bytes @ 0x13
  3936  000183                     	ds	1
  3937  000184                     printf@val:
  3938                           	opt stack 0
  3939                           
  3940                           ; 2 bytes @ 0x14
  3941  000184                     	ds	2
  3942  000186                     printf@c:
  3943                           	opt stack 0
  3944                           
  3945                           ; 1 bytes @ 0x16
  3946  000186                     	ds	1
  3947  000187                     ??_main:
  3948                           
  3949                           ; 1 bytes @ 0x17
  3950  000187                     	ds	2
  3951                           tblptru	equ	0xFF8
  3952                           tblptrh	equ	0xFF7
  3953                           tblptrl	equ	0xFF6
  3954                           tablat	equ	0xFF5
  3955                           postinc0	equ	0xFEE
  3956                           wreg	equ	0xFE8
  3957                           postdec1	equ	0xFE5
  3958                           fsr1h	equ	0xFE2
  3959                           fsr1l	equ	0xFE1
  3960                           
  3961                           	psect	cstackBANK0
  3962  0000FF                     __pcstackBANK0:
  3963                           	opt stack 0
  3964  0000FF                     putch@c:
  3965                           	opt stack 0
  3966  0000FF                     ___lwmod@counter:
  3967                           	opt stack 0
  3968                           
  3969                           ; 1 bytes @ 0x0
  3970  0000FF                     	ds	1
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           postinc0	equ	0xFEE
  3976                           wreg	equ	0xFE8
  3977                           postdec1	equ	0xFE5
  3978                           fsr1h	equ	0xFE2
  3979                           fsr1l	equ	0xFE1
  3980                           
  3981                           	psect	cstackCOMRAM
  3982  000036                     __pcstackCOMRAM:
  3983                           	opt stack 0
  3984  000036                     ?i2___lwdiv:
  3985                           	opt stack 0
  3986  000036                     i2putch@c:
  3987                           	opt stack 0
  3988  000036                     i2___lwdiv@dividend:
  3989                           	opt stack 0
  3990                           
  3991                           ; 2 bytes @ 0x0
  3992  000036                     	ds	2
  3993  000038                     i2___lwdiv@divisor:
  3994                           	opt stack 0
  3995                           
  3996                           ; 2 bytes @ 0x2
  3997  000038                     	ds	2
  3998  00003A                     i2___lwdiv@quotient:
  3999                           	opt stack 0
  4000                           
  4001                           ; 2 bytes @ 0x4
  4002  00003A                     	ds	2
  4003  00003C                     i2___lwdiv@counter:
  4004                           	opt stack 0
  4005                           
  4006                           ; 1 bytes @ 0x6
  4007  00003C                     	ds	1
  4008  00003D                     ?i2___lwmod:
  4009                           	opt stack 0
  4010  00003D                     i2___lwmod@dividend:
  4011                           	opt stack 0
  4012                           
  4013                           ; 2 bytes @ 0x7
  4014  00003D                     	ds	2
  4015  00003F                     i2___lwmod@divisor:
  4016                           	opt stack 0
  4017                           
  4018                           ; 2 bytes @ 0x9
  4019  00003F                     	ds	2
  4020  000041                     i2___lwmod@counter:
  4021                           	opt stack 0
  4022                           
  4023                           ; 1 bytes @ 0xB
  4024  000041                     	ds	1
  4025  000042                     ?i2_printf:
  4026                           	opt stack 0
  4027  000042                     i2printf@f:
  4028                           	opt stack 0
  4029                           
  4030                           ; 2 bytes @ 0xC
  4031  000042                     	ds	2
  4032  000044                     ??i2_printf:
  4033                           
  4034                           ; 1 bytes @ 0xE
  4035  000044                     	ds	1
  4036  000045                     i2printf@ap:
  4037                           	opt stack 0
  4038                           
  4039                           ; 2 bytes @ 0xF
  4040  000045                     	ds	2
  4041  000047                     i2printf@flag:
  4042                           	opt stack 0
  4043                           
  4044                           ; 1 bytes @ 0x11
  4045  000047                     	ds	1
  4046  000048                     i2printf@prec:
  4047                           	opt stack 0
  4048                           
  4049                           ; 1 bytes @ 0x12
  4050  000048                     	ds	1
  4051  000049                     i2printf@val:
  4052                           	opt stack 0
  4053                           
  4054                           ; 2 bytes @ 0x13
  4055  000049                     	ds	2
  4056  00004B                     i2printf@c:
  4057                           	opt stack 0
  4058                           
  4059                           ; 1 bytes @ 0x15
  4060  00004B                     	ds	1
  4061  00004C                     ??_ISR:
  4062                           
  4063                           ; 1 bytes @ 0x16
  4064  00004C                     	ds	14
  4065                           tblptru	equ	0xFF8
  4066                           tblptrh	equ	0xFF7
  4067                           tblptrl	equ	0xFF6
  4068                           tablat	equ	0xFF5
  4069                           postinc0	equ	0xFEE
  4070                           wreg	equ	0xFE8
  4071                           postdec1	equ	0xFE5
  4072                           fsr1h	equ	0xFE2
  4073                           fsr1l	equ	0xFE1
  4074                           
  4075 ;;
  4076 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  4077 ;;
  4078 ;; *************** function _main *****************
  4079 ;; Defined at:
  4080 ;;		line 90 in file "../Main.c"
  4081 ;; Parameters:    Size  Location     Type
  4082 ;;		None
  4083 ;; Auto vars:     Size  Location     Type
  4084 ;;		None
  4085 ;; Return value:  Size  Location     Type
  4086 ;;                  1    wreg      void 
  4087 ;; Registers used:
  4088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4089 ;; Tracked objects:
  4090 ;;		On entry : 0/0
  4091 ;;		On exit  : 0/0
  4092 ;;		Unchanged: 0/0
  4093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4094 ;;      Params:         0       0       0       0       0       0       0
  4095 ;;      Locals:         0       0       0       0       0       0       0
  4096 ;;      Temps:          0       0       2       0       0       0       0
  4097 ;;      Totals:         0       0       2       0       0       0       0
  4098 ;;Total ram usage:        2 bytes
  4099 ;; Hardware stack levels required when called:    5
  4100 ;; This function calls:
  4101 ;;		_AD_init
  4102 ;;		_HG_init
  4103 ;;		_MotorDriveInit
  4104 ;;		_Timer1Init
  4105 ;;		_buzz
  4106 ;;		_delay_pwm
  4107 ;;		_delaynus
  4108 ;;		_printf
  4109 ;;		_uart_init
  4110 ;; This function is called by:
  4111 ;;		Startup code after reset
  4112 ;; This function uses a non-reentrant model
  4113 ;;
  4114                           
  4115                           	psect	text0
  4116  000012                     __ptext0:
  4117                           	opt stack 0
  4118  000012                     _main:
  4119                           	opt stack 26
  4120                           
  4121                           ;Main.c: 92: flag_power_up =1;
  4122                           
  4123                           ;incstack = 0
  4124  000012  0E01               	movlw	1
  4125  000014  0100               	movlb	0	; () banked
  4126  000016  6FFE               	movwf	_flag_power_up& (0+255),b
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;Main.c: 93: uart_init();
  4130  000018  EC79  F007         	call	_uart_init	;wreg free
  4131                           
  4132                           ;Main.c: 94: AD_init();
  4133  00001C  EC70  F007         	call	_AD_init	;wreg free
  4134                           
  4135                           ;Main.c: 96: HG_init();
  4136  000020  EC63  F007         	call	_HG_init	;wreg free
  4137                           
  4138                           ;Main.c: 98: MotorDriveInit();
  4139  000024  ECFD  F006         	call	_MotorDriveInit	;wreg free
  4140                           
  4141                           ;Main.c: 100: Timer1Init();
  4142  000028  EC87  F007         	call	_Timer1Init	;wreg free
  4143                           
  4144                           ;Main.c: 103: cur_state_phb_ma=0;
  4145  00002C  0E00               	movlw	0
  4146  00002E  6E34               	movwf	_cur_state_phb_ma,c
  4147                           
  4148                           ;Main.c: 104: prev_state_phb_ma=0;
  4149  000030  0E00               	movlw	0
  4150  000032  6E33               	movwf	_prev_state_phb_ma,c
  4151                           
  4152                           ;Main.c: 105: cnt_ma = 0;
  4153  000034  0E00               	movlw	0
  4154  000036  0100               	movlb	0	; () banked
  4155  000038  6FFA               	movwf	_cnt_ma& (0+255),b
  4156  00003A  0E00               	movlw	0
  4157  00003C  6FFB               	movwf	(_cnt_ma+1)& (0+255),b
  4158  00003E  0E00               	movlw	0
  4159  000040  6FFC               	movwf	(_cnt_ma+2)& (0+255),b
  4160  000042  0E00               	movlw	0
  4161  000044  6FFD               	movwf	(_cnt_ma+3)& (0+255),b
  4162                           
  4163                           ; BSR set to: 0
  4164                           ;Main.c: 106: cnt_mb = 0;
  4165  000046  0E00               	movlw	0
  4166  000048  0101               	movlb	1	; () banked
  4167  00004A  6F6C               	movwf	_cnt_mb& (0+255),b
  4168  00004C  0E00               	movlw	0
  4169  00004E  6F6D               	movwf	(_cnt_mb+1)& (0+255),b
  4170  000050  0E00               	movlw	0
  4171  000052  6F6E               	movwf	(_cnt_mb+2)& (0+255),b
  4172  000054  0E00               	movlw	0
  4173  000056  6F6F               	movwf	(_cnt_mb+3)& (0+255),b
  4174                           
  4175                           ; BSR set to: 1
  4176                           ;Main.c: 108: hg_op.need_reset =1;
  4177  000058  0E01               	movlw	1
  4178  00005A  0100               	movlb	0	; () banked
  4179  00005C  6FC5               	movwf	(_hg_op+5)& (0+255),b
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;Main.c: 110: hg_op.cur_working_mode = 0x01;
  4183  00005E  0E01               	movlw	1
  4184  000060  0100               	movlb	0	; () banked
  4185  000062  6FC1               	movwf	(_hg_op+1)& (0+255),b
  4186                           
  4187                           ; BSR set to: 0
  4188                           ;Main.c: 112: hg_op.cnt_target_posrst = (412 );
  4189  000064  0E01               	movlw	1
  4190  000066  0100               	movlb	0	; () banked
  4191  000068  6FF7               	movwf	(_hg_op+55)& (0+255),b
  4192  00006A  0E9C               	movlw	156
  4193  00006C  6FF6               	movwf	(_hg_op+54)& (0+255),b
  4194                           
  4195                           ; BSR set to: 0
  4196                           ;Main.c: 113: hg_op.needle_len = 4;
  4197  00006E  0E04               	movlw	4
  4198  000070  0100               	movlb	0	; () banked
  4199  000072  6FD4               	movwf	(_hg_op+20)& (0+255),b
  4200                           
  4201                           ; BSR set to: 0
  4202                           ;Main.c: 114: hg_op.status_powerup = 0x00;
  4203  000074  0E00               	movlw	0
  4204  000076  0100               	movlb	0	; () banked
  4205  000078  6FC3               	movwf	(_hg_op+3)& (0+255),b
  4206                           
  4207                           ; BSR set to: 0
  4208                           ;Main.c: 115: hg_op.working_mode = 0x03;
  4209  00007A  0E03               	movlw	3
  4210  00007C  0100               	movlb	0	; () banked
  4211  00007E  6FC0               	movwf	_hg_op& (0+255),b
  4212                           
  4213                           ; BSR set to: 0
  4214                           ;Main.c: 117: hg_op.status_hit_lp = 0;
  4215  000080  0E00               	movlw	0
  4216  000082  0100               	movlb	0	; () banked
  4217  000084  6FC6               	movwf	(_hg_op+6)& (0+255),b
  4218                           
  4219                           ; BSR set to: 0
  4220                           ;Main.c: 119: hg_op.sat = 80;
  4221  000086  0E00               	movlw	0
  4222  000088  0100               	movlb	0	; () banked
  4223  00008A  6FC9               	movwf	(_hg_op+9)& (0+255),b
  4224  00008C  0E50               	movlw	80
  4225  00008E  6FC8               	movwf	(_hg_op+8)& (0+255),b
  4226                           
  4227                           ; BSR set to: 0
  4228                           ;Main.c: 120: hg_op.sbt = 100;
  4229  000090  0E00               	movlw	0
  4230  000092  0100               	movlb	0	; () banked
  4231  000094  6FCB               	movwf	(_hg_op+11)& (0+255),b
  4232  000096  0E64               	movlw	100
  4233  000098  6FCA               	movwf	(_hg_op+10)& (0+255),b
  4234                           
  4235                           ; BSR set to: 0
  4236                           ;Main.c: 122: hg_op.cnt_posa_target =43;
  4237  00009A  0E00               	movlw	0
  4238  00009C  0100               	movlb	0	; () banked
  4239  00009E  6FF1               	movwf	(_hg_op+49)& (0+255),b
  4240  0000A0  0E2B               	movlw	43
  4241  0000A2  6FF0               	movwf	(_hg_op+48)& (0+255),b
  4242                           
  4243                           ; BSR set to: 0
  4244                           ;Main.c: 123: hg_op.cnt_posb_target =43;
  4245  0000A4  0E00               	movlw	0
  4246  0000A6  0100               	movlb	0	; () banked
  4247  0000A8  6FF3               	movwf	(_hg_op+51)& (0+255),b
  4248  0000AA  0E2B               	movlw	43
  4249  0000AC  6FF2               	movwf	(_hg_op+50)& (0+255),b
  4250                           
  4251                           ; BSR set to: 0
  4252                           ;Main.c: 126: hg_op.cnt_pos_1mm =0;
  4253  0000AE  0E00               	movlw	0
  4254  0000B0  0100               	movlb	0	; () banked
  4255  0000B2  6FE9               	movwf	(_hg_op+41)& (0+255),b
  4256  0000B4  0E00               	movlw	0
  4257  0000B6  6FE8               	movwf	(_hg_op+40)& (0+255),b
  4258                           
  4259                           ; BSR set to: 0
  4260                           ;Main.c: 129: hg_op.working_mode = 0x01;
  4261  0000B8  0E01               	movlw	1
  4262  0000BA  0100               	movlb	0	; () banked
  4263  0000BC  6FC0               	movwf	_hg_op& (0+255),b
  4264                           
  4265                           ; BSR set to: 0
  4266                           ;Main.c: 132: {
  4267                           ;Main.c: 136: if(0)
  4268                           
  4269                           ;Main.c: 131: while(1)
  4270  0000BE  D007               	goto	l9377
  4271                           
  4272                           ;Main.c: 139: __nop();__nop();__nop();
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;Main.c: 137: {
  4276                           ;Main.c: 138: printf("sleep mode\r\n");
  4277  0000C0  F000               	nop	
  4278  0000C2  F000               	nop	
  4279  0000C4  F000               	nop	
  4280  0000C6  0003               	sleep		;# 
  4281                           
  4282                           ;Main.c: 141: __nop();__nop();__nop();
  4283  0000C8  F000               	nop	
  4284  0000CA  F000               	nop	
  4285  0000CC  F000               	nop	
  4286  0000CE                     l9377:
  4287                           
  4288                           ;Main.c: 144: }
  4289                           ;Main.c: 147: if(hg_op.need_reset)
  4290  0000CE  0100               	movlb	0	; () banked
  4291  0000D0  51C5               	movf	(_hg_op+5)& (0+255),w,b
  4292  0000D2  B4D8               	btfsc	status,2,c
  4293  0000D4  D109               	goto	l9451
  4294                           
  4295                           ; BSR set to: 0
  4296                           ;Main.c: 148: {
  4297                           ;Main.c: 149: if(PORTBbits.RB0 == 0)
  4298  0000D6  B081               	btfsc	3969,0,c	;volatile
  4299  0000D8  D039               	goto	l9391
  4300                           
  4301                           ; BSR set to: 0
  4302                           
  4303                           ;Main.c: 151: {
  4304                           ;Main.c: 152: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4305  0000DA  888C               	bsf	3980,4,c	;volatile
  4306  0000DC  948C               	bcf	3980,2,c	;volatile
  4307  0000DE  968C               	bcf	3980,3,c	;volatile
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;Main.c: 153: hg_op.posrst = 0;
  4311                           
  4312                           ; BSR set to: 0
  4313  0000E0  0E00               	movlw	0
  4314  0000E2  0100               	movlb	0	; () banked
  4315  0000E4  6FDE               	movwf	(_hg_op+30)& (0+255),b
  4316                           
  4317                           ;Main.c: 154: hg_op.cnt_posrst =0;
  4318  0000E6  0E00               	movlw	0
  4319  0000E8  0100               	movlb	0	; () banked
  4320  0000EA  6FF5               	movwf	(_hg_op+53)& (0+255),b
  4321  0000EC  0E00               	movlw	0
  4322  0000EE  6FF4               	movwf	(_hg_op+52)& (0+255),b
  4323                           
  4324                           ;Main.c: 155: hg_op.cnt_target_posrst = 600;
  4325  0000F0  0E02               	movlw	2
  4326  0000F2  0100               	movlb	0	; () banked
  4327  0000F4  6FF7               	movwf	(_hg_op+55)& (0+255),b
  4328  0000F6  0E58               	movlw	88
  4329  0000F8  6FF6               	movwf	(_hg_op+54)& (0+255),b
  4330                           
  4331                           ;Main.c: 157: while(hg_op.cnt_posrst < 300)
  4332  0000FA  D018               	goto	l9387
  4333  0000FC                     l193:
  4334                           
  4335                           ; BSR set to: 0
  4336                           ;Main.c: 158: {
  4337                           ;Main.c: 159: LATDbits.LD2 =1;
  4338  0000FC  848C               	bsf	3980,2,c	;volatile
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;Main.c: 160: delay_pwm(16*2);
  4342  0000FE  0E20               	movlw	32
  4343  000100  0101               	movlb	1	; () banked
  4344  000102  6F70               	movwf	delay_pwm@n& (0+255),b
  4345  000104  0E00               	movlw	0
  4346  000106  6F71               	movwf	(delay_pwm@n+1)& (0+255),b
  4347  000108  0E00               	movlw	0
  4348  00010A  6F72               	movwf	(delay_pwm@n+2)& (0+255),b
  4349  00010C  0E00               	movlw	0
  4350  00010E  6F73               	movwf	(delay_pwm@n+3)& (0+255),b
  4351  000110  EC14  F007         	call	_delay_pwm	;wreg free
  4352                           
  4353                           ;Main.c: 161: LATDbits.LD2 =0;
  4354  000114  948C               	bcf	3980,2,c	;volatile
  4355                           
  4356                           ;Main.c: 162: delay_pwm(16);
  4357  000116  0E10               	movlw	16
  4358  000118  0101               	movlb	1	; () banked
  4359  00011A  6F70               	movwf	delay_pwm@n& (0+255),b
  4360  00011C  0E00               	movlw	0
  4361  00011E  6F71               	movwf	(delay_pwm@n+1)& (0+255),b
  4362  000120  0E00               	movlw	0
  4363  000122  6F72               	movwf	(delay_pwm@n+2)& (0+255),b
  4364  000124  0E00               	movlw	0
  4365  000126  6F73               	movwf	(delay_pwm@n+3)& (0+255),b
  4366  000128  EC14  F007         	call	_delay_pwm	;wreg free
  4367  00012C                     l9387:
  4368  00012C  0E2C               	movlw	44
  4369  00012E  0100               	movlb	0	; () banked
  4370  000130  5DF4               	subwf	(_hg_op+52)& (0+255),w,b
  4371  000132  0E01               	movlw	1
  4372  000134  0100               	movlb	0	; () banked
  4373  000136  59F5               	subwfb	(_hg_op+53)& (0+255),w,b
  4374  000138  A0D8               	btfss	status,0,c
  4375  00013A  D7E0               	goto	l193
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;Main.c: 163: }
  4379                           ;Main.c: 165: hg_op.posrst = 0;
  4380                           
  4381                           ; BSR set to: 0
  4382  00013C  0E00               	movlw	0
  4383  00013E  0100               	movlb	0	; () banked
  4384  000140  6FDE               	movwf	(_hg_op+30)& (0+255),b
  4385                           
  4386                           ;Main.c: 166: hg_op.cnt_posrst =0;
  4387  000142  0E00               	movlw	0
  4388  000144  0100               	movlb	0	; () banked
  4389  000146  6FF5               	movwf	(_hg_op+53)& (0+255),b
  4390  000148  0E00               	movlw	0
  4391  00014A  6FF4               	movwf	(_hg_op+52)& (0+255),b
  4392  00014C                     l9391:
  4393                           
  4394                           ; BSR set to: 0
  4395                           ;Main.c: 168: }
  4396                           ;Main.c: 172: if(hg_op.needle_len == 4)
  4397  00014C  0E04               	movlw	4
  4398  00014E  0100               	movlb	0	; () banked
  4399  000150  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  4400  000152  A4D8               	btfss	status,2,c
  4401  000154  D005               	goto	l9395
  4402                           
  4403                           ; BSR set to: 0
  4404                           ;Main.c: 173: {
  4405                           ;Main.c: 174: hg_op.cnt_target_posrst = 300;
  4406  000156  0E01               	movlw	1
  4407  000158  0100               	movlb	0	; () banked
  4408  00015A  6FF7               	movwf	(_hg_op+55)& (0+255),b
  4409  00015C  0E2C               	movlw	44
  4410  00015E  D013               	goto	L2
  4411  000160                     l9395:
  4412                           
  4413                           ; BSR set to: 0
  4414                           ;Main.c: 176: else if(hg_op.needle_len == 6)
  4415  000160  0E06               	movlw	6
  4416  000162  0100               	movlb	0	; () banked
  4417  000164  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  4418  000166  A4D8               	btfss	status,2,c
  4419  000168  D005               	goto	l9399
  4420                           
  4421                           ; BSR set to: 0
  4422                           ;Main.c: 177: {
  4423                           ;Main.c: 178: hg_op.cnt_target_posrst = (412 );
  4424  00016A  0E01               	movlw	1
  4425  00016C  0100               	movlb	0	; () banked
  4426  00016E  6FF7               	movwf	(_hg_op+55)& (0+255),b
  4427  000170  0E9C               	movlw	156
  4428  000172  D009               	goto	L2
  4429  000174                     l9399:
  4430                           
  4431                           ; BSR set to: 0
  4432                           ;Main.c: 180: else if(hg_op.needle_len == 13)
  4433  000174  0E0D               	movlw	13
  4434  000176  0100               	movlb	0	; () banked
  4435  000178  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  4436  00017A  A4D8               	btfss	status,2,c
  4437  00017C  D005               	goto	l9403
  4438                           
  4439                           ; BSR set to: 0
  4440                           ;Main.c: 181: {
  4441                           ;Main.c: 182: hg_op.cnt_target_posrst = (1);
  4442  00017E  0E00               	movlw	0
  4443  000180  0100               	movlb	0	; () banked
  4444  000182  6FF7               	movwf	(_hg_op+55)& (0+255),b
  4445  000184  0E01               	movlw	1
  4446  000186                     L2:
  4447  000186  6FF6               	movwf	(_hg_op+54)& (0+255),b
  4448  000188                     l9403:
  4449                           
  4450                           ; BSR set to: 0
  4451  000188  888C               	bsf	3980,4,c	;volatile
  4452                           
  4453                           ; BSR set to: 0
  4454  00018A  948C               	bcf	3980,2,c	;volatile
  4455                           
  4456                           ; BSR set to: 0
  4457  00018C  968C               	bcf	3980,3,c	;volatile
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;Main.c: 188: hg_op.status_hit_lp = 0;
  4461  00018E  0E00               	movlw	0
  4462  000190  0100               	movlb	0	; () banked
  4463  000192  6FC6               	movwf	(_hg_op+6)& (0+255),b
  4464                           
  4465                           ; BSR set to: 0
  4466                           ;Main.c: 189: LATDbits.LD4 =1;
  4467  000194  888C               	bsf	3980,4,c	;volatile
  4468                           
  4469                           ;Main.c: 190: while(hg_op.status_hit_lp == 0)
  4470  000196  D010               	goto	l9415
  4471  000198                     l203:
  4472                           
  4473                           ; BSR set to: 0
  4474                           ;Main.c: 191: {
  4475                           ;Main.c: 192: LATDbits.LD3 =1;
  4476  000198  868C               	bsf	3980,3,c	;volatile
  4477                           
  4478                           ; BSR set to: 0
  4479                           ;Main.c: 193: delaynus(10);
  4480  00019A  0E00               	movlw	0
  4481  00019C  0101               	movlb	1	; () banked
  4482  00019E  6F71               	movwf	(delaynus@n+1)& (0+255),b
  4483  0001A0  0E0A               	movlw	10
  4484  0001A2  6F70               	movwf	delaynus@n& (0+255),b
  4485  0001A4  EC37  F007         	call	_delaynus	;wreg free
  4486                           
  4487                           ;Main.c: 194: LATDbits.LD3 =0;
  4488  0001A8  968C               	bcf	3980,3,c	;volatile
  4489                           
  4490                           ;Main.c: 195: delaynus(10);
  4491  0001AA  0E00               	movlw	0
  4492  0001AC  0101               	movlb	1	; () banked
  4493  0001AE  6F71               	movwf	(delaynus@n+1)& (0+255),b
  4494  0001B0  0E0A               	movlw	10
  4495  0001B2  6F70               	movwf	delaynus@n& (0+255),b
  4496  0001B4  EC37  F007         	call	_delaynus	;wreg free
  4497  0001B8                     l9415:
  4498  0001B8  0100               	movlb	0	; () banked
  4499  0001BA  51C6               	movf	(_hg_op+6)& (0+255),w,b
  4500  0001BC  B4D8               	btfsc	status,2,c
  4501  0001BE  D7EC               	goto	l203
  4502                           
  4503                           ; BSR set to: 0
  4504                           
  4505                           ; BSR set to: 0
  4506                           ;Main.c: 197: }
  4507                           ;Main.c: 199: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4508  0001C0  888C               	bsf	3980,4,c	;volatile
  4509  0001C2  948C               	bcf	3980,2,c	;volatile
  4510  0001C4  968C               	bcf	3980,3,c	;volatile
  4511                           
  4512                           ; BSR set to: 0
  4513                           ;Main.c: 200: if(hg_op.needle_len == 13)
  4514                           
  4515                           ; BSR set to: 0
  4516  0001C6  0E0D               	movlw	13
  4517  0001C8  0100               	movlb	0	; () banked
  4518  0001CA  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  4519  0001CC  A4D8               	btfss	status,2,c
  4520  0001CE  D004               	goto	l207
  4521                           
  4522                           ; BSR set to: 0
  4523                           ;Main.c: 201: {
  4524                           ;Main.c: 202: hg_op.need_reset =0;
  4525  0001D0  0E00               	movlw	0
  4526  0001D2  0100               	movlb	0	; () banked
  4527  0001D4  6FC5               	movwf	(_hg_op+5)& (0+255),b
  4528                           
  4529                           ;Main.c: 203: }
  4530  0001D6  D05A               	goto	l9437
  4531  0001D8                     l207:
  4532                           
  4533                           ; BSR set to: 0
  4534                           ;Main.c: 204: else
  4535                           ;Main.c: 205: {
  4536                           ;Main.c: 206: LATDbits.LD4 =1;
  4537  0001D8  888C               	bsf	3980,4,c	;volatile
  4538                           
  4539                           ; BSR set to: 0
  4540                           ;Main.c: 207: hg_op.posrst = 0;
  4541  0001DA  0E00               	movlw	0
  4542  0001DC  0100               	movlb	0	; () banked
  4543  0001DE  6FDE               	movwf	(_hg_op+30)& (0+255),b
  4544                           
  4545                           ;Main.c: 208: hg_op.cnt_posrst =0;
  4546  0001E0  0E00               	movlw	0
  4547  0001E2  0100               	movlb	0	; () banked
  4548  0001E4  6FF5               	movwf	(_hg_op+53)& (0+255),b
  4549  0001E6  0E00               	movlw	0
  4550  0001E8  6FF4               	movwf	(_hg_op+52)& (0+255),b
  4551                           
  4552                           ;Main.c: 209: hg_op.in_reset = 1;
  4553  0001EA  0E01               	movlw	1
  4554  0001EC  0100               	movlb	0	; () banked
  4555  0001EE  6FC7               	movwf	(_hg_op+7)& (0+255),b
  4556                           
  4557                           ;Main.c: 211: while(hg_op.cnt_posrst < hg_op.cnt_target_posrst)
  4558  0001F0  D010               	goto	l9427
  4559  0001F2                     l210:
  4560                           
  4561                           ; BSR set to: 0
  4562                           ;Main.c: 212: {
  4563                           ;Main.c: 213: LATDbits.LD2 =1;
  4564  0001F2  848C               	bsf	3980,2,c	;volatile
  4565                           
  4566                           ; BSR set to: 0
  4567                           ;Main.c: 214: delaynus(10);
  4568  0001F4  0E00               	movlw	0
  4569  0001F6  0101               	movlb	1	; () banked
  4570  0001F8  6F71               	movwf	(delaynus@n+1)& (0+255),b
  4571  0001FA  0E0A               	movlw	10
  4572  0001FC  6F70               	movwf	delaynus@n& (0+255),b
  4573  0001FE  EC37  F007         	call	_delaynus	;wreg free
  4574                           
  4575                           ;Main.c: 215: LATDbits.LD2 =0;
  4576  000202  948C               	bcf	3980,2,c	;volatile
  4577                           
  4578                           ;Main.c: 216: delaynus(10);
  4579  000204  0E00               	movlw	0
  4580  000206  0101               	movlb	1	; () banked
  4581  000208  6F71               	movwf	(delaynus@n+1)& (0+255),b
  4582  00020A  0E0A               	movlw	10
  4583  00020C  6F70               	movwf	delaynus@n& (0+255),b
  4584  00020E  EC37  F007         	call	_delaynus	;wreg free
  4585  000212                     l9427:
  4586  000212  0100               	movlb	0	; () banked
  4587  000214  51F6               	movf	(_hg_op+54)& (0+255),w,b
  4588  000216  0100               	movlb	0	; () banked
  4589  000218  5DF4               	subwf	(_hg_op+52)& (0+255),w,b
  4590  00021A  0100               	movlb	0	; () banked
  4591  00021C  51F7               	movf	(_hg_op+55)& (0+255),w,b
  4592  00021E  0100               	movlb	0	; () banked
  4593  000220  59F5               	subwfb	(_hg_op+53)& (0+255),w,b
  4594  000222  A0D8               	btfss	status,0,c
  4595  000224  D7E6               	goto	l210
  4596                           
  4597                           ; BSR set to: 0
  4598                           ;Main.c: 217: }
  4599                           ;Main.c: 219: LATDbits.LD2 =0;
  4600  000226  948C               	bcf	3980,2,c	;volatile
  4601                           
  4602                           ;Main.c: 220: LATDbits.LD3 =1;
  4603  000228  868C               	bsf	3980,3,c	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;Main.c: 222: bv = PORTBbits.RB2;
  4607  00022A  A481               	btfss	3969,2,c	;volatile
  4608  00022C  D004               	goto	u10550
  4609  00022E  0101               	movlb	1	; () banked
  4610  000230  6B87               	clrf	??_main& (0+255),b
  4611  000232  2B87               	incf	??_main& (0+255),f,b
  4612  000234  D002               	goto	u10558
  4613  000236                     u10550:
  4614  000236  0101               	movlb	1	; () banked
  4615  000238  6B87               	clrf	??_main& (0+255),b
  4616  00023A                     u10558:
  4617  00023A  0101               	movlb	1	; () banked
  4618  00023C  5187               	movf	??_main& (0+255),w,b
  4619  00023E  6E11               	movwf	_bv,c
  4620  000240  6A12               	clrf	_bv+1,c
  4621                           
  4622                           ; BSR set to: 1
  4623                           
  4624                           ;Main.c: 223: do {TMR1 =0;T1CONbits.TMR1ON =1;}while(0);
  4625  000242  0E00               	movlw	0
  4626  000244  6ECF               	movwf	4047,c	;volatile
  4627  000246  0E00               	movlw	0
  4628  000248  6ECE               	movwf	4046,c	;volatile
  4629                           
  4630                           ; BSR set to: 1
  4631  00024A  80CD               	bsf	4045,0,c	;volatile
  4632  00024C                     l9433:
  4633                           
  4634                           ; BSR set to: 1
  4635  00024C  A481               	btfss	3969,2,c	;volatile
  4636  00024E  D002               	goto	u10560
  4637  000250  0E01               	movlw	1
  4638  000252  D001               	goto	u10570
  4639  000254                     u10560:
  4640  000254  0E00               	movlw	0
  4641  000256                     u10570:
  4642  000256  0101               	movlb	1	; () banked
  4643  000258  6F87               	movwf	??_main& (0+255),b
  4644  00025A  6B88               	clrf	(??_main+1)& (0+255),b
  4645  00025C  5011               	movf	_bv,w,c
  4646  00025E  0101               	movlb	1	; () banked
  4647  000260  1987               	xorwf	??_main& (0+255),w,b
  4648  000262  E105               	bnz	u10580
  4649  000264  5012               	movf	_bv+1,w,c
  4650  000266  0101               	movlb	1	; () banked
  4651  000268  1988               	xorwf	(??_main+1)& (0+255),w,b
  4652  00026A  B4D8               	btfsc	status,2,c
  4653  00026C  D7EF               	goto	l9433
  4654  00026E                     u10580:
  4655                           
  4656                           ; BSR set to: 1
  4657                           ;Main.c: 225: T1CONbits.TMR1ON =0;
  4658  00026E  90CD               	bcf	4045,0,c	;volatile
  4659                           
  4660                           ; BSR set to: 1
  4661                           ;Main.c: 226: if(TMR1 > 1006)
  4662  000270  0EEF               	movlw	239
  4663  000272  5CCE               	subwf	4046,w,c	;volatile
  4664  000274  0E03               	movlw	3
  4665  000276  58CF               	subwfb	4047,w,c	;volatile
  4666  000278  A0D8               	btfss	status,0,c
  4667  00027A  D005               	goto	l221
  4668                           
  4669                           ; BSR set to: 1
  4670                           
  4671                           ;Main.c: 227: {
  4672                           ;Main.c: 228: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4673  00027C  888C               	bsf	3980,4,c	;volatile
  4674  00027E  948C               	bcf	3980,2,c	;volatile
  4675  000280  968C               	bcf	3980,3,c	;volatile
  4676                           
  4677                           ; BSR set to: 1
  4678                           ;Main.c: 229: break;
  4679  000282  EF07  F000         	goto	start
  4680  000286                     l221:
  4681                           
  4682                           ; BSR set to: 1
  4683  000286  888C               	bsf	3980,4,c	;volatile
  4684  000288  948C               	bcf	3980,2,c	;volatile
  4685  00028A  968C               	bcf	3980,3,c	;volatile
  4686  00028C                     l9437:
  4687                           
  4688                           ;Main.c: 241: }
  4689                           ;Main.c: 244: printf("A-reset len is %d\r\n",hg_op.cnt_posrst);
  4690  00028C  0E8B               	movlw	low STR_3
  4691  00028E  0101               	movlb	1	; () banked
  4692  000290  6F7B               	movwf	printf@f& (0+255),b
  4693  000292  0E7F               	movlw	high STR_3
  4694  000294  0101               	movlb	1	; () banked
  4695  000296  6F7C               	movwf	(printf@f+1)& (0+255),b
  4696  000298  C0F4  F17D         	movff	_hg_op+52,?_printf+2
  4697  00029C  C0F5  F17E         	movff	_hg_op+53,?_printf+3
  4698  0002A0  ECA7  F004         	call	_printf	;wreg free
  4699                           
  4700                           ;Main.c: 245: delaynus(50 * 1000);
  4701  0002A4  0EC3               	movlw	195
  4702  0002A6  0101               	movlb	1	; () banked
  4703  0002A8  6F71               	movwf	(delaynus@n+1)& (0+255),b
  4704  0002AA  0E50               	movlw	80
  4705  0002AC  6F70               	movwf	delaynus@n& (0+255),b
  4706  0002AE  EC37  F007         	call	_delaynus	;wreg free
  4707                           
  4708                           ;Main.c: 247: printf("B-reset len is %d\r\n",hg_op.cnt_posrst);
  4709  0002B2  0E9F               	movlw	low STR_4
  4710  0002B4  0101               	movlb	1	; () banked
  4711  0002B6  6F7B               	movwf	printf@f& (0+255),b
  4712  0002B8  0E7F               	movlw	high STR_4
  4713  0002BA  0101               	movlb	1	; () banked
  4714  0002BC  6F7C               	movwf	(printf@f+1)& (0+255),b
  4715  0002BE  C0F4  F17D         	movff	_hg_op+52,?_printf+2
  4716  0002C2  C0F5  F17E         	movff	_hg_op+53,?_printf+3
  4717  0002C6  ECA7  F004         	call	_printf	;wreg free
  4718                           
  4719                           ;Main.c: 248: hg_op.need_reset =0;
  4720  0002CA  0E00               	movlw	0
  4721  0002CC  0100               	movlb	0	; () banked
  4722  0002CE  6FC5               	movwf	(_hg_op+5)& (0+255),b
  4723                           
  4724                           ; BSR set to: 0
  4725                           ;Main.c: 249: hg_op.status_hit_lp =0;
  4726  0002D0  0E00               	movlw	0
  4727  0002D2  0100               	movlb	0	; () banked
  4728  0002D4  6FC6               	movwf	(_hg_op+6)& (0+255),b
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;Main.c: 250: hg_op.cnt_posrst =0;
  4732  0002D6  0E00               	movlw	0
  4733  0002D8  0100               	movlb	0	; () banked
  4734  0002DA  6FF5               	movwf	(_hg_op+53)& (0+255),b
  4735  0002DC  0E00               	movlw	0
  4736  0002DE  6FF4               	movwf	(_hg_op+52)& (0+255),b
  4737                           
  4738                           ; BSR set to: 0
  4739                           ;Main.c: 251: hg_op.posrst =0;
  4740  0002E0  0E00               	movlw	0
  4741  0002E2  0100               	movlb	0	; () banked
  4742  0002E4  6FDE               	movwf	(_hg_op+30)& (0+255),b
  4743                           
  4744                           ;Main.c: 252: }
  4745  0002E6  D6F3               	goto	l9377
  4746  0002E8                     l9451:
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;Main.c: 253: else
  4750                           ;Main.c: 254: {
  4751                           ;Main.c: 257: if(hg_op.working_mode == 0x01)
  4752  0002E8  0100               	movlb	0	; () banked
  4753  0002EA  05C0               	decf	_hg_op& (0+255),w,b
  4754  0002EC  A4D8               	btfss	status,2,c
  4755  0002EE  D156               	goto	l224
  4756                           
  4757                           ; BSR set to: 0
  4758                           ;Main.c: 271: else
  4759                           ;Main.c: 272: {
  4760                           ;Main.c: 273: if(hg_op.drops_sa == 1)
  4761                           
  4762                           ; BSR set to: 0
  4763                           
  4764                           ;Main.c: 270: }
  4765                           
  4766                           ;Main.c: 269: hg_op.need_reset =1;
  4767                           
  4768                           ;Main.c: 268: hg_op.working_mode = 0x03;
  4769                           
  4770                           ; BSR set to: 0
  4771                           ;Main.c: 267: hg_op.acting_flag =0;
  4772                           
  4773                           ; BSR set to: 0
  4774                           
  4775                           ; BSR set to: 0
  4776                           
  4777                           ; BSR set to: 0
  4778                           ;Main.c: 266: do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  4779                           
  4780                           ; BSR set to: 0
  4781                           
  4782                           ; BSR set to: 0
  4783                           
  4784                           ; BSR set to: 0
  4785                           
  4786                           ;Main.c: 264: do{do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);LATDbits.LD0 =0;LATDbits.L
      +                          D1 =1; LATCbits.LC2 =1;}while(0);
  4787                           
  4788                           ; BSR set to: 0
  4789                           
  4790                           ; BSR set to: 0
  4791                           
  4792                           ;Main.c: 262: {
  4793                           ;Main.c: 263: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4794                           
  4795                           ; BSR set to: 0
  4796                           ;Main.c: 258: {
  4797                           ;Main.c: 261: if(0)
  4798  0002F0  0100               	movlb	0	; () banked
  4799  0002F2  05DB               	decf	(_hg_op+27)& (0+255),w,b
  4800  0002F4  A4D8               	btfss	status,2,c
  4801  0002F6  D080               	goto	l9485
  4802                           
  4803                           ; BSR set to: 0
  4804                           ;Main.c: 274: {
  4805                           ;Main.c: 275: printf("in sa drops\n");
  4806  0002F8  0EDF               	movlw	low STR_5
  4807  0002FA  0101               	movlb	1	; () banked
  4808  0002FC  6F7B               	movwf	printf@f& (0+255),b
  4809  0002FE  0E7F               	movlw	high STR_5
  4810  000300  0101               	movlb	1	; () banked
  4811  000302  6F7C               	movwf	(printf@f+1)& (0+255),b
  4812  000304  ECA7  F004         	call	_printf	;wreg free
  4813                           
  4814                           ;Main.c: 278: if( hg_op.needle_len == 13)
  4815  000308  0E0D               	movlw	13
  4816  00030A  0100               	movlb	0	; () banked
  4817  00030C  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  4818  00030E  A4D8               	btfss	status,2,c
  4819  000310  D00F               	goto	l241
  4820                           
  4821                           ; BSR set to: 0
  4822                           ;Main.c: 279: {
  4823                           ;Main.c: 280: LATDbits.LD4 =1;LATDbits.LD2 =1;
  4824  000312  888C               	bsf	3980,4,c	;volatile
  4825  000314  848C               	bsf	3980,2,c	;volatile
  4826  000316                     l9465:
  4827                           
  4828                           ; BSR set to: 0
  4829  000316  0100               	movlb	0	; () banked
  4830  000318  BFE9               	btfsc	(_hg_op+41)& (0+255),7,b
  4831  00031A  D7FD               	goto	l9465
  4832  00031C  0100               	movlb	0	; () banked
  4833  00031E  51E9               	movf	(_hg_op+41)& (0+255),w,b
  4834  000320  E106               	bnz	u10630
  4835  000322  0E9C               	movlw	156
  4836  000324  0100               	movlb	0	; () banked
  4837  000326  5DE8               	subwf	(_hg_op+40)& (0+255),w,b
  4838  000328  B0D8               	btfsc	status,0,c
  4839  00032A  D138               	goto	l224
  4840  00032C  D7F4               	goto	l9465
  4841  00032E                     u10630:
  4842                           
  4843                           ; BSR set to: 0
  4844                           ;Main.c: 282: }
  4845  00032E  D136               	goto	l224
  4846  000330                     l241:
  4847                           
  4848                           ; BSR set to: 0
  4849  000330  888C               	bsf	3980,4,c	;volatile
  4850  000332  948C               	bcf	3980,2,c	;volatile
  4851  000334  968C               	bcf	3980,3,c	;volatile
  4852                           
  4853                           ; BSR set to: 0
  4854                           ;Main.c: 286: LATDbits.LD4 =1;
  4855  000336  888C               	bsf	3980,4,c	;volatile
  4856                           
  4857                           ;Main.c: 287: LATDbits.LD3 =0;
  4858  000338  968C               	bcf	3980,3,c	;volatile
  4859                           
  4860                           ;Main.c: 288: LATDbits.LD2 =1;
  4861  00033A  848C               	bsf	3980,2,c	;volatile
  4862  00033C                     l9467:
  4863                           
  4864                           ; BSR set to: 0
  4865  00033C  0100               	movlb	0	; () banked
  4866  00033E  BFE9               	btfsc	(_hg_op+41)& (0+255),7,b
  4867  000340  D7FD               	goto	l9467
  4868  000342  0100               	movlb	0	; () banked
  4869  000344  51E9               	movf	(_hg_op+41)& (0+255),w,b
  4870  000346  E105               	bnz	u10640
  4871  000348  0E96               	movlw	150
  4872  00034A  0100               	movlb	0	; () banked
  4873  00034C  5DE8               	subwf	(_hg_op+40)& (0+255),w,b
  4874  00034E  A0D8               	btfss	status,0,c
  4875  000350  D7F5               	goto	l9467
  4876  000352                     u10640:
  4877                           
  4878                           ; BSR set to: 0
  4879                           ;Main.c: 294: LATDbits.LD3 =1;
  4880  000352  868C               	bsf	3980,3,c	;volatile
  4881                           
  4882                           ;Main.c: 295: LATDbits.LD2 =0;
  4883  000354  948C               	bcf	3980,2,c	;volatile
  4884  000356                     l9469:
  4885                           
  4886                           ;Main.c: 299: {
  4887                           ;Main.c: 302: bv = PORTBbits.RB2;
  4888  000356  A481               	btfss	3969,2,c	;volatile
  4889  000358  D004               	goto	u10650
  4890  00035A  0101               	movlb	1	; () banked
  4891  00035C  6B87               	clrf	??_main& (0+255),b
  4892  00035E  2B87               	incf	??_main& (0+255),f,b
  4893  000360  D002               	goto	u10658
  4894  000362                     u10650:
  4895  000362  0101               	movlb	1	; () banked
  4896  000364  6B87               	clrf	??_main& (0+255),b
  4897  000366                     u10658:
  4898  000366  0101               	movlb	1	; () banked
  4899  000368  5187               	movf	??_main& (0+255),w,b
  4900  00036A  6E11               	movwf	_bv,c
  4901  00036C  6A12               	clrf	_bv+1,c
  4902                           
  4903                           ; BSR set to: 1
  4904                           
  4905                           ;Main.c: 303: do {TMR1 =0;T1CONbits.TMR1ON =1;}while(0);
  4906  00036E  0E00               	movlw	0
  4907  000370  6ECF               	movwf	4047,c	;volatile
  4908  000372  0E00               	movlw	0
  4909  000374  6ECE               	movwf	4046,c	;volatile
  4910                           
  4911                           ; BSR set to: 1
  4912  000376  80CD               	bsf	4045,0,c	;volatile
  4913  000378                     l9473:
  4914                           
  4915                           ; BSR set to: 1
  4916  000378  A481               	btfss	3969,2,c	;volatile
  4917  00037A  D002               	goto	u10660
  4918  00037C  0E01               	movlw	1
  4919  00037E  D001               	goto	u10670
  4920  000380                     u10660:
  4921  000380  0E00               	movlw	0
  4922  000382                     u10670:
  4923  000382  0101               	movlb	1	; () banked
  4924  000384  6F87               	movwf	??_main& (0+255),b
  4925  000386  6B88               	clrf	(??_main+1)& (0+255),b
  4926  000388  5011               	movf	_bv,w,c
  4927  00038A  0101               	movlb	1	; () banked
  4928  00038C  1987               	xorwf	??_main& (0+255),w,b
  4929  00038E  E105               	bnz	u10680
  4930  000390  5012               	movf	_bv+1,w,c
  4931  000392  0101               	movlb	1	; () banked
  4932  000394  1988               	xorwf	(??_main+1)& (0+255),w,b
  4933  000396  B4D8               	btfsc	status,2,c
  4934  000398  D7EF               	goto	l9473
  4935  00039A                     u10680:
  4936                           
  4937                           ; BSR set to: 1
  4938                           ;Main.c: 305: T1CONbits.TMR1ON =0;
  4939  00039A  90CD               	bcf	4045,0,c	;volatile
  4940                           
  4941                           ; BSR set to: 1
  4942                           ;Main.c: 306: if(TMR1 > 1006)
  4943  00039C  0EEF               	movlw	239
  4944  00039E  5CCE               	subwf	4046,w,c	;volatile
  4945  0003A0  0E03               	movlw	3
  4946  0003A2  58CF               	subwfb	4047,w,c	;volatile
  4947  0003A4  A0D8               	btfss	status,0,c
  4948  0003A6  D7D7               	goto	l9469
  4949                           
  4950                           ; BSR set to: 1
  4951                           
  4952                           ;Main.c: 307: {
  4953                           ;Main.c: 308: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4954  0003A8  888C               	bsf	3980,4,c	;volatile
  4955  0003AA  948C               	bcf	3980,2,c	;volatile
  4956  0003AC  968C               	bcf	3980,3,c	;volatile
  4957                           
  4958                           ; BSR set to: 1
  4959                           
  4960                           ; BSR set to: 1
  4961                           ;Main.c: 310: }
  4962                           ;Main.c: 333: }
  4963                           ;Main.c: 338: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  4964                           
  4965                           ; BSR set to: 1
  4966                           
  4967                           ; BSR set to: 1
  4968                           
  4969                           ; BSR set to: 1
  4970                           ;Main.c: 309: break;
  4971  0003AE  888C               	bsf	3980,4,c	;volatile
  4972  0003B0  948C               	bcf	3980,2,c	;volatile
  4973  0003B2  968C               	bcf	3980,3,c	;volatile
  4974                           
  4975                           ; BSR set to: 1
  4976                           ;Main.c: 340: printf("333-hg_op.cnt_posa is %d\r\n", hg_op.cnt_pos_1mm );
  4977                           
  4978                           ; BSR set to: 1
  4979  0003B4  0E3A               	movlw	low STR_6
  4980  0003B6  0101               	movlb	1	; () banked
  4981  0003B8  6F7B               	movwf	printf@f& (0+255),b
  4982  0003BA  0E7F               	movlw	high STR_6
  4983  0003BC  0101               	movlb	1	; () banked
  4984  0003BE  6F7C               	movwf	(printf@f+1)& (0+255),b
  4985  0003C0  C0E8  F17D         	movff	_hg_op+40,?_printf+2
  4986  0003C4  C0E9  F17E         	movff	_hg_op+41,?_printf+3
  4987  0003C8  ECA7  F004         	call	_printf	;wreg free
  4988                           
  4989                           ;Main.c: 344: ; ;
  4990                           ;Main.c: 346: printf("444-hg_op.cnt_posa is %d\r\n", hg_op.cnt_pos_1mm );
  4991  0003CC  0E55               	movlw	low STR_7
  4992  0003CE  0101               	movlb	1	; () banked
  4993  0003D0  6F7B               	movwf	printf@f& (0+255),b
  4994  0003D2  0E7F               	movlw	high STR_7
  4995  0003D4  0101               	movlb	1	; () banked
  4996  0003D6  6F7C               	movwf	(printf@f+1)& (0+255),b
  4997  0003D8  C0E8  F17D         	movff	_hg_op+40,?_printf+2
  4998  0003DC  C0E9  F17E         	movff	_hg_op+41,?_printf+3
  4999  0003E0  ECA7  F004         	call	_printf	;wreg free
  5000                           
  5001                           ;Main.c: 347: hg_op.drops_sa = 0;
  5002  0003E4  0E00               	movlw	0
  5003  0003E6  0100               	movlb	0	; () banked
  5004  0003E8  6FDB               	movwf	(_hg_op+27)& (0+255),b
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;Main.c: 348: hg_op.drops_sb = 0;
  5008  0003EA  0E00               	movlw	0
  5009  0003EC  0100               	movlb	0	; () banked
  5010  0003EE  6FDC               	movwf	(_hg_op+28)& (0+255),b
  5011                           
  5012                           ; BSR set to: 0
  5013                           ;Main.c: 349: hg_op.drops_push = 1;
  5014  0003F0  0E01               	movlw	1
  5015  0003F2  0100               	movlb	0	; () banked
  5016  0003F4  6FDD               	movwf	(_hg_op+29)& (0+255),b
  5017                           
  5018                           ; BSR set to: 0
  5019                           ;Main.c: 350: }
  5020                           ;Main.c: 351: }
  5021  0003F6  D0D2               	goto	l224
  5022  0003F8                     l9485:
  5023                           
  5024                           ; BSR set to: 0
  5025                           ;Main.c: 352: else if(hg_op.drops_push == 1)
  5026  0003F8  0100               	movlb	0	; () banked
  5027  0003FA  05DD               	decf	(_hg_op+29)& (0+255),w,b
  5028  0003FC  A4D8               	btfss	status,2,c
  5029  0003FE  D02B               	goto	l9507
  5030                           
  5031                           ; BSR set to: 0
  5032                           ;Main.c: 353: {
  5033                           ;Main.c: 356: cnt_push =0;
  5034  000400  0E00               	movlw	0
  5035  000402  6E14               	movwf	_cnt_push+1,c
  5036  000404  0E00               	movlw	0
  5037  000406  6E13               	movwf	_cnt_push,c
  5038                           
  5039                           ; BSR set to: 0
  5040                           
  5041                           ; BSR set to: 0
  5042                           
  5043                           ; BSR set to: 0
  5044                           
  5045                           ;Main.c: 358: do{do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);LATDbits.LD0 =1;LATDbits.L
      +                          D1 =0; LATCbits.LC2 =1; }while(0);
  5046  000408  908C               	bcf	3980,0,c	;volatile
  5047                           
  5048                           ; BSR set to: 0
  5049  00040A  928C               	bcf	3980,1,c	;volatile
  5050                           
  5051                           ; BSR set to: 0
  5052                           
  5053                           ; BSR set to: 0
  5054  00040C  808C               	bsf	3980,0,c	;volatile
  5055                           
  5056                           ; BSR set to: 0
  5057  00040E  928C               	bcf	3980,1,c	;volatile
  5058                           
  5059                           ; BSR set to: 0
  5060  000410  848B               	bsf	3979,2,c	;volatile
  5061                           
  5062                           ; BSR set to: 0
  5063                           ;Main.c: 360: while(cnt_push < hg_op.push_len)
  5064  000412  D008               	goto	l9503
  5065  000414                     l267:
  5066  000414  A880               	btfss	3968,4,c	;volatile
  5067  000416  D7FE               	goto	l267
  5068                           
  5069                           ;Main.c: 364: cnt_push ++;
  5070  000418  4A13               	infsnz	_cnt_push,f,c
  5071  00041A  2A14               	incf	_cnt_push+1,f,c
  5072  00041C                     l270:
  5073  00041C  B880               	btfsc	3968,4,c	;volatile
  5074  00041E  D7FE               	goto	l270
  5075                           
  5076                           ;Main.c: 366: cnt_push ++;
  5077  000420  4A13               	infsnz	_cnt_push,f,c
  5078  000422  2A14               	incf	_cnt_push+1,f,c
  5079  000424                     l9503:
  5080  000424  0100               	movlb	0	; () banked
  5081  000426  51D9               	movf	(_hg_op+25)& (0+255),w,b
  5082  000428  0101               	movlb	1	; () banked
  5083  00042A  6F87               	movwf	??_main& (0+255),b
  5084  00042C  6B88               	clrf	(??_main+1)& (0+255),b
  5085  00042E  0101               	movlb	1	; () banked
  5086  000430  5187               	movf	??_main& (0+255),w,b
  5087  000432  5C13               	subwf	_cnt_push,w,c
  5088  000434  0101               	movlb	1	; () banked
  5089  000436  5188               	movf	(??_main+1)& (0+255),w,b
  5090  000438  5814               	subwfb	_cnt_push+1,w,c
  5091  00043A  A0D8               	btfss	status,0,c
  5092  00043C  D7EB               	goto	l267
  5093                           
  5094                           ; BSR set to: 1
  5095                           
  5096                           ; BSR set to: 1
  5097                           ;Main.c: 368: }
  5098                           ;Main.c: 371: do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  5099  00043E  908C               	bcf	3980,0,c	;volatile
  5100  000440  928C               	bcf	3980,1,c	;volatile
  5101                           
  5102                           ; BSR set to: 1
  5103                           ;Main.c: 375: hg_op.drops_sa = 0;
  5104                           
  5105                           ; BSR set to: 1
  5106  000442  0E00               	movlw	0
  5107  000444  0100               	movlb	0	; () banked
  5108  000446  6FDB               	movwf	(_hg_op+27)& (0+255),b
  5109                           
  5110                           ;Main.c: 376: hg_op.drops_push = 0;
  5111  000448  0E00               	movlw	0
  5112  00044A  0100               	movlb	0	; () banked
  5113  00044C  6FDD               	movwf	(_hg_op+29)& (0+255),b
  5114                           
  5115                           ;Main.c: 377: hg_op.drops_sb = 1;
  5116  00044E  0E01               	movlw	1
  5117  000450  0100               	movlb	0	; () banked
  5118  000452  6FDC               	movwf	(_hg_op+28)& (0+255),b
  5119                           
  5120                           ;Main.c: 380: }
  5121  000454  D0A3               	goto	l224
  5122  000456                     l9507:
  5123                           
  5124                           ; BSR set to: 0
  5125                           ;Main.c: 381: else if(hg_op.drops_sb == 1)
  5126  000456  0100               	movlb	0	; () banked
  5127  000458  05DC               	decf	(_hg_op+28)& (0+255),w,b
  5128  00045A  A4D8               	btfss	status,2,c
  5129  00045C  D09F               	goto	l224
  5130                           
  5131                           ; BSR set to: 0
  5132                           ;Main.c: 382: {
  5133                           ;Main.c: 389: if(hg_op.needle_len == 13)
  5134  00045E  0E0D               	movlw	13
  5135  000460  0100               	movlb	0	; () banked
  5136  000462  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  5137  000464  A4D8               	btfss	status,2,c
  5138  000466  D005               	goto	l278
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;Main.c: 390: {
  5142                           ;Main.c: 391: LATDbits.LD4 =1;LATDbits.LD3 =1;
  5143  000468  888C               	bsf	3980,4,c	;volatile
  5144  00046A  868C               	bsf	3980,3,c	;volatile
  5145  00046C                     l279:
  5146  00046C  A081               	btfss	3969,0,c	;volatile
  5147  00046E  D03C               	goto	l297
  5148  000470  D7FD               	goto	l279
  5149  000472                     l278:
  5150                           
  5151                           ; BSR set to: 0
  5152                           ;Main.c: 394: else
  5153                           ;Main.c: 395: {
  5154                           ;Main.c: 396: LATDbits.LD4 =1;
  5155  000472  888C               	bsf	3980,4,c	;volatile
  5156                           
  5157                           ;Main.c: 397: LATDbits.LD2 =0;
  5158  000474  948C               	bcf	3980,2,c	;volatile
  5159                           
  5160                           ;Main.c: 398: LATDbits.LD3 =1;
  5161  000476  868C               	bsf	3980,3,c	;volatile
  5162  000478                     l9513:
  5163                           
  5164                           ; BSR set to: 0
  5165  000478  0100               	movlb	0	; () banked
  5166  00047A  BFE9               	btfsc	(_hg_op+41)& (0+255),7,b
  5167  00047C  D007               	goto	l285
  5168  00047E  0100               	movlb	0	; () banked
  5169  000480  51E9               	movf	(_hg_op+41)& (0+255),w,b
  5170  000482  E1FA               	bnz	l9513
  5171  000484  0100               	movlb	0	; () banked
  5172  000486  05E8               	decf	(_hg_op+40)& (0+255),w,b
  5173  000488  B0D8               	btfsc	status,0,c
  5174  00048A  D7F6               	goto	l9513
  5175  00048C                     l285:
  5176                           
  5177                           ; BSR set to: 0
  5178                           ;Main.c: 400: LATDbits.LD2 =1;
  5179  00048C  848C               	bsf	3980,2,c	;volatile
  5180                           
  5181                           ;Main.c: 401: LATDbits.LD3 =0;
  5182  00048E  968C               	bcf	3980,3,c	;volatile
  5183  000490                     l9515:
  5184                           
  5185                           ;Main.c: 406: {
  5186                           ;Main.c: 407: bv = PORTBbits.RB2;
  5187  000490  A481               	btfss	3969,2,c	;volatile
  5188  000492  D004               	goto	u10780
  5189  000494  0101               	movlb	1	; () banked
  5190  000496  6B87               	clrf	??_main& (0+255),b
  5191  000498  2B87               	incf	??_main& (0+255),f,b
  5192  00049A  D002               	goto	u10788
  5193  00049C                     u10780:
  5194  00049C  0101               	movlb	1	; () banked
  5195  00049E  6B87               	clrf	??_main& (0+255),b
  5196  0004A0                     u10788:
  5197  0004A0  0101               	movlb	1	; () banked
  5198  0004A2  5187               	movf	??_main& (0+255),w,b
  5199  0004A4  6E11               	movwf	_bv,c
  5200  0004A6  6A12               	clrf	_bv+1,c
  5201                           
  5202                           ; BSR set to: 1
  5203                           
  5204                           ;Main.c: 408: do {TMR1 =0;T1CONbits.TMR1ON =1;}while(0);
  5205  0004A8  0E00               	movlw	0
  5206  0004AA  6ECF               	movwf	4047,c	;volatile
  5207  0004AC  0E00               	movlw	0
  5208  0004AE  6ECE               	movwf	4046,c	;volatile
  5209                           
  5210                           ; BSR set to: 1
  5211  0004B0  80CD               	bsf	4045,0,c	;volatile
  5212  0004B2                     l9519:
  5213                           
  5214                           ; BSR set to: 1
  5215  0004B2  A481               	btfss	3969,2,c	;volatile
  5216  0004B4  D002               	goto	u10790
  5217  0004B6  0E01               	movlw	1
  5218  0004B8  D001               	goto	u10800
  5219  0004BA                     u10790:
  5220  0004BA  0E00               	movlw	0
  5221  0004BC                     u10800:
  5222  0004BC  0101               	movlb	1	; () banked
  5223  0004BE  6F87               	movwf	??_main& (0+255),b
  5224  0004C0  6B88               	clrf	(??_main+1)& (0+255),b
  5225  0004C2  5011               	movf	_bv,w,c
  5226  0004C4  0101               	movlb	1	; () banked
  5227  0004C6  1987               	xorwf	??_main& (0+255),w,b
  5228  0004C8  E105               	bnz	u10810
  5229  0004CA  5012               	movf	_bv+1,w,c
  5230  0004CC  0101               	movlb	1	; () banked
  5231  0004CE  1988               	xorwf	(??_main+1)& (0+255),w,b
  5232  0004D0  B4D8               	btfsc	status,2,c
  5233  0004D2  D7EF               	goto	l9519
  5234  0004D4                     u10810:
  5235                           
  5236                           ; BSR set to: 1
  5237                           ;Main.c: 410: T1CONbits.TMR1ON =0;
  5238  0004D4  90CD               	bcf	4045,0,c	;volatile
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;Main.c: 411: if(TMR1 > 1006)
  5242  0004D6  0EEF               	movlw	239
  5243  0004D8  5CCE               	subwf	4046,w,c	;volatile
  5244  0004DA  0E03               	movlw	3
  5245  0004DC  58CF               	subwfb	4047,w,c	;volatile
  5246  0004DE  A0D8               	btfss	status,0,c
  5247  0004E0  D7D7               	goto	l9515
  5248                           
  5249                           ; BSR set to: 1
  5250                           
  5251                           ;Main.c: 412: {
  5252                           ;Main.c: 413: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  5253  0004E2  888C               	bsf	3980,4,c	;volatile
  5254  0004E4  948C               	bcf	3980,2,c	;volatile
  5255  0004E6  968C               	bcf	3980,3,c	;volatile
  5256  0004E8                     l297:
  5257  0004E8  888C               	bsf	3980,4,c	;volatile
  5258  0004EA  948C               	bcf	3980,2,c	;volatile
  5259  0004EC  968C               	bcf	3980,3,c	;volatile
  5260                           
  5261                           ;Main.c: 451: printf("888-hg_op.cnt_posb is %d\r\n", hg_op.cnt_pos_1mm);
  5262  0004EE  0E70               	movlw	low STR_8
  5263  0004F0  0101               	movlb	1	; () banked
  5264  0004F2  6F7B               	movwf	printf@f& (0+255),b
  5265  0004F4  0E7F               	movlw	high STR_8
  5266  0004F6  0101               	movlb	1	; () banked
  5267  0004F8  6F7C               	movwf	(printf@f+1)& (0+255),b
  5268  0004FA  C0E8  F17D         	movff	_hg_op+40,?_printf+2
  5269  0004FE  C0E9  F17E         	movff	_hg_op+41,?_printf+3
  5270  000502  ECA7  F004         	call	_printf	;wreg free
  5271                           
  5272                           ;Main.c: 454: ; ;
  5273                           ;Main.c: 455: printf("999-hg_op.cnt_posb is %d\r\n=======\r\n", hg_op.cnt_pos_1mm);
  5274  000506  0E16               	movlw	low STR_9
  5275  000508  0101               	movlb	1	; () banked
  5276  00050A  6F7B               	movwf	printf@f& (0+255),b
  5277  00050C  0E7F               	movlw	high STR_9
  5278  00050E  0101               	movlb	1	; () banked
  5279  000510  6F7C               	movwf	(printf@f+1)& (0+255),b
  5280  000512  C0E8  F17D         	movff	_hg_op+40,?_printf+2
  5281  000516  C0E9  F17E         	movff	_hg_op+41,?_printf+3
  5282  00051A  ECA7  F004         	call	_printf	;wreg free
  5283                           
  5284                           ;Main.c: 458: if(PORTBbits.RB5 == 1)
  5285  00051E  AA81               	btfss	3969,5,c	;volatile
  5286  000520  D032               	goto	l299
  5287                           
  5288                           ;Main.c: 459: {
  5289                           ;Main.c: 460: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  5290  000522  888C               	bsf	3980,4,c	;volatile
  5291  000524  948C               	bcf	3980,2,c	;volatile
  5292  000526  968C               	bcf	3980,3,c	;volatile
  5293                           
  5294                           ;Main.c: 461: do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  5295  000528  908C               	bcf	3980,0,c	;volatile
  5296  00052A  928C               	bcf	3980,1,c	;volatile
  5297                           
  5298                           ;Main.c: 463: do{do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);LATDbits.LD0 =0;LATDbits.L
      +                          D1 =1; LATCbits.LC2 =1;}while(0);
  5299  00052C  908C               	bcf	3980,0,c	;volatile
  5300  00052E  928C               	bcf	3980,1,c	;volatile
  5301  000530  908C               	bcf	3980,0,c	;volatile
  5302  000532  828C               	bsf	3980,1,c	;volatile
  5303  000534  848B               	bsf	3979,2,c	;volatile
  5304                           
  5305                           ;Main.c: 466: while(cnt_push < 260)
  5306  000536  D008               	goto	l9531
  5307  000538                     l310:
  5308  000538  A880               	btfss	3968,4,c	;volatile
  5309  00053A  D7FE               	goto	l310
  5310                           
  5311                           ;Main.c: 469: cnt_push ++;
  5312  00053C  4A13               	infsnz	_cnt_push,f,c
  5313  00053E  2A14               	incf	_cnt_push+1,f,c
  5314  000540                     l313:
  5315  000540  B880               	btfsc	3968,4,c	;volatile
  5316  000542  D7FE               	goto	l313
  5317                           
  5318                           ;Main.c: 471: cnt_push ++;
  5319  000544  4A13               	infsnz	_cnt_push,f,c
  5320  000546  2A14               	incf	_cnt_push+1,f,c
  5321  000548                     l9531:
  5322  000548  0E04               	movlw	4
  5323  00054A  5C13               	subwf	_cnt_push,w,c
  5324  00054C  0E01               	movlw	1
  5325  00054E  5814               	subwfb	_cnt_push+1,w,c
  5326  000550  A0D8               	btfss	status,0,c
  5327  000552  D7F2               	goto	l310
  5328                           
  5329                           ;Main.c: 473: }
  5330                           ;Main.c: 475: do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  5331  000554  908C               	bcf	3980,0,c	;volatile
  5332  000556  928C               	bcf	3980,1,c	;volatile
  5333                           
  5334                           ;Main.c: 477: hg_op.drops_sa = 0;
  5335  000558  0E00               	movlw	0
  5336  00055A  0100               	movlb	0	; () banked
  5337  00055C  6FDB               	movwf	(_hg_op+27)& (0+255),b
  5338                           
  5339                           ;Main.c: 478: hg_op.drops_sb = 0;
  5340  00055E  0E00               	movlw	0
  5341  000560  0100               	movlb	0	; () banked
  5342  000562  6FDC               	movwf	(_hg_op+28)& (0+255),b
  5343                           
  5344                           ;Main.c: 479: hg_op.drops_push = 0;
  5345  000564  0E00               	movlw	0
  5346  000566  0100               	movlb	0	; () banked
  5347  000568  6FDD               	movwf	(_hg_op+29)& (0+255),b
  5348                           
  5349                           ;Main.c: 482: hg_op.acting_flag =0;
  5350  00056A  0E00               	movlw	0
  5351  00056C  0100               	movlb	0	; () banked
  5352  00056E  6FDA               	movwf	(_hg_op+26)& (0+255),b
  5353                           
  5354                           ; BSR set to: 0
  5355                           ;Main.c: 485: if(hg_op.needle_len == 13)
  5356  000570  0E0D               	movlw	13
  5357  000572  0100               	movlb	0	; () banked
  5358  000574  19D4               	xorwf	(_hg_op+20)& (0+255),w,b
  5359  000576  A4D8               	btfss	status,2,c
  5360  000578  D002               	goto	l9539
  5361                           
  5362                           ; BSR set to: 0
  5363                           ;Main.c: 486: {
  5364                           ;Main.c: 487: hg_op.need_reset =0;
  5365  00057A  0E00               	movlw	0
  5366  00057C  D001               	goto	L4
  5367  00057E                     l9539:
  5368                           
  5369                           ; BSR set to: 0
  5370                           ;Main.c: 489: else
  5371                           ;Main.c: 490: {
  5372                           ;Main.c: 491: hg_op.need_reset =1;
  5373  00057E  0E01               	movlw	1
  5374  000580                     L4:
  5375  000580  0100               	movlb	0	; () banked
  5376  000582  6FC5               	movwf	(_hg_op+5)& (0+255),b
  5377                           
  5378                           ; BSR set to: 0
  5379                           ;Main.c: 492: }
  5380                           ;Main.c: 496: }
  5381  000584  D00B               	goto	l224
  5382  000586                     l299:
  5383                           
  5384                           ;Main.c: 497: else if(PORTBbits.RB5 == 0)
  5385  000586  BA81               	btfsc	3969,5,c	;volatile
  5386  000588  D009               	goto	l224
  5387                           
  5388                           ;Main.c: 498: {
  5389                           ;Main.c: 499: hg_op.drops_sb = 0;
  5390  00058A  0E00               	movlw	0
  5391  00058C  0100               	movlb	0	; () banked
  5392  00058E  6FDC               	movwf	(_hg_op+28)& (0+255),b
  5393                           
  5394                           ;Main.c: 500: hg_op.drops_push =0;
  5395  000590  0E00               	movlw	0
  5396  000592  0100               	movlb	0	; () banked
  5397  000594  6FDD               	movwf	(_hg_op+29)& (0+255),b
  5398                           
  5399                           ;Main.c: 501: hg_op.drops_sa = 1;
  5400  000596  0E01               	movlw	1
  5401  000598  0100               	movlb	0	; () banked
  5402  00059A  6FDB               	movwf	(_hg_op+27)& (0+255),b
  5403  00059C                     l224:
  5404                           
  5405                           ;Main.c: 502: }
  5406                           ;Main.c: 503: }
  5407                           ;Main.c: 509: }
  5408                           ;Main.c: 510: }
  5409                           ;Main.c: 516: if(hg_op.acting_flag)
  5410  00059C  0100               	movlb	0	; () banked
  5411  00059E  51DA               	movf	(_hg_op+26)& (0+255),w,b
  5412  0005A0  B4D8               	btfsc	status,2,c
  5413  0005A2  D595               	goto	l9377
  5414                           
  5415                           ; BSR set to: 0
  5416                           ;Main.c: 517: {
  5417                           ;Main.c: 518: delaynus(20 * 1000);
  5418  0005A4  0E4E               	movlw	78
  5419  0005A6  0101               	movlb	1	; () banked
  5420  0005A8  6F71               	movwf	(delaynus@n+1)& (0+255),b
  5421  0005AA  0E20               	movlw	32
  5422  0005AC  6F70               	movwf	delaynus@n& (0+255),b
  5423  0005AE  EC37  F007         	call	_delaynus	;wreg free
  5424                           
  5425                           ;Main.c: 519: if(PORTBbits.RB5 == 0)
  5426  0005B2  BA81               	btfsc	3969,5,c	;volatile
  5427  0005B4  D04B               	goto	l9591
  5428                           
  5429                           ;Main.c: 524: if(1)
  5430  0005B6  EC55  F007         	call	_buzz	;wreg free
  5431                           
  5432                           ;Main.c: 525: {
  5433                           ;Main.c: 528: if(hg_op.cur_working_mode == 0x01)
  5434  0005BA  0100               	movlb	0	; () banked
  5435  0005BC  05C1               	decf	(_hg_op+1)& (0+255),w,b
  5436  0005BE  A4D8               	btfss	status,2,c
  5437  0005C0  D013               	goto	l9563
  5438                           
  5439                           ; BSR set to: 0
  5440                           ;Main.c: 529: {
  5441                           ;Main.c: 530: printf("drops mode\r\n");
  5442  0005C2  0ED2               	movlw	low STR_10
  5443  0005C4  0101               	movlb	1	; () banked
  5444  0005C6  6F7B               	movwf	printf@f& (0+255),b
  5445  0005C8  0E7F               	movlw	high STR_10
  5446  0005CA  0101               	movlb	1	; () banked
  5447  0005CC  6F7C               	movwf	(printf@f+1)& (0+255),b
  5448  0005CE  ECA7  F004         	call	_printf	;wreg free
  5449                           
  5450                           ;Main.c: 531: hg_op.acting_flag =0;
  5451  0005D2  0E00               	movlw	0
  5452  0005D4  0100               	movlb	0	; () banked
  5453  0005D6  6FDA               	movwf	(_hg_op+26)& (0+255),b
  5454  0005D8  D031               	goto	l9583
  5455  0005DA                     l9557:
  5456                           
  5457                           ; BSR set to: 0
  5458                           ;Main.c: 534: hg_op.drops_sb =0;
  5459  0005DA  0E00               	movlw	0
  5460  0005DC  0100               	movlb	0	; () banked
  5461  0005DE  6FDC               	movwf	(_hg_op+28)& (0+255),b
  5462  0005E0  D031               	goto	l9587
  5463  0005E2                     l9561:
  5464                           
  5465                           ; BSR set to: 0
  5466                           ;Main.c: 537: hg_op.working_mode = hg_op.cur_working_mode;
  5467  0005E2  C0C1  F0C0         	movff	_hg_op+1,_hg_op
  5468                           
  5469                           ;Main.c: 538: }
  5470  0005E6  D032               	goto	l9591
  5471  0005E8                     l9563:
  5472                           
  5473                           ; BSR set to: 0
  5474                           ;Main.c: 539: else if(hg_op.cur_working_mode == 0x00)
  5475  0005E8  0100               	movlb	0	; () banked
  5476  0005EA  51C1               	movf	(_hg_op+1)& (0+255),w,b
  5477  0005EC  A4D8               	btfss	status,2,c
  5478  0005EE  D017               	goto	l9577
  5479                           
  5480                           ; BSR set to: 0
  5481                           ;Main.c: 540: {
  5482                           ;Main.c: 541: printf("c mode\r\n");
  5483  0005F0  0EEC               	movlw	low STR_11
  5484  0005F2  0101               	movlb	1	; () banked
  5485  0005F4  6F7B               	movwf	printf@f& (0+255),b
  5486  0005F6  0E7F               	movlw	high STR_11
  5487  0005F8  0101               	movlb	1	; () banked
  5488  0005FA  6F7C               	movwf	(printf@f+1)& (0+255),b
  5489  0005FC  ECA7  F004         	call	_printf	;wreg free
  5490                           
  5491                           ;Main.c: 542: hg_op.drops_sa =1;
  5492  000600  0E01               	movlw	1
  5493  000602  0100               	movlb	0	; () banked
  5494  000604  6FDB               	movwf	(_hg_op+27)& (0+255),b
  5495                           
  5496                           ; BSR set to: 0
  5497                           ;Main.c: 543: hg_op.drops_sb =0;
  5498  000606  0E00               	movlw	0
  5499  000608  0100               	movlb	0	; () banked
  5500  00060A  6FDC               	movwf	(_hg_op+28)& (0+255),b
  5501                           
  5502                           ; BSR set to: 0
  5503                           ;Main.c: 544: hg_op.drops_push =0;
  5504  00060C  0E00               	movlw	0
  5505  00060E  0100               	movlb	0	; () banked
  5506  000610  6FDD               	movwf	(_hg_op+29)& (0+255),b
  5507                           
  5508                           ; BSR set to: 0
  5509                           ;Main.c: 546: hg_op.working_mode = hg_op.cur_working_mode;
  5510  000612  C0C1  F0C0         	movff	_hg_op+1,_hg_op
  5511                           
  5512                           ; BSR set to: 0
  5513                           ;Main.c: 547: hg_op.working_mode = 0x00;
  5514  000616  0E00               	movlw	0
  5515  000618  0100               	movlb	0	; () banked
  5516  00061A  6FC0               	movwf	_hg_op& (0+255),b
  5517                           
  5518                           ;Main.c: 548: }
  5519  00061C  D017               	goto	l9591
  5520  00061E                     l9577:
  5521                           
  5522                           ; BSR set to: 0
  5523                           ;Main.c: 549: else if(hg_op.cur_working_mode == 0x04)
  5524  00061E  0E04               	movlw	4
  5525  000620  0100               	movlb	0	; () banked
  5526  000622  19C1               	xorwf	(_hg_op+1)& (0+255),w,b
  5527  000624  A4D8               	btfss	status,2,c
  5528  000626  D012               	goto	l9591
  5529                           
  5530                           ; BSR set to: 0
  5531                           ;Main.c: 550: {
  5532                           ;Main.c: 551: action_btn_cnt ++;
  5533  000628  4A19               	infsnz	_action_btn_cnt,f,c
  5534  00062A  2A1A               	incf	_action_btn_cnt+1,f,c
  5535                           
  5536                           ; BSR set to: 0
  5537                           ;Main.c: 552: printf("test mode\r\n");
  5538  00062C  0EB9               	movlw	low (STR_1+6)
  5539  00062E  0101               	movlb	1	; () banked
  5540  000630  6F7B               	movwf	printf@f& (0+255),b
  5541  000632  0E7F               	movlw	high (STR_1+6)
  5542  000634  0101               	movlb	1	; () banked
  5543  000636  6F7C               	movwf	(printf@f+1)& (0+255),b
  5544  000638  ECA7  F004         	call	_printf	;wreg free
  5545  00063C                     l9583:
  5546                           
  5547                           ;Main.c: 553: hg_op.drops_sa =1;
  5548  00063C  0E01               	movlw	1
  5549  00063E  0100               	movlb	0	; () banked
  5550  000640  6FDB               	movwf	(_hg_op+27)& (0+255),b
  5551  000642  D7CB               	goto	l9557
  5552  000644                     l9587:
  5553                           
  5554                           ; BSR set to: 0
  5555                           ;Main.c: 555: hg_op.drops_push =0;
  5556  000644  0E00               	movlw	0
  5557  000646  0100               	movlb	0	; () banked
  5558  000648  6FDD               	movwf	(_hg_op+29)& (0+255),b
  5559  00064A  D7CB               	goto	l9561
  5560  00064C                     l9591:
  5561                           
  5562                           ;Main.c: 562: }
  5563                           ;Main.c: 564: }
  5564                           ;Main.c: 566: }
  5565                           ;Main.c: 570: hg_op.acting_flag = 0;
  5566  00064C  0E00               	movlw	0
  5567  00064E  0100               	movlb	0	; () banked
  5568  000650  6FDA               	movwf	(_hg_op+26)& (0+255),b
  5569                           
  5570                           ; BSR set to: 0
  5571                           
  5572                           ; BSR set to: 0
  5573                           
  5574                           ; BSR set to: 0
  5575  000652  D53D               	goto	l9377
  5576  000654                     __end_of_main:
  5577                           	opt stack 0
  5578                           tblptru	equ	0xFF8
  5579                           tblptrh	equ	0xFF7
  5580                           tblptrl	equ	0xFF6
  5581                           tablat	equ	0xFF5
  5582                           postinc0	equ	0xFEE
  5583                           wreg	equ	0xFE8
  5584                           postdec1	equ	0xFE5
  5585                           fsr1h	equ	0xFE2
  5586                           fsr1l	equ	0xFE1
  5587                           status	equ	0xFD8
  5588                           
  5589 ;; *************** function _uart_init *****************
  5590 ;; Defined at:
  5591 ;;		line 9 in file "../Beep.c"
  5592 ;; Parameters:    Size  Location     Type
  5593 ;;		None
  5594 ;; Auto vars:     Size  Location     Type
  5595 ;;		None
  5596 ;; Return value:  Size  Location     Type
  5597 ;;                  1    wreg      void 
  5598 ;; Registers used:
  5599 ;;		wreg, status,2
  5600 ;; Tracked objects:
  5601 ;;		On entry : 0/0
  5602 ;;		On exit  : 0/0
  5603 ;;		Unchanged: 0/0
  5604 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5605 ;;      Params:         0       0       0       0       0       0       0
  5606 ;;      Locals:         0       0       0       0       0       0       0
  5607 ;;      Temps:          0       0       0       0       0       0       0
  5608 ;;      Totals:         0       0       0       0       0       0       0
  5609 ;;Total ram usage:        0 bytes
  5610 ;; Hardware stack levels used:    1
  5611 ;; Hardware stack levels required when called:    3
  5612 ;; This function calls:
  5613 ;;		Nothing
  5614 ;; This function is called by:
  5615 ;;		_main
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text1
  5620  000EF2                     __ptext1:
  5621                           	opt stack 0
  5622  000EF2                     _uart_init:
  5623                           	opt stack 27
  5624                           
  5625                           ;Beep.c: 12: TRISCbits.RC7 =1;
  5626                           
  5627                           ;incstack = 0
  5628  000EF2  8E94               	bsf	3988,7,c	;volatile
  5629                           
  5630                           ;Beep.c: 13: TRISCbits.RC6 =0;
  5631  000EF4  9C94               	bcf	3988,6,c	;volatile
  5632                           
  5633                           ;Beep.c: 16: SPBRG = 12;
  5634  000EF6  0E0C               	movlw	12
  5635  000EF8  6EAF               	movwf	4015,c	;volatile
  5636                           
  5637                           ;Beep.c: 17: RCSTAbits.SPEN =1;
  5638  000EFA  8EAB               	bsf	4011,7,c	;volatile
  5639                           
  5640                           ;Beep.c: 22: TXSTAbits.TXEN =1;
  5641  000EFC  8AAC               	bsf	4012,5,c	;volatile
  5642  000EFE  0012               	return		;funcret
  5643  000F00                     __end_of_uart_init:
  5644                           	opt stack 0
  5645                           tblptru	equ	0xFF8
  5646                           tblptrh	equ	0xFF7
  5647                           tblptrl	equ	0xFF6
  5648                           tablat	equ	0xFF5
  5649                           postinc0	equ	0xFEE
  5650                           wreg	equ	0xFE8
  5651                           postdec1	equ	0xFE5
  5652                           fsr1h	equ	0xFE2
  5653                           fsr1l	equ	0xFE1
  5654                           status	equ	0xFD8
  5655                           
  5656 ;; *************** function _printf *****************
  5657 ;; Defined at:
  5658 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  5659 ;; Parameters:    Size  Location     Type
  5660 ;;  f               2   11[BANK1 ] PTR const unsigned char 
  5661 ;;		 -> STR_14(5), STR_13(5), STR_12(12), STR_11(9), 
  5662 ;;		 -> STR_10(13), STR_9(36), STR_8(27), STR_7(27), 
  5663 ;;		 -> STR_6(27), STR_5(13), STR_4(20), STR_3(20), 
  5664 ;;		 -> STR_2(13), STR_1(18), 
  5665 ;; Auto vars:     Size  Location     Type
  5666 ;;  tmpval          4    0        struct .
  5667 ;;  cp              3    0        PTR const unsigned char 
  5668 ;;  val             2   20[BANK1 ] unsigned int 
  5669 ;;  ap              2   16[BANK1 ] PTR void [1]
  5670 ;;		 -> ?i2_printf(2), ?_printf(2), 
  5671 ;;  len             2    0        unsigned int 
  5672 ;;  c               1   22[BANK1 ] char 
  5673 ;;  prec            1   19[BANK1 ] char 
  5674 ;;  flag            1   18[BANK1 ] unsigned char 
  5675 ;; Return value:  Size  Location     Type
  5676 ;;                  2   11[BANK1 ] int 
  5677 ;; Registers used:
  5678 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5679 ;; Tracked objects:
  5680 ;;		On entry : 0/0
  5681 ;;		On exit  : 0/0
  5682 ;;		Unchanged: 0/0
  5683 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5684 ;;      Params:         0       0       4       0       0       0       0
  5685 ;;      Locals:         0       0       7       0       0       0       0
  5686 ;;      Temps:          0       0       1       0       0       0       0
  5687 ;;      Totals:         0       0      12       0       0       0       0
  5688 ;;Total ram usage:       12 bytes
  5689 ;; Hardware stack levels used:    1
  5690 ;; Hardware stack levels required when called:    4
  5691 ;; This function calls:
  5692 ;;		___lwdiv
  5693 ;;		___lwmod
  5694 ;;		_putch
  5695 ;; This function is called by:
  5696 ;;		_main
  5697 ;;		_KEY_Scan
  5698 ;; This function uses a non-reentrant model
  5699 ;;
  5700                           
  5701                           	psect	text2
  5702  00094E                     __ptext2:
  5703                           	opt stack 0
  5704  00094E                     _printf:
  5705                           	opt stack 26
  5706                           
  5707                           ;doprnt.c: 466: va_list ap;
  5708                           ;doprnt.c: 499: signed char c;
  5709                           ;doprnt.c: 506: signed char prec;
  5710                           ;doprnt.c: 508: unsigned char flag;
  5711                           ;doprnt.c: 523: union {
  5712                           ;doprnt.c: 524: unsigned long vd;
  5713                           ;doprnt.c: 525: double integ;
  5714                           ;doprnt.c: 526: } tmpval;
  5715                           ;doprnt.c: 528: unsigned int val;
  5716                           ;doprnt.c: 529: unsigned len;
  5717                           ;doprnt.c: 530: const char * cp;
  5718                           ;doprnt.c: 533: *ap = __va_start();
  5719                           
  5720                           ;incstack = 0
  5721  00094E  0E7D               	movlw	low (?_printf+2)
  5722  000950  0101               	movlb	1	; () banked
  5723  000952  6F80               	movwf	printf@ap& (0+255),b
  5724  000954  0E01               	movlw	high (?_printf+2)
  5725  000956  0101               	movlb	1	; () banked
  5726  000958  6F81               	movwf	(printf@ap+1)& (0+255),b
  5727                           
  5728                           ;doprnt.c: 536: while(c = *f++) {
  5729  00095A  D094               	goto	l9287
  5730  00095C                     l9241:
  5731                           
  5732                           ; BSR set to: 1
  5733                           ;doprnt.c: 538: if(c != '%')
  5734  00095C  0E25               	movlw	37
  5735  00095E  0101               	movlb	1	; () banked
  5736  000960  1986               	xorwf	printf@c& (0+255),w,b
  5737  000962  B4D8               	btfsc	status,2,c
  5738  000964  D005               	goto	l9245
  5739                           
  5740                           ; BSR set to: 1
  5741                           ;doprnt.c: 540: {
  5742                           ;doprnt.c: 541: (putch(c) );
  5743  000966  0101               	movlb	1	; () banked
  5744  000968  5186               	movf	printf@c& (0+255),w,b
  5745  00096A  EC80  F007         	call	_putch
  5746                           
  5747                           ;doprnt.c: 542: continue;
  5748  00096E  D08A               	goto	l9287
  5749  000970                     l9245:
  5750                           
  5751                           ;doprnt.c: 543: }
  5752                           ;doprnt.c: 548: flag = 0;
  5753  000970  0E00               	movlw	0
  5754  000972  0101               	movlb	1	; () banked
  5755  000974  6F82               	movwf	printf@flag& (0+255),b
  5756                           
  5757                           ; BSR set to: 1
  5758                           
  5759                           ; BSR set to: 1
  5760                           
  5761                           ; BSR set to: 1
  5762                           ;doprnt.c: 822: }
  5763                           
  5764                           ; BSR set to: 1
  5765                           ;doprnt.c: 813: continue;
  5766                           
  5767                           ;doprnt.c: 802: default:
  5768                           
  5769                           ; BSR set to: 1
  5770                           ;doprnt.c: 698: case 'i':
  5771                           ;doprnt.c: 699: break;
  5772                           
  5773                           ; BSR set to: 1
  5774                           
  5775                           ;doprnt.c: 697: case 'd':
  5776                           
  5777                           ; BSR set to: 1
  5778                           ;doprnt.c: 638: goto alldone;
  5779                           
  5780                           ;doprnt.c: 637: case 0:
  5781                           
  5782                           ;doprnt.c: 635: switch(c = *f++) {
  5783  000976  C17B  FFF6         	movff	printf@f,tblptrl
  5784  00097A  C17C  FFF7         	movff	printf@f+1,tblptrh
  5785  00097E  0101               	movlb	1	; () banked
  5786  000980  4B7B               	infsnz	printf@f& (0+255),f,b
  5787  000982  2B7C               	incf	(printf@f+1)& (0+255),f,b
  5788  000984                     	if	0	;tblptru may be non-zero
  5789  000984                     	endif
  5790  000984                     	if	0	;tblptru may be non-zero
  5791  000984                     	endif
  5792  000984  0008               	tblrd		*
  5793  000986  CFF5 F186          	movff	tablat,printf@c
  5794  00098A  0101               	movlb	1	; () banked
  5795  00098C  5186               	movf	printf@c& (0+255),w,b
  5796                           
  5797                           ; Switch size 1, requested type "space"
  5798                           ; Number of cases is 3, Range of values is 0 to 105
  5799                           ; switch strategies available:
  5800                           ; Name         Instructions Cycles
  5801                           ; simple_byte           10     6 (average)
  5802                           ;	Chosen strategy is simple_byte
  5803  00098E  0A00               	xorlw	0	; case 0
  5804  000990  B4D8               	btfsc	status,2,c
  5805  000992  0012               	return	
  5806  000994  0A64               	xorlw	100	; case 100
  5807  000996  B4D8               	btfsc	status,2,c
  5808  000998  D003               	goto	l9251
  5809  00099A  0A0D               	xorlw	13	; case 105
  5810  00099C  A4D8               	btfss	status,2,c
  5811  00099E  D072               	goto	l9287
  5812  0009A0                     l9251:
  5813                           
  5814                           ; BSR set to: 1
  5815                           ;doprnt.c: 1253: {
  5816                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  5817  0009A0  C180  FFD9         	movff	printf@ap,fsr2l
  5818  0009A4  C181  FFDA         	movff	printf@ap+1,fsr2h
  5819  0009A8  CFDE F184          	movff	postinc2,printf@val
  5820  0009AC  CFDD F185          	movff	postdec2,printf@val+1
  5821                           
  5822                           ; BSR set to: 1
  5823  0009B0  0E02               	movlw	2
  5824  0009B2  0101               	movlb	1	; () banked
  5825  0009B4  2780               	addwf	printf@ap& (0+255),f,b
  5826  0009B6  0E00               	movlw	0
  5827  0009B8  2381               	addwfc	(printf@ap+1)& (0+255),f,b
  5828                           
  5829                           ; BSR set to: 1
  5830                           ;doprnt.c: 1261: if((int)val < 0) {
  5831  0009BA  0101               	movlb	1	; () banked
  5832  0009BC  AF85               	btfss	(printf@val+1)& (0+255),7,b
  5833  0009BE  D008               	goto	l9261
  5834                           
  5835                           ; BSR set to: 1
  5836                           ;doprnt.c: 1262: flag |= 0x03;
  5837  0009C0  0E03               	movlw	3
  5838  0009C2  0101               	movlb	1	; () banked
  5839  0009C4  1382               	iorwf	printf@flag& (0+255),f,b
  5840                           
  5841                           ; BSR set to: 1
  5842                           ;doprnt.c: 1263: val = -val;
  5843  0009C6  0101               	movlb	1	; () banked
  5844  0009C8  6D84               	negf	printf@val& (0+255),b
  5845  0009CA  1F85               	comf	(printf@val+1)& (0+255),f,b
  5846  0009CC  B0D8               	btfsc	status,0,c
  5847  0009CE  2B85               	incf	(printf@val+1)& (0+255),f,b
  5848  0009D0                     l9261:
  5849                           
  5850                           ; BSR set to: 1
  5851                           ;doprnt.c: 1264: }
  5852                           ;doprnt.c: 1266: }
  5853                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5854  0009D0  0E01               	movlw	1
  5855  0009D2  0101               	movlb	1	; () banked
  5856  0009D4  6F86               	movwf	printf@c& (0+255),b
  5857  0009D6                     l9263:
  5858                           
  5859                           ; BSR set to: 1
  5860  0009D6  0E05               	movlw	5
  5861  0009D8  0101               	movlb	1	; () banked
  5862  0009DA  1986               	xorwf	printf@c& (0+255),w,b
  5863  0009DC  B4D8               	btfsc	status,2,c
  5864  0009DE  D016               	goto	l9275
  5865                           
  5866                           ; BSR set to: 1
  5867                           ;doprnt.c: 1306: if(val < dpowers[c])
  5868                           
  5869                           ; BSR set to: 1
  5870                           
  5871                           ; BSR set to: 1
  5872  0009E0  0101               	movlb	1	; () banked
  5873  0009E2  5186               	movf	printf@c& (0+255),w,b
  5874  0009E4  0D02               	mullw	2
  5875  0009E6  0E2C               	movlw	low _dpowers
  5876  0009E8  24F3               	addwf	prodl,w,c
  5877  0009EA  6EF6               	movwf	tblptrl,c
  5878  0009EC  0E76               	movlw	high _dpowers
  5879  0009EE  20F4               	addwfc	prodh,w,c
  5880  0009F0  6EF7               	movwf	tblptrh,c
  5881  0009F2                     	if	0	;There are less than 3 active tblptr bytes
  5882  0009F2                     	endif
  5883  0009F2  0009               	tblrd		*+
  5884  0009F4  50F5               	movf	tablat,w,c
  5885  0009F6  0101               	movlb	1	; () banked
  5886  0009F8  5D84               	subwf	printf@val& (0+255),w,b
  5887  0009FA  0009               	tblrd		*+
  5888  0009FC  50F5               	movf	tablat,w,c
  5889  0009FE  0101               	movlb	1	; () banked
  5890  000A00  5985               	subwfb	(printf@val+1)& (0+255),w,b
  5891  000A02  A0D8               	btfss	status,0,c
  5892  000A04  D003               	goto	l9275
  5893                           
  5894                           ; BSR set to: 1
  5895                           
  5896                           ; BSR set to: 1
  5897                           
  5898                           ; BSR set to: 1
  5899                           ;doprnt.c: 1307: break;
  5900  000A06  0101               	movlb	1	; () banked
  5901  000A08  2B86               	incf	printf@c& (0+255),f,b
  5902  000A0A  D7E5               	goto	l9263
  5903  000A0C                     l9275:
  5904                           
  5905                           ; BSR set to: 1
  5906                           ;doprnt.c: 1422: {
  5907                           ;doprnt.c: 1438: if(flag & 0x03)
  5908  000A0C  C182  F17F         	movff	printf@flag,??_printf
  5909  000A10  0E03               	movlw	3
  5910  000A12  0101               	movlb	1	; () banked
  5911  000A14  177F               	andwf	??_printf& (0+255),f,b
  5912  000A16  B4D8               	btfsc	status,2,c
  5913  000A18  D003               	goto	l9279
  5914                           
  5915                           ; BSR set to: 1
  5916                           ;doprnt.c: 1439: (putch('-') );
  5917  000A1A  0E2D               	movlw	45
  5918  000A1C  EC80  F007         	call	_putch
  5919  000A20                     l9279:
  5920                           
  5921                           ;doprnt.c: 1469: }
  5922                           ;doprnt.c: 1472: prec = c;
  5923  000A20  C186  F183         	movff	printf@c,printf@prec
  5924                           
  5925                           ;doprnt.c: 1474: while(prec--) {
  5926  000A24  D029               	goto	l9285
  5927  000A26                     l9281:
  5928                           
  5929                           ;doprnt.c: 1478: {
  5930                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  5931  000A26  0101               	movlb	1	; () banked
  5932  000A28  5183               	movf	printf@prec& (0+255),w,b
  5933  000A2A  0D02               	mullw	2
  5934  000A2C  0E2C               	movlw	low _dpowers
  5935  000A2E  24F3               	addwf	prodl,w,c
  5936  000A30  6EF6               	movwf	tblptrl,c
  5937  000A32  0E76               	movlw	high _dpowers
  5938  000A34  20F4               	addwfc	prodh,w,c
  5939  000A36  6EF7               	movwf	tblptrh,c
  5940  000A38                     	if	0	;There are less than 3 active tblptr bytes
  5941  000A38                     	endif
  5942  000A38  0009               	tblrd		*+
  5943  000A3A  CFF5 F172          	movff	tablat,___lwdiv@divisor
  5944  000A3E  000A               	tblrd		*-
  5945  000A40  CFF5 F173          	movff	tablat,___lwdiv@divisor+1
  5946  000A44  C184  F170         	movff	printf@val,___lwdiv@dividend
  5947  000A48  C185  F171         	movff	printf@val+1,___lwdiv@dividend+1
  5948  000A4C  EC1D  F006         	call	___lwdiv	;wreg free
  5949  000A50  C170  F177         	movff	?___lwdiv,___lwmod@dividend
  5950  000A54  C171  F178         	movff	?___lwdiv+1,___lwmod@dividend+1
  5951  000A58  0E00               	movlw	0
  5952  000A5A  0101               	movlb	1	; () banked
  5953  000A5C  6F7A               	movwf	(___lwmod@divisor+1)& (0+255),b
  5954  000A5E  0E0A               	movlw	10
  5955  000A60  6F79               	movwf	___lwmod@divisor& (0+255),b
  5956  000A62  EC59  F006         	call	___lwmod	;wreg free
  5957  000A66  0101               	movlb	1	; () banked
  5958  000A68  5177               	movf	?___lwmod& (0+255),w,b
  5959  000A6A  0F30               	addlw	48
  5960  000A6C  0101               	movlb	1	; () banked
  5961  000A6E  6F86               	movwf	printf@c& (0+255),b
  5962                           
  5963                           ; BSR set to: 1
  5964                           ;doprnt.c: 1523: }
  5965                           ;doprnt.c: 1524: (putch(c) );
  5966  000A70  0101               	movlb	1	; () banked
  5967  000A72  5186               	movf	printf@c& (0+255),w,b
  5968  000A74  EC80  F007         	call	_putch
  5969  000A78                     l9285:
  5970  000A78  0101               	movlb	1	; () banked
  5971  000A7A  0783               	decf	printf@prec& (0+255),f,b
  5972  000A7C  0101               	movlb	1	; () banked
  5973  000A7E  2983               	incf	printf@prec& (0+255),w,b
  5974  000A80  A4D8               	btfss	status,2,c
  5975  000A82  D7D1               	goto	l9281
  5976  000A84                     l9287:
  5977  000A84  C17B  FFF6         	movff	printf@f,tblptrl
  5978  000A88  C17C  FFF7         	movff	printf@f+1,tblptrh
  5979  000A8C  0101               	movlb	1	; () banked
  5980  000A8E  4B7B               	infsnz	printf@f& (0+255),f,b
  5981  000A90  2B7C               	incf	(printf@f+1)& (0+255),f,b
  5982  000A92                     	if	0	;tblptru may be non-zero
  5983  000A92                     	endif
  5984  000A92                     	if	0	;tblptru may be non-zero
  5985  000A92                     	endif
  5986  000A92  0008               	tblrd		*
  5987  000A94  CFF5 F186          	movff	tablat,printf@c
  5988  000A98  0101               	movlb	1	; () banked
  5989  000A9A  5186               	movf	printf@c& (0+255),w,b
  5990  000A9C  B4D8               	btfsc	status,2,c
  5991  000A9E  0012               	return	
  5992  000AA0  D75D               	goto	l9241
  5993  000AA2                     __end_of_printf:
  5994                           	opt stack 0
  5995                           tblptru	equ	0xFF8
  5996                           tblptrh	equ	0xFF7
  5997                           tblptrl	equ	0xFF6
  5998                           tablat	equ	0xFF5
  5999                           prodh	equ	0xFF4
  6000                           prodl	equ	0xFF3
  6001                           postinc0	equ	0xFEE
  6002                           wreg	equ	0xFE8
  6003                           postdec1	equ	0xFE5
  6004                           fsr1h	equ	0xFE2
  6005                           fsr1l	equ	0xFE1
  6006                           postinc2	equ	0xFDE
  6007                           postdec2	equ	0xFDD
  6008                           fsr2h	equ	0xFDA
  6009                           fsr2l	equ	0xFD9
  6010                           status	equ	0xFD8
  6011                           
  6012 ;; *************** function _putch *****************
  6013 ;; Defined at:
  6014 ;;		line 56 in file "../Beep.c"
  6015 ;; Parameters:    Size  Location     Type
  6016 ;;  c               1    wreg     unsigned char 
  6017 ;; Auto vars:     Size  Location     Type
  6018 ;;  c               1    0[BANK0 ] unsigned char 
  6019 ;; Return value:  Size  Location     Type
  6020 ;;                  1    wreg      void 
  6021 ;; Registers used:
  6022 ;;		wreg
  6023 ;; Tracked objects:
  6024 ;;		On entry : 0/0
  6025 ;;		On exit  : 0/0
  6026 ;;		Unchanged: 0/0
  6027 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6028 ;;      Params:         0       0       0       0       0       0       0
  6029 ;;      Locals:         0       1       0       0       0       0       0
  6030 ;;      Temps:          0       0       0       0       0       0       0
  6031 ;;      Totals:         0       1       0       0       0       0       0
  6032 ;;Total ram usage:        1 bytes
  6033 ;; Hardware stack levels used:    1
  6034 ;; Hardware stack levels required when called:    3
  6035 ;; This function calls:
  6036 ;;		Nothing
  6037 ;; This function is called by:
  6038 ;;		_printf
  6039 ;; This function uses a non-reentrant model
  6040 ;;
  6041                           
  6042                           	psect	text3
  6043  000F00                     __ptext3:
  6044                           	opt stack 0
  6045  000F00                     _putch:
  6046                           	opt stack 26
  6047                           
  6048                           ; BSR set to: 1
  6049                           ;incstack = 0
  6050                           ;putch@c stored from wreg
  6051  000F00  0100               	movlb	0	; () banked
  6052  000F02  6FFF               	movwf	putch@c& (0+255),b
  6053                           
  6054                           ;Beep.c: 58: TXREG = c;
  6055  000F04  C0FF  FFAD         	movff	putch@c,4013	;volatile
  6056  000F08                     l43:
  6057  000F08  B2AC               	btfsc	4012,1,c	;volatile
  6058  000F0A  0012               	return	
  6059  000F0C  D7FD               	goto	l43
  6060  000F0E                     __end_of_putch:
  6061                           	opt stack 0
  6062                           tblptru	equ	0xFF8
  6063                           tblptrh	equ	0xFF7
  6064                           tblptrl	equ	0xFF6
  6065                           tablat	equ	0xFF5
  6066                           prodh	equ	0xFF4
  6067                           prodl	equ	0xFF3
  6068                           postinc0	equ	0xFEE
  6069                           wreg	equ	0xFE8
  6070                           postdec1	equ	0xFE5
  6071                           fsr1h	equ	0xFE2
  6072                           fsr1l	equ	0xFE1
  6073                           postinc2	equ	0xFDE
  6074                           postdec2	equ	0xFDD
  6075                           fsr2h	equ	0xFDA
  6076                           fsr2l	equ	0xFD9
  6077                           status	equ	0xFD8
  6078                           
  6079 ;; *************** function ___lwmod *****************
  6080 ;; Defined at:
  6081 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  6082 ;; Parameters:    Size  Location     Type
  6083 ;;  dividend        2    7[BANK1 ] unsigned int 
  6084 ;;  divisor         2    9[BANK1 ] unsigned int 
  6085 ;; Auto vars:     Size  Location     Type
  6086 ;;  counter         1    0[BANK0 ] unsigned char 
  6087 ;; Return value:  Size  Location     Type
  6088 ;;                  2    7[BANK1 ] unsigned int 
  6089 ;; Registers used:
  6090 ;;		wreg, status,2, status,0
  6091 ;; Tracked objects:
  6092 ;;		On entry : 0/0
  6093 ;;		On exit  : 0/0
  6094 ;;		Unchanged: 0/0
  6095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6096 ;;      Params:         0       0       4       0       0       0       0
  6097 ;;      Locals:         0       1       0       0       0       0       0
  6098 ;;      Temps:          0       0       0       0       0       0       0
  6099 ;;      Totals:         0       1       4       0       0       0       0
  6100 ;;Total ram usage:        5 bytes
  6101 ;; Hardware stack levels used:    1
  6102 ;; Hardware stack levels required when called:    3
  6103 ;; This function calls:
  6104 ;;		Nothing
  6105 ;; This function is called by:
  6106 ;;		_printf
  6107 ;; This function uses a non-reentrant model
  6108 ;;
  6109                           
  6110                           	psect	text4
  6111  000CB2                     __ptext4:
  6112                           	opt stack 0
  6113  000CB2                     ___lwmod:
  6114                           	opt stack 26
  6115                           
  6116                           ;incstack = 0
  6117  000CB2  0101               	movlb	1	; () banked
  6118  000CB4  5179               	movf	___lwmod@divisor& (0+255),w,b
  6119  000CB6  0101               	movlb	1	; () banked
  6120  000CB8  117A               	iorwf	(___lwmod@divisor+1)& (0+255),w,b
  6121  000CBA  B4D8               	btfsc	status,2,c
  6122  000CBC  D026               	goto	l1974
  6123                           
  6124                           ; BSR set to: 1
  6125  000CBE  0E01               	movlw	1
  6126  000CC0  0100               	movlb	0	; () banked
  6127  000CC2  6FFF               	movwf	___lwmod@counter& (0+255),b
  6128  000CC4  D006               	goto	l9143
  6129  000CC6                     l9141:
  6130  000CC6  0101               	movlb	1	; () banked
  6131  000CC8  90D8               	bcf	status,0,c
  6132  000CCA  3779               	rlcf	___lwmod@divisor& (0+255),f,b
  6133  000CCC  377A               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  6134  000CCE  0100               	movlb	0	; () banked
  6135  000CD0  2BFF               	incf	___lwmod@counter& (0+255),f,b
  6136  000CD2                     l9143:
  6137                           
  6138                           ; BSR set to: 0
  6139  000CD2  0101               	movlb	1	; () banked
  6140  000CD4  AF7A               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  6141  000CD6  D7F7               	goto	l9141
  6142  000CD8                     l9145:
  6143  000CD8  0101               	movlb	1	; () banked
  6144  000CDA  5179               	movf	___lwmod@divisor& (0+255),w,b
  6145  000CDC  0101               	movlb	1	; () banked
  6146  000CDE  5D77               	subwf	___lwmod@dividend& (0+255),w,b
  6147  000CE0  0101               	movlb	1	; () banked
  6148  000CE2  517A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6149  000CE4  0101               	movlb	1	; () banked
  6150  000CE6  5978               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  6151  000CE8  A0D8               	btfss	status,0,c
  6152  000CEA  D008               	goto	l9149
  6153                           
  6154                           ; BSR set to: 1
  6155  000CEC  0101               	movlb	1	; () banked
  6156  000CEE  5179               	movf	___lwmod@divisor& (0+255),w,b
  6157  000CF0  0101               	movlb	1	; () banked
  6158  000CF2  5F77               	subwf	___lwmod@dividend& (0+255),f,b
  6159  000CF4  0101               	movlb	1	; () banked
  6160  000CF6  517A               	movf	(___lwmod@divisor+1)& (0+255),w,b
  6161  000CF8  0101               	movlb	1	; () banked
  6162  000CFA  5B78               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  6163  000CFC                     l9149:
  6164                           
  6165                           ; BSR set to: 1
  6166  000CFC  0101               	movlb	1	; () banked
  6167  000CFE  90D8               	bcf	status,0,c
  6168  000D00  337A               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  6169  000D02  3379               	rrcf	___lwmod@divisor& (0+255),f,b
  6170                           
  6171                           ; BSR set to: 1
  6172  000D04  0100               	movlb	0	; () banked
  6173  000D06  2FFF               	decfsz	___lwmod@counter& (0+255),f,b
  6174  000D08  D7E7               	goto	l9145
  6175  000D0A                     l1974:
  6176  000D0A  C177  F177         	movff	___lwmod@dividend,?___lwmod
  6177  000D0E  C178  F178         	movff	___lwmod@dividend+1,?___lwmod+1
  6178  000D12  0012               	return		;funcret
  6179  000D14                     __end_of___lwmod:
  6180                           	opt stack 0
  6181                           tblptru	equ	0xFF8
  6182                           tblptrh	equ	0xFF7
  6183                           tblptrl	equ	0xFF6
  6184                           tablat	equ	0xFF5
  6185                           prodh	equ	0xFF4
  6186                           prodl	equ	0xFF3
  6187                           postinc0	equ	0xFEE
  6188                           wreg	equ	0xFE8
  6189                           postdec1	equ	0xFE5
  6190                           fsr1h	equ	0xFE2
  6191                           fsr1l	equ	0xFE1
  6192                           postinc2	equ	0xFDE
  6193                           postdec2	equ	0xFDD
  6194                           fsr2h	equ	0xFDA
  6195                           fsr2l	equ	0xFD9
  6196                           status	equ	0xFD8
  6197                           
  6198 ;; *************** function ___lwdiv *****************
  6199 ;; Defined at:
  6200 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  6201 ;; Parameters:    Size  Location     Type
  6202 ;;  dividend        2    0[BANK1 ] unsigned int 
  6203 ;;  divisor         2    2[BANK1 ] unsigned int 
  6204 ;; Auto vars:     Size  Location     Type
  6205 ;;  quotient        2    5[BANK1 ] unsigned int 
  6206 ;;  counter         1    4[BANK1 ] unsigned char 
  6207 ;; Return value:  Size  Location     Type
  6208 ;;                  2    0[BANK1 ] unsigned int 
  6209 ;; Registers used:
  6210 ;;		wreg, status,2, status,0
  6211 ;; Tracked objects:
  6212 ;;		On entry : 0/0
  6213 ;;		On exit  : 0/0
  6214 ;;		Unchanged: 0/0
  6215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6216 ;;      Params:         0       0       4       0       0       0       0
  6217 ;;      Locals:         0       0       3       0       0       0       0
  6218 ;;      Temps:          0       0       0       0       0       0       0
  6219 ;;      Totals:         0       0       7       0       0       0       0
  6220 ;;Total ram usage:        7 bytes
  6221 ;; Hardware stack levels used:    1
  6222 ;; Hardware stack levels required when called:    3
  6223 ;; This function calls:
  6224 ;;		Nothing
  6225 ;; This function is called by:
  6226 ;;		_printf
  6227 ;; This function uses a non-reentrant model
  6228 ;;
  6229                           
  6230                           	psect	text5
  6231  000C3A                     __ptext5:
  6232                           	opt stack 0
  6233  000C3A                     ___lwdiv:
  6234                           	opt stack 26
  6235                           
  6236                           ;incstack = 0
  6237  000C3A  0E00               	movlw	0
  6238  000C3C  0101               	movlb	1	; () banked
  6239  000C3E  6F76               	movwf	(___lwdiv@quotient+1)& (0+255),b
  6240  000C40  0E00               	movlw	0
  6241  000C42  6F75               	movwf	___lwdiv@quotient& (0+255),b
  6242                           
  6243                           ; BSR set to: 1
  6244  000C44  0101               	movlb	1	; () banked
  6245  000C46  5172               	movf	___lwdiv@divisor& (0+255),w,b
  6246  000C48  0101               	movlb	1	; () banked
  6247  000C4A  1173               	iorwf	(___lwdiv@divisor+1)& (0+255),w,b
  6248  000C4C  B4D8               	btfsc	status,2,c
  6249  000C4E  D02C               	goto	l1964
  6250                           
  6251                           ; BSR set to: 1
  6252  000C50  0E01               	movlw	1
  6253  000C52  0101               	movlb	1	; () banked
  6254  000C54  6F74               	movwf	___lwdiv@counter& (0+255),b
  6255  000C56  D006               	goto	l9123
  6256  000C58                     l9121:
  6257                           
  6258                           ; BSR set to: 1
  6259  000C58  0101               	movlb	1	; () banked
  6260  000C5A  90D8               	bcf	status,0,c
  6261  000C5C  3772               	rlcf	___lwdiv@divisor& (0+255),f,b
  6262  000C5E  3773               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  6263  000C60  0101               	movlb	1	; () banked
  6264  000C62  2B74               	incf	___lwdiv@counter& (0+255),f,b
  6265  000C64                     l9123:
  6266                           
  6267                           ; BSR set to: 1
  6268  000C64  0101               	movlb	1	; () banked
  6269  000C66  AF73               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  6270  000C68  D7F7               	goto	l9121
  6271  000C6A                     l9125:
  6272                           
  6273                           ; BSR set to: 1
  6274  000C6A  0101               	movlb	1	; () banked
  6275  000C6C  90D8               	bcf	status,0,c
  6276  000C6E  3775               	rlcf	___lwdiv@quotient& (0+255),f,b
  6277  000C70  3776               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  6278                           
  6279                           ; BSR set to: 1
  6280  000C72  0101               	movlb	1	; () banked
  6281  000C74  5172               	movf	___lwdiv@divisor& (0+255),w,b
  6282  000C76  0101               	movlb	1	; () banked
  6283  000C78  5D70               	subwf	___lwdiv@dividend& (0+255),w,b
  6284  000C7A  0101               	movlb	1	; () banked
  6285  000C7C  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6286  000C7E  0101               	movlb	1	; () banked
  6287  000C80  5971               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  6288  000C82  A0D8               	btfss	status,0,c
  6289  000C84  D00A               	goto	l9133
  6290                           
  6291                           ; BSR set to: 1
  6292  000C86  0101               	movlb	1	; () banked
  6293  000C88  5172               	movf	___lwdiv@divisor& (0+255),w,b
  6294  000C8A  0101               	movlb	1	; () banked
  6295  000C8C  5F70               	subwf	___lwdiv@dividend& (0+255),f,b
  6296  000C8E  0101               	movlb	1	; () banked
  6297  000C90  5173               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  6298  000C92  0101               	movlb	1	; () banked
  6299  000C94  5B71               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  6300                           
  6301                           ; BSR set to: 1
  6302  000C96  0101               	movlb	1	; () banked
  6303  000C98  8175               	bsf	___lwdiv@quotient& (0+255),0,b
  6304  000C9A                     l9133:
  6305                           
  6306                           ; BSR set to: 1
  6307  000C9A  0101               	movlb	1	; () banked
  6308  000C9C  90D8               	bcf	status,0,c
  6309  000C9E  3373               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  6310  000CA0  3372               	rrcf	___lwdiv@divisor& (0+255),f,b
  6311                           
  6312                           ; BSR set to: 1
  6313  000CA2  0101               	movlb	1	; () banked
  6314  000CA4  2F74               	decfsz	___lwdiv@counter& (0+255),f,b
  6315  000CA6  D7E1               	goto	l9125
  6316  000CA8                     l1964:
  6317                           
  6318                           ; BSR set to: 1
  6319  000CA8  C175  F170         	movff	___lwdiv@quotient,?___lwdiv
  6320  000CAC  C176  F171         	movff	___lwdiv@quotient+1,?___lwdiv+1
  6321                           
  6322                           ; BSR set to: 1
  6323  000CB0  0012               	return		;funcret
  6324  000CB2                     __end_of___lwdiv:
  6325                           	opt stack 0
  6326                           tblptru	equ	0xFF8
  6327                           tblptrh	equ	0xFF7
  6328                           tblptrl	equ	0xFF6
  6329                           tablat	equ	0xFF5
  6330                           prodh	equ	0xFF4
  6331                           prodl	equ	0xFF3
  6332                           postinc0	equ	0xFEE
  6333                           wreg	equ	0xFE8
  6334                           postdec1	equ	0xFE5
  6335                           fsr1h	equ	0xFE2
  6336                           fsr1l	equ	0xFE1
  6337                           postinc2	equ	0xFDE
  6338                           postdec2	equ	0xFDD
  6339                           fsr2h	equ	0xFDA
  6340                           fsr2l	equ	0xFD9
  6341                           status	equ	0xFD8
  6342                           
  6343 ;; *************** function _delaynus *****************
  6344 ;; Defined at:
  6345 ;;		line 899 in file "../Timer.c"
  6346 ;; Parameters:    Size  Location     Type
  6347 ;;  n               2    0[BANK1 ] unsigned int 
  6348 ;; Auto vars:     Size  Location     Type
  6349 ;;		None
  6350 ;; Return value:  Size  Location     Type
  6351 ;;                  1    wreg      void 
  6352 ;; Registers used:
  6353 ;;		wreg, status,2, status,0
  6354 ;; Tracked objects:
  6355 ;;		On entry : 0/0
  6356 ;;		On exit  : 0/0
  6357 ;;		Unchanged: 0/0
  6358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6359 ;;      Params:         0       0       2       0       0       0       0
  6360 ;;      Locals:         0       0       0       0       0       0       0
  6361 ;;      Temps:          0       0       0       0       0       0       0
  6362 ;;      Totals:         0       0       2       0       0       0       0
  6363 ;;Total ram usage:        2 bytes
  6364 ;; Hardware stack levels used:    1
  6365 ;; Hardware stack levels required when called:    3
  6366 ;; This function calls:
  6367 ;;		Nothing
  6368 ;; This function is called by:
  6369 ;;		_main
  6370 ;;		_KEY_Scan
  6371 ;;		_initial_ui_setting
  6372 ;; This function uses a non-reentrant model
  6373 ;;
  6374                           
  6375                           	psect	text6
  6376  000E6E                     __ptext6:
  6377                           	opt stack 0
  6378  000E6E                     _delaynus:
  6379                           	opt stack 27
  6380                           
  6381                           ;Timer.c: 902: TMR1 =0;
  6382                           
  6383                           ; BSR set to: 1
  6384                           ;incstack = 0
  6385  000E6E  0E00               	movlw	0
  6386  000E70  6ECF               	movwf	4047,c	;volatile
  6387  000E72  0E00               	movlw	0
  6388  000E74  6ECE               	movwf	4046,c	;volatile
  6389                           
  6390                           ;Timer.c: 903: T1CONbits.TMR1ON =1;
  6391  000E76  80CD               	bsf	4045,0,c	;volatile
  6392  000E78                     l9237:
  6393  000E78  0101               	movlb	1	; () banked
  6394  000E7A  5170               	movf	delaynus@n& (0+255),w,b
  6395  000E7C  5CCE               	subwf	4046,w,c	;volatile
  6396  000E7E  0101               	movlb	1	; () banked
  6397  000E80  5171               	movf	(delaynus@n+1)& (0+255),w,b
  6398  000E82  58CF               	subwfb	4047,w,c	;volatile
  6399  000E84  A0D8               	btfss	status,0,c
  6400  000E86  D7F8               	goto	l9237
  6401                           
  6402                           ; BSR set to: 1
  6403                           ;Timer.c: 907: T1CONbits.TMR1ON =0;
  6404  000E88  90CD               	bcf	4045,0,c	;volatile
  6405                           
  6406                           ; BSR set to: 1
  6407  000E8A  0012               	return		;funcret
  6408  000E8C                     __end_of_delaynus:
  6409                           	opt stack 0
  6410                           tblptru	equ	0xFF8
  6411                           tblptrh	equ	0xFF7
  6412                           tblptrl	equ	0xFF6
  6413                           tablat	equ	0xFF5
  6414                           prodh	equ	0xFF4
  6415                           prodl	equ	0xFF3
  6416                           postinc0	equ	0xFEE
  6417                           wreg	equ	0xFE8
  6418                           postdec1	equ	0xFE5
  6419                           fsr1h	equ	0xFE2
  6420                           fsr1l	equ	0xFE1
  6421                           postinc2	equ	0xFDE
  6422                           postdec2	equ	0xFDD
  6423                           fsr2h	equ	0xFDA
  6424                           fsr2l	equ	0xFD9
  6425                           status	equ	0xFD8
  6426                           
  6427 ;; *************** function _delay_pwm *****************
  6428 ;; Defined at:
  6429 ;;		line 45 in file "../Oled.c"
  6430 ;; Parameters:    Size  Location     Type
  6431 ;;  n               4    0[BANK1 ] unsigned long 
  6432 ;; Auto vars:     Size  Location     Type
  6433 ;;		None
  6434 ;; Return value:  Size  Location     Type
  6435 ;;                  1    wreg      void 
  6436 ;; Registers used:
  6437 ;;		wreg, status,2, status,0
  6438 ;; Tracked objects:
  6439 ;;		On entry : 0/0
  6440 ;;		On exit  : 0/0
  6441 ;;		Unchanged: 0/0
  6442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6443 ;;      Params:         0       0       4       0       0       0       0
  6444 ;;      Locals:         0       0       0       0       0       0       0
  6445 ;;      Temps:          0       0       0       0       0       0       0
  6446 ;;      Totals:         0       0       4       0       0       0       0
  6447 ;;Total ram usage:        4 bytes
  6448 ;; Hardware stack levels used:    1
  6449 ;; Hardware stack levels required when called:    3
  6450 ;; This function calls:
  6451 ;;		Nothing
  6452 ;; This function is called by:
  6453 ;;		_main
  6454 ;; This function uses a non-reentrant model
  6455 ;;
  6456                           
  6457                           	psect	text7
  6458  000E28                     __ptext7:
  6459                           	opt stack 0
  6460  000E28                     _delay_pwm:
  6461                           	opt stack 27
  6462                           
  6463                           ;Oled.c: 47: while(n)
  6464                           
  6465                           ; BSR set to: 1
  6466                           ;incstack = 0
  6467  000E28  D007               	goto	l457
  6468  000E2A                     l458:
  6469                           
  6470                           ; BSR set to: 1
  6471                           ;Oled.c: 48: {
  6472                           ;Oled.c: 49: __nop();
  6473  000E2A  F000               	nop	
  6474                           
  6475                           ;Oled.c: 50: n--;
  6476  000E2C  0101               	movlb	1	; () banked
  6477  000E2E  0770               	decf	delay_pwm@n& (0+255),f,b
  6478  000E30  0E00               	movlw	0
  6479  000E32  5B71               	subwfb	(delay_pwm@n+1)& (0+255),f,b
  6480  000E34  5B72               	subwfb	(delay_pwm@n+2)& (0+255),f,b
  6481  000E36  5B73               	subwfb	(delay_pwm@n+3)& (0+255),f,b
  6482  000E38                     l457:
  6483  000E38  0101               	movlb	1	; () banked
  6484  000E3A  5170               	movf	delay_pwm@n& (0+255),w,b
  6485  000E3C  0101               	movlb	1	; () banked
  6486  000E3E  1171               	iorwf	(delay_pwm@n+1)& (0+255),w,b
  6487  000E40  0101               	movlb	1	; () banked
  6488  000E42  1172               	iorwf	(delay_pwm@n+2)& (0+255),w,b
  6489  000E44  0101               	movlb	1	; () banked
  6490  000E46  1173               	iorwf	(delay_pwm@n+3)& (0+255),w,b
  6491  000E48  B4D8               	btfsc	status,2,c
  6492  000E4A  0012               	return	
  6493  000E4C  D7EE               	goto	l458
  6494  000E4E                     __end_of_delay_pwm:
  6495                           	opt stack 0
  6496                           tblptru	equ	0xFF8
  6497                           tblptrh	equ	0xFF7
  6498                           tblptrl	equ	0xFF6
  6499                           tablat	equ	0xFF5
  6500                           prodh	equ	0xFF4
  6501                           prodl	equ	0xFF3
  6502                           postinc0	equ	0xFEE
  6503                           wreg	equ	0xFE8
  6504                           postdec1	equ	0xFE5
  6505                           fsr1h	equ	0xFE2
  6506                           fsr1l	equ	0xFE1
  6507                           postinc2	equ	0xFDE
  6508                           postdec2	equ	0xFDD
  6509                           fsr2h	equ	0xFDA
  6510                           fsr2l	equ	0xFD9
  6511                           status	equ	0xFD8
  6512                           
  6513 ;; *************** function _buzz *****************
  6514 ;; Defined at:
  6515 ;;		line 114 in file "../Beep.c"
  6516 ;; Parameters:    Size  Location     Type
  6517 ;;		None
  6518 ;; Auto vars:     Size  Location     Type
  6519 ;;		None
  6520 ;; Return value:  Size  Location     Type
  6521 ;;                  1    wreg      void 
  6522 ;; Registers used:
  6523 ;;		wreg, status,2, status,0, cstack
  6524 ;; Tracked objects:
  6525 ;;		On entry : 0/0
  6526 ;;		On exit  : 0/0
  6527 ;;		Unchanged: 0/0
  6528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6529 ;;      Params:         0       0       0       0       0       0       0
  6530 ;;      Locals:         0       0       0       0       0       0       0
  6531 ;;      Temps:          0       0       0       0       0       0       0
  6532 ;;      Totals:         0       0       0       0       0       0       0
  6533 ;;Total ram usage:        0 bytes
  6534 ;; Hardware stack levels used:    1
  6535 ;; Hardware stack levels required when called:    4
  6536 ;; This function calls:
  6537 ;;		_delay_nms
  6538 ;; This function is called by:
  6539 ;;		_main
  6540 ;;		_KEY_Scan
  6541 ;; This function uses a non-reentrant model
  6542 ;;
  6543                           
  6544                           	psect	text8
  6545  000EAA                     __ptext8:
  6546                           	opt stack 0
  6547  000EAA                     _buzz:
  6548                           	opt stack 26
  6549                           
  6550                           ;Beep.c: 120: LATEbits.LE2 =1;
  6551                           
  6552                           ; BSR set to: 1
  6553                           ;incstack = 0
  6554  000EAA  848D               	bsf	3981,2,c	;volatile
  6555                           
  6556                           ;Beep.c: 126: delay_nms(1);
  6557  000EAC  0E01               	movlw	1
  6558  000EAE  0101               	movlb	1	; () banked
  6559  000EB0  6F70               	movwf	delay_nms@n& (0+255),b
  6560  000EB2  0E00               	movlw	0
  6561  000EB4  6F71               	movwf	(delay_nms@n+1)& (0+255),b
  6562  000EB6  0E00               	movlw	0
  6563  000EB8  6F72               	movwf	(delay_nms@n+2)& (0+255),b
  6564  000EBA  0E00               	movlw	0
  6565  000EBC  6F73               	movwf	(delay_nms@n+3)& (0+255),b
  6566  000EBE  EC8A  F006         	call	_delay_nms	;wreg free
  6567                           
  6568                           ;Beep.c: 129: LATEbits.LE2 =0;
  6569  000EC2  948D               	bcf	3981,2,c	;volatile
  6570  000EC4  0012               	return		;funcret
  6571  000EC6                     __end_of_buzz:
  6572                           	opt stack 0
  6573                           tblptru	equ	0xFF8
  6574                           tblptrh	equ	0xFF7
  6575                           tblptrl	equ	0xFF6
  6576                           tablat	equ	0xFF5
  6577                           prodh	equ	0xFF4
  6578                           prodl	equ	0xFF3
  6579                           postinc0	equ	0xFEE
  6580                           wreg	equ	0xFE8
  6581                           postdec1	equ	0xFE5
  6582                           fsr1h	equ	0xFE2
  6583                           fsr1l	equ	0xFE1
  6584                           postinc2	equ	0xFDE
  6585                           postdec2	equ	0xFDD
  6586                           fsr2h	equ	0xFDA
  6587                           fsr2l	equ	0xFD9
  6588                           status	equ	0xFD8
  6589                           
  6590 ;; *************** function _delay_nms *****************
  6591 ;; Defined at:
  6592 ;;		line 10 in file "../Oled.c"
  6593 ;; Parameters:    Size  Location     Type
  6594 ;;  n               4    0[BANK1 ] unsigned long 
  6595 ;; Auto vars:     Size  Location     Type
  6596 ;;  i               2    4[BANK1 ] unsigned int 
  6597 ;; Return value:  Size  Location     Type
  6598 ;;                  1    wreg      void 
  6599 ;; Registers used:
  6600 ;;		wreg, status,2, status,0
  6601 ;; Tracked objects:
  6602 ;;		On entry : 0/0
  6603 ;;		On exit  : 0/0
  6604 ;;		Unchanged: 0/0
  6605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6606 ;;      Params:         0       0       4       0       0       0       0
  6607 ;;      Locals:         0       0       2       0       0       0       0
  6608 ;;      Temps:          0       0       0       0       0       0       0
  6609 ;;      Totals:         0       0       6       0       0       0       0
  6610 ;;Total ram usage:        6 bytes
  6611 ;; Hardware stack levels used:    1
  6612 ;; Hardware stack levels required when called:    3
  6613 ;; This function calls:
  6614 ;;		Nothing
  6615 ;; This function is called by:
  6616 ;;		_buzz
  6617 ;;		_KEY_Scan
  6618 ;; This function uses a non-reentrant model
  6619 ;;
  6620                           
  6621                           	psect	text9
  6622  000D14                     __ptext9:
  6623                           	opt stack 0
  6624  000D14                     _delay_nms:
  6625                           	opt stack 26
  6626                           
  6627                           ;Oled.c: 12: uint16_t i=0;
  6628                           
  6629                           ;incstack = 0
  6630  000D14  0E00               	movlw	0
  6631  000D16  0101               	movlb	1	; () banked
  6632  000D18  6F75               	movwf	(delay_nms@i+1)& (0+255),b
  6633  000D1A  0E00               	movlw	0
  6634  000D1C  6F74               	movwf	delay_nms@i& (0+255),b
  6635                           
  6636                           ;Oled.c: 13: while(n)
  6637  000D1E  D018               	goto	l441
  6638  000D20                     l8977:
  6639                           
  6640                           ; BSR set to: 1
  6641                           ;Oled.c: 14: {
  6642                           ;Oled.c: 16: for(i=0;i<5000;i++)
  6643  000D20  0E00               	movlw	0
  6644  000D22  0101               	movlb	1	; () banked
  6645  000D24  6F75               	movwf	(delay_nms@i+1)& (0+255),b
  6646  000D26  0E00               	movlw	0
  6647  000D28  6F74               	movwf	delay_nms@i& (0+255),b
  6648  000D2A                     l8979:
  6649                           
  6650                           ; BSR set to: 1
  6651  000D2A  0E88               	movlw	136
  6652  000D2C  0101               	movlb	1	; () banked
  6653  000D2E  5D74               	subwf	delay_nms@i& (0+255),w,b
  6654  000D30  0E13               	movlw	19
  6655  000D32  0101               	movlb	1	; () banked
  6656  000D34  5975               	subwfb	(delay_nms@i+1)& (0+255),w,b
  6657  000D36  B0D8               	btfsc	status,0,c
  6658  000D38  D005               	goto	l8987
  6659                           
  6660                           ; BSR set to: 1
  6661                           ;Oled.c: 17: __nop();
  6662                           
  6663                           ; BSR set to: 1
  6664  000D3A  F000               	nop	
  6665  000D3C  0101               	movlb	1	; () banked
  6666  000D3E  4B74               	infsnz	delay_nms@i& (0+255),f,b
  6667  000D40  2B75               	incf	(delay_nms@i+1)& (0+255),f,b
  6668  000D42  D7F3               	goto	l8979
  6669  000D44                     l8987:
  6670                           
  6671                           ; BSR set to: 1
  6672                           ;Oled.c: 19: n--;
  6673  000D44  0101               	movlb	1	; () banked
  6674  000D46  0770               	decf	delay_nms@n& (0+255),f,b
  6675  000D48  0E00               	movlw	0
  6676  000D4A  5B71               	subwfb	(delay_nms@n+1)& (0+255),f,b
  6677  000D4C  5B72               	subwfb	(delay_nms@n+2)& (0+255),f,b
  6678  000D4E  5B73               	subwfb	(delay_nms@n+3)& (0+255),f,b
  6679  000D50                     l441:
  6680                           
  6681                           ; BSR set to: 1
  6682  000D50  0101               	movlb	1	; () banked
  6683  000D52  5170               	movf	delay_nms@n& (0+255),w,b
  6684  000D54  0101               	movlb	1	; () banked
  6685  000D56  1171               	iorwf	(delay_nms@n+1)& (0+255),w,b
  6686  000D58  0101               	movlb	1	; () banked
  6687  000D5A  1172               	iorwf	(delay_nms@n+2)& (0+255),w,b
  6688  000D5C  0101               	movlb	1	; () banked
  6689  000D5E  1173               	iorwf	(delay_nms@n+3)& (0+255),w,b
  6690  000D60  B4D8               	btfsc	status,2,c
  6691  000D62  0012               	return	
  6692  000D64  D7DD               	goto	l8977
  6693  000D66                     __end_of_delay_nms:
  6694                           	opt stack 0
  6695                           tblptru	equ	0xFF8
  6696                           tblptrh	equ	0xFF7
  6697                           tblptrl	equ	0xFF6
  6698                           tablat	equ	0xFF5
  6699                           prodh	equ	0xFF4
  6700                           prodl	equ	0xFF3
  6701                           postinc0	equ	0xFEE
  6702                           wreg	equ	0xFE8
  6703                           postdec1	equ	0xFE5
  6704                           fsr1h	equ	0xFE2
  6705                           fsr1l	equ	0xFE1
  6706                           postinc2	equ	0xFDE
  6707                           postdec2	equ	0xFDD
  6708                           fsr2h	equ	0xFDA
  6709                           fsr2l	equ	0xFD9
  6710                           status	equ	0xFD8
  6711                           
  6712 ;; *************** function _Timer1Init *****************
  6713 ;; Defined at:
  6714 ;;		line 861 in file "../Timer.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;		None
  6717 ;; Auto vars:     Size  Location     Type
  6718 ;;		None
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  1    wreg      void 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6728 ;;      Params:         0       0       0       0       0       0       0
  6729 ;;      Locals:         0       0       0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0
  6731 ;;      Totals:         0       0       0       0       0       0       0
  6732 ;;Total ram usage:        0 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    3
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_main
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text10
  6743  000F0E                     __ptext10:
  6744                           	opt stack 0
  6745  000F0E                     _Timer1Init:
  6746                           	opt stack 27
  6747                           
  6748                           ;Timer.c: 865: T1CONbits.T1CKPS = 2;
  6749                           
  6750                           ; BSR set to: 1
  6751                           ;incstack = 0
  6752  000F0E  50CD               	movf	4045,w,c	;volatile
  6753  000F10  0BCF               	andlw	-49
  6754  000F12  0920               	iorlw	32
  6755  000F14  6ECD               	movwf	4045,c	;volatile
  6756                           
  6757                           ;Timer.c: 866: T1CONbits.RD16 =1;
  6758  000F16  8ECD               	bsf	4045,7,c	;volatile
  6759                           
  6760                           ;Timer.c: 867: T1CONbits.TMR1ON =0;
  6761  000F18  90CD               	bcf	4045,0,c	;volatile
  6762  000F1A  0012               	return		;funcret
  6763  000F1C                     __end_of_Timer1Init:
  6764                           	opt stack 0
  6765                           tblptru	equ	0xFF8
  6766                           tblptrh	equ	0xFF7
  6767                           tblptrl	equ	0xFF6
  6768                           tablat	equ	0xFF5
  6769                           prodh	equ	0xFF4
  6770                           prodl	equ	0xFF3
  6771                           postinc0	equ	0xFEE
  6772                           wreg	equ	0xFE8
  6773                           postdec1	equ	0xFE5
  6774                           fsr1h	equ	0xFE2
  6775                           fsr1l	equ	0xFE1
  6776                           postinc2	equ	0xFDE
  6777                           postdec2	equ	0xFDD
  6778                           fsr2h	equ	0xFDA
  6779                           fsr2l	equ	0xFD9
  6780                           status	equ	0xFD8
  6781                           
  6782 ;; *************** function _MotorDriveInit *****************
  6783 ;; Defined at:
  6784 ;;		line 194 in file "../MotorDrive.c"
  6785 ;; Parameters:    Size  Location     Type
  6786 ;;		None
  6787 ;; Auto vars:     Size  Location     Type
  6788 ;;		None
  6789 ;; Return value:  Size  Location     Type
  6790 ;;                  1    wreg      void 
  6791 ;; Registers used:
  6792 ;;		None
  6793 ;; Tracked objects:
  6794 ;;		On entry : 0/0
  6795 ;;		On exit  : 0/0
  6796 ;;		Unchanged: 0/0
  6797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6798 ;;      Params:         0       0       0       0       0       0       0
  6799 ;;      Locals:         0       0       0       0       0       0       0
  6800 ;;      Temps:          0       0       0       0       0       0       0
  6801 ;;      Totals:         0       0       0       0       0       0       0
  6802 ;;Total ram usage:        0 bytes
  6803 ;; Hardware stack levels used:    1
  6804 ;; Hardware stack levels required when called:    3
  6805 ;; This function calls:
  6806 ;;		Nothing
  6807 ;; This function is called by:
  6808 ;;		_main
  6809 ;; This function uses a non-reentrant model
  6810 ;;
  6811                           
  6812                           	psect	text11
  6813  000DFA                     __ptext11:
  6814                           	opt stack 0
  6815  000DFA                     _MotorDriveInit:
  6816                           	opt stack 27
  6817                           
  6818                           ;MotorDrive.c: 211: TRISAbits.RA5 =0;
  6819                           
  6820                           ;incstack = 0
  6821  000DFA  9A92               	bcf	3986,5,c	;volatile
  6822                           
  6823                           ;MotorDrive.c: 214: TRISCbits.RC2 =0;
  6824  000DFC  9494               	bcf	3988,2,c	;volatile
  6825                           
  6826                           ;MotorDrive.c: 215: TRISDbits.RD0 =0;
  6827  000DFE  9095               	bcf	3989,0,c	;volatile
  6828                           
  6829                           ;MotorDrive.c: 216: TRISDbits.RD1 =0;
  6830  000E00  9295               	bcf	3989,1,c	;volatile
  6831                           
  6832                           ;MotorDrive.c: 218: TRISCbits.RC1 =1;
  6833  000E02  8294               	bsf	3988,1,c	;volatile
  6834                           
  6835                           ;MotorDrive.c: 219: TRISAbits.RA4 =1;
  6836  000E04  8892               	bsf	3986,4,c	;volatile
  6837                           
  6838                           ;MotorDrive.c: 222: TRISCbits.RC0 =1;
  6839  000E06  8094               	bsf	3988,0,c	;volatile
  6840                           
  6841                           ;MotorDrive.c: 223: TRISBbits.RB2 =1;
  6842  000E08  8493               	bsf	3987,2,c	;volatile
  6843                           
  6844                           ;MotorDrive.c: 227: TRISDbits.RD4 =0;
  6845  000E0A  9895               	bcf	3989,4,c	;volatile
  6846                           
  6847                           ;MotorDrive.c: 228: TRISDbits.RD2 =0;
  6848  000E0C  9495               	bcf	3989,2,c	;volatile
  6849                           
  6850                           ;MotorDrive.c: 229: TRISDbits.RD3 =0;
  6851  000E0E  9695               	bcf	3989,3,c	;volatile
  6852                           
  6853                           ;MotorDrive.c: 234: LATAbits.LA5 =1;
  6854  000E10  8A89               	bsf	3977,5,c	;volatile
  6855                           
  6856                           ;MotorDrive.c: 235: do{LATDbits.LD0 =0;LATDbits.LD1 =0;}while(0);
  6857  000E12  908C               	bcf	3980,0,c	;volatile
  6858  000E14  928C               	bcf	3980,1,c	;volatile
  6859                           
  6860                           ;MotorDrive.c: 236: do{LATDbits.LD4 =1;LATDbits.LD2 =0;LATDbits.LD3 =0;}while(0);
  6861  000E16  888C               	bsf	3980,4,c	;volatile
  6862  000E18  948C               	bcf	3980,2,c	;volatile
  6863  000E1A  968C               	bcf	3980,3,c	;volatile
  6864                           
  6865                           ;MotorDrive.c: 237: LATCbits.LC2 =1;
  6866  000E1C  848B               	bsf	3979,2,c	;volatile
  6867                           
  6868                           ;MotorDrive.c: 238: LATDbits.LD4 =1;
  6869  000E1E  888C               	bsf	3980,4,c	;volatile
  6870                           
  6871                           ;MotorDrive.c: 244: INTCON2bits.INTEDG2 = 0;
  6872  000E20  98F1               	bcf	intcon2,4,c	;volatile
  6873                           
  6874                           ;MotorDrive.c: 245: INTCON3bits.INT2IF =0;
  6875  000E22  92F0               	bcf	intcon3,1,c	;volatile
  6876                           
  6877                           ;MotorDrive.c: 246: INTCON3bits.INT2E = 1;
  6878  000E24  88F0               	bsf	intcon3,4,c	;volatile
  6879  000E26  0012               	return		;funcret
  6880  000E28                     __end_of_MotorDriveInit:
  6881                           	opt stack 0
  6882                           tblptru	equ	0xFF8
  6883                           tblptrh	equ	0xFF7
  6884                           tblptrl	equ	0xFF6
  6885                           tablat	equ	0xFF5
  6886                           prodh	equ	0xFF4
  6887                           prodl	equ	0xFF3
  6888                           intcon2	equ	0xFF1
  6889                           intcon3	equ	0xFF0
  6890                           postinc0	equ	0xFEE
  6891                           wreg	equ	0xFE8
  6892                           postdec1	equ	0xFE5
  6893                           fsr1h	equ	0xFE2
  6894                           fsr1l	equ	0xFE1
  6895                           postinc2	equ	0xFDE
  6896                           postdec2	equ	0xFDD
  6897                           fsr2h	equ	0xFDA
  6898                           fsr2l	equ	0xFD9
  6899                           status	equ	0xFD8
  6900                           
  6901 ;; *************** function _HG_init *****************
  6902 ;; Defined at:
  6903 ;;		line 24 in file "../gui.c"
  6904 ;; Parameters:    Size  Location     Type
  6905 ;;		None
  6906 ;; Auto vars:     Size  Location     Type
  6907 ;;		None
  6908 ;; Return value:  Size  Location     Type
  6909 ;;                  2  121[None  ] int 
  6910 ;; Registers used:
  6911 ;;		wreg, status,2, status,0, cstack
  6912 ;; Tracked objects:
  6913 ;;		On entry : 0/0
  6914 ;;		On exit  : 0/0
  6915 ;;		Unchanged: 0/0
  6916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6917 ;;      Params:         0       0       0       0       0       0       0
  6918 ;;      Locals:         0       0       0       0       0       0       0
  6919 ;;      Temps:          0       0       0       0       0       0       0
  6920 ;;      Totals:         0       0       0       0       0       0       0
  6921 ;;Total ram usage:        0 bytes
  6922 ;; Hardware stack levels used:    1
  6923 ;; Hardware stack levels required when called:    4
  6924 ;; This function calls:
  6925 ;;		_BeepInit
  6926 ;;		_KEY_Init
  6927 ;;		_LCD_Off
  6928 ;;		_LCD_backlight_init
  6929 ;;		_TimerInit
  6930 ;;		_init_menu
  6931 ;; This function is called by:
  6932 ;;		_main
  6933 ;; This function uses a non-reentrant model
  6934 ;;
  6935                           
  6936                           	psect	text12
  6937  000EC6                     __ptext12:
  6938                           	opt stack 0
  6939  000EC6                     _HG_init:
  6940                           	opt stack 26
  6941                           
  6942                           ;gui.c: 26: BeepInit();
  6943                           
  6944                           ;incstack = 0
  6945  000EC6  EC9A  F007         	call	_BeepInit	;wreg free
  6946                           
  6947                           ;gui.c: 27: LCD_backlight_init();
  6948  000ECA  EC9F  F007         	call	_LCD_backlight_init	;wreg free
  6949                           
  6950                           ;gui.c: 29: LCD_Off();
  6951  000ECE  ECA1  F007         	call	_LCD_Off	;wreg free
  6952                           
  6953                           ;gui.c: 32: init_menu();
  6954  000ED2  EC2A  F003         	call	_init_menu	;wreg free
  6955                           
  6956                           ;gui.c: 33: KEY_Init();
  6957  000ED6  EC27  F007         	call	_KEY_Init	;wreg free
  6958                           
  6959                           ;gui.c: 35: TimerInit();
  6960  000EDA  EC46  F007         	call	_TimerInit	;wreg free
  6961  000EDE  0012               	return		;funcret
  6962  000EE0                     __end_of_HG_init:
  6963                           	opt stack 0
  6964                           tblptru	equ	0xFF8
  6965                           tblptrh	equ	0xFF7
  6966                           tblptrl	equ	0xFF6
  6967                           tablat	equ	0xFF5
  6968                           prodh	equ	0xFF4
  6969                           prodl	equ	0xFF3
  6970                           intcon2	equ	0xFF1
  6971                           intcon3	equ	0xFF0
  6972                           postinc0	equ	0xFEE
  6973                           wreg	equ	0xFE8
  6974                           postdec1	equ	0xFE5
  6975                           fsr1h	equ	0xFE2
  6976                           fsr1l	equ	0xFE1
  6977                           postinc2	equ	0xFDE
  6978                           postdec2	equ	0xFDD
  6979                           fsr2h	equ	0xFDA
  6980                           fsr2l	equ	0xFD9
  6981                           status	equ	0xFD8
  6982                           
  6983 ;; *************** function _init_menu *****************
  6984 ;; Defined at:
  6985 ;;		line 1291 in file "../gui.c"
  6986 ;; Parameters:    Size  Location     Type
  6987 ;;		None
  6988 ;; Auto vars:     Size  Location     Type
  6989 ;;		None
  6990 ;; Return value:  Size  Location     Type
  6991 ;;                  1    wreg      void 
  6992 ;; Registers used:
  6993 ;;		wreg, status,2, status,0
  6994 ;; Tracked objects:
  6995 ;;		On entry : 0/0
  6996 ;;		On exit  : 0/0
  6997 ;;		Unchanged: 0/0
  6998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6999 ;;      Params:         0       0       0       0       0       0       0
  7000 ;;      Locals:         0       0       0       0       0       0       0
  7001 ;;      Temps:          0       0       0       0       0       0       0
  7002 ;;      Totals:         0       0       0       0       0       0       0
  7003 ;;Total ram usage:        0 bytes
  7004 ;; Hardware stack levels used:    1
  7005 ;; Hardware stack levels required when called:    3
  7006 ;; This function calls:
  7007 ;;		Nothing
  7008 ;; This function is called by:
  7009 ;;		_HG_init
  7010 ;; This function uses a non-reentrant model
  7011 ;;
  7012                           
  7013                           	psect	text13
  7014  000654                     __ptext13:
  7015                           	opt stack 0
  7016  000654                     _init_menu:
  7017                           	opt stack 26
  7018                           
  7019                           ;gui.c: 1295: menu[0].menu_no=0;
  7020                           
  7021                           ;incstack = 0
  7022  000654  0E00               	movlw	0
  7023  000656  0100               	movlb	0	; () banked
  7024  000658  6F80               	movwf	_menu& (0+255),b
  7025                           
  7026                           ;gui.c: 1296: menu[0].frame=0;
  7027  00065A  0E00               	movlw	0
  7028  00065C  0100               	movlb	0	; () banked
  7029  00065E  6F83               	movwf	(_menu+3)& (0+255),b
  7030                           
  7031                           ;gui.c: 1297: menu[0].mode = 0;
  7032  000660  0E00               	movlw	0
  7033  000662  0100               	movlb	0	; () banked
  7034  000664  6F81               	movwf	(_menu+1)& (0+255),b
  7035                           
  7036                           ; BSR set to: 0
  7037                           ;gui.c: 1298: menu[0].cur_mode =menu[0].mode;
  7038  000666  C081  F082         	movff	_menu+1,_menu+2
  7039                           
  7040                           ;gui.c: 1299: menu[0].value = 0;
  7041  00066A  0E00               	movlw	0
  7042  00066C  0100               	movlb	0	; () banked
  7043  00066E  6F84               	movwf	(_menu+4)& (0+255),b
  7044                           
  7045                           ;gui.c: 1300: menu[0].parameter =0;
  7046  000670  0E00               	movlw	0
  7047  000672  0100               	movlb	0	; () banked
  7048  000674  6F85               	movwf	(_menu+5)& (0+255),b
  7049                           
  7050                           ; BSR set to: 0
  7051                           ;gui.c: 1301: menu[0].MsgHandlle = menu0_MsgHandlle;
  7052  000676  0E00               	movlw	0
  7053  000678  0100               	movlb	0	; () banked
  7054  00067A  6F86               	movwf	(_menu+6)& (0+255),b
  7055  00067C  0E00               	movlw	0
  7056  00067E  0100               	movlb	0	; () banked
  7057  000680  6F87               	movwf	(_menu+7)& (0+255),b
  7058                           
  7059                           ; BSR set to: 0
  7060                           ;gui.c: 1304: menu[1].menu_no=0;
  7061  000682  0E00               	movlw	0
  7062  000684  0100               	movlb	0	; () banked
  7063  000686  6F88               	movwf	(_menu+8)& (0+255),b
  7064                           
  7065                           ; BSR set to: 0
  7066                           ;gui.c: 1305: menu[1].frame=0;
  7067  000688  0E00               	movlw	0
  7068  00068A  0100               	movlb	0	; () banked
  7069  00068C  6F8B               	movwf	(_menu+11)& (0+255),b
  7070                           
  7071                           ; BSR set to: 0
  7072                           ;gui.c: 1306: menu[1].mode = 0;
  7073  00068E  0E00               	movlw	0
  7074  000690  0100               	movlb	0	; () banked
  7075  000692  6F89               	movwf	(_menu+9)& (0+255),b
  7076                           
  7077                           ; BSR set to: 0
  7078                           ;gui.c: 1307: menu[1].cur_mode =menu[1].mode;
  7079  000694  C089  F08A         	movff	_menu+9,_menu+10
  7080                           
  7081                           ; BSR set to: 0
  7082                           ;gui.c: 1308: menu[1].value = 0;
  7083  000698  0E00               	movlw	0
  7084  00069A  0100               	movlb	0	; () banked
  7085  00069C  6F8C               	movwf	(_menu+12)& (0+255),b
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;gui.c: 1309: menu[1].parameter =0;
  7089  00069E  0E00               	movlw	0
  7090  0006A0  0100               	movlb	0	; () banked
  7091  0006A2  6F8D               	movwf	(_menu+13)& (0+255),b
  7092                           
  7093                           ;gui.c: 1310: menu[1].MsgHandlle = menu1_MsgHandlle;
  7094  0006A4  0E00               	movlw	0
  7095  0006A6  0100               	movlb	0	; () banked
  7096  0006A8  6F8E               	movwf	(_menu+14)& (0+255),b
  7097  0006AA  0E00               	movlw	0
  7098  0006AC  0100               	movlb	0	; () banked
  7099  0006AE  6F8F               	movwf	(_menu+15)& (0+255),b
  7100                           
  7101                           ; BSR set to: 0
  7102                           ;gui.c: 1312: menu[2].menu_no=0;
  7103  0006B0  0E00               	movlw	0
  7104  0006B2  0100               	movlb	0	; () banked
  7105  0006B4  6F90               	movwf	(_menu+16)& (0+255),b
  7106                           
  7107                           ; BSR set to: 0
  7108                           ;gui.c: 1313: menu[2].frame=0;
  7109  0006B6  0E00               	movlw	0
  7110  0006B8  0100               	movlb	0	; () banked
  7111  0006BA  6F93               	movwf	(_menu+19)& (0+255),b
  7112                           
  7113                           ; BSR set to: 0
  7114                           ;gui.c: 1314: menu[2].mode = 0;
  7115  0006BC  0E00               	movlw	0
  7116  0006BE  0100               	movlb	0	; () banked
  7117  0006C0  6F91               	movwf	(_menu+17)& (0+255),b
  7118                           
  7119                           ; BSR set to: 0
  7120                           ;gui.c: 1315: menu[2].cur_mode =menu[2].mode;
  7121  0006C2  C091  F092         	movff	_menu+17,_menu+18
  7122                           
  7123                           ; BSR set to: 0
  7124                           ;gui.c: 1316: menu[2].value = 0;
  7125  0006C6  0E00               	movlw	0
  7126  0006C8  0100               	movlb	0	; () banked
  7127  0006CA  6F94               	movwf	(_menu+20)& (0+255),b
  7128                           
  7129                           ; BSR set to: 0
  7130                           ;gui.c: 1317: menu[2].parameter =0;
  7131  0006CC  0E00               	movlw	0
  7132  0006CE  0100               	movlb	0	; () banked
  7133  0006D0  6F95               	movwf	(_menu+21)& (0+255),b
  7134                           
  7135                           ; BSR set to: 0
  7136                           ;gui.c: 1318: menu[2].MsgHandlle = menu2_MsgHandlle;
  7137  0006D2  0E00               	movlw	0
  7138  0006D4  0100               	movlb	0	; () banked
  7139  0006D6  6F96               	movwf	(_menu+22)& (0+255),b
  7140  0006D8  0E00               	movlw	0
  7141  0006DA  0100               	movlb	0	; () banked
  7142  0006DC  6F97               	movwf	(_menu+23)& (0+255),b
  7143                           
  7144                           ;gui.c: 1321: menu[3].menu_no=0;
  7145  0006DE  0E00               	movlw	0
  7146  0006E0  0100               	movlb	0	; () banked
  7147  0006E2  6F98               	movwf	(_menu+24)& (0+255),b
  7148                           
  7149                           ;gui.c: 1322: menu[3].frame=0;
  7150  0006E4  0E00               	movlw	0
  7151  0006E6  0100               	movlb	0	; () banked
  7152  0006E8  6F9B               	movwf	(_menu+27)& (0+255),b
  7153                           
  7154                           ;gui.c: 1323: menu[3].mode = 0;
  7155  0006EA  0E00               	movlw	0
  7156  0006EC  0100               	movlb	0	; () banked
  7157  0006EE  6F99               	movwf	(_menu+25)& (0+255),b
  7158                           
  7159                           ; BSR set to: 0
  7160                           ;gui.c: 1324: menu[3].cur_mode =menu[3].mode;
  7161  0006F0  C099  F09A         	movff	_menu+25,_menu+26
  7162                           
  7163                           ;gui.c: 1325: menu[3].value = 0;
  7164  0006F4  0E00               	movlw	0
  7165  0006F6  0100               	movlb	0	; () banked
  7166  0006F8  6F9C               	movwf	(_menu+28)& (0+255),b
  7167                           
  7168                           ;gui.c: 1326: menu[3].parameter =0;
  7169  0006FA  0E00               	movlw	0
  7170  0006FC  0100               	movlb	0	; () banked
  7171  0006FE  6F9D               	movwf	(_menu+29)& (0+255),b
  7172                           
  7173                           ; BSR set to: 0
  7174                           ;gui.c: 1327: menu[3].MsgHandlle = menu3_MsgHandlle;
  7175  000700  0E00               	movlw	0
  7176  000702  0100               	movlb	0	; () banked
  7177  000704  6F9E               	movwf	(_menu+30)& (0+255),b
  7178  000706  0E00               	movlw	0
  7179  000708  0100               	movlb	0	; () banked
  7180  00070A  6F9F               	movwf	(_menu+31)& (0+255),b
  7181                           
  7182                           ; BSR set to: 0
  7183                           ;gui.c: 1330: menu[4].menu_no=0;
  7184  00070C  0E00               	movlw	0
  7185  00070E  0100               	movlb	0	; () banked
  7186  000710  6FA0               	movwf	(_menu+32)& (0+255),b
  7187                           
  7188                           ; BSR set to: 0
  7189                           ;gui.c: 1331: menu[4].frame=0;
  7190  000712  0E00               	movlw	0
  7191  000714  0100               	movlb	0	; () banked
  7192  000716  6FA3               	movwf	(_menu+35)& (0+255),b
  7193                           
  7194                           ; BSR set to: 0
  7195                           ;gui.c: 1332: menu[4].mode = 0;
  7196  000718  0E00               	movlw	0
  7197  00071A  0100               	movlb	0	; () banked
  7198  00071C  6FA1               	movwf	(_menu+33)& (0+255),b
  7199                           
  7200                           ; BSR set to: 0
  7201                           ;gui.c: 1333: menu[4].cur_mode =menu[4].mode;
  7202  00071E  C0A1  F0A2         	movff	_menu+33,_menu+34
  7203                           
  7204                           ; BSR set to: 0
  7205                           ;gui.c: 1334: menu[4].value = 0;
  7206  000722  0E00               	movlw	0
  7207  000724  0100               	movlb	0	; () banked
  7208  000726  6FA4               	movwf	(_menu+36)& (0+255),b
  7209                           
  7210                           ; BSR set to: 0
  7211                           ;gui.c: 1335: menu[4].parameter =0;
  7212  000728  0E00               	movlw	0
  7213  00072A  0100               	movlb	0	; () banked
  7214  00072C  6FA5               	movwf	(_menu+37)& (0+255),b
  7215                           
  7216                           ;gui.c: 1336: menu[4].MsgHandlle = menu4_MsgHandlle;
  7217  00072E  0E00               	movlw	0
  7218  000730  0100               	movlb	0	; () banked
  7219  000732  6FA6               	movwf	(_menu+38)& (0+255),b
  7220  000734  0E00               	movlw	0
  7221  000736  0100               	movlb	0	; () banked
  7222  000738  6FA7               	movwf	(_menu+39)& (0+255),b
  7223                           
  7224                           ; BSR set to: 0
  7225                           ;gui.c: 1338: menu[5].menu_no=0;
  7226  00073A  0E00               	movlw	0
  7227  00073C  0100               	movlb	0	; () banked
  7228  00073E  6FA8               	movwf	(_menu+40)& (0+255),b
  7229                           
  7230                           ; BSR set to: 0
  7231                           ;gui.c: 1339: menu[5].frame=0;
  7232  000740  0E00               	movlw	0
  7233  000742  0100               	movlb	0	; () banked
  7234  000744  6FAB               	movwf	(_menu+43)& (0+255),b
  7235                           
  7236                           ; BSR set to: 0
  7237                           ;gui.c: 1340: menu[5].mode = 0;
  7238  000746  0E00               	movlw	0
  7239  000748  0100               	movlb	0	; () banked
  7240  00074A  6FA9               	movwf	(_menu+41)& (0+255),b
  7241                           
  7242                           ; BSR set to: 0
  7243                           ;gui.c: 1341: menu[5].cur_mode =menu[5].mode;
  7244  00074C  C0A9  F0AA         	movff	_menu+41,_menu+42
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;gui.c: 1342: menu[5].value = 0;
  7248  000750  0E00               	movlw	0
  7249  000752  0100               	movlb	0	; () banked
  7250  000754  6FAC               	movwf	(_menu+44)& (0+255),b
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;gui.c: 1343: menu[5].parameter =0;
  7254  000756  0E00               	movlw	0
  7255  000758  0100               	movlb	0	; () banked
  7256  00075A  6FAD               	movwf	(_menu+45)& (0+255),b
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;gui.c: 1344: menu[5].MsgHandlle = menu5_MsgHandlle;
  7260  00075C  0E00               	movlw	0
  7261  00075E  0100               	movlb	0	; () banked
  7262  000760  6FAE               	movwf	(_menu+46)& (0+255),b
  7263  000762  0E00               	movlw	0
  7264  000764  0100               	movlb	0	; () banked
  7265  000766  6FAF               	movwf	(_menu+47)& (0+255),b
  7266                           
  7267                           ;gui.c: 1347: menu[6].menu_no=0;
  7268  000768  0E00               	movlw	0
  7269  00076A  0100               	movlb	0	; () banked
  7270  00076C  6FB0               	movwf	(_menu+48)& (0+255),b
  7271                           
  7272                           ;gui.c: 1348: menu[6].frame=0;
  7273  00076E  0E00               	movlw	0
  7274  000770  0100               	movlb	0	; () banked
  7275  000772  6FB3               	movwf	(_menu+51)& (0+255),b
  7276                           
  7277                           ;gui.c: 1349: menu[6].mode = 0;
  7278  000774  0E00               	movlw	0
  7279  000776  0100               	movlb	0	; () banked
  7280  000778  6FB1               	movwf	(_menu+49)& (0+255),b
  7281                           
  7282                           ; BSR set to: 0
  7283                           ;gui.c: 1350: menu[6].cur_mode =menu[6].mode;
  7284  00077A  C0B1  F0B2         	movff	_menu+49,_menu+50
  7285                           
  7286                           ;gui.c: 1351: menu[6].value = 0;
  7287  00077E  0E00               	movlw	0
  7288  000780  0100               	movlb	0	; () banked
  7289  000782  6FB4               	movwf	(_menu+52)& (0+255),b
  7290                           
  7291                           ;gui.c: 1352: menu[6].parameter =0;
  7292  000784  0E00               	movlw	0
  7293  000786  0100               	movlb	0	; () banked
  7294  000788  6FB5               	movwf	(_menu+53)& (0+255),b
  7295                           
  7296                           ; BSR set to: 0
  7297                           ;gui.c: 1353: menu[6].MsgHandlle = menu6_MsgHandlle;
  7298  00078A  0E00               	movlw	0
  7299  00078C  0100               	movlb	0	; () banked
  7300  00078E  6FB6               	movwf	(_menu+54)& (0+255),b
  7301  000790  0E00               	movlw	0
  7302  000792  0100               	movlb	0	; () banked
  7303  000794  6FB7               	movwf	(_menu+55)& (0+255),b
  7304                           
  7305                           ; BSR set to: 0
  7306                           ;gui.c: 1355: menu[7].menu_no=0;
  7307  000796  0E00               	movlw	0
  7308  000798  0100               	movlb	0	; () banked
  7309  00079A  6FB8               	movwf	(_menu+56)& (0+255),b
  7310                           
  7311                           ; BSR set to: 0
  7312                           ;gui.c: 1356: menu[7].frame=0;
  7313  00079C  0E00               	movlw	0
  7314  00079E  0100               	movlb	0	; () banked
  7315  0007A0  6FBB               	movwf	(_menu+59)& (0+255),b
  7316                           
  7317                           ; BSR set to: 0
  7318                           ;gui.c: 1357: menu[7].mode = 0;
  7319  0007A2  0E00               	movlw	0
  7320  0007A4  0100               	movlb	0	; () banked
  7321  0007A6  6FB9               	movwf	(_menu+57)& (0+255),b
  7322                           
  7323                           ; BSR set to: 0
  7324                           ;gui.c: 1358: menu[7].cur_mode =menu[0].mode;
  7325  0007A8  C081  F0BA         	movff	_menu+1,_menu+58
  7326                           
  7327                           ; BSR set to: 0
  7328                           ;gui.c: 1359: menu[7].value = 0;
  7329  0007AC  0E00               	movlw	0
  7330  0007AE  0100               	movlb	0	; () banked
  7331  0007B0  6FBC               	movwf	(_menu+60)& (0+255),b
  7332                           
  7333                           ; BSR set to: 0
  7334                           ;gui.c: 1360: menu[7].parameter =0;
  7335  0007B2  0E00               	movlw	0
  7336  0007B4  0100               	movlb	0	; () banked
  7337  0007B6  6FBD               	movwf	(_menu+61)& (0+255),b
  7338                           
  7339                           ;gui.c: 1361: menu[7].MsgHandlle = menu7_MsgHandlle;
  7340  0007B8  0E00               	movlw	0
  7341  0007BA  0100               	movlb	0	; () banked
  7342  0007BC  6FBE               	movwf	(_menu+62)& (0+255),b
  7343  0007BE  0E00               	movlw	0
  7344  0007C0  0100               	movlb	0	; () banked
  7345  0007C2  6FBF               	movwf	(_menu+63)& (0+255),b
  7346                           
  7347                           ; BSR set to: 0
  7348                           ;gui.c: 1363: focus =0;
  7349  0007C4  0E00               	movlw	0
  7350  0007C6  6E1F               	movwf	_focus,c
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;gui.c: 1364: flip =0;
  7354  0007C8  0E00               	movlw	0
  7355  0007CA  6E1E               	movwf	_flip,c
  7356                           
  7357                           ; BSR set to: 0
  7358                           ;gui.c: 1365: work_mode = 0x00;
  7359  0007CC  0E00               	movlw	0
  7360  0007CE  6E1D               	movwf	_work_mode,c
  7361                           
  7362                           ; BSR set to: 0
  7363  0007D0  0012               	return		;funcret
  7364  0007D2                     __end_of_init_menu:
  7365                           	opt stack 0
  7366                           tblptru	equ	0xFF8
  7367                           tblptrh	equ	0xFF7
  7368                           tblptrl	equ	0xFF6
  7369                           tablat	equ	0xFF5
  7370                           prodh	equ	0xFF4
  7371                           prodl	equ	0xFF3
  7372                           intcon2	equ	0xFF1
  7373                           intcon3	equ	0xFF0
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           fsr1h	equ	0xFE2
  7378                           fsr1l	equ	0xFE1
  7379                           postinc2	equ	0xFDE
  7380                           postdec2	equ	0xFDD
  7381                           fsr2h	equ	0xFDA
  7382                           fsr2l	equ	0xFD9
  7383                           status	equ	0xFD8
  7384                           
  7385 ;; *************** function _TimerInit *****************
  7386 ;; Defined at:
  7387 ;;		line 833 in file "../Timer.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;		None
  7390 ;; Auto vars:     Size  Location     Type
  7391 ;;		None
  7392 ;; Return value:  Size  Location     Type
  7393 ;;                  1    wreg      void 
  7394 ;; Registers used:
  7395 ;;		wreg, status,2
  7396 ;; Tracked objects:
  7397 ;;		On entry : 0/0
  7398 ;;		On exit  : 0/0
  7399 ;;		Unchanged: 0/0
  7400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7401 ;;      Params:         0       0       0       0       0       0       0
  7402 ;;      Locals:         0       0       0       0       0       0       0
  7403 ;;      Temps:          0       0       0       0       0       0       0
  7404 ;;      Totals:         0       0       0       0       0       0       0
  7405 ;;Total ram usage:        0 bytes
  7406 ;; Hardware stack levels used:    1
  7407 ;; Hardware stack levels required when called:    3
  7408 ;; This function calls:
  7409 ;;		Nothing
  7410 ;; This function is called by:
  7411 ;;		_HG_init
  7412 ;; This function uses a non-reentrant model
  7413 ;;
  7414                           
  7415                           	psect	text14
  7416  000E8C                     __ptext14:
  7417                           	opt stack 0
  7418  000E8C                     _TimerInit:
  7419                           	opt stack 26
  7420                           
  7421                           ;Timer.c: 835: T0CS=0;
  7422                           
  7423                           ; BSR set to: 0
  7424                           ;incstack = 0
  7425  000E8C  9AD5               	bcf	4053,5,c	;volatile
  7426                           
  7427                           ;Timer.c: 836: PSA=0;
  7428  000E8E  96D5               	bcf	4053,3,c	;volatile
  7429                           
  7430                           ;Timer.c: 844: T0PS2=0;
  7431  000E90  94D5               	bcf	4053,2,c	;volatile
  7432                           
  7433                           ;Timer.c: 845: T0PS1=1;
  7434  000E92  82D5               	bsf	4053,1,c	;volatile
  7435                           
  7436                           ;Timer.c: 846: T0PS0=1;
  7437  000E94  80D5               	bsf	4053,0,c	;volatile
  7438                           
  7439                           ;Timer.c: 850: T08BIT =1;
  7440  000E96  8CD5               	bsf	4053,6,c	;volatile
  7441                           
  7442                           ;Timer.c: 851: T0IF=0;
  7443  000E98  94F2               	bcf	intcon,2,c	;volatile
  7444                           
  7445                           ;Timer.c: 852: TMR0=0;
  7446  000E9A  0E00               	movlw	0
  7447  000E9C  6ED7               	movwf	4055,c	;volatile
  7448  000E9E  0E00               	movlw	0
  7449  000EA0  6ED6               	movwf	4054,c	;volatile
  7450                           
  7451                           ;Timer.c: 855: T0IE=0;
  7452  000EA2  9AF2               	bcf	intcon,5,c	;volatile
  7453                           
  7454                           ;Timer.c: 856: GIE=1;
  7455  000EA4  8EF2               	bsf	intcon,7,c	;volatile
  7456                           
  7457                           ;Timer.c: 857: T0CONbits.TMR0ON =0;
  7458  000EA6  9ED5               	bcf	4053,7,c	;volatile
  7459  000EA8  0012               	return		;funcret
  7460  000EAA                     __end_of_TimerInit:
  7461                           	opt stack 0
  7462                           tblptru	equ	0xFF8
  7463                           tblptrh	equ	0xFF7
  7464                           tblptrl	equ	0xFF6
  7465                           tablat	equ	0xFF5
  7466                           prodh	equ	0xFF4
  7467                           prodl	equ	0xFF3
  7468                           intcon	equ	0xFF2
  7469                           intcon2	equ	0xFF1
  7470                           intcon3	equ	0xFF0
  7471                           postinc0	equ	0xFEE
  7472                           wreg	equ	0xFE8
  7473                           postdec1	equ	0xFE5
  7474                           fsr1h	equ	0xFE2
  7475                           fsr1l	equ	0xFE1
  7476                           postinc2	equ	0xFDE
  7477                           postdec2	equ	0xFDD
  7478                           fsr2h	equ	0xFDA
  7479                           fsr2l	equ	0xFD9
  7480                           status	equ	0xFD8
  7481                           
  7482 ;; *************** function _LCD_backlight_init *****************
  7483 ;; Defined at:
  7484 ;;		line 583 in file "../Oled.c"
  7485 ;; Parameters:    Size  Location     Type
  7486 ;;		None
  7487 ;; Auto vars:     Size  Location     Type
  7488 ;;		None
  7489 ;; Return value:  Size  Location     Type
  7490 ;;                  1    wreg      void 
  7491 ;; Registers used:
  7492 ;;		None
  7493 ;; Tracked objects:
  7494 ;;		On entry : 0/0
  7495 ;;		On exit  : 0/0
  7496 ;;		Unchanged: 0/0
  7497 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7498 ;;      Params:         0       0       0       0       0       0       0
  7499 ;;      Locals:         0       0       0       0       0       0       0
  7500 ;;      Temps:          0       0       0       0       0       0       0
  7501 ;;      Totals:         0       0       0       0       0       0       0
  7502 ;;Total ram usage:        0 bytes
  7503 ;; Hardware stack levels used:    1
  7504 ;; Hardware stack levels required when called:    3
  7505 ;; This function calls:
  7506 ;;		Nothing
  7507 ;; This function is called by:
  7508 ;;		_HG_init
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           
  7512                           	psect	text15
  7513  000F3E                     __ptext15:
  7514                           	opt stack 0
  7515  000F3E                     _LCD_backlight_init:
  7516                           	opt stack 26
  7517                           
  7518                           ;Oled.c: 585: TRISEbits.RE0 =0;
  7519                           
  7520                           ;incstack = 0
  7521  000F3E  9096               	bcf	3990,0,c	;volatile
  7522  000F40  0012               	return		;funcret
  7523  000F42                     __end_of_LCD_backlight_init:
  7524                           	opt stack 0
  7525                           tblptru	equ	0xFF8
  7526                           tblptrh	equ	0xFF7
  7527                           tblptrl	equ	0xFF6
  7528                           tablat	equ	0xFF5
  7529                           prodh	equ	0xFF4
  7530                           prodl	equ	0xFF3
  7531                           intcon	equ	0xFF2
  7532                           intcon2	equ	0xFF1
  7533                           intcon3	equ	0xFF0
  7534                           postinc0	equ	0xFEE
  7535                           wreg	equ	0xFE8
  7536                           postdec1	equ	0xFE5
  7537                           fsr1h	equ	0xFE2
  7538                           fsr1l	equ	0xFE1
  7539                           postinc2	equ	0xFDE
  7540                           postdec2	equ	0xFDD
  7541                           fsr2h	equ	0xFDA
  7542                           fsr2l	equ	0xFD9
  7543                           status	equ	0xFD8
  7544                           
  7545 ;; *************** function _LCD_Off *****************
  7546 ;; Defined at:
  7547 ;;		line 597 in file "../Oled.c"
  7548 ;; Parameters:    Size  Location     Type
  7549 ;;		None
  7550 ;; Auto vars:     Size  Location     Type
  7551 ;;		None
  7552 ;; Return value:  Size  Location     Type
  7553 ;;                  1    wreg      void 
  7554 ;; Registers used:
  7555 ;;		None
  7556 ;; Tracked objects:
  7557 ;;		On entry : 0/0
  7558 ;;		On exit  : 0/0
  7559 ;;		Unchanged: 0/0
  7560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7561 ;;      Params:         0       0       0       0       0       0       0
  7562 ;;      Locals:         0       0       0       0       0       0       0
  7563 ;;      Temps:          0       0       0       0       0       0       0
  7564 ;;      Totals:         0       0       0       0       0       0       0
  7565 ;;Total ram usage:        0 bytes
  7566 ;; Hardware stack levels used:    1
  7567 ;; Hardware stack levels required when called:    3
  7568 ;; This function calls:
  7569 ;;		Nothing
  7570 ;; This function is called by:
  7571 ;;		_HG_init
  7572 ;; This function uses a non-reentrant model
  7573 ;;
  7574                           
  7575                           	psect	text16
  7576  000F42                     __ptext16:
  7577                           	opt stack 0
  7578  000F42                     _LCD_Off:
  7579                           	opt stack 26
  7580                           
  7581                           ;Oled.c: 600: LATEbits.LE0 =0;
  7582                           
  7583                           ;incstack = 0
  7584  000F42  908D               	bcf	3981,0,c	;volatile
  7585  000F44  0012               	return		;funcret
  7586  000F46                     __end_of_LCD_Off:
  7587                           	opt stack 0
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           intcon2	equ	0xFF1
  7596                           intcon3	equ	0xFF0
  7597                           postinc0	equ	0xFEE
  7598                           wreg	equ	0xFE8
  7599                           postdec1	equ	0xFE5
  7600                           fsr1h	equ	0xFE2
  7601                           fsr1l	equ	0xFE1
  7602                           postinc2	equ	0xFDE
  7603                           postdec2	equ	0xFDD
  7604                           fsr2h	equ	0xFDA
  7605                           fsr2l	equ	0xFD9
  7606                           status	equ	0xFD8
  7607                           
  7608 ;; *************** function _KEY_Init *****************
  7609 ;; Defined at:
  7610 ;;		line 10 in file "../Key.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;		None
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;		None
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7624 ;;      Params:         0       0       0       0       0       0       0
  7625 ;;      Locals:         0       0       0       0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0
  7627 ;;      Totals:         0       0       0       0       0       0       0
  7628 ;;Total ram usage:        0 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    3
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_HG_init
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           	psect	text17
  7639  000E4E                     __ptext17:
  7640                           	opt stack 0
  7641  000E4E                     _KEY_Init:
  7642                           	opt stack 26
  7643                           
  7644                           ;Key.c: 19: ADCON1 = 0x0C;
  7645                           
  7646                           ;incstack = 0
  7647  000E4E  0E0C               	movlw	12
  7648  000E50  6EC1               	movwf	4033,c	;volatile
  7649                           
  7650                           ;Key.c: 21: TRISBbits.RB3 =1;
  7651  000E52  8693               	bsf	3987,3,c	;volatile
  7652                           
  7653                           ;Key.c: 22: TRISBbits.RB4 =1;
  7654  000E54  8893               	bsf	3987,4,c	;volatile
  7655                           
  7656                           ;Key.c: 24: TRISDbits.RD6 =1;
  7657  000E56  8C95               	bsf	3989,6,c	;volatile
  7658                           
  7659                           ;Key.c: 25: TRISDbits.RD7 =1;
  7660  000E58  8E95               	bsf	3989,7,c	;volatile
  7661                           
  7662                           ;Key.c: 27: TRISBbits.RB5 =1;
  7663  000E5A  8A93               	bsf	3987,5,c	;volatile
  7664                           
  7665                           ;Key.c: 31: TRISBbits.RB0 =1;
  7666  000E5C  8093               	bsf	3987,0,c	;volatile
  7667                           
  7668                           ;Key.c: 34: TRISAbits.RA3 =1;
  7669  000E5E  8692               	bsf	3986,3,c	;volatile
  7670                           
  7671                           ;Key.c: 43: INTCON2bits.INTEDG0 =0;
  7672  000E60  9CF1               	bcf	intcon2,6,c	;volatile
  7673                           
  7674                           ;Key.c: 44: INTCONbits.INT0IF = 0;
  7675  000E62  92F2               	bcf	intcon,1,c	;volatile
  7676                           
  7677                           ;Key.c: 45: INTCONbits.INT0E = 1;
  7678  000E64  88F2               	bsf	intcon,4,c	;volatile
  7679                           
  7680                           ;Key.c: 49: INTCONbits.RBIE =1;
  7681  000E66  86F2               	bsf	intcon,3,c	;volatile
  7682                           
  7683                           ;Key.c: 50: INTCONbits.PEIE =1;
  7684  000E68  8CF2               	bsf	intcon,6,c	;volatile
  7685                           
  7686                           ;Key.c: 51: INTCONbits.GIE =1;
  7687  000E6A  8EF2               	bsf	intcon,7,c	;volatile
  7688  000E6C  0012               	return		;funcret
  7689  000E6E                     __end_of_KEY_Init:
  7690                           	opt stack 0
  7691                           tblptru	equ	0xFF8
  7692                           tblptrh	equ	0xFF7
  7693                           tblptrl	equ	0xFF6
  7694                           tablat	equ	0xFF5
  7695                           prodh	equ	0xFF4
  7696                           prodl	equ	0xFF3
  7697                           intcon	equ	0xFF2
  7698                           intcon2	equ	0xFF1
  7699                           intcon3	equ	0xFF0
  7700                           postinc0	equ	0xFEE
  7701                           wreg	equ	0xFE8
  7702                           postdec1	equ	0xFE5
  7703                           fsr1h	equ	0xFE2
  7704                           fsr1l	equ	0xFE1
  7705                           postinc2	equ	0xFDE
  7706                           postdec2	equ	0xFDD
  7707                           fsr2h	equ	0xFDA
  7708                           fsr2l	equ	0xFD9
  7709                           status	equ	0xFD8
  7710                           
  7711 ;; *************** function _BeepInit *****************
  7712 ;; Defined at:
  7713 ;;		line 78 in file "../Beep.c"
  7714 ;; Parameters:    Size  Location     Type
  7715 ;;		None
  7716 ;; Auto vars:     Size  Location     Type
  7717 ;;		None
  7718 ;; Return value:  Size  Location     Type
  7719 ;;                  1    wreg      void 
  7720 ;; Registers used:
  7721 ;;		None
  7722 ;; Tracked objects:
  7723 ;;		On entry : 0/0
  7724 ;;		On exit  : 0/0
  7725 ;;		Unchanged: 0/0
  7726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7727 ;;      Params:         0       0       0       0       0       0       0
  7728 ;;      Locals:         0       0       0       0       0       0       0
  7729 ;;      Temps:          0       0       0       0       0       0       0
  7730 ;;      Totals:         0       0       0       0       0       0       0
  7731 ;;Total ram usage:        0 bytes
  7732 ;; Hardware stack levels used:    1
  7733 ;; Hardware stack levels required when called:    3
  7734 ;; This function calls:
  7735 ;;		Nothing
  7736 ;; This function is called by:
  7737 ;;		_HG_init
  7738 ;; This function uses a non-reentrant model
  7739 ;;
  7740                           
  7741                           	psect	text18
  7742  000F34                     __ptext18:
  7743                           	opt stack 0
  7744  000F34                     _BeepInit:
  7745                           	opt stack 26
  7746                           
  7747                           ;Beep.c: 87: TRISEbits.RE2 =0;
  7748                           
  7749                           ;incstack = 0
  7750  000F34  9496               	bcf	3990,2,c	;volatile
  7751                           
  7752                           ;Beep.c: 88: LATEbits.LE2 =0;
  7753  000F36  948D               	bcf	3981,2,c	;volatile
  7754                           
  7755                           ;Beep.c: 91: TRISDbits.RD5 =0;
  7756  000F38  9A95               	bcf	3989,5,c	;volatile
  7757                           
  7758                           ;Beep.c: 92: LATDbits.LD5 =1;
  7759  000F3A  8A8C               	bsf	3980,5,c	;volatile
  7760  000F3C  0012               	return		;funcret
  7761  000F3E                     __end_of_BeepInit:
  7762                           	opt stack 0
  7763                           tblptru	equ	0xFF8
  7764                           tblptrh	equ	0xFF7
  7765                           tblptrl	equ	0xFF6
  7766                           tablat	equ	0xFF5
  7767                           prodh	equ	0xFF4
  7768                           prodl	equ	0xFF3
  7769                           intcon	equ	0xFF2
  7770                           intcon2	equ	0xFF1
  7771                           intcon3	equ	0xFF0
  7772                           postinc0	equ	0xFEE
  7773                           wreg	equ	0xFE8
  7774                           postdec1	equ	0xFE5
  7775                           fsr1h	equ	0xFE2
  7776                           fsr1l	equ	0xFE1
  7777                           postinc2	equ	0xFDE
  7778                           postdec2	equ	0xFDD
  7779                           fsr2h	equ	0xFDA
  7780                           fsr2l	equ	0xFD9
  7781                           status	equ	0xFD8
  7782                           
  7783 ;; *************** function _AD_init *****************
  7784 ;; Defined at:
  7785 ;;		line 285 in file "../Oled.c"
  7786 ;; Parameters:    Size  Location     Type
  7787 ;;		None
  7788 ;; Auto vars:     Size  Location     Type
  7789 ;;		None
  7790 ;; Return value:  Size  Location     Type
  7791 ;;                  1    wreg      unsigned char 
  7792 ;; Registers used:
  7793 ;;		wreg, status,2
  7794 ;; Tracked objects:
  7795 ;;		On entry : 0/0
  7796 ;;		On exit  : 0/0
  7797 ;;		Unchanged: 0/0
  7798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7799 ;;      Params:         0       0       0       0       0       0       0
  7800 ;;      Locals:         0       0       0       0       0       0       0
  7801 ;;      Temps:          0       0       0       0       0       0       0
  7802 ;;      Totals:         0       0       0       0       0       0       0
  7803 ;;Total ram usage:        0 bytes
  7804 ;; Hardware stack levels used:    1
  7805 ;; Hardware stack levels required when called:    3
  7806 ;; This function calls:
  7807 ;;		Nothing
  7808 ;; This function is called by:
  7809 ;;		_main
  7810 ;; This function uses a non-reentrant model
  7811 ;;
  7812                           
  7813                           	psect	text19
  7814  000EE0                     __ptext19:
  7815                           	opt stack 0
  7816  000EE0                     _AD_init:
  7817                           	opt stack 27
  7818                           
  7819                           ;Oled.c: 288: TRISAbits.RA0 =1;
  7820                           
  7821                           ;incstack = 0
  7822  000EE0  8092               	bsf	3986,0,c	;volatile
  7823                           
  7824                           ;Oled.c: 289: TRISAbits.RA1 =1;
  7825  000EE2  8292               	bsf	3986,1,c	;volatile
  7826                           
  7827                           ;Oled.c: 290: TRISAbits.RA2 =1;
  7828  000EE4  8492               	bsf	3986,2,c	;volatile
  7829                           
  7830                           ;Oled.c: 294: ADCON2bits.ACQT = 4;
  7831  000EE6  50C0               	movf	4032,w,c	;volatile
  7832  000EE8  0BC7               	andlw	-57
  7833  000EEA  0920               	iorlw	32
  7834  000EEC  6EC0               	movwf	4032,c	;volatile
  7835                           
  7836                           ;Oled.c: 296: ADCON0bits.ADON = 1;
  7837  000EEE  80C2               	bsf	4034,0,c	;volatile
  7838  000EF0  0012               	return	
  7839  000EF2                     __end_of_AD_init:
  7840                           	opt stack 0
  7841                           tblptru	equ	0xFF8
  7842                           tblptrh	equ	0xFF7
  7843                           tblptrl	equ	0xFF6
  7844                           tablat	equ	0xFF5
  7845                           prodh	equ	0xFF4
  7846                           prodl	equ	0xFF3
  7847                           intcon	equ	0xFF2
  7848                           intcon2	equ	0xFF1
  7849                           intcon3	equ	0xFF0
  7850                           postinc0	equ	0xFEE
  7851                           wreg	equ	0xFE8
  7852                           postdec1	equ	0xFE5
  7853                           fsr1h	equ	0xFE2
  7854                           fsr1l	equ	0xFE1
  7855                           postinc2	equ	0xFDE
  7856                           postdec2	equ	0xFDD
  7857                           fsr2h	equ	0xFDA
  7858                           fsr2l	equ	0xFD9
  7859                           status	equ	0xFD8
  7860                           
  7861 ;; *************** function _ISR *****************
  7862 ;; Defined at:
  7863 ;;		line 44 in file "../Timer.c"
  7864 ;; Parameters:    Size  Location     Type
  7865 ;;		None
  7866 ;; Auto vars:     Size  Location     Type
  7867 ;;  temp            1    0        unsigned char 
  7868 ;; Return value:  Size  Location     Type
  7869 ;;                  1    wreg      void 
  7870 ;; Registers used:
  7871 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7872 ;; Tracked objects:
  7873 ;;		On entry : 0/0
  7874 ;;		On exit  : 0/0
  7875 ;;		Unchanged: 0/0
  7876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7877 ;;      Params:         0       0       0       0       0       0       0
  7878 ;;      Locals:         0       0       0       0       0       0       0
  7879 ;;      Temps:         14       0       0       0       0       0       0
  7880 ;;      Totals:        14       0       0       0       0       0       0
  7881 ;;Total ram usage:       14 bytes
  7882 ;; Hardware stack levels used:    1
  7883 ;; Hardware stack levels required when called:    2
  7884 ;; This function calls:
  7885 ;;		i2_printf
  7886 ;; This function is called by:
  7887 ;;		Interrupt level 2
  7888 ;; This function uses a non-reentrant model
  7889 ;;
  7890                           
  7891                           	psect	intcode
  7892  000008                     __pintcode:
  7893                           	opt stack 0
  7894  000008                     _ISR:
  7895                           	opt stack 26
  7896                           
  7897                           ;incstack = 0
  7898  000008  8265               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7899  00000A  EDE9  F003         	call	int_func,f	;refresh shadow registers
  7900                           tblptru	equ	0xFF8
  7901                           tblptrh	equ	0xFF7
  7902                           tblptrl	equ	0xFF6
  7903                           tablat	equ	0xFF5
  7904                           prodh	equ	0xFF4
  7905                           prodl	equ	0xFF3
  7906                           intcon	equ	0xFF2
  7907                           intcon2	equ	0xFF1
  7908                           intcon3	equ	0xFF0
  7909                           postinc0	equ	0xFEE
  7910                           wreg	equ	0xFE8
  7911                           postdec1	equ	0xFE5
  7912                           fsr1h	equ	0xFE2
  7913                           fsr1l	equ	0xFE1
  7914                           postinc2	equ	0xFDE
  7915                           postdec2	equ	0xFDD
  7916                           fsr2h	equ	0xFDA
  7917                           fsr2l	equ	0xFD9
  7918                           status	equ	0xFD8
  7919                           
  7920                           	psect	intcode_body
  7921  0007D2                     __pintcode_body:
  7922                           	opt stack 26
  7923  0007D2                     int_func:
  7924                           	opt stack 26
  7925  0007D2  0006               	pop		; remove dummy address from shadow register refresh
  7926  0007D4  CFFA F04C          	movff	pclath,??_ISR
  7927  0007D8  CFFB F04D          	movff	pclatu,??_ISR+1
  7928  0007DC  CFE9 F04E          	movff	fsr0l,??_ISR+2
  7929  0007E0  CFEA F04F          	movff	fsr0h,??_ISR+3
  7930  0007E4  CFE1 F050          	movff	fsr1l,??_ISR+4
  7931  0007E8  CFE2 F051          	movff	fsr1h,??_ISR+5
  7932  0007EC  CFD9 F052          	movff	fsr2l,??_ISR+6
  7933  0007F0  CFDA F053          	movff	fsr2h,??_ISR+7
  7934  0007F4  CFF3 F054          	movff	prodl,??_ISR+8
  7935  0007F8  CFF4 F055          	movff	prodh,??_ISR+9
  7936  0007FC  CFF6 F056          	movff	tblptrl,??_ISR+10
  7937  000800  CFF7 F057          	movff	tblptrh,??_ISR+11
  7938  000804  CFF8 F058          	movff	tblptru,??_ISR+12
  7939  000808  CFF5 F059          	movff	tablat,??_ISR+13
  7940                           
  7941                           ;Timer.c: 46: uint8_t temp;
  7942                           ;Timer.c: 47: static uint32_t tcnt=0;
  7943                           ;Timer.c: 48: static uint8_t cnt_action_btn =0;
  7944                           ;Timer.c: 57: if(INTCON3bits.INT2IF)
  7945  00080C  A2F0               	btfss	intcon3,1,c	;volatile
  7946  00080E  D067               	goto	i2l1069
  7947                           
  7948                           ;Timer.c: 58: {
  7949                           ;Timer.c: 59: INTCON3bits.INT2IF = 0;
  7950  000810  92F0               	bcf	intcon3,1,c	;volatile
  7951                           
  7952                           ;Timer.c: 61: if(INTCON2bits.INTEDG2 == 0)
  7953  000812  B8F1               	btfsc	intcon2,4,c	;volatile
  7954  000814  D002               	goto	i2l1070
  7955                           
  7956                           ;Timer.c: 62: {
  7957                           ;Timer.c: 63: INTCON2bits.INTEDG2 = 1;
  7958  000816  88F1               	bsf	intcon2,4,c	;volatile
  7959                           
  7960                           ;Timer.c: 64: }
  7961  000818  D002               	goto	i2l8821
  7962  00081A                     i2l1070:
  7963                           
  7964                           ;Timer.c: 65: else if(INTCON2bits.INTEDG2 == 1)
  7965  00081A  B8F1               	btfsc	intcon2,4,c	;volatile
  7966                           
  7967                           ;Timer.c: 66: {
  7968                           ;Timer.c: 67: INTCON2bits.INTEDG2 = 0;
  7969  00081C  98F1               	bcf	intcon2,4,c	;volatile
  7970  00081E                     i2l8821:
  7971                           
  7972                           ;Timer.c: 106: {
  7973                           ;Timer.c: 109: if(1)
  7974  00081E  0100               	movlb	0	; () banked
  7975  000820  51C5               	movf	(_hg_op+5)& (0+255),w,b
  7976  000822  B4D8               	btfsc	status,2,c
  7977  000824  D008               	goto	i2l8829
  7978                           
  7979                           ; BSR set to: 0
  7980                           ;Timer.c: 110: {
  7981                           ;Timer.c: 114: if(hg_op.in_reset == 1)
  7982  000826  0100               	movlb	0	; () banked
  7983  000828  05C7               	decf	(_hg_op+7)& (0+255),w,b
  7984  00082A  A4D8               	btfss	status,2,c
  7985  00082C  D058               	goto	i2l1069
  7986                           
  7987                           ; BSR set to: 0
  7988                           ;Timer.c: 115: {
  7989                           ;Timer.c: 118: hg_op.cnt_posrst ++;
  7990  00082E  0100               	movlb	0	; () banked
  7991  000830  4BF4               	infsnz	(_hg_op+52)& (0+255),f,b
  7992  000832  2BF5               	incf	(_hg_op+53)& (0+255),f,b
  7993                           
  7994                           ; BSR set to: 0
  7995                           ;Timer.c: 159: }
  7996                           ;Timer.c: 198: }
  7997                           ;Timer.c: 199: }
  7998                           
  7999                           ; BSR set to: 0
  8000                           
  8001                           ;Timer.c: 154: {
  8002                           
  8003                           ; BSR set to: 0
  8004                           
  8005                           ; BSR set to: 0
  8006  000834  D054               	goto	i2l1069
  8007  000836                     i2l8829:
  8008                           
  8009                           ; BSR set to: 0
  8010                           ;Timer.c: 200: else
  8011                           ;Timer.c: 201: {
  8012                           ;Timer.c: 202: if(hg_op.working_mode == 0x01)
  8013  000836  0100               	movlb	0	; () banked
  8014  000838  05C0               	decf	_hg_op& (0+255),w,b
  8015  00083A  A4D8               	btfss	status,2,c
  8016  00083C  D02F               	goto	i2l8863
  8017                           
  8018                           ; BSR set to: 0
  8019                           ;Timer.c: 203: {
  8020                           ;Timer.c: 204: if(hg_op.drops_sa == 1)
  8021  00083E  0100               	movlb	0	; () banked
  8022  000840  05DB               	decf	(_hg_op+27)& (0+255),w,b
  8023  000842  A4D8               	btfss	status,2,c
  8024  000844  D00C               	goto	i2l8847
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;Timer.c: 205: {
  8028                           ;Timer.c: 232: if( INTCON2bits.INTEDG2 == 1)
  8029  000846  A8F1               	btfss	intcon2,4,c	;volatile
  8030  000848  D003               	goto	i2l1080
  8031                           
  8032                           ; BSR set to: 0
  8033                           ;Timer.c: 233: {
  8034                           ;Timer.c: 234: if(PORTCbits.RC0 == 0)
  8035  00084A  B082               	btfsc	3970,0,c	;volatile
  8036  00084C  D015               	goto	i2l1093
  8037  00084E  D010               	goto	L5
  8038  000850                     i2l1080:
  8039                           
  8040                           ; BSR set to: 0
  8041                           ;Timer.c: 249: else if( INTCON2bits.INTEDG2 == 0)
  8042  000850  B8F1               	btfsc	intcon2,4,c	;volatile
  8043  000852  D045               	goto	i2l1069
  8044                           
  8045                           ; BSR set to: 0
  8046                           ;Timer.c: 250: {
  8047                           ;Timer.c: 252: if(PORTCbits.RC0 == 0)
  8048  000854  A082               	btfss	3970,0,c	;volatile
  8049  000856  D017               	goto	i2l8859
  8050                           
  8051                           ; BSR set to: 0
  8052                           ;Timer.c: 258: else if(PORTCbits.RC0 == 1)
  8053                           
  8054                           ;Timer.c: 257: }
  8055                           
  8056                           ; BSR set to: 0
  8057                           ;Timer.c: 253: {
  8058                           ;Timer.c: 256: hg_op.cnt_pos_1mm --;
  8059  000858  A082               	btfss	3970,0,c	;volatile
  8060  00085A  D041               	goto	i2l1069
  8061  00085C  D009               	goto	L5
  8062  00085E                     i2l8847:
  8063                           
  8064                           ; BSR set to: 0
  8065                           ;Timer.c: 326: else if(hg_op.drops_sb == 1)
  8066  00085E  0100               	movlb	0	; () banked
  8067  000860  05DC               	decf	(_hg_op+28)& (0+255),w,b
  8068  000862  A4D8               	btfss	status,2,c
  8069  000864  D03C               	goto	i2l1069
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;Timer.c: 327: {
  8073                           ;Timer.c: 361: if( INTCON2bits.INTEDG2 == 1)
  8074  000866  A8F1               	btfss	intcon2,4,c	;volatile
  8075  000868  D00A               	goto	i2l1092
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;Timer.c: 362: {
  8079                           ;Timer.c: 363: if(PORTCbits.RC0 == 0)
  8080  00086A  B082               	btfsc	3970,0,c	;volatile
  8081  00086C  D005               	goto	i2l1093
  8082  00086E  D012               	goto	i2l8861
  8083  000870                     L5:
  8084                           
  8085                           ;Timer.c: 367: hg_op.cnt_pos_1mm ++;
  8086  000870  0100               	movlb	0	; () banked
  8087  000872  4BE8               	infsnz	(_hg_op+40)& (0+255),f,b
  8088  000874  2BE9               	incf	(_hg_op+41)& (0+255),f,b
  8089                           
  8090                           ;Timer.c: 368: }
  8091  000876  D033               	goto	i2l1069
  8092  000878                     i2l1093:
  8093                           
  8094                           ; BSR set to: 0
  8095                           ;Timer.c: 369: else if(PORTCbits.RC0 == 1)
  8096  000878  A082               	btfss	3970,0,c	;volatile
  8097  00087A  D031               	goto	i2l1069
  8098  00087C  D004               	goto	i2l8859
  8099  00087E                     i2l1092:
  8100                           
  8101                           ; BSR set to: 0
  8102                           ;Timer.c: 378: else if( INTCON2bits.INTEDG2 == 0)
  8103  00087E  B8F1               	btfsc	intcon2,4,c	;volatile
  8104  000880  D02E               	goto	i2l1069
  8105                           
  8106                           ; BSR set to: 0
  8107                           ;Timer.c: 379: {
  8108                           ;Timer.c: 381: if(PORTCbits.RC0 == 0)
  8109  000882  B082               	btfsc	3970,0,c	;volatile
  8110  000884  D005               	goto	i2l1098
  8111  000886                     i2l8859:
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;Timer.c: 382: {
  8115                           ;Timer.c: 385: hg_op.cnt_pos_1mm --;
  8116  000886  0100               	movlb	0	; () banked
  8117  000888  07E8               	decf	(_hg_op+40)& (0+255),f,b
  8118  00088A  A0D8               	btfss	status,0,c
  8119  00088C  07E9               	decf	(_hg_op+41)& (0+255),f,b
  8120                           
  8121                           ;Timer.c: 386: }
  8122  00088E  D027               	goto	i2l1069
  8123  000890                     i2l1098:
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;Timer.c: 387: else if(PORTCbits.RC0 == 1)
  8127  000890  A082               	btfss	3970,0,c	;volatile
  8128  000892  D025               	goto	i2l1069
  8129  000894                     i2l8861:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;Timer.c: 388: {
  8133                           ;Timer.c: 389: tvb--;
  8134  000894  0603               	decf	_tvb,f,c
  8135  000896  A0D8               	btfss	status,0,c
  8136  000898  0604               	decf	_tvb+1,f,c
  8137  00089A  D7EA               	goto	L5
  8138  00089C                     i2l8863:
  8139                           
  8140                           ; BSR set to: 0
  8141                           ;Timer.c: 443: else if(hg_op.working_mode == 0x02)
  8142  00089C  0E02               	movlw	2
  8143  00089E  0100               	movlb	0	; () banked
  8144  0008A0  19C0               	xorwf	_hg_op& (0+255),w,b
  8145  0008A2  B4D8               	btfsc	status,2,c
  8146  0008A4  D01C               	goto	i2l1069
  8147                           
  8148                           ; BSR set to: 0
  8149                           ;Timer.c: 447: else if(hg_op.working_mode == 0x00)
  8150                           
  8151                           ; BSR set to: 0
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;Timer.c: 444: {
  8155                           ;Timer.c: 446: }
  8156  0008A6  0100               	movlb	0	; () banked
  8157  0008A8  51C0               	movf	_hg_op& (0+255),w,b
  8158  0008AA  A4D8               	btfss	status,2,c
  8159  0008AC  D00C               	goto	i2l8877
  8160                           
  8161                           ; BSR set to: 0
  8162                           ;Timer.c: 448: {
  8163                           ;Timer.c: 449: if(hg_op.drops_sa == 1)
  8164  0008AE  0100               	movlb	0	; () banked
  8165  0008B0  05DB               	decf	(_hg_op+27)& (0+255),w,b
  8166  0008B2  B4D8               	btfsc	status,2,c
  8167  0008B4  D011               	goto	i2l8881
  8168  0008B6                     i2l8873:
  8169                           
  8170                           ; BSR set to: 0
  8171                           ;Timer.c: 453: else if(hg_op.drops_sb == 1)
  8172  0008B6  0100               	movlb	0	; () banked
  8173  0008B8  05DC               	decf	(_hg_op+28)& (0+255),w,b
  8174  0008BA  A4D8               	btfss	status,2,c
  8175  0008BC  D010               	goto	i2l1069
  8176                           
  8177                           ; BSR set to: 0
  8178                           ;Timer.c: 454: {
  8179                           ;Timer.c: 455: hg_op.cnt_posb ++;
  8180  0008BE  0100               	movlb	0	; () banked
  8181  0008C0  4BE4               	infsnz	(_hg_op+36)& (0+255),f,b
  8182  0008C2  2BE5               	incf	(_hg_op+37)& (0+255),f,b
  8183                           
  8184                           ; BSR set to: 0
  8185                           ;Timer.c: 456: }
  8186                           ;Timer.c: 457: }
  8187                           
  8188                           ; BSR set to: 0
  8189  0008C4  D00C               	goto	i2l1069
  8190  0008C6                     i2l8877:
  8191                           
  8192                           ; BSR set to: 0
  8193                           ;Timer.c: 458: else if(hg_op.working_mode == 0x04)
  8194  0008C6  0E04               	movlw	4
  8195  0008C8  0100               	movlb	0	; () banked
  8196  0008CA  19C0               	xorwf	_hg_op& (0+255),w,b
  8197  0008CC  A4D8               	btfss	status,2,c
  8198  0008CE  D007               	goto	i2l1069
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;Timer.c: 459: {
  8202                           ;Timer.c: 460: if(hg_op.drops_sa == 1)
  8203  0008D0  0100               	movlb	0	; () banked
  8204  0008D2  05DB               	decf	(_hg_op+27)& (0+255),w,b
  8205  0008D4  A4D8               	btfss	status,2,c
  8206  0008D6  D7EF               	goto	i2l8873
  8207  0008D8                     i2l8881:
  8208                           
  8209                           ; BSR set to: 0
  8210                           ;Timer.c: 461: {
  8211                           ;Timer.c: 462: hg_op.cnt_posa ++;
  8212  0008D8  0100               	movlb	0	; () banked
  8213  0008DA  4BE2               	infsnz	(_hg_op+34)& (0+255),f,b
  8214  0008DC  2BE3               	incf	(_hg_op+35)& (0+255),f,b
  8215  0008DE                     i2l1069:
  8216                           
  8217                           ;Timer.c: 472: }
  8218                           ;Timer.c: 475: }
  8219                           ;Timer.c: 482: }
  8220                           ;Timer.c: 719: if(INTCONbits.RBIF)
  8221  0008DE  A0F2               	btfss	intcon,0,c	;volatile
  8222  0008E0  D00C               	goto	i2l8895
  8223                           
  8224                           ;Timer.c: 720: {
  8225                           ;Timer.c: 795: if(PORTBbits.RB5 == 0)
  8226  0008E2  BA81               	btfsc	3969,5,c	;volatile
  8227  0008E4  D009               	goto	i2l8893
  8228                           
  8229                           ;Timer.c: 796: {
  8230                           ;Timer.c: 799: hg_op.acting_flag = 1;
  8231  0008E6  0E01               	movlw	1
  8232  0008E8  0100               	movlb	0	; () banked
  8233  0008EA  6FDA               	movwf	(_hg_op+26)& (0+255),b
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;Timer.c: 800: printf("act\n");
  8237  0008EC  0EFA               	movlw	low STR_13
  8238  0008EE  6E42               	movwf	i2printf@f,c
  8239  0008F0  0E7F               	movlw	high STR_13
  8240  0008F2  6E43               	movwf	i2printf@f+1,c
  8241  0008F4  EC51  F005         	call	i2_printf	;wreg free
  8242  0008F8                     i2l8893:
  8243                           
  8244                           ;Timer.c: 801: }
  8245                           ;Timer.c: 804: INTCONbits.RBIF=0;
  8246  0008F8  90F2               	bcf	intcon,0,c	;volatile
  8247  0008FA                     i2l8895:
  8248                           
  8249                           ;Timer.c: 807: }
  8250                           ;Timer.c: 810: if(INTCONbits.INT0IF)
  8251  0008FA  A2F2               	btfss	intcon,1,c	;volatile
  8252  0008FC  D00A               	goto	i2l1118
  8253                           
  8254                           ;Timer.c: 811: {
  8255                           ;Timer.c: 815: hg_op.status_hit_lp =1;
  8256  0008FE  0E01               	movlw	1
  8257  000900  0100               	movlb	0	; () banked
  8258  000902  6FC6               	movwf	(_hg_op+6)& (0+255),b
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;Timer.c: 816: printf("lp\r\n");
  8262  000904  0EF5               	movlw	low STR_14
  8263  000906  6E42               	movwf	i2printf@f,c
  8264  000908  0E7F               	movlw	high STR_14
  8265  00090A  6E43               	movwf	i2printf@f+1,c
  8266  00090C  EC51  F005         	call	i2_printf	;wreg free
  8267                           
  8268                           ;Timer.c: 819: INTCONbits.INT0IF = 0;
  8269  000910  92F2               	bcf	intcon,1,c	;volatile
  8270  000912                     i2l1118:
  8271  000912  C059  FFF5         	movff	??_ISR+13,tablat
  8272  000916  C058  FFF8         	movff	??_ISR+12,tblptru
  8273  00091A  C057  FFF7         	movff	??_ISR+11,tblptrh
  8274  00091E  C056  FFF6         	movff	??_ISR+10,tblptrl
  8275  000922  C055  FFF4         	movff	??_ISR+9,prodh
  8276  000926  C054  FFF3         	movff	??_ISR+8,prodl
  8277  00092A  C053  FFDA         	movff	??_ISR+7,fsr2h
  8278  00092E  C052  FFD9         	movff	??_ISR+6,fsr2l
  8279  000932  C051  FFE2         	movff	??_ISR+5,fsr1h
  8280  000936  C050  FFE1         	movff	??_ISR+4,fsr1l
  8281  00093A  C04F  FFEA         	movff	??_ISR+3,fsr0h
  8282  00093E  C04E  FFE9         	movff	??_ISR+2,fsr0l
  8283  000942  C04D  FFFB         	movff	??_ISR+1,pclatu
  8284  000946  C04C  FFFA         	movff	??_ISR,pclath
  8285  00094A  9265               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  8286  00094C  0011               	retfie		f
  8287  00094E                     __end_of_ISR:
  8288                           	opt stack 0
  8289                           pclatu	equ	0xFFB
  8290                           pclath	equ	0xFFA
  8291                           tblptru	equ	0xFF8
  8292                           tblptrh	equ	0xFF7
  8293                           tblptrl	equ	0xFF6
  8294                           tablat	equ	0xFF5
  8295                           prodh	equ	0xFF4
  8296                           prodl	equ	0xFF3
  8297                           intcon	equ	0xFF2
  8298                           intcon2	equ	0xFF1
  8299                           intcon3	equ	0xFF0
  8300                           postinc0	equ	0xFEE
  8301                           fsr0h	equ	0xFEA
  8302                           fsr0l	equ	0xFE9
  8303                           wreg	equ	0xFE8
  8304                           postdec1	equ	0xFE5
  8305                           fsr1h	equ	0xFE2
  8306                           fsr1l	equ	0xFE1
  8307                           postinc2	equ	0xFDE
  8308                           postdec2	equ	0xFDD
  8309                           fsr2h	equ	0xFDA
  8310                           fsr2l	equ	0xFD9
  8311                           status	equ	0xFD8
  8312                           
  8313 ;; *************** function i2_printf *****************
  8314 ;; Defined at:
  8315 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
  8316 ;; Parameters:    Size  Location     Type
  8317 ;;  f               2   12[COMRAM] PTR const unsigned char 
  8318 ;;		 -> STR_14(5), STR_13(5), STR_12(12), STR_11(9), 
  8319 ;;		 -> STR_10(13), STR_9(36), STR_8(27), STR_7(27), 
  8320 ;;		 -> STR_6(27), STR_5(13), STR_4(20), STR_3(20), 
  8321 ;;		 -> STR_2(13), STR_1(18), 
  8322 ;; Auto vars:     Size  Location     Type
  8323 ;;  printf          4    0        struct .
  8324 ;;  printf          3    0        PTR const unsigned char 
  8325 ;;  printf          2   19[COMRAM] unsigned int 
  8326 ;;  printf          2   15[COMRAM] PTR void [1]
  8327 ;;		 -> ?i2_printf(2), ?_printf(2), 
  8328 ;;  printf          2    0        unsigned int 
  8329 ;;  printf          1   21[COMRAM] char 
  8330 ;;  printf          1   18[COMRAM] char 
  8331 ;;  printf          1   17[COMRAM] unsigned char 
  8332 ;; Return value:  Size  Location     Type
  8333 ;;                  2   12[COMRAM] int 
  8334 ;; Registers used:
  8335 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8336 ;; Tracked objects:
  8337 ;;		On entry : 0/0
  8338 ;;		On exit  : 0/0
  8339 ;;		Unchanged: 0/0
  8340 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8341 ;;      Params:         2       0       0       0       0       0       0
  8342 ;;      Locals:         7       0       0       0       0       0       0
  8343 ;;      Temps:          1       0       0       0       0       0       0
  8344 ;;      Totals:        10       0       0       0       0       0       0
  8345 ;;Total ram usage:       10 bytes
  8346 ;; Hardware stack levels used:    1
  8347 ;; Hardware stack levels required when called:    1
  8348 ;; This function calls:
  8349 ;;		i2___lwdiv
  8350 ;;		i2___lwmod
  8351 ;;		i2_putch
  8352 ;; This function is called by:
  8353 ;;		_ISR
  8354 ;; This function uses a non-reentrant model
  8355 ;;
  8356                           
  8357                           	psect	text21
  8358  000AA2                     __ptext21:
  8359                           	opt stack 0
  8360  000AA2                     i2_printf:
  8361                           	opt stack 26
  8362                           
  8363                           ;doprnt.c: 466: va_list ap;
  8364                           ;doprnt.c: 499: signed char c;
  8365                           ;doprnt.c: 506: signed char prec;
  8366                           ;doprnt.c: 508: unsigned char flag;
  8367                           ;doprnt.c: 523: union {
  8368                           ;doprnt.c: 524: unsigned long vd;
  8369                           ;doprnt.c: 525: double integ;
  8370                           ;doprnt.c: 526: } tmpval;
  8371                           ;doprnt.c: 528: unsigned int val;
  8372                           ;doprnt.c: 529: unsigned len;
  8373                           ;doprnt.c: 530: const char * cp;
  8374                           ;doprnt.c: 533: *ap = __va_start();
  8375                           
  8376                           ;incstack = 0
  8377  000AA2  0E44               	movlw	low (?i2_printf+2)
  8378  000AA4  6E45               	movwf	i2printf@ap,c
  8379  000AA6  0E00               	movlw	high (?i2_printf+2)
  8380  000AA8  6E46               	movwf	i2printf@ap+1,c
  8381                           
  8382                           ;doprnt.c: 536: while(c = *f++) {
  8383  000AAA  D07D               	goto	i2l8101
  8384  000AAC                     i2l8055:
  8385                           
  8386                           ;doprnt.c: 538: if(c != '%')
  8387  000AAC  0E25               	movlw	37
  8388  000AAE  184B               	xorwf	i2printf@c,w,c
  8389  000AB0  B4D8               	btfsc	status,2,c
  8390  000AB2  D004               	goto	i2l8059
  8391                           
  8392                           ;doprnt.c: 540: {
  8393                           ;doprnt.c: 541: (putch(c) );
  8394  000AB4  504B               	movf	i2printf@c,w,c
  8395  000AB6  EC8E  F007         	call	i2_putch
  8396                           
  8397                           ;doprnt.c: 542: continue;
  8398  000ABA  D075               	goto	i2l8101
  8399  000ABC                     i2l8059:
  8400                           
  8401                           ;doprnt.c: 543: }
  8402                           ;doprnt.c: 548: flag = 0;
  8403  000ABC  0E00               	movlw	0
  8404  000ABE  6E47               	movwf	i2printf@flag,c
  8405                           
  8406                           ;doprnt.c: 822: }
  8407                           
  8408                           ;doprnt.c: 813: continue;
  8409                           
  8410                           ;doprnt.c: 802: default:
  8411                           
  8412                           ;doprnt.c: 698: case 'i':
  8413                           ;doprnt.c: 699: break;
  8414                           
  8415                           ;doprnt.c: 697: case 'd':
  8416                           
  8417                           ;doprnt.c: 638: goto alldone;
  8418                           
  8419                           ;doprnt.c: 637: case 0:
  8420                           
  8421                           ;doprnt.c: 635: switch(c = *f++) {
  8422  000AC0  C042  FFF6         	movff	i2printf@f,tblptrl
  8423  000AC4  C043  FFF7         	movff	i2printf@f+1,tblptrh
  8424  000AC8  4A42               	infsnz	i2printf@f,f,c
  8425  000ACA  2A43               	incf	i2printf@f+1,f,c
  8426  000ACC                     	if	0	;tblptru may be non-zero
  8427  000ACC                     	endif
  8428  000ACC                     	if	0	;tblptru may be non-zero
  8429  000ACC                     	endif
  8430  000ACC  0008               	tblrd		*
  8431  000ACE  CFF5 F04B          	movff	tablat,i2printf@c
  8432  000AD2  504B               	movf	i2printf@c,w,c
  8433                           
  8434                           ; Switch size 1, requested type "space"
  8435                           ; Number of cases is 3, Range of values is 0 to 105
  8436                           ; switch strategies available:
  8437                           ; Name         Instructions Cycles
  8438                           ; simple_byte           10     6 (average)
  8439                           ;	Chosen strategy is simple_byte
  8440  000AD4  0A00               	xorlw	0	; case 0
  8441  000AD6  B4D8               	btfsc	status,2,c
  8442  000AD8  0012               	return	
  8443  000ADA  0A64               	xorlw	100	; case 100
  8444  000ADC  B4D8               	btfsc	status,2,c
  8445  000ADE  D003               	goto	i2l8065
  8446  000AE0  0A0D               	xorlw	13	; case 105
  8447  000AE2  A4D8               	btfss	status,2,c
  8448  000AE4  D060               	goto	i2l8101
  8449  000AE6                     i2l8065:
  8450                           
  8451                           ;doprnt.c: 1253: {
  8452                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  8453  000AE6  C045  FFD9         	movff	i2printf@ap,fsr2l
  8454  000AEA  C046  FFDA         	movff	i2printf@ap+1,fsr2h
  8455  000AEE  CFDE F049          	movff	postinc2,i2printf@val
  8456  000AF2  CFDD F04A          	movff	postdec2,i2printf@val+1
  8457  000AF6  0E02               	movlw	2
  8458  000AF8  2645               	addwf	i2printf@ap,f,c
  8459  000AFA  0E00               	movlw	0
  8460  000AFC  2246               	addwfc	i2printf@ap+1,f,c
  8461                           
  8462                           ;doprnt.c: 1261: if((int)val < 0) {
  8463  000AFE  AE4A               	btfss	i2printf@val+1,7,c
  8464  000B00  D006               	goto	i2l8075
  8465                           
  8466                           ;doprnt.c: 1262: flag |= 0x03;
  8467  000B02  0E03               	movlw	3
  8468  000B04  1247               	iorwf	i2printf@flag,f,c
  8469                           
  8470                           ;doprnt.c: 1263: val = -val;
  8471  000B06  6C49               	negf	i2printf@val,c
  8472  000B08  1E4A               	comf	i2printf@val+1,f,c
  8473  000B0A  B0D8               	btfsc	status,0,c
  8474  000B0C  2A4A               	incf	i2printf@val+1,f,c
  8475  000B0E                     i2l8075:
  8476                           
  8477                           ;doprnt.c: 1264: }
  8478                           ;doprnt.c: 1266: }
  8479                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  8480  000B0E  0E01               	movlw	1
  8481  000B10  6E4B               	movwf	i2printf@c,c
  8482  000B12                     i2l8077:
  8483  000B12  0E05               	movlw	5
  8484  000B14  184B               	xorwf	i2printf@c,w,c
  8485  000B16  B4D8               	btfsc	status,2,c
  8486  000B18  D012               	goto	i2l8089
  8487                           
  8488                           ;doprnt.c: 1306: if(val < dpowers[c])
  8489  000B1A  504B               	movf	i2printf@c,w,c
  8490  000B1C  0D02               	mullw	2
  8491  000B1E  0E2C               	movlw	low _dpowers
  8492  000B20  24F3               	addwf	prodl,w,c
  8493  000B22  6EF6               	movwf	tblptrl,c
  8494  000B24  0E76               	movlw	high _dpowers
  8495  000B26  20F4               	addwfc	prodh,w,c
  8496  000B28  6EF7               	movwf	tblptrh,c
  8497  000B2A                     	if	0	;There are less than 3 active tblptr bytes
  8498  000B2A                     	endif
  8499  000B2A  0009               	tblrd		*+
  8500  000B2C  50F5               	movf	tablat,w,c
  8501  000B2E  5C49               	subwf	i2printf@val,w,c
  8502  000B30  0009               	tblrd		*+
  8503  000B32  50F5               	movf	tablat,w,c
  8504  000B34  584A               	subwfb	i2printf@val+1,w,c
  8505  000B36  A0D8               	btfss	status,0,c
  8506  000B38  D002               	goto	i2l8089
  8507                           
  8508                           ;doprnt.c: 1307: break;
  8509  000B3A  2A4B               	incf	i2printf@c,f,c
  8510  000B3C  D7EA               	goto	i2l8077
  8511  000B3E                     i2l8089:
  8512                           
  8513                           ;doprnt.c: 1422: {
  8514                           ;doprnt.c: 1438: if(flag & 0x03)
  8515  000B3E  C047  F044         	movff	i2printf@flag,??i2_printf
  8516  000B42  0E03               	movlw	3
  8517  000B44  1644               	andwf	??i2_printf,f,c
  8518  000B46  B4D8               	btfsc	status,2,c
  8519  000B48  D003               	goto	i2l8093
  8520                           
  8521                           ;doprnt.c: 1439: (putch('-') );
  8522  000B4A  0E2D               	movlw	45
  8523  000B4C  EC8E  F007         	call	i2_putch
  8524  000B50                     i2l8093:
  8525                           
  8526                           ;doprnt.c: 1469: }
  8527                           ;doprnt.c: 1472: prec = c;
  8528  000B50  C04B  F048         	movff	i2printf@c,i2printf@prec
  8529                           
  8530                           ;doprnt.c: 1474: while(prec--) {
  8531  000B54  D024               	goto	i2l8099
  8532  000B56                     i2l8095:
  8533                           
  8534                           ;doprnt.c: 1478: {
  8535                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  8536  000B56  5048               	movf	i2printf@prec,w,c
  8537  000B58  0D02               	mullw	2
  8538  000B5A  0E2C               	movlw	low _dpowers
  8539  000B5C  24F3               	addwf	prodl,w,c
  8540  000B5E  6EF6               	movwf	tblptrl,c
  8541  000B60  0E76               	movlw	high _dpowers
  8542  000B62  20F4               	addwfc	prodh,w,c
  8543  000B64  6EF7               	movwf	tblptrh,c
  8544  000B66                     	if	0	;There are less than 3 active tblptr bytes
  8545  000B66                     	endif
  8546  000B66  0009               	tblrd		*+
  8547  000B68  CFF5 F038          	movff	tablat,i2___lwdiv@divisor
  8548  000B6C  000A               	tblrd		*-
  8549  000B6E  CFF5 F039          	movff	tablat,i2___lwdiv@divisor+1
  8550  000B72  C049  F036         	movff	i2printf@val,i2___lwdiv@dividend
  8551  000B76  C04A  F037         	movff	i2printf@val+1,i2___lwdiv@dividend+1
  8552  000B7A  ECB3  F006         	call	i2___lwdiv	;wreg free
  8553  000B7E  C036  F03D         	movff	?i2___lwdiv,i2___lwmod@dividend
  8554  000B82  C037  F03E         	movff	?i2___lwdiv+1,i2___lwmod@dividend+1
  8555  000B86  0E00               	movlw	0
  8556  000B88  6E40               	movwf	i2___lwmod@divisor+1,c
  8557  000B8A  0E0A               	movlw	10
  8558  000B8C  6E3F               	movwf	i2___lwmod@divisor,c
  8559  000B8E  ECDC  F006         	call	i2___lwmod	;wreg free
  8560  000B92  503D               	movf	?i2___lwmod,w,c
  8561  000B94  0F30               	addlw	48
  8562  000B96  6E4B               	movwf	i2printf@c,c
  8563                           
  8564                           ;doprnt.c: 1523: }
  8565                           ;doprnt.c: 1524: (putch(c) );
  8566  000B98  504B               	movf	i2printf@c,w,c
  8567  000B9A  EC8E  F007         	call	i2_putch
  8568  000B9E                     i2l8099:
  8569  000B9E  0648               	decf	i2printf@prec,f,c
  8570  000BA0  2848               	incf	i2printf@prec,w,c
  8571  000BA2  A4D8               	btfss	status,2,c
  8572  000BA4  D7D8               	goto	i2l8095
  8573  000BA6                     i2l8101:
  8574  000BA6  C042  FFF6         	movff	i2printf@f,tblptrl
  8575  000BAA  C043  FFF7         	movff	i2printf@f+1,tblptrh
  8576  000BAE  4A42               	infsnz	i2printf@f,f,c
  8577  000BB0  2A43               	incf	i2printf@f+1,f,c
  8578  000BB2                     	if	0	;tblptru may be non-zero
  8579  000BB2                     	endif
  8580  000BB2                     	if	0	;tblptru may be non-zero
  8581  000BB2                     	endif
  8582  000BB2  0008               	tblrd		*
  8583  000BB4  CFF5 F04B          	movff	tablat,i2printf@c
  8584  000BB8  504B               	movf	i2printf@c,w,c
  8585  000BBA  B4D8               	btfsc	status,2,c
  8586  000BBC  0012               	return	
  8587  000BBE  D776               	goto	i2l8055
  8588  000BC0                     __end_ofi2_printf:
  8589                           	opt stack 0
  8590                           pclatu	equ	0xFFB
  8591                           pclath	equ	0xFFA
  8592                           tblptru	equ	0xFF8
  8593                           tblptrh	equ	0xFF7
  8594                           tblptrl	equ	0xFF6
  8595                           tablat	equ	0xFF5
  8596                           prodh	equ	0xFF4
  8597                           prodl	equ	0xFF3
  8598                           intcon	equ	0xFF2
  8599                           intcon2	equ	0xFF1
  8600                           intcon3	equ	0xFF0
  8601                           postinc0	equ	0xFEE
  8602                           fsr0h	equ	0xFEA
  8603                           fsr0l	equ	0xFE9
  8604                           wreg	equ	0xFE8
  8605                           postdec1	equ	0xFE5
  8606                           fsr1h	equ	0xFE2
  8607                           fsr1l	equ	0xFE1
  8608                           postinc2	equ	0xFDE
  8609                           postdec2	equ	0xFDD
  8610                           fsr2h	equ	0xFDA
  8611                           fsr2l	equ	0xFD9
  8612                           status	equ	0xFD8
  8613                           
  8614 ;; *************** function i2_putch *****************
  8615 ;; Defined at:
  8616 ;;		line 56 in file "../Beep.c"
  8617 ;; Parameters:    Size  Location     Type
  8618 ;;  c               1    wreg     unsigned char 
  8619 ;; Auto vars:     Size  Location     Type
  8620 ;;  c               1    0[COMRAM] unsigned char 
  8621 ;; Return value:  Size  Location     Type
  8622 ;;                  1    wreg      void 
  8623 ;; Registers used:
  8624 ;;		wreg
  8625 ;; Tracked objects:
  8626 ;;		On entry : 0/0
  8627 ;;		On exit  : 0/0
  8628 ;;		Unchanged: 0/0
  8629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8630 ;;      Params:         0       0       0       0       0       0       0
  8631 ;;      Locals:         1       0       0       0       0       0       0
  8632 ;;      Temps:          0       0       0       0       0       0       0
  8633 ;;      Totals:         1       0       0       0       0       0       0
  8634 ;;Total ram usage:        1 bytes
  8635 ;; Hardware stack levels used:    1
  8636 ;; This function calls:
  8637 ;;		Nothing
  8638 ;; This function is called by:
  8639 ;;		i2_printf
  8640 ;; This function uses a non-reentrant model
  8641 ;;
  8642                           
  8643                           	psect	text22
  8644  000F1C                     __ptext22:
  8645                           	opt stack 0
  8646  000F1C                     i2_putch:
  8647                           	opt stack 26
  8648                           
  8649                           ;incstack = 0
  8650                           ;i2putch@c stored from wreg
  8651  000F1C  6E36               	movwf	i2putch@c,c
  8652                           
  8653                           ;Beep.c: 58: TXREG = c;
  8654  000F1E  C036  FFAD         	movff	i2putch@c,4013	;volatile
  8655  000F22                     i2l43:
  8656  000F22  B2AC               	btfsc	4012,1,c	;volatile
  8657  000F24  0012               	return	
  8658  000F26  D7FD               	goto	i2l43
  8659  000F28                     __end_ofi2_putch:
  8660                           	opt stack 0
  8661                           pclatu	equ	0xFFB
  8662                           pclath	equ	0xFFA
  8663                           tblptru	equ	0xFF8
  8664                           tblptrh	equ	0xFF7
  8665                           tblptrl	equ	0xFF6
  8666                           tablat	equ	0xFF5
  8667                           prodh	equ	0xFF4
  8668                           prodl	equ	0xFF3
  8669                           intcon	equ	0xFF2
  8670                           intcon2	equ	0xFF1
  8671                           intcon3	equ	0xFF0
  8672                           postinc0	equ	0xFEE
  8673                           fsr0h	equ	0xFEA
  8674                           fsr0l	equ	0xFE9
  8675                           wreg	equ	0xFE8
  8676                           postdec1	equ	0xFE5
  8677                           fsr1h	equ	0xFE2
  8678                           fsr1l	equ	0xFE1
  8679                           postinc2	equ	0xFDE
  8680                           postdec2	equ	0xFDD
  8681                           fsr2h	equ	0xFDA
  8682                           fsr2l	equ	0xFD9
  8683                           status	equ	0xFD8
  8684                           
  8685 ;; *************** function i2___lwmod *****************
  8686 ;; Defined at:
  8687 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
  8688 ;; Parameters:    Size  Location     Type
  8689 ;;  dividend        2    7[COMRAM] unsigned int 
  8690 ;;  divisor         2    9[COMRAM] unsigned int 
  8691 ;; Auto vars:     Size  Location     Type
  8692 ;;  __lwmod         1   11[COMRAM] unsigned char 
  8693 ;; Return value:  Size  Location     Type
  8694 ;;                  2    7[COMRAM] unsigned int 
  8695 ;; Registers used:
  8696 ;;		wreg, status,2, status,0
  8697 ;; Tracked objects:
  8698 ;;		On entry : 0/0
  8699 ;;		On exit  : 0/0
  8700 ;;		Unchanged: 0/0
  8701 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8702 ;;      Params:         4       0       0       0       0       0       0
  8703 ;;      Locals:         1       0       0       0       0       0       0
  8704 ;;      Temps:          0       0       0       0       0       0       0
  8705 ;;      Totals:         5       0       0       0       0       0       0
  8706 ;;Total ram usage:        5 bytes
  8707 ;; Hardware stack levels used:    1
  8708 ;; This function calls:
  8709 ;;		Nothing
  8710 ;; This function is called by:
  8711 ;;		i2_printf
  8712 ;; This function uses a non-reentrant model
  8713 ;;
  8714                           
  8715                           	psect	text23
  8716  000DB8                     __ptext23:
  8717                           	opt stack 0
  8718  000DB8                     i2___lwmod:
  8719                           	opt stack 26
  8720                           
  8721                           ;incstack = 0
  8722  000DB8  503F               	movf	i2___lwmod@divisor,w,c
  8723  000DBA  1040               	iorwf	i2___lwmod@divisor+1,w,c
  8724  000DBC  B4D8               	btfsc	status,2,c
  8725  000DBE  D018               	goto	i2l1974
  8726  000DC0  0E01               	movlw	1
  8727  000DC2  6E41               	movwf	i2___lwmod@counter,c
  8728  000DC4  D004               	goto	i2l7043
  8729  000DC6                     i2l7041:
  8730  000DC6  90D8               	bcf	status,0,c
  8731  000DC8  363F               	rlcf	i2___lwmod@divisor,f,c
  8732  000DCA  3640               	rlcf	i2___lwmod@divisor+1,f,c
  8733  000DCC  2A41               	incf	i2___lwmod@counter,f,c
  8734  000DCE                     i2l7043:
  8735  000DCE  AE40               	btfss	i2___lwmod@divisor+1,7,c
  8736  000DD0  D7FA               	goto	i2l7041
  8737  000DD2                     i2l7045:
  8738  000DD2  503F               	movf	i2___lwmod@divisor,w,c
  8739  000DD4  5C3D               	subwf	i2___lwmod@dividend,w,c
  8740  000DD6  5040               	movf	i2___lwmod@divisor+1,w,c
  8741  000DD8  583E               	subwfb	i2___lwmod@dividend+1,w,c
  8742  000DDA  A0D8               	btfss	status,0,c
  8743  000DDC  D004               	goto	i2l7049
  8744  000DDE  503F               	movf	i2___lwmod@divisor,w,c
  8745  000DE0  5E3D               	subwf	i2___lwmod@dividend,f,c
  8746  000DE2  5040               	movf	i2___lwmod@divisor+1,w,c
  8747  000DE4  5A3E               	subwfb	i2___lwmod@dividend+1,f,c
  8748  000DE6                     i2l7049:
  8749  000DE6  90D8               	bcf	status,0,c
  8750  000DE8  3240               	rrcf	i2___lwmod@divisor+1,f,c
  8751  000DEA  323F               	rrcf	i2___lwmod@divisor,f,c
  8752  000DEC  2E41               	decfsz	i2___lwmod@counter,f,c
  8753  000DEE  D7F1               	goto	i2l7045
  8754  000DF0                     i2l1974:
  8755  000DF0  C03D  F03D         	movff	i2___lwmod@dividend,?i2___lwmod
  8756  000DF4  C03E  F03E         	movff	i2___lwmod@dividend+1,?i2___lwmod+1
  8757  000DF8  0012               	return		;funcret
  8758  000DFA                     __end_ofi2___lwmod:
  8759                           	opt stack 0
  8760                           pclatu	equ	0xFFB
  8761                           pclath	equ	0xFFA
  8762                           tblptru	equ	0xFF8
  8763                           tblptrh	equ	0xFF7
  8764                           tblptrl	equ	0xFF6
  8765                           tablat	equ	0xFF5
  8766                           prodh	equ	0xFF4
  8767                           prodl	equ	0xFF3
  8768                           intcon	equ	0xFF2
  8769                           intcon2	equ	0xFF1
  8770                           intcon3	equ	0xFF0
  8771                           postinc0	equ	0xFEE
  8772                           fsr0h	equ	0xFEA
  8773                           fsr0l	equ	0xFE9
  8774                           wreg	equ	0xFE8
  8775                           postdec1	equ	0xFE5
  8776                           fsr1h	equ	0xFE2
  8777                           fsr1l	equ	0xFE1
  8778                           postinc2	equ	0xFDE
  8779                           postdec2	equ	0xFDD
  8780                           fsr2h	equ	0xFDA
  8781                           fsr2l	equ	0xFD9
  8782                           status	equ	0xFD8
  8783                           
  8784 ;; *************** function i2___lwdiv *****************
  8785 ;; Defined at:
  8786 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
  8787 ;; Parameters:    Size  Location     Type
  8788 ;;  dividend        2    0[COMRAM] unsigned int 
  8789 ;;  divisor         2    2[COMRAM] unsigned int 
  8790 ;; Auto vars:     Size  Location     Type
  8791 ;;  __lwdiv         2    4[COMRAM] unsigned int 
  8792 ;;  __lwdiv         1    6[COMRAM] unsigned char 
  8793 ;; Return value:  Size  Location     Type
  8794 ;;                  2    0[COMRAM] unsigned int 
  8795 ;; Registers used:
  8796 ;;		wreg, status,2, status,0
  8797 ;; Tracked objects:
  8798 ;;		On entry : 0/0
  8799 ;;		On exit  : 0/0
  8800 ;;		Unchanged: 0/0
  8801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8802 ;;      Params:         4       0       0       0       0       0       0
  8803 ;;      Locals:         3       0       0       0       0       0       0
  8804 ;;      Temps:          0       0       0       0       0       0       0
  8805 ;;      Totals:         7       0       0       0       0       0       0
  8806 ;;Total ram usage:        7 bytes
  8807 ;; Hardware stack levels used:    1
  8808 ;; This function calls:
  8809 ;;		Nothing
  8810 ;; This function is called by:
  8811 ;;		i2_printf
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text24
  8816  000D66                     __ptext24:
  8817                           	opt stack 0
  8818  000D66                     i2___lwdiv:
  8819                           	opt stack 26
  8820                           
  8821                           ;incstack = 0
  8822  000D66  0E00               	movlw	0
  8823  000D68  6E3B               	movwf	i2___lwdiv@quotient+1,c
  8824  000D6A  0E00               	movlw	0
  8825  000D6C  6E3A               	movwf	i2___lwdiv@quotient,c
  8826  000D6E  5038               	movf	i2___lwdiv@divisor,w,c
  8827  000D70  1039               	iorwf	i2___lwdiv@divisor+1,w,c
  8828  000D72  B4D8               	btfsc	status,2,c
  8829  000D74  D01C               	goto	i2l1964
  8830  000D76  0E01               	movlw	1
  8831  000D78  6E3C               	movwf	i2___lwdiv@counter,c
  8832  000D7A  D004               	goto	i2l7023
  8833  000D7C                     i2l7021:
  8834  000D7C  90D8               	bcf	status,0,c
  8835  000D7E  3638               	rlcf	i2___lwdiv@divisor,f,c
  8836  000D80  3639               	rlcf	i2___lwdiv@divisor+1,f,c
  8837  000D82  2A3C               	incf	i2___lwdiv@counter,f,c
  8838  000D84                     i2l7023:
  8839  000D84  AE39               	btfss	i2___lwdiv@divisor+1,7,c
  8840  000D86  D7FA               	goto	i2l7021
  8841  000D88                     i2l7025:
  8842  000D88  90D8               	bcf	status,0,c
  8843  000D8A  363A               	rlcf	i2___lwdiv@quotient,f,c
  8844  000D8C  363B               	rlcf	i2___lwdiv@quotient+1,f,c
  8845  000D8E  5038               	movf	i2___lwdiv@divisor,w,c
  8846  000D90  5C36               	subwf	i2___lwdiv@dividend,w,c
  8847  000D92  5039               	movf	i2___lwdiv@divisor+1,w,c
  8848  000D94  5837               	subwfb	i2___lwdiv@dividend+1,w,c
  8849  000D96  A0D8               	btfss	status,0,c
  8850  000D98  D005               	goto	i2l7033
  8851  000D9A  5038               	movf	i2___lwdiv@divisor,w,c
  8852  000D9C  5E36               	subwf	i2___lwdiv@dividend,f,c
  8853  000D9E  5039               	movf	i2___lwdiv@divisor+1,w,c
  8854  000DA0  5A37               	subwfb	i2___lwdiv@dividend+1,f,c
  8855  000DA2  803A               	bsf	i2___lwdiv@quotient,0,c
  8856  000DA4                     i2l7033:
  8857  000DA4  90D8               	bcf	status,0,c
  8858  000DA6  3239               	rrcf	i2___lwdiv@divisor+1,f,c
  8859  000DA8  3238               	rrcf	i2___lwdiv@divisor,f,c
  8860  000DAA  2E3C               	decfsz	i2___lwdiv@counter,f,c
  8861  000DAC  D7ED               	goto	i2l7025
  8862  000DAE                     i2l1964:
  8863  000DAE  C03A  F036         	movff	i2___lwdiv@quotient,?i2___lwdiv
  8864  000DB2  C03B  F037         	movff	i2___lwdiv@quotient+1,?i2___lwdiv+1
  8865  000DB6  0012               	return		;funcret
  8866  000DB8                     __end_ofi2___lwdiv:
  8867                           	opt stack 0
  8868                           pclatu	equ	0xFFB
  8869                           pclath	equ	0xFFA
  8870                           tblptru	equ	0xFF8
  8871                           tblptrh	equ	0xFF7
  8872                           tblptrl	equ	0xFF6
  8873                           tablat	equ	0xFF5
  8874                           prodh	equ	0xFF4
  8875                           prodl	equ	0xFF3
  8876                           intcon	equ	0xFF2
  8877                           intcon2	equ	0xFF1
  8878                           intcon3	equ	0xFF0
  8879                           postinc0	equ	0xFEE
  8880                           fsr0h	equ	0xFEA
  8881                           fsr0l	equ	0xFE9
  8882                           wreg	equ	0xFE8
  8883                           postdec1	equ	0xFE5
  8884                           fsr1h	equ	0xFE2
  8885                           fsr1l	equ	0xFE1
  8886                           postinc2	equ	0xFDE
  8887                           postdec2	equ	0xFDD
  8888                           fsr2h	equ	0xFDA
  8889                           fsr2l	equ	0xFD9
  8890                           status	equ	0xFD8
  8891                           pclatu	equ	0xFFB
  8892                           pclath	equ	0xFFA
  8893                           tblptru	equ	0xFF8
  8894                           tblptrh	equ	0xFF7
  8895                           tblptrl	equ	0xFF6
  8896                           tablat	equ	0xFF5
  8897                           prodh	equ	0xFF4
  8898                           prodl	equ	0xFF3
  8899                           intcon	equ	0xFF2
  8900                           intcon2	equ	0xFF1
  8901                           intcon3	equ	0xFF0
  8902                           postinc0	equ	0xFEE
  8903                           fsr0h	equ	0xFEA
  8904                           fsr0l	equ	0xFE9
  8905                           wreg	equ	0xFE8
  8906                           postdec1	equ	0xFE5
  8907                           fsr1h	equ	0xFE2
  8908                           fsr1l	equ	0xFE1
  8909                           postinc2	equ	0xFDE
  8910                           postdec2	equ	0xFDD
  8911                           fsr2h	equ	0xFDA
  8912                           fsr2l	equ	0xFD9
  8913                           status	equ	0xFD8
  8914                           
  8915                           	psect	rparam
  8916  0000                     pclatu	equ	0xFFB
  8917                           pclath	equ	0xFFA
  8918                           tblptru	equ	0xFF8
  8919                           tblptrh	equ	0xFF7
  8920                           tblptrl	equ	0xFF6
  8921                           tablat	equ	0xFF5
  8922                           prodh	equ	0xFF4
  8923                           prodl	equ	0xFF3
  8924                           intcon	equ	0xFF2
  8925                           intcon2	equ	0xFF1
  8926                           intcon3	equ	0xFF0
  8927                           postinc0	equ	0xFEE
  8928                           fsr0h	equ	0xFEA
  8929                           fsr0l	equ	0xFE9
  8930                           wreg	equ	0xFE8
  8931                           postdec1	equ	0xFE5
  8932                           fsr1h	equ	0xFE2
  8933                           fsr1l	equ	0xFE1
  8934                           postinc2	equ	0xFDE
  8935                           postdec2	equ	0xFDD
  8936                           fsr2h	equ	0xFDA
  8937                           fsr2l	equ	0xFD9
  8938                           status	equ	0xFD8
  8939                           
  8940                           	psect	temp
  8941  000065                     btemp:
  8942                           	opt stack 0
  8943  000065                     	ds	1
  8944  0000                     int$flags	set	btemp
  8945                           pclatu	equ	0xFFB
  8946                           pclath	equ	0xFFA
  8947                           tblptru	equ	0xFF8
  8948                           tblptrh	equ	0xFF7
  8949                           tblptrl	equ	0xFF6
  8950                           tablat	equ	0xFF5
  8951                           prodh	equ	0xFF4
  8952                           prodl	equ	0xFF3
  8953                           intcon	equ	0xFF2
  8954                           intcon2	equ	0xFF1
  8955                           intcon3	equ	0xFF0
  8956                           postinc0	equ	0xFEE
  8957                           fsr0h	equ	0xFEA
  8958                           fsr0l	equ	0xFE9
  8959                           wreg	equ	0xFE8
  8960                           postdec1	equ	0xFE5
  8961                           fsr1h	equ	0xFE2
  8962                           fsr1l	equ	0xFE1
  8963                           postinc2	equ	0xFDE
  8964                           postdec2	equ	0xFDD
  8965                           fsr2h	equ	0xFDA
  8966                           fsr2l	equ	0xFD9
  8967                           status	equ	0xFD8


Data Sizes:
    Strings     233
    Constant    2957
    Data        11
    BSS         803
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     36     100
    BANK0           128      1     128
    BANK1           256     25     137
    BANK2           256      0     256
    BANK3           256      0     256
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 36
		 -> STR_14(CODE[5]), STR_13(CODE[5]), STR_12(CODE[12]), STR_11(CODE[9]), 
		 -> STR_10(CODE[13]), STR_9(CODE[36]), STR_8(CODE[27]), STR_7(CODE[27]), 
		 -> STR_6(CODE[27]), STR_5(CODE[13]), STR_4(CODE[20]), STR_3(CODE[20]), 
		 -> STR_2(CODE[13]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?i2_printf(COMRAM[2]), ?_printf(BANK1[2]), 

    S2442xmenu$MsgHandlle	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> menu7_MsgHandlle(), menu6_MsgHandlle(), menu5_MsgHandlle(), menu4_MsgHandlle(), 
		 -> menu3_MsgHandlle(), menu2_MsgHandlle(), menu1_MsgHandlle(), menu0_MsgHandlle(), 

    menu.MsgHandlle	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> menu7_MsgHandlle(), menu6_MsgHandlle(), menu5_MsgHandlle(), menu4_MsgHandlle(), 
		 -> menu3_MsgHandlle(), menu2_MsgHandlle(), menu1_MsgHandlle(), menu0_MsgHandlle(), 

    ptnx_frame	PTR unsigned char [48] size(2) Largest target is 144
		 -> ptni_frame(CODE[144]), ptnh_frame(CODE[144]), ptng_frame(CODE[144]), ptnf_frame(CODE[144]), 
		 -> NULL(NULL[0]), 

    n_x_m	PTR unsigned char [19] size(2) Largest target is 57
		 -> n_2P5_m(CODE[57]), n_1P5_m(CODE[57]), n_300_m(CODE[57]), n_250_m(CODE[57]), 
		 -> n_200_m(CODE[57]), n_150_m(CODE[57]), n_100_m(CODE[57]), n_13_m(CODE[57]), 
		 -> n_10_m(CODE[57]), n_6_m(CODE[57]), n_5_m(CODE[57]), n_4_m(CODE[57]), 
		 -> n_3_m(CODE[57]), n_2_m(CODE[57]), n_1_m(CODE[57]), n_0_m(CODE[57]), 
		 -> NULL(NULL[0]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _ISR in COMRAM

    _ISR->i2_printf
    i2_printf->i2___lwmod
    i2___lwmod->i2___lwdiv

Critical Paths under _main in BANK0

    _printf->___lwmod
    _printf->_putch

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_printf
    _printf->___lwmod
    ___lwmod->___lwdiv
    _buzz->_delay_nms

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    3631
                                             23 BANK1      2     2      0
                            _AD_init
                            _HG_init
                     _MotorDriveInit
                         _Timer1Init
                               _buzz
                          _delay_pwm
                           _delaynus
                             _printf
                          _uart_init
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _printf                                              21    17      4    2383
                                             11 BANK1     12     8      4
                            ___lwdiv
                            ___lwmod
                              _putch
 ---------------------------------------------------------------------------------
 (2) _putch                                                1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     386
                                              0 BANK0      1     1      0
                                              7 BANK1      4     0      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     395
                                              0 BANK1      7     3      4
 ---------------------------------------------------------------------------------
 (1) _delaynus                                             2     0      2     647
                                              0 BANK1      2     0      2
 ---------------------------------------------------------------------------------
 (1) _delay_pwm                                            4     0      4     188
                                              0 BANK1      4     0      4
 ---------------------------------------------------------------------------------
 (1) _buzz                                                 0     0      0     413
                          _delay_nms
 ---------------------------------------------------------------------------------
 (2) _delay_nms                                            6     2      4     413
                                              0 BANK1      6     2      4
 ---------------------------------------------------------------------------------
 (1) _Timer1Init                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _MotorDriveInit                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _HG_init                                              0     0      0       0
                           _BeepInit
                           _KEY_Init
                            _LCD_Off
                 _LCD_backlight_init
                          _TimerInit
                          _init_menu
 ---------------------------------------------------------------------------------
 (2) _init_menu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TimerInit                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_backlight_init                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _LCD_Off                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _KEY_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _BeepInit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AD_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _ISR                                                 15    15      0     885
                                             22 COMRAM    14    14      0
                           i2_printf
 ---------------------------------------------------------------------------------
 (4) i2_printf                                            19    17      2     885
                                             12 COMRAM    10     8      2
                          i2___lwdiv
                          i2___lwmod
                            i2_putch
 ---------------------------------------------------------------------------------
 (5) i2_putch                                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) i2___lwmod                                            5     1      4     211
                                              7 COMRAM     5     1      4
                          i2___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (5) i2___lwdiv                                            7     3      4     214
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AD_init
   _HG_init
     _BeepInit
     _KEY_Init
     _LCD_Off
     _LCD_backlight_init
     _TimerInit
     _init_menu
   _MotorDriveInit
   _Timer1Init
   _buzz
     _delay_nms
   _delay_pwm
   _delaynus
   _printf
     ___lwdiv
     ___lwmod
       ___lwdiv (ARG)
     _putch
   _uart_init

 _ISR (ROOT)
   i2_printf
     i2___lwdiv
     i2___lwmod
       i2___lwdiv (ARG)
     i2_putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0     100      11      100.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0     100       9      100.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     19      89       7       53.5%
BITBANK0            80      0       0       4        0.0%
BANK0               80      1      80       5      100.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     24      64       1       79.4%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     36D      15        0.0%
DATA                 0      0     36D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Sun Nov 29 01:42:57 2020

 __end_of_LCD_backlight_init 0F42             _menu3_MsgHandlle 000000                           l43 0F08  
                         _bv 0011                           _cv 005C                           _dv 005A  
                         _ms 0061                           _ss 0028                           _xn 0017  
                __CFG_BORV$0 000000           i2___lwdiv@dividend 0036                 __CFG_CP0$OFF 000000  
_flag_do_reset_in_drops_mode 0029                 __CFG_CP1$OFF 000000                 __CFG_CP2$OFF 000000  
               __CFG_CP3$OFF 000000                  __CFG_OSC$HS 000000                          l210 01F2  
                        l203 0198                          l221 0286                          l310 0538  
                        l207 01D8                          l224 059C                          l313 0540  
                        l241 0330                          l270 041C                          l441 0D50  
                        l193 00FC                          l267 0414                          l285 048C  
                        l278 0472                          l279 046C                          l457 0E38  
                        l297 04E8                          l458 0E2A                          l299 0586  
                        _GIE 007F97                 __CFG_CPB$OFF 000000                 __CFG_CPD$OFF 000000  
                        _ISR 0008                          _PSA 007EAB                          _c_m 75D0  
                        _ann 0015                          _css 0027                          _tva 0005  
                        _tvb 0003                          _xtt 000B                          wreg 000FE8  
               __CFG_LVP$OFF 000000              __end_of_AD_init 0EF2              __end_of_LCD_Off 0F46  
                       ?_ISR 0036                 __CFG_WDT$OFF 000000                         l1964 0CA8  
                       l1974 0D0A                         l9121 0C58                         l9123 0C64  
                       l9133 0C9A                         l9125 0C6A                         l9141 0CC6  
                       l9143 0CD2                         l9145 0CD8                         l9241 095C  
                       l9251 09A0                         l9403 0188                         l9237 0E78  
                       l9149 0CFC                         l9261 09D0                         l9245 0970  
                       l9263 09D6                         l9503 0424                         l9415 01B8  
                       l9281 0A26                         l9513 0478                         l9433 024C  
                       l9275 0A0C                         l9531 0548                         l9515 0490  
                       l9507 0456                         l9427 0212                         l9451 02E8  
                       l9285 0A78                         l9437 028C                         l9279 0A20  
                       l9287 0A84                         l9519 04B2                         l9391 014C  
                       l9561 05E2                         l9473 0378                         l9465 0316  
                       l9377 00CE                         l9563 05E8                         l9539 057E  
                       l9467 033C                         l9395 0160                         l9387 012C  
                       l9557 05DA                         l9469 0356                         l9485 03F8  
                       l9583 063C                         l9591 064C                         l9399 0174  
                       l9577 061E                         l9587 0644                         STR_1 7FB3  
                       STR_2 7FC5                         l8977 0D20                         STR_3 7F8B  
                       STR_4 7F9F                         l8987 0D44                         l8979 0D2A  
                       STR_5 7FDF                         STR_6 7F3A                         STR_7 7F55  
                       STR_8 7F70                         STR_9 7F16                         _T0IE 007F95  
                       _T0IF 007F92                         _T0CS 007EAD             _menu4_MsgHandlle 000000  
                       i2l43 0F22                         _TMR0 000FD6                         _TMR1 000FCE  
            __end_of_HG_init 0EE0                         _flag 0024                         _flip 001E  
                       _main 0012                         _page 0025                         _menu 0080  
                       _buzz 0EAA                         _rcnt 0026                         fsr0h 000FEA  
                       fsr1h 000FE2           i2___lwdiv@quotient 003A                         fsr2h 000FDA  
                       fsr0l 000FE9                         fsr1l 000FE1                         fsr2l 000FD9  
                       _tv_s 013C                         btemp 0065                         _ttte 0021  
                       prodh 000FF4                         prodl 000FF3                         start 000E  
              __CFG_IESO$OFF 000000              __end_ofi2_putch 0F28                __CFG_MCLRE$ON 000000  
               ___param_bank 000000                        ??_ISR 004C          _test_mode_break_cnt 0154  
            __end_of_n_100_m 7CA3              __end_of_n_200_m 7C6A              __end_of_n_300_m 7BF8  
            __end_of_n_150_m 7C31              __end_of_n_250_m 7BBF             _menu5_MsgHandlle 000000  
            __end_of_n_1P5_m 7EA4              __end_of_n_2P5_m 7E6B                        ?_main 0036  
                      ?_buzz 0036                        STR_10 7FD2                        STR_11 7FEC  
                      STR_12 7FB9                        STR_13 7FFA                        STR_14 7FF5  
                      u10630 032E                        u10550 0236                        u10800 04BC  
                      u10640 0352                        u10560 0254                        u10810 04D4  
                      u10650 0362                        u10570 0256                        u10660 0380  
                      u10580 026E                        u10670 0382                        u10558 023A  
                      u10680 039A                        u10658 0366                        u10780 049C  
                      u10790 04BA                        u10788 04A0                        _T0PS0 007EA8  
                      _T0PS1 007EA9                        _T0PS2 007EAA              __end_of___lwdiv 0CB2  
           __end_of_KEY_Init 0E6E              __end_of___lwmod 0D14                        _SPBRG 000FAF  
                      _PORTC 000F82                __CFG_WDTPS$64 000000                        _TXREG 000FAD  
              __CFG_PWRT$OFF 000000              __end_of_blank_m 762C                __CFG_WRT0$OFF 000000  
              __CFG_WRT1$OFF 000000                __CFG_WRT2$OFF 000000                __CFG_WRT3$OFF 000000  
             __CFG_EBTR0$OFF 000000               __CFG_FCMEN$OFF 000000               __CFG_EBTR1$OFF 000000  
             __CFG_EBTR2$OFF 000000               __CFG_EBTR3$OFF 000000               _action_btn_cnt 0019  
              __CFG_WRTB$OFF 000000                        _n_0_m 7EDD                __CFG_WRTC$OFF 000000  
                      _n_1_m 7EA4                        _n_2_m 7DF9                        _n_3_m 7DC0  
                      _n_4_m 7D87                __CFG_WRTD$OFF 000000                        _n_5_m 7D15  
                      _n_6_m 7D4E                        _bat_m 7518               __CFG_EBTRB$OFF 000000  
                      _hg_op 00C0              __end_of_dpowers 7636              __end_of_drops_m 75D0  
                      _mbcnt 0001                        _focus 001F                        _mem_m 7546  
                      _n_x_m 0009                        _old_c 0022                        _tflag 005F  
                      _tmcnt 015C                        _putch 0F00               __CFG_BOREN$OFF 000000  
           _menu6_MsgHandlle 000000                        pclath 000FFA                        tablat 000FF5  
           __end_of_BeepInit 0F3E                        status 000FD8             __end_ofi2_printf 0BC0  
         __size_ofi2___lwdiv 0052           __size_ofi2___lwmod 0042              __initialization 0BC0  
               __end_of_main 0654                 __end_of_buzz 0EC6                   i2printf@ap 0045  
           _menu7_MsgHandlle 000000                       ??_main 0187                       ??_buzz 00FF  
              __activetblptr 000002                    ??_AD_init 00FF                    ??_LCD_Off 00FF  
                  ??_HG_init 00FF                       _ADCON1 000FC1                       _ADRESH 000FC4  
                     _ADRESL 000FC3                       _T08BIT 007EAE                       ?_putch 0036  
                     i2l1118 0912                       i2l1070 081A                       i2l1080 0850  
                     i2l1092 087E                       i2l1093 0878                       i2l1069 08DE  
                     i2l1098 0890                       i2l1964 0DAE                       i2l7021 0D7C  
                     i2l1974 0DF0                       i2l7023 0D84                       i2l7033 0DA4  
                     i2l7025 0D88                       i2l7041 0DC6                       i2l7043 0DCE  
                     i2l7045 0DD2                       i2l8101 0BA6                       i2l7049 0DE6  
                     i2l8055 0AAC                       i2l8065 0AE6                       i2l8075 0B0E  
                     i2l8059 0ABC                       i2l8093 0B50                       i2l8077 0B12  
                     i2l8095 0B56                       i2l8089 0B3E                       i2l8099 0B9E  
                     i2l8821 081E                       i2l8861 0894                       i2l8829 0836  
                     i2l8847 085E                       i2l8863 089C                       i2l8881 08D8  
                     i2l8873 08B6                       i2l8859 0886                       i2l8893 08F8  
                     i2l8877 08C6                       i2l8895 08FA                    ??i2_putch 0036  
           __end_of_delaynus 0E8C               _MotorDriveInit 0DFA               __CFG_XINST$OFF 000000  
                 _Timer1Init 0F0E                       _n_10_m 7CDC                       _n_13_m 7CA3  
       _flag_test_mode_break 001B                    ??___lwdiv 00FF                    ??___lwmod 00FF  
                     _cnt_ma 00FA                       _cnt_mb 016C                       _drop_m 7574  
                     clear_0 0BE8                       clear_1 0BFC                       clear_2 0C0E  
                     clear_3 0C1A                       clear_4 0C26                       _msleep 0168  
                     _printf 094E             __end_of_logo_eme 7946                       _tv_cnt 0023  
         __size_of_TimerInit 001E                 __pdataCOMRAM 005A            __end_ofi2___lwdiv 0DB8  
               __mediumconst 7388            __end_ofi2___lwmod 0DFA                       tblptrh 000FF7  
                     tblptrl 000FF6                       tblptru 000FF8                       putch@c 00FF  
                 __accesstop 0080      __end_of__initialization 0C2C              __CFG_PBADEN$OFF 000000  
     __end_of_MotorDriveInit 0E28                ___rparam_used 000001                    ?_KEY_Init 0036  
         i2___lwmod@dividend 003D               __pcstackCOMRAM 0036                __end_of_n_0_m 7F16  
              __end_of_n_1_m 7EDD                __end_of_n_2_m 7E32                __end_of_n_3_m 7DF9  
              __end_of_n_4_m 7DC0                __end_of_n_5_m 7D4E                __end_of_n_6_m 7D87  
              __end_of_bat_m 7546                __end_of_mem_m 7574                __end_of_putch 0F0E  
                i2printf@val 0049           __size_of_delay_nms 0052           __size_of_delay_pwm 0026  
                  ?_BeepInit 0036            _prev_state_phb_ma 0033                    ?i2_printf 0042  
         _LCD_backlight_init 0F3E             _flag_go_to_sleep 0063                      ??_putch 00FF  
                 __pbssBANK0 0080                   __pbssBANK1 0100                   __pbssBANK2 0200  
                 __pbssBANK3 0300          ?_LCD_backlight_init 0036              ?_MotorDriveInit 0036  
          __end_of_TimerInit 0EAA           __size_of_init_menu 017E                   ??_KEY_Init 00FF  
                ?_Timer1Init 0036                      ISR@tcnt 0150         ??_LCD_backlight_init 00FF  
                    ?_printf 017B                   ??_BeepInit 00FF           __size_of_uart_init 000E  
                    _AD_init 0EE0                      _LCD_Off 0F42                    ?_delaynus 0170  
                 ??i2_printf 0044                      _HG_init 0EC6                      i2_putch 0F1C  
          __end_of_delay_nms 0D66            __end_of_delay_pwm 0E4E                      __Hparam 0000  
                 _needle_len 005E                      _n_100_m 7C6A                      _n_200_m 7C31  
                    _n_300_m 7BBF                      _n_150_m 7BF8                      _n_250_m 7B86  
                    __Lparam 0000                      _n_1P5_m 7E6B                      _n_2P5_m 7E32  
               _flag_wake_up 0062            __end_of_n_blank_m 74E2                      ___lwdiv 0C3A  
                    ___lwmod 0CB2              __CFG_STVREN$OFF 000000                      __pcinit 0BC0  
                    _blank_m 75FE                      __ramtop 0600                      _f_motor 011E  
                    __ptext0 0012                      __ptext1 0EF2                      __ptext2 094E  
                    _flag_tv 0060                      __ptext3 0F00                      __ptext4 0CB2  
                    __ptext5 0C3A                      __ptext6 0E6E                      __ptext7 0E28  
                    __ptext8 0EAA                      __ptext9 0D14              __size_of_printf 0154  
                    _cnta_mb 000F                      _cntb_mb 000D                    _T0CONbits 000FD5  
               __size_of_ISR 0946                    _T1CONbits 000FCD                      _dpowers 762C  
                    _drops_m 75A2            __end_of_init_menu 07D2                      _r_motor 0100  
                 ??_delaynus 00FF          __size_of_Timer1Init 000E               __pintcode_body 07D2  
       end_of_initialization 0C2C                   delay_nms@i 0174                   delay_nms@n 0170  
                 delay_pwm@n 0170                __Lmediumconst 7388                      int_func 07D2  
          __end_of_uart_init 0F00                    _RCSTAbits 000FAB                      printf@c 0186  
                    printf@f 017B                      postdec1 000FE5                      postdec2 000FDD  
                    postinc0 000FEE                      postinc2 000FDE                    _PORTAbits 000F80  
                  _PORTBbits 000F81                    _PORTCbits 000F82                    _PORTDbits 000F83  
                 _ptna_frame 74E2                   _ptnd_frame 7419                   _ptne_frame 7389  
                 _ptnf_frame 7AF6                   _ptng_frame 7A66                   _ptnh_frame 79D6  
                 _ptni_frame 7946                    _TRISAbits 000F92                    _TRISBbits 000F93  
                  _TRISCbits 000F94                    _TRISDbits 000F95                    _TRISEbits 000F96  
          i2___lwdiv@divisor 0038                    i2___lwdiv 0D66                    i2___lwmod 0DB8  
          i2___lwdiv@counter 003C                   _ptnx_frame 0007                    _TXSTAbits 000FAC  
          __size_of_KEY_Init 0020               __end_of_n_10_m 7D15               __end_of_n_13_m 7CDC  
              __pidataCOMRAM 0F28               __end_of_drop_m 75A2               __end_of_printf 0AA2  
               i2printf@flag 0047                 i2printf@prec 0048          start_initialization 0BC0  
          __size_of_BeepInit 000A                  __end_of_ISR 094E                  __end_of_c_m 75FE  
                  i2printf@c 004B                    i2printf@f 0042             ??_MotorDriveInit 00FF  
                 ?i2___lwdiv 0036                   ?i2___lwmod 003D            __size_ofi2_printf 011E  
             _flag_inject_sa 002E               _flag_inject_sb 002D                 ??_Timer1Init 00FF  
                  _TimerInit 0E8C             __CFG_LPT1OSC$OFF 000000                     ??_printf 017F  
                   ?_AD_init 0036                     ?_LCD_Off 0036                  __pbssCOMRAM 0001  
              __pcstackBANK0 00FF                __pcstackBANK1 0170                     ?_HG_init 0036  
          i2___lwmod@divisor 003F            i2___lwmod@counter 0041           __end_of_Timer1Init 0F1C  
          __size_of_delaynus 001E                     ?i2_putch 0036                    __pnvBANK0 00FE  
           ___lwdiv@dividend 0170                    _delay_nms 0D14                    _delay_pwm 0E28  
          __CFG_CCP2MX$PORTC 000000                    __pintcode 0008                   ?_TimerInit 0036  
              __pmediumconst 7388                    _flag_push 002C                     ?___lwdiv 0170  
                   ?___lwmod 0177           _flag_action_button 002A                    _cnt_mb_sa 0164  
                  _cnt_mb_sb 0160                    _n_blank_m 74A9  __size_of_LCD_backlight_init 0004  
                _flag_action 002B                  _flag_inject 002F             _cur_state_phb_ma 0034  
                _flag_mreset 0064             ___lwdiv@quotient 0175                    _init_menu 0654  
                ??i2___lwdiv 003A                  ??i2___lwmod 0041               __size_of_putch 000E  
                   _LATAbits 000F89                     _LATCbits 000F8B                     _LATDbits 000F8C  
                   _LATEbits 000F8D                    delaynus@n 0170                     _KEY_Init 0E4E  
                 ?_delay_nms 0170                     _PIR1bits 000F9E                   ?_delay_pwm 0170  
                  _uart_init 0EF2                    _prev_edge 0032                    _test_mode 0035  
                 _ADCON0bits 000FC2                   _ADCON2bits 000FC0                     _BeepInit 0F34  
                 printf@flag 0182                   printf@prec 0183             __size_of_AD_init 0012  
           __size_of_LCD_Off 0004                     i2_printf 0AA2             __size_of_HG_init 001A  
                  _work_mode 001D                   ?_init_menu 0036                    _write_buf 0200  
                _INTCON2bits 000FF1                  _INTCON3bits 000FF0                    copy_data0 0BD4  
                   i2putch@c 0036             __size_ofi2_putch 000C                     __Hrparam 0000  
                   __Lrparam 0000           _flag_mreset_hit_lp 0030                  ??_TimerInit 00FF  
                 ?_uart_init 0036             __size_of___lwdiv 0078             __size_of___lwmod 0062  
              _flag_power_up 00FE              ___lwdiv@divisor 0172                     _delaynus 0E6E  
            ___lwdiv@counter 0174                     __ptext10 0F0E                     __ptext11 0DFA  
                   __ptext12 0EC6                     __ptext21 0AA2                     __ptext13 0654  
                   __ptext22 0F1C                     __ptext14 0E8C                     __ptext23 0DB8  
                   __ptext15 0F3E                     __ptext24 0D66                     __ptext16 0F42  
                   __ptext17 0E4E                     __ptext18 0F34                     __ptext19 0EE0  
                   _cnt_push 0013                     _cur_edge 0031                __size_of_main 0642  
              __size_of_buzz 001C                     _read_buf 0300                     _logo_eme 7636  
                ??_delay_nms 00FF                  ??_delay_pwm 00FF                     int$flags 0065  
                  printf@val 0184                   _INTCONbits 000FF2                  ??_init_menu 00FF  
           _menu0_MsgHandlle 000000                     intlevel2 0000             ___lwmod@dividend 0177  
              _test_mode_cnt 0158           __end_of_ptna_frame 7518           __end_of_ptnd_frame 74A9  
         __end_of_ptne_frame 7419           __end_of_ptnf_frame 7B86           __end_of_ptng_frame 7AF6  
         __end_of_ptnh_frame 7A66           __end_of_ptni_frame 79D6                  ??_uart_init 00FF  
                   printf@ap 0180            ISR@cnt_action_btn 0020             _menu1_MsgHandlle 000000  
            ___lwmod@divisor 0179              ___lwmod@counter 00FF             _work_mode_choice 001C  
           _menu2_MsgHandlle 000000      __size_of_MotorDriveInit 002E  
